
; __CLANG_OFFLOAD_BUNDLE____START__ openmp-nvptx64-nvidia-cuda
; ModuleID = 'main.cpp'
source_filename = "main.cpp"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"
target triple = "nvptx64-nvidia-cuda"

%struct.ident_t = type { i32, i32, i32, i32, i8* }
%"union._openmp_teams_reduction_type_$_" = type { %struct._globalized_locals_ty }
%struct._globalized_locals_ty = type { [1024 x double] }

@__omp_rtl_debug_kind = weak_odr hidden local_unnamed_addr constant i32 0
@__omp_rtl_assume_teams_oversubscription = weak_odr hidden local_unnamed_addr constant i32 0
@__omp_rtl_assume_threads_oversubscription = weak_odr hidden local_unnamed_addr constant i32 0
@0 = private unnamed_addr constant [23 x i8] c";unknown;unknown;0;0;;\00", align 1
@1 = private unnamed_addr constant %struct.ident_t { i32 0, i32 2, i32 0, i32 22, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @0, i32 0, i32 0) }, align 8
@2 = private unnamed_addr constant %struct.ident_t { i32 0, i32 2050, i32 3, i32 22, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @0, i32 0, i32 0) }, align 8
@3 = private unnamed_addr constant %struct.ident_t { i32 0, i32 514, i32 3, i32 22, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @0, i32 0, i32 0) }, align 8
@4 = private unnamed_addr constant %struct.ident_t { i32 0, i32 2, i32 3, i32 22, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @0, i32 0, i32 0) }, align 8
@__omp_offloading_31_355dd0b__ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3__l157_exec_mode = weak constant i8 2
@__omp_offloading_31_355dd0b__ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3__l162_exec_mode = weak constant i8 2
@__omp_offloading_31_355dd0b__ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3__l169_exec_mode = weak constant i8 2
@__omp_offloading_31_355dd0b__ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3__l175_exec_mode = weak constant i8 2
@__openmp_nvptx_data_transfer_temporary_storage = weak addrspace(3) global [32 x i32] undef
@5 = private unnamed_addr constant %struct.ident_t { i32 0, i32 66, i32 3, i32 22, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @0, i32 0, i32 0) }, align 8
@__omp_offloading_31_355dd0b__ZN6miniFE6dot_r2INS_6VectorIdiiEEEENS_10TypeTraitsINT_10ScalarTypeEE14magnitude_typeERKS4__l289_exec_mode = weak constant i8 2
@__omp_offloading_31_355dd0b__ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3__l200_exec_mode = weak constant i8 2
@__omp_offloading_31_355dd0b__ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3__l205_exec_mode = weak constant i8 2
@__omp_offloading_31_355dd0b__ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3__l210_exec_mode = weak constant i8 2
@__omp_offloading_31_355dd0b__ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3__l215_exec_mode = weak constant i8 2
@__omp_offloading_31_355dd0b__ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3__l220_exec_mode = weak constant i8 2
@__omp_offloading_31_355dd0b__ZN6miniFE3dotINS_6VectorIdiiEEEENS_10TypeTraitsINT_10ScalarTypeEE14magnitude_typeERKS4_S9__l253_exec_mode = weak constant i8 2
@__omp_offloading_31_355dd02__ZN6miniFE10matvec_stdINS_9CSRMatrixIdiiEENS_6VectorIdiiEEEclERS2_RS4_S7__l521_exec_mode = weak constant i8 2
@"_openmp_teams_reductions_buffer_$_" = internal global %"union._openmp_teams_reduction_type_$_" zeroinitializer
@llvm.compiler.used = appending global [13 x i8*] [i8* @__omp_offloading_31_355dd02__ZN6miniFE10matvec_stdINS_9CSRMatrixIdiiEENS_6VectorIdiiEEEclERS2_RS4_S7__l521_exec_mode, i8* @__omp_offloading_31_355dd0b__ZN6miniFE3dotINS_6VectorIdiiEEEENS_10TypeTraitsINT_10ScalarTypeEE14magnitude_typeERKS4_S9__l253_exec_mode, i8* @__omp_offloading_31_355dd0b__ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3__l200_exec_mode, i8* @__omp_offloading_31_355dd0b__ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3__l205_exec_mode, i8* @__omp_offloading_31_355dd0b__ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3__l210_exec_mode, i8* @__omp_offloading_31_355dd0b__ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3__l215_exec_mode, i8* @__omp_offloading_31_355dd0b__ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3__l220_exec_mode, i8* @__omp_offloading_31_355dd0b__ZN6miniFE6dot_r2INS_6VectorIdiiEEEENS_10TypeTraitsINT_10ScalarTypeEE14magnitude_typeERKS4__l289_exec_mode, i8* @__omp_offloading_31_355dd0b__ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3__l157_exec_mode, i8* @__omp_offloading_31_355dd0b__ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3__l162_exec_mode, i8* @__omp_offloading_31_355dd0b__ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3__l169_exec_mode, i8* @__omp_offloading_31_355dd0b__ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3__l175_exec_mode, i8* addrspacecast (i8 addrspace(3)* bitcast ([32 x i32] addrspace(3)* @__openmp_nvptx_data_transfer_temporary_storage to i8 addrspace(3)*) to i8*)], section "llvm.metadata"

; Function Attrs: alwaysinline norecurse nounwind
define weak void @__omp_offloading_31_355dd0b__ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3__l157(i64 noundef %n, double* noundef %wcoefs, double* noundef %xcoefs) local_unnamed_addr #0 {
entry:
  %.omp.comb.lb.i = alloca i32, align 4
  %.omp.comb.ub.i = alloca i32, align 4
  %.omp.stride.i = alloca i32, align 4
  %.omp.is_last.i = alloca i32, align 4
  %captured_vars_addrs.i = alloca [5 x i8*], align 8
  %0 = tail call i32 @__kmpc_target_init(%struct.ident_t* nonnull @1, i8 2, i1 false, i1 false) #2
  %exec_user_code = icmp eq i32 %0, -1
  br i1 %exec_user_code, label %user_code.entry, label %common.ret

common.ret:                                       ; preds = %entry, %__omp_outlined__.exit
  ret void

user_code.entry:                                  ; preds = %entry
  %1 = tail call i32 @__kmpc_global_thread_num(%struct.ident_t* nonnull @4) #2
  %2 = bitcast [5 x i8*]* %captured_vars_addrs.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %2)
  %n.addr.sroa.0.0.extract.trunc.i = trunc i64 %n to i32
  %sub2.i = add nsw i32 %n.addr.sroa.0.0.extract.trunc.i, -1
  %cmp.i = icmp sgt i32 %n.addr.sroa.0.0.extract.trunc.i, 0
  br i1 %cmp.i, label %omp.precond.then.i, label %__omp_outlined__.exit

omp.precond.then.i:                               ; preds = %user_code.entry
  %n.casted.sroa.0.0.insert.ext = and i64 %n, 4294967295
  %3 = bitcast i32* %.omp.comb.lb.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %3) #2
  store i32 0, i32* %.omp.comb.lb.i, align 4, !tbaa !30
  %4 = bitcast i32* %.omp.comb.ub.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %4) #2
  store i32 %sub2.i, i32* %.omp.comb.ub.i, align 4, !tbaa !30
  %5 = bitcast i32* %.omp.stride.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %5) #2
  store i32 1, i32* %.omp.stride.i, align 4, !tbaa !30
  %6 = bitcast i32* %.omp.is_last.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %6) #2
  store i32 0, i32* %.omp.is_last.i, align 4, !tbaa !30
  %nvptx_num_threads.i = tail call i32 @__kmpc_get_hardware_num_threads_in_block() #2
  call void @__kmpc_distribute_static_init_4(%struct.ident_t* noundef nonnull @2, i32 %1, i32 noundef 91, i32* noundef nonnull %.omp.is_last.i, i32* noundef nonnull %.omp.comb.lb.i, i32* noundef nonnull %.omp.comb.ub.i, i32* noundef nonnull %.omp.stride.i, i32 noundef 1, i32 %nvptx_num_threads.i) #2
  %7 = load i32, i32* %.omp.comb.ub.i, align 4, !tbaa !30
  %cmp4.i = icmp sgt i32 %7, %sub2.i
  %cond.i = select i1 %cmp4.i, i32 %sub2.i, i32 %7
  %8 = getelementptr inbounds [5 x i8*], [5 x i8*]* %captured_vars_addrs.i, i64 0, i64 0
  %9 = getelementptr inbounds [5 x i8*], [5 x i8*]* %captured_vars_addrs.i, i64 0, i64 1
  %10 = getelementptr inbounds [5 x i8*], [5 x i8*]* %captured_vars_addrs.i, i64 0, i64 2
  %11 = inttoptr i64 %n.casted.sroa.0.0.insert.ext to i8*
  %12 = getelementptr inbounds [5 x i8*], [5 x i8*]* %captured_vars_addrs.i, i64 0, i64 3
  %13 = bitcast i8** %12 to double**
  %14 = getelementptr inbounds [5 x i8*], [5 x i8*]* %captured_vars_addrs.i, i64 0, i64 4
  %15 = bitcast i8** %14 to double**
  store i32 %cond.i, i32* %.omp.comb.ub.i, align 4, !tbaa !30
  %.omp.iv.01.i = load i32, i32* %.omp.comb.lb.i, align 4, !tbaa !30
  %cmp52.i = icmp slt i32 %.omp.iv.01.i, %n.addr.sroa.0.0.extract.trunc.i
  br i1 %cmp52.i, label %omp.inner.for.body.i, label %omp.loop.exit.i

omp.inner.for.body.i:                             ; preds = %omp.precond.then.i, %omp.inner.for.body.i
  %.omp.iv.04.i = phi i32 [ %add8.i, %omp.inner.for.body.i ], [ %.omp.iv.01.i, %omp.precond.then.i ]
  %storemerge3.i = phi i32 [ %cond14.i, %omp.inner.for.body.i ], [ %cond.i, %omp.precond.then.i ]
  %16 = zext i32 %.omp.iv.04.i to i64
  %17 = zext i32 %storemerge3.i to i64
  %18 = inttoptr i64 %16 to i8*
  store i8* %18, i8** %8, align 8, !tbaa !34, !llvm.access.group !36
  %19 = inttoptr i64 %17 to i8*
  store i8* %19, i8** %9, align 8, !tbaa !34, !llvm.access.group !36
  store i8* %11, i8** %10, align 8, !tbaa !34, !llvm.access.group !36
  store double* %wcoefs, double** %13, align 8, !tbaa !34, !llvm.access.group !36
  store double* %xcoefs, double** %15, align 8, !tbaa !34, !llvm.access.group !36
  call void @__kmpc_parallel_51(%struct.ident_t* noundef nonnull @4, i32 %1, i32 noundef 1, i32 noundef -1, i32 noundef -1, i8* noundef bitcast (void (i32*, i32*, i64, i64, i64, double*, double*)* @__omp_outlined__1 to i8*), i8* noundef null, i8** noundef nonnull %8, i64 noundef 5) #2, !llvm.access.group !36
  %20 = load i32, i32* %.omp.stride.i, align 4, !tbaa !30, !llvm.access.group !36
  %21 = load i32, i32* %.omp.comb.lb.i, align 4, !tbaa !30, !llvm.access.group !36
  %add8.i = add nsw i32 %21, %20
  store i32 %add8.i, i32* %.omp.comb.lb.i, align 4, !tbaa !30, !llvm.access.group !36
  %22 = load i32, i32* %.omp.comb.ub.i, align 4, !tbaa !30, !llvm.access.group !36
  %add9.i = add nsw i32 %22, %20
  %cmp10.i = icmp sgt i32 %add9.i, %sub2.i
  %cond14.i = select i1 %cmp10.i, i32 %sub2.i, i32 %add9.i
  store i32 %cond14.i, i32* %.omp.comb.ub.i, align 4, !tbaa !30
  %cmp5.i = icmp slt i32 %add8.i, %n.addr.sroa.0.0.extract.trunc.i
  br i1 %cmp5.i, label %omp.inner.for.body.i, label %omp.loop.exit.i, !llvm.loop !37

omp.loop.exit.i:                                  ; preds = %omp.inner.for.body.i, %omp.precond.then.i
  call void @__kmpc_distribute_static_fini(%struct.ident_t* noundef nonnull @2, i32 %1) #2
  br label %__omp_outlined__.exit

__omp_outlined__.exit:                            ; preds = %user_code.entry, %omp.loop.exit.i
  %.pre-phi.i.pre-phi = bitcast i32* %.omp.is_last.i to i8*
  %.pre-phi6.i.pre-phi = bitcast i32* %.omp.stride.i to i8*
  %.pre-phi8.i.pre-phi = bitcast i32* %.omp.comb.ub.i to i8*
  %.pre-phi10.i.pre-phi = bitcast i32* %.omp.comb.lb.i to i8*
  call void @llvm.lifetime.end.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %.pre-phi.i.pre-phi) #2
  call void @llvm.lifetime.end.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %.pre-phi6.i.pre-phi) #2
  call void @llvm.lifetime.end.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %.pre-phi8.i.pre-phi) #2
  call void @llvm.lifetime.end.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %.pre-phi10.i.pre-phi) #2
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %2)
  call void @__kmpc_target_deinit(%struct.ident_t* nonnull @1, i8 2, i1 false) #2
  br label %common.ret
}

declare i32 @__kmpc_target_init(%struct.ident_t*, i8, i1, i1) local_unnamed_addr

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare i32 @__kmpc_get_hardware_num_threads_in_block() local_unnamed_addr #2

; Function Attrs: nounwind
declare void @__kmpc_distribute_static_init_4(%struct.ident_t*, i32, i32, i32*, i32*, i32*, i32*, i32, i32) local_unnamed_addr #2

; Function Attrs: alwaysinline norecurse nounwind
define internal void @__omp_outlined__1(i32* noalias nocapture noundef readonly %.global_tid., i32* noalias nocapture noundef readnone %.bound_tid., i64 noundef %.previous.lb., i64 noundef %.previous.ub., i64 noundef %n, double* nocapture noundef writeonly %wcoefs, double* nocapture noundef readonly %xcoefs) #0 {
entry:
  %.omp.lb = alloca i32, align 4
  %.omp.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %n.addr.sroa.0.0.extract.trunc = trunc i64 %n to i32
  %cmp = icmp sgt i32 %n.addr.sroa.0.0.extract.trunc, 0
  br i1 %cmp, label %omp.precond.then, label %omp.precond.end

omp.precond.then:                                 ; preds = %entry
  %0 = bitcast i32* %.omp.lb to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #2
  %1 = bitcast i32* %.omp.ub to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #2
  %conv3 = trunc i64 %.previous.lb. to i32
  %conv4 = trunc i64 %.previous.ub. to i32
  store i32 %conv3, i32* %.omp.lb, align 4, !tbaa !30
  store i32 %conv4, i32* %.omp.ub, align 4, !tbaa !30
  %2 = bitcast i32* %.omp.stride to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #2
  store i32 1, i32* %.omp.stride, align 4, !tbaa !30
  %3 = bitcast i32* %.omp.is_last to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #2
  store i32 0, i32* %.omp.is_last, align 4, !tbaa !30
  %4 = load i32, i32* %.global_tid., align 4, !tbaa !30
  call void @__kmpc_for_static_init_4(%struct.ident_t* nonnull @3, i32 %4, i32 33, i32* nonnull %.omp.is_last, i32* nonnull %.omp.lb, i32* nonnull %.omp.ub, i32* nonnull %.omp.stride, i32 1, i32 1)
  %5 = load i32, i32* %.omp.lb, align 4, !tbaa !30
  %6 = load i32, i32* %.omp.stride, align 4
  %conv627 = sext i32 %5 to i64
  %cmp7.not28 = icmp ugt i64 %conv627, %.previous.ub.
  br i1 %cmp7.not28, label %omp.loop.exit, label %omp.inner.for.body

omp.inner.for.body:                               ; preds = %omp.precond.then, %omp.inner.for.body
  %conv630 = phi i64 [ %conv6, %omp.inner.for.body ], [ %conv627, %omp.precond.then ]
  %indvars = trunc i64 %conv630 to i32
  %arrayidx = getelementptr inbounds double, double* %xcoefs, i64 %conv630
  %7 = load double, double* %arrayidx, align 8, !tbaa !40, !llvm.access.group !42
  %arrayidx9 = getelementptr inbounds double, double* %wcoefs, i64 %conv630
  store double %7, double* %arrayidx9, align 8, !tbaa !40, !llvm.access.group !42
  %add10 = add nsw i32 %6, %indvars
  %conv6 = sext i32 %add10 to i64
  %cmp7.not = icmp ugt i64 %conv6, %.previous.ub.
  br i1 %cmp7.not, label %omp.loop.exit, label %omp.inner.for.body, !llvm.loop !43

omp.loop.exit:                                    ; preds = %omp.inner.for.body, %omp.precond.then
  call void @__kmpc_distribute_static_fini(%struct.ident_t* nonnull @2, i32 %4)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #2
  br label %omp.precond.end

omp.precond.end:                                  ; preds = %omp.loop.exit, %entry
  ret void
}

; Function Attrs: nounwind
declare void @__kmpc_for_static_init_4(%struct.ident_t*, i32, i32, i32*, i32*, i32*, i32*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @__kmpc_distribute_static_fini(%struct.ident_t*, i32) local_unnamed_addr #2

; Function Attrs: alwaysinline
declare void @__kmpc_parallel_51(%struct.ident_t*, i32, i32, i32, i32, i8*, i8*, i8**, i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @__kmpc_global_thread_num(%struct.ident_t*) local_unnamed_addr #2

declare void @__kmpc_target_deinit(%struct.ident_t*, i8, i1) local_unnamed_addr

; Function Attrs: alwaysinline norecurse nounwind
define weak void @__omp_offloading_31_355dd0b__ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3__l162(i64 noundef %n, double* noundef %wcoefs, i64 noundef %alpha, double* noundef %xcoefs) local_unnamed_addr #0 {
entry:
  %.omp.comb.lb.i = alloca i32, align 4
  %.omp.comb.ub.i = alloca i32, align 4
  %.omp.stride.i = alloca i32, align 4
  %.omp.is_last.i = alloca i32, align 4
  %captured_vars_addrs.i = alloca [6 x i8*], align 8
  %0 = tail call i32 @__kmpc_target_init(%struct.ident_t* nonnull @1, i8 2, i1 false, i1 false) #2
  %exec_user_code = icmp eq i32 %0, -1
  br i1 %exec_user_code, label %user_code.entry, label %common.ret

common.ret:                                       ; preds = %entry, %__omp_outlined__2.exit
  ret void

user_code.entry:                                  ; preds = %entry
  %1 = tail call i32 @__kmpc_global_thread_num(%struct.ident_t* nonnull @4) #2
  %2 = bitcast [6 x i8*]* %captured_vars_addrs.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %2)
  %n.addr.sroa.0.0.extract.trunc.i = trunc i64 %n to i32
  %sub3.i = add nsw i32 %n.addr.sroa.0.0.extract.trunc.i, -1
  %cmp.i = icmp sgt i32 %n.addr.sroa.0.0.extract.trunc.i, 0
  br i1 %cmp.i, label %omp.precond.then.i, label %__omp_outlined__2.exit

omp.precond.then.i:                               ; preds = %user_code.entry
  %n.casted.sroa.0.0.insert.ext = and i64 %n, 4294967295
  %3 = bitcast i32* %.omp.comb.lb.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %3) #2
  store i32 0, i32* %.omp.comb.lb.i, align 4, !tbaa !30
  %4 = bitcast i32* %.omp.comb.ub.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %4) #2
  store i32 %sub3.i, i32* %.omp.comb.ub.i, align 4, !tbaa !30
  %5 = bitcast i32* %.omp.stride.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %5) #2
  store i32 1, i32* %.omp.stride.i, align 4, !tbaa !30
  %6 = bitcast i32* %.omp.is_last.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %6) #2
  store i32 0, i32* %.omp.is_last.i, align 4, !tbaa !30
  %nvptx_num_threads.i = tail call i32 @__kmpc_get_hardware_num_threads_in_block() #2
  call void @__kmpc_distribute_static_init_4(%struct.ident_t* noundef nonnull @2, i32 %1, i32 noundef 91, i32* noundef nonnull %.omp.is_last.i, i32* noundef nonnull %.omp.comb.lb.i, i32* noundef nonnull %.omp.comb.ub.i, i32* noundef nonnull %.omp.stride.i, i32 noundef 1, i32 %nvptx_num_threads.i) #2
  %7 = load i32, i32* %.omp.comb.ub.i, align 4, !tbaa !30
  %cmp5.i = icmp sgt i32 %7, %sub3.i
  %cond.i = select i1 %cmp5.i, i32 %sub3.i, i32 %7
  %8 = getelementptr inbounds [6 x i8*], [6 x i8*]* %captured_vars_addrs.i, i64 0, i64 0
  %9 = getelementptr inbounds [6 x i8*], [6 x i8*]* %captured_vars_addrs.i, i64 0, i64 1
  %10 = getelementptr inbounds [6 x i8*], [6 x i8*]* %captured_vars_addrs.i, i64 0, i64 2
  %11 = inttoptr i64 %n.casted.sroa.0.0.insert.ext to i8*
  %12 = getelementptr inbounds [6 x i8*], [6 x i8*]* %captured_vars_addrs.i, i64 0, i64 3
  %13 = bitcast i8** %12 to double**
  %14 = getelementptr inbounds [6 x i8*], [6 x i8*]* %captured_vars_addrs.i, i64 0, i64 4
  %15 = inttoptr i64 %alpha to i8*
  %16 = getelementptr inbounds [6 x i8*], [6 x i8*]* %captured_vars_addrs.i, i64 0, i64 5
  %17 = bitcast i8** %16 to double**
  store i32 %cond.i, i32* %.omp.comb.ub.i, align 4, !tbaa !30
  %.omp.iv.01.i = load i32, i32* %.omp.comb.lb.i, align 4, !tbaa !30
  %cmp62.i = icmp slt i32 %.omp.iv.01.i, %n.addr.sroa.0.0.extract.trunc.i
  br i1 %cmp62.i, label %omp.inner.for.body.i, label %omp.loop.exit.i

omp.inner.for.body.i:                             ; preds = %omp.precond.then.i, %omp.inner.for.body.i
  %.omp.iv.04.i = phi i32 [ %add10.i, %omp.inner.for.body.i ], [ %.omp.iv.01.i, %omp.precond.then.i ]
  %storemerge3.i = phi i32 [ %cond16.i, %omp.inner.for.body.i ], [ %cond.i, %omp.precond.then.i ]
  %18 = zext i32 %.omp.iv.04.i to i64
  %19 = zext i32 %storemerge3.i to i64
  %20 = inttoptr i64 %18 to i8*
  store i8* %20, i8** %8, align 8, !tbaa !34, !llvm.access.group !45
  %21 = inttoptr i64 %19 to i8*
  store i8* %21, i8** %9, align 8, !tbaa !34, !llvm.access.group !45
  store i8* %11, i8** %10, align 8, !tbaa !34, !llvm.access.group !45
  store double* %wcoefs, double** %13, align 8, !tbaa !34, !llvm.access.group !45
  store i8* %15, i8** %14, align 8, !tbaa !34, !llvm.access.group !45
  store double* %xcoefs, double** %17, align 8, !tbaa !34, !llvm.access.group !45
  call void @__kmpc_parallel_51(%struct.ident_t* noundef nonnull @4, i32 %1, i32 noundef 1, i32 noundef -1, i32 noundef -1, i8* noundef bitcast (void (i32*, i32*, i64, i64, i64, double*, i64, double*)* @__omp_outlined__3 to i8*), i8* noundef null, i8** noundef nonnull %8, i64 noundef 6) #2, !llvm.access.group !45
  %22 = load i32, i32* %.omp.stride.i, align 4, !tbaa !30, !llvm.access.group !45
  %23 = load i32, i32* %.omp.comb.lb.i, align 4, !tbaa !30, !llvm.access.group !45
  %add10.i = add nsw i32 %23, %22
  store i32 %add10.i, i32* %.omp.comb.lb.i, align 4, !tbaa !30, !llvm.access.group !45
  %24 = load i32, i32* %.omp.comb.ub.i, align 4, !tbaa !30, !llvm.access.group !45
  %add11.i = add nsw i32 %24, %22
  %cmp12.i = icmp sgt i32 %add11.i, %sub3.i
  %cond16.i = select i1 %cmp12.i, i32 %sub3.i, i32 %add11.i
  store i32 %cond16.i, i32* %.omp.comb.ub.i, align 4, !tbaa !30
  %cmp6.i = icmp slt i32 %add10.i, %n.addr.sroa.0.0.extract.trunc.i
  br i1 %cmp6.i, label %omp.inner.for.body.i, label %omp.loop.exit.i, !llvm.loop !46

omp.loop.exit.i:                                  ; preds = %omp.inner.for.body.i, %omp.precond.then.i
  call void @__kmpc_distribute_static_fini(%struct.ident_t* noundef nonnull @2, i32 %1) #2
  br label %__omp_outlined__2.exit

__omp_outlined__2.exit:                           ; preds = %user_code.entry, %omp.loop.exit.i
  %.pre-phi.i.pre-phi = bitcast i32* %.omp.is_last.i to i8*
  %.pre-phi6.i.pre-phi = bitcast i32* %.omp.stride.i to i8*
  %.pre-phi8.i.pre-phi = bitcast i32* %.omp.comb.ub.i to i8*
  %.pre-phi10.i.pre-phi = bitcast i32* %.omp.comb.lb.i to i8*
  call void @llvm.lifetime.end.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %.pre-phi.i.pre-phi) #2
  call void @llvm.lifetime.end.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %.pre-phi6.i.pre-phi) #2
  call void @llvm.lifetime.end.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %.pre-phi8.i.pre-phi) #2
  call void @llvm.lifetime.end.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %.pre-phi10.i.pre-phi) #2
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %2)
  call void @__kmpc_target_deinit(%struct.ident_t* nonnull @1, i8 2, i1 false) #2
  br label %common.ret
}

; Function Attrs: alwaysinline norecurse nounwind
define internal void @__omp_outlined__3(i32* noalias nocapture noundef readonly %.global_tid., i32* noalias nocapture noundef readnone %.bound_tid., i64 noundef %.previous.lb., i64 noundef %.previous.ub., i64 noundef %n, double* nocapture noundef writeonly %wcoefs, i64 noundef %alpha, double* nocapture noundef readonly %xcoefs) #0 {
entry:
  %.omp.lb = alloca i32, align 4
  %.omp.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %n.addr.sroa.0.0.extract.trunc = trunc i64 %n to i32
  %cmp = icmp sgt i32 %n.addr.sroa.0.0.extract.trunc, 0
  br i1 %cmp, label %omp.precond.then, label %omp.precond.end

omp.precond.then:                                 ; preds = %entry
  %0 = bitcast i32* %.omp.lb to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #2
  %1 = bitcast i32* %.omp.ub to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #2
  %conv4 = trunc i64 %.previous.lb. to i32
  %conv5 = trunc i64 %.previous.ub. to i32
  store i32 %conv4, i32* %.omp.lb, align 4, !tbaa !30
  store i32 %conv5, i32* %.omp.ub, align 4, !tbaa !30
  %2 = bitcast i32* %.omp.stride to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #2
  store i32 1, i32* %.omp.stride, align 4, !tbaa !30
  %3 = bitcast i32* %.omp.is_last to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #2
  store i32 0, i32* %.omp.is_last, align 4, !tbaa !30
  %4 = load i32, i32* %.global_tid., align 4, !tbaa !30
  call void @__kmpc_for_static_init_4(%struct.ident_t* nonnull @3, i32 %4, i32 33, i32* nonnull %.omp.is_last, i32* nonnull %.omp.lb, i32* nonnull %.omp.ub, i32* nonnull %.omp.stride, i32 1, i32 1)
  %5 = load i32, i32* %.omp.lb, align 4, !tbaa !30
  %6 = bitcast i64 %alpha to double
  %7 = load i32, i32* %.omp.stride, align 4
  %conv729 = sext i32 %5 to i64
  %cmp8.not30 = icmp ugt i64 %conv729, %.previous.ub.
  br i1 %cmp8.not30, label %omp.loop.exit, label %omp.inner.for.body

omp.inner.for.body:                               ; preds = %omp.precond.then, %omp.inner.for.body
  %conv732 = phi i64 [ %conv7, %omp.inner.for.body ], [ %conv729, %omp.precond.then ]
  %indvars = trunc i64 %conv732 to i32
  %arrayidx = getelementptr inbounds double, double* %xcoefs, i64 %conv732
  %8 = load double, double* %arrayidx, align 8, !tbaa !40, !llvm.access.group !48
  %mul9 = fmul contract double %8, %6
  %arrayidx11 = getelementptr inbounds double, double* %wcoefs, i64 %conv732
  store double %mul9, double* %arrayidx11, align 8, !tbaa !40, !llvm.access.group !48
  %add12 = add nsw i32 %7, %indvars
  %conv7 = sext i32 %add12 to i64
  %cmp8.not = icmp ugt i64 %conv7, %.previous.ub.
  br i1 %cmp8.not, label %omp.loop.exit, label %omp.inner.for.body, !llvm.loop !49

omp.loop.exit:                                    ; preds = %omp.inner.for.body, %omp.precond.then
  call void @__kmpc_distribute_static_fini(%struct.ident_t* nonnull @2, i32 %4)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #2
  br label %omp.precond.end

omp.precond.end:                                  ; preds = %omp.loop.exit, %entry
  ret void
}

; Function Attrs: alwaysinline norecurse nounwind
define weak void @__omp_offloading_31_355dd0b__ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3__l169(i64 noundef %n, double* noundef %wcoefs, double* noundef %xcoefs, i64 noundef %beta, double* noundef %ycoefs) local_unnamed_addr #0 {
entry:
  %.omp.comb.lb.i = alloca i32, align 4
  %.omp.comb.ub.i = alloca i32, align 4
  %.omp.stride.i = alloca i32, align 4
  %.omp.is_last.i = alloca i32, align 4
  %captured_vars_addrs.i = alloca [7 x i8*], align 8
  %0 = tail call i32 @__kmpc_target_init(%struct.ident_t* nonnull @1, i8 2, i1 false, i1 false) #2
  %exec_user_code = icmp eq i32 %0, -1
  br i1 %exec_user_code, label %user_code.entry, label %common.ret

common.ret:                                       ; preds = %entry, %__omp_outlined__4.exit
  ret void

user_code.entry:                                  ; preds = %entry
  %1 = tail call i32 @__kmpc_global_thread_num(%struct.ident_t* nonnull @4) #2
  %2 = bitcast [7 x i8*]* %captured_vars_addrs.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %2)
  %n.addr.sroa.0.0.extract.trunc.i = trunc i64 %n to i32
  %sub3.i = add nsw i32 %n.addr.sroa.0.0.extract.trunc.i, -1
  %cmp.i = icmp sgt i32 %n.addr.sroa.0.0.extract.trunc.i, 0
  br i1 %cmp.i, label %omp.precond.then.i, label %__omp_outlined__4.exit

omp.precond.then.i:                               ; preds = %user_code.entry
  %n.casted.sroa.0.0.insert.ext = and i64 %n, 4294967295
  %3 = bitcast i32* %.omp.comb.lb.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %3) #2
  store i32 0, i32* %.omp.comb.lb.i, align 4, !tbaa !30
  %4 = bitcast i32* %.omp.comb.ub.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %4) #2
  store i32 %sub3.i, i32* %.omp.comb.ub.i, align 4, !tbaa !30
  %5 = bitcast i32* %.omp.stride.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %5) #2
  store i32 1, i32* %.omp.stride.i, align 4, !tbaa !30
  %6 = bitcast i32* %.omp.is_last.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %6) #2
  store i32 0, i32* %.omp.is_last.i, align 4, !tbaa !30
  %nvptx_num_threads.i = tail call i32 @__kmpc_get_hardware_num_threads_in_block() #2
  call void @__kmpc_distribute_static_init_4(%struct.ident_t* noundef nonnull @2, i32 %1, i32 noundef 91, i32* noundef nonnull %.omp.is_last.i, i32* noundef nonnull %.omp.comb.lb.i, i32* noundef nonnull %.omp.comb.ub.i, i32* noundef nonnull %.omp.stride.i, i32 noundef 1, i32 %nvptx_num_threads.i) #2
  %7 = load i32, i32* %.omp.comb.ub.i, align 4, !tbaa !30
  %cmp5.i = icmp sgt i32 %7, %sub3.i
  %cond.i = select i1 %cmp5.i, i32 %sub3.i, i32 %7
  %8 = getelementptr inbounds [7 x i8*], [7 x i8*]* %captured_vars_addrs.i, i64 0, i64 0
  %9 = getelementptr inbounds [7 x i8*], [7 x i8*]* %captured_vars_addrs.i, i64 0, i64 1
  %10 = getelementptr inbounds [7 x i8*], [7 x i8*]* %captured_vars_addrs.i, i64 0, i64 2
  %11 = inttoptr i64 %n.casted.sroa.0.0.insert.ext to i8*
  %12 = getelementptr inbounds [7 x i8*], [7 x i8*]* %captured_vars_addrs.i, i64 0, i64 3
  %13 = bitcast i8** %12 to double**
  %14 = getelementptr inbounds [7 x i8*], [7 x i8*]* %captured_vars_addrs.i, i64 0, i64 4
  %15 = bitcast i8** %14 to double**
  %16 = getelementptr inbounds [7 x i8*], [7 x i8*]* %captured_vars_addrs.i, i64 0, i64 5
  %17 = inttoptr i64 %beta to i8*
  %18 = getelementptr inbounds [7 x i8*], [7 x i8*]* %captured_vars_addrs.i, i64 0, i64 6
  %19 = bitcast i8** %18 to double**
  store i32 %cond.i, i32* %.omp.comb.ub.i, align 4, !tbaa !30
  %.omp.iv.01.i = load i32, i32* %.omp.comb.lb.i, align 4, !tbaa !30
  %cmp62.i = icmp slt i32 %.omp.iv.01.i, %n.addr.sroa.0.0.extract.trunc.i
  br i1 %cmp62.i, label %omp.inner.for.body.i, label %omp.loop.exit.i

omp.inner.for.body.i:                             ; preds = %omp.precond.then.i, %omp.inner.for.body.i
  %.omp.iv.04.i = phi i32 [ %add10.i, %omp.inner.for.body.i ], [ %.omp.iv.01.i, %omp.precond.then.i ]
  %storemerge3.i = phi i32 [ %cond16.i, %omp.inner.for.body.i ], [ %cond.i, %omp.precond.then.i ]
  %20 = zext i32 %.omp.iv.04.i to i64
  %21 = zext i32 %storemerge3.i to i64
  %22 = inttoptr i64 %20 to i8*
  store i8* %22, i8** %8, align 8, !tbaa !34, !llvm.access.group !51
  %23 = inttoptr i64 %21 to i8*
  store i8* %23, i8** %9, align 8, !tbaa !34, !llvm.access.group !51
  store i8* %11, i8** %10, align 8, !tbaa !34, !llvm.access.group !51
  store double* %wcoefs, double** %13, align 8, !tbaa !34, !llvm.access.group !51
  store double* %xcoefs, double** %15, align 8, !tbaa !34, !llvm.access.group !51
  store i8* %17, i8** %16, align 8, !tbaa !34, !llvm.access.group !51
  store double* %ycoefs, double** %19, align 8, !tbaa !34, !llvm.access.group !51
  call void @__kmpc_parallel_51(%struct.ident_t* noundef nonnull @4, i32 %1, i32 noundef 1, i32 noundef -1, i32 noundef -1, i8* noundef bitcast (void (i32*, i32*, i64, i64, i64, double*, double*, i64, double*)* @__omp_outlined__5 to i8*), i8* noundef null, i8** noundef nonnull %8, i64 noundef 7) #2, !llvm.access.group !51
  %24 = load i32, i32* %.omp.stride.i, align 4, !tbaa !30, !llvm.access.group !51
  %25 = load i32, i32* %.omp.comb.lb.i, align 4, !tbaa !30, !llvm.access.group !51
  %add10.i = add nsw i32 %25, %24
  store i32 %add10.i, i32* %.omp.comb.lb.i, align 4, !tbaa !30, !llvm.access.group !51
  %26 = load i32, i32* %.omp.comb.ub.i, align 4, !tbaa !30, !llvm.access.group !51
  %add11.i = add nsw i32 %26, %24
  %cmp12.i = icmp sgt i32 %add11.i, %sub3.i
  %cond16.i = select i1 %cmp12.i, i32 %sub3.i, i32 %add11.i
  store i32 %cond16.i, i32* %.omp.comb.ub.i, align 4, !tbaa !30
  %cmp6.i = icmp slt i32 %add10.i, %n.addr.sroa.0.0.extract.trunc.i
  br i1 %cmp6.i, label %omp.inner.for.body.i, label %omp.loop.exit.i, !llvm.loop !52

omp.loop.exit.i:                                  ; preds = %omp.inner.for.body.i, %omp.precond.then.i
  call void @__kmpc_distribute_static_fini(%struct.ident_t* noundef nonnull @2, i32 %1) #2
  br label %__omp_outlined__4.exit

__omp_outlined__4.exit:                           ; preds = %user_code.entry, %omp.loop.exit.i
  %.pre-phi.i.pre-phi = bitcast i32* %.omp.is_last.i to i8*
  %.pre-phi6.i.pre-phi = bitcast i32* %.omp.stride.i to i8*
  %.pre-phi8.i.pre-phi = bitcast i32* %.omp.comb.ub.i to i8*
  %.pre-phi10.i.pre-phi = bitcast i32* %.omp.comb.lb.i to i8*
  call void @llvm.lifetime.end.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %.pre-phi.i.pre-phi) #2
  call void @llvm.lifetime.end.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %.pre-phi6.i.pre-phi) #2
  call void @llvm.lifetime.end.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %.pre-phi8.i.pre-phi) #2
  call void @llvm.lifetime.end.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %.pre-phi10.i.pre-phi) #2
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %2)
  call void @__kmpc_target_deinit(%struct.ident_t* nonnull @1, i8 2, i1 false) #2
  br label %common.ret
}

; Function Attrs: alwaysinline norecurse nounwind
define internal void @__omp_outlined__5(i32* noalias nocapture noundef readonly %.global_tid., i32* noalias nocapture noundef readnone %.bound_tid., i64 noundef %.previous.lb., i64 noundef %.previous.ub., i64 noundef %n, double* nocapture noundef writeonly %wcoefs, double* nocapture noundef readonly %xcoefs, i64 noundef %beta, double* nocapture noundef readonly %ycoefs) #0 {
entry:
  %.omp.lb = alloca i32, align 4
  %.omp.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %n.addr.sroa.0.0.extract.trunc = trunc i64 %n to i32
  %cmp = icmp sgt i32 %n.addr.sroa.0.0.extract.trunc, 0
  br i1 %cmp, label %omp.precond.then, label %omp.precond.end

omp.precond.then:                                 ; preds = %entry
  %0 = bitcast i32* %.omp.lb to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #2
  %1 = bitcast i32* %.omp.ub to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #2
  %conv4 = trunc i64 %.previous.lb. to i32
  %conv5 = trunc i64 %.previous.ub. to i32
  store i32 %conv4, i32* %.omp.lb, align 4, !tbaa !30
  store i32 %conv5, i32* %.omp.ub, align 4, !tbaa !30
  %2 = bitcast i32* %.omp.stride to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #2
  store i32 1, i32* %.omp.stride, align 4, !tbaa !30
  %3 = bitcast i32* %.omp.is_last to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #2
  store i32 0, i32* %.omp.is_last, align 4, !tbaa !30
  %4 = load i32, i32* %.global_tid., align 4, !tbaa !30
  call void @__kmpc_for_static_init_4(%struct.ident_t* nonnull @3, i32 %4, i32 33, i32* nonnull %.omp.is_last, i32* nonnull %.omp.lb, i32* nonnull %.omp.ub, i32* nonnull %.omp.stride, i32 1, i32 1)
  %5 = load i32, i32* %.omp.lb, align 4, !tbaa !30
  %6 = bitcast i64 %beta to double
  %7 = load i32, i32* %.omp.stride, align 4
  %conv733 = sext i32 %5 to i64
  %cmp8.not34 = icmp ugt i64 %conv733, %.previous.ub.
  br i1 %cmp8.not34, label %omp.loop.exit, label %omp.inner.for.body

omp.inner.for.body:                               ; preds = %omp.precond.then, %omp.inner.for.body
  %conv736 = phi i64 [ %conv7, %omp.inner.for.body ], [ %conv733, %omp.precond.then ]
  %indvars = trunc i64 %conv736 to i32
  %arrayidx = getelementptr inbounds double, double* %xcoefs, i64 %conv736
  %8 = load double, double* %arrayidx, align 8, !tbaa !40, !llvm.access.group !54
  %arrayidx10 = getelementptr inbounds double, double* %ycoefs, i64 %conv736
  %9 = load double, double* %arrayidx10, align 8, !tbaa !40, !llvm.access.group !54
  %mul11 = fmul contract double %9, %6
  %add12 = fadd contract double %8, %mul11
  %arrayidx14 = getelementptr inbounds double, double* %wcoefs, i64 %conv736
  store double %add12, double* %arrayidx14, align 8, !tbaa !40, !llvm.access.group !54
  %add15 = add nsw i32 %7, %indvars
  %conv7 = sext i32 %add15 to i64
  %cmp8.not = icmp ugt i64 %conv7, %.previous.ub.
  br i1 %cmp8.not, label %omp.loop.exit, label %omp.inner.for.body, !llvm.loop !55

omp.loop.exit:                                    ; preds = %omp.inner.for.body, %omp.precond.then
  call void @__kmpc_distribute_static_fini(%struct.ident_t* nonnull @2, i32 %4)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #2
  br label %omp.precond.end

omp.precond.end:                                  ; preds = %omp.loop.exit, %entry
  ret void
}

; Function Attrs: alwaysinline norecurse nounwind
define weak void @__omp_offloading_31_355dd0b__ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3__l175(i64 noundef %n, double* noundef %wcoefs, i64 noundef %alpha, double* noundef %xcoefs, i64 noundef %beta, double* noundef %ycoefs) local_unnamed_addr #0 {
entry:
  %.omp.comb.lb.i = alloca i32, align 4
  %.omp.comb.ub.i = alloca i32, align 4
  %.omp.stride.i = alloca i32, align 4
  %.omp.is_last.i = alloca i32, align 4
  %captured_vars_addrs.i = alloca [8 x i8*], align 8
  %0 = tail call i32 @__kmpc_target_init(%struct.ident_t* nonnull @1, i8 2, i1 false, i1 false) #2
  %exec_user_code = icmp eq i32 %0, -1
  br i1 %exec_user_code, label %user_code.entry, label %common.ret

common.ret:                                       ; preds = %entry, %__omp_outlined__6.exit
  ret void

user_code.entry:                                  ; preds = %entry
  %1 = tail call i32 @__kmpc_global_thread_num(%struct.ident_t* nonnull @4) #2
  %2 = bitcast [8 x i8*]* %captured_vars_addrs.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %2)
  %n.addr.sroa.0.0.extract.trunc.i = trunc i64 %n to i32
  %sub4.i = add nsw i32 %n.addr.sroa.0.0.extract.trunc.i, -1
  %cmp.i = icmp sgt i32 %n.addr.sroa.0.0.extract.trunc.i, 0
  br i1 %cmp.i, label %omp.precond.then.i, label %__omp_outlined__6.exit

omp.precond.then.i:                               ; preds = %user_code.entry
  %n.casted.sroa.0.0.insert.ext = and i64 %n, 4294967295
  %3 = bitcast i32* %.omp.comb.lb.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %3) #2
  store i32 0, i32* %.omp.comb.lb.i, align 4, !tbaa !30
  %4 = bitcast i32* %.omp.comb.ub.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %4) #2
  store i32 %sub4.i, i32* %.omp.comb.ub.i, align 4, !tbaa !30
  %5 = bitcast i32* %.omp.stride.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %5) #2
  store i32 1, i32* %.omp.stride.i, align 4, !tbaa !30
  %6 = bitcast i32* %.omp.is_last.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %6) #2
  store i32 0, i32* %.omp.is_last.i, align 4, !tbaa !30
  %nvptx_num_threads.i = tail call i32 @__kmpc_get_hardware_num_threads_in_block() #2
  call void @__kmpc_distribute_static_init_4(%struct.ident_t* noundef nonnull @2, i32 %1, i32 noundef 91, i32* noundef nonnull %.omp.is_last.i, i32* noundef nonnull %.omp.comb.lb.i, i32* noundef nonnull %.omp.comb.ub.i, i32* noundef nonnull %.omp.stride.i, i32 noundef 1, i32 %nvptx_num_threads.i) #2
  %7 = load i32, i32* %.omp.comb.ub.i, align 4, !tbaa !30
  %cmp6.i = icmp sgt i32 %7, %sub4.i
  %cond.i = select i1 %cmp6.i, i32 %sub4.i, i32 %7
  %8 = getelementptr inbounds [8 x i8*], [8 x i8*]* %captured_vars_addrs.i, i64 0, i64 0
  %9 = getelementptr inbounds [8 x i8*], [8 x i8*]* %captured_vars_addrs.i, i64 0, i64 1
  %10 = getelementptr inbounds [8 x i8*], [8 x i8*]* %captured_vars_addrs.i, i64 0, i64 2
  %11 = inttoptr i64 %n.casted.sroa.0.0.insert.ext to i8*
  %12 = getelementptr inbounds [8 x i8*], [8 x i8*]* %captured_vars_addrs.i, i64 0, i64 3
  %13 = bitcast i8** %12 to double**
  %14 = getelementptr inbounds [8 x i8*], [8 x i8*]* %captured_vars_addrs.i, i64 0, i64 4
  %15 = inttoptr i64 %alpha to i8*
  %16 = getelementptr inbounds [8 x i8*], [8 x i8*]* %captured_vars_addrs.i, i64 0, i64 5
  %17 = bitcast i8** %16 to double**
  %18 = getelementptr inbounds [8 x i8*], [8 x i8*]* %captured_vars_addrs.i, i64 0, i64 6
  %19 = inttoptr i64 %beta to i8*
  %20 = getelementptr inbounds [8 x i8*], [8 x i8*]* %captured_vars_addrs.i, i64 0, i64 7
  %21 = bitcast i8** %20 to double**
  store i32 %cond.i, i32* %.omp.comb.ub.i, align 4, !tbaa !30
  %.omp.iv.01.i = load i32, i32* %.omp.comb.lb.i, align 4, !tbaa !30
  %cmp72.i = icmp slt i32 %.omp.iv.01.i, %n.addr.sroa.0.0.extract.trunc.i
  br i1 %cmp72.i, label %omp.inner.for.body.i, label %omp.loop.exit.i

omp.inner.for.body.i:                             ; preds = %omp.precond.then.i, %omp.inner.for.body.i
  %.omp.iv.04.i = phi i32 [ %add12.i, %omp.inner.for.body.i ], [ %.omp.iv.01.i, %omp.precond.then.i ]
  %storemerge3.i = phi i32 [ %cond18.i, %omp.inner.for.body.i ], [ %cond.i, %omp.precond.then.i ]
  %22 = zext i32 %.omp.iv.04.i to i64
  %23 = zext i32 %storemerge3.i to i64
  %24 = inttoptr i64 %22 to i8*
  store i8* %24, i8** %8, align 8, !tbaa !34, !llvm.access.group !57
  %25 = inttoptr i64 %23 to i8*
  store i8* %25, i8** %9, align 8, !tbaa !34, !llvm.access.group !57
  store i8* %11, i8** %10, align 8, !tbaa !34, !llvm.access.group !57
  store double* %wcoefs, double** %13, align 8, !tbaa !34, !llvm.access.group !57
  store i8* %15, i8** %14, align 8, !tbaa !34, !llvm.access.group !57
  store double* %xcoefs, double** %17, align 8, !tbaa !34, !llvm.access.group !57
  store i8* %19, i8** %18, align 8, !tbaa !34, !llvm.access.group !57
  store double* %ycoefs, double** %21, align 8, !tbaa !34, !llvm.access.group !57
  call void @__kmpc_parallel_51(%struct.ident_t* noundef nonnull @4, i32 %1, i32 noundef 1, i32 noundef -1, i32 noundef -1, i8* noundef bitcast (void (i32*, i32*, i64, i64, i64, double*, i64, double*, i64, double*)* @__omp_outlined__7 to i8*), i8* noundef null, i8** noundef nonnull %8, i64 noundef 8) #2, !llvm.access.group !57
  %26 = load i32, i32* %.omp.stride.i, align 4, !tbaa !30, !llvm.access.group !57
  %27 = load i32, i32* %.omp.comb.lb.i, align 4, !tbaa !30, !llvm.access.group !57
  %add12.i = add nsw i32 %27, %26
  store i32 %add12.i, i32* %.omp.comb.lb.i, align 4, !tbaa !30, !llvm.access.group !57
  %28 = load i32, i32* %.omp.comb.ub.i, align 4, !tbaa !30, !llvm.access.group !57
  %add13.i = add nsw i32 %28, %26
  %cmp14.i = icmp sgt i32 %add13.i, %sub4.i
  %cond18.i = select i1 %cmp14.i, i32 %sub4.i, i32 %add13.i
  store i32 %cond18.i, i32* %.omp.comb.ub.i, align 4, !tbaa !30
  %cmp7.i = icmp slt i32 %add12.i, %n.addr.sroa.0.0.extract.trunc.i
  br i1 %cmp7.i, label %omp.inner.for.body.i, label %omp.loop.exit.i, !llvm.loop !58

omp.loop.exit.i:                                  ; preds = %omp.inner.for.body.i, %omp.precond.then.i
  call void @__kmpc_distribute_static_fini(%struct.ident_t* noundef nonnull @2, i32 %1) #2
  br label %__omp_outlined__6.exit

__omp_outlined__6.exit:                           ; preds = %user_code.entry, %omp.loop.exit.i
  %.pre-phi.i.pre-phi = bitcast i32* %.omp.is_last.i to i8*
  %.pre-phi6.i.pre-phi = bitcast i32* %.omp.stride.i to i8*
  %.pre-phi8.i.pre-phi = bitcast i32* %.omp.comb.ub.i to i8*
  %.pre-phi10.i.pre-phi = bitcast i32* %.omp.comb.lb.i to i8*
  call void @llvm.lifetime.end.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %.pre-phi.i.pre-phi) #2
  call void @llvm.lifetime.end.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %.pre-phi6.i.pre-phi) #2
  call void @llvm.lifetime.end.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %.pre-phi8.i.pre-phi) #2
  call void @llvm.lifetime.end.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %.pre-phi10.i.pre-phi) #2
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %2)
  call void @__kmpc_target_deinit(%struct.ident_t* nonnull @1, i8 2, i1 false) #2
  br label %common.ret
}

; Function Attrs: alwaysinline norecurse nounwind
define internal void @__omp_outlined__7(i32* noalias nocapture noundef readonly %.global_tid., i32* noalias nocapture noundef readnone %.bound_tid., i64 noundef %.previous.lb., i64 noundef %.previous.ub., i64 noundef %n, double* nocapture noundef writeonly %wcoefs, i64 noundef %alpha, double* nocapture noundef readonly %xcoefs, i64 noundef %beta, double* nocapture noundef readonly %ycoefs) #0 {
entry:
  %.omp.lb = alloca i32, align 4
  %.omp.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %n.addr.sroa.0.0.extract.trunc = trunc i64 %n to i32
  %cmp = icmp sgt i32 %n.addr.sroa.0.0.extract.trunc, 0
  br i1 %cmp, label %omp.precond.then, label %omp.precond.end

omp.precond.then:                                 ; preds = %entry
  %0 = bitcast i32* %.omp.lb to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #2
  %1 = bitcast i32* %.omp.ub to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #2
  %conv5 = trunc i64 %.previous.lb. to i32
  %conv6 = trunc i64 %.previous.ub. to i32
  store i32 %conv5, i32* %.omp.lb, align 4, !tbaa !30
  store i32 %conv6, i32* %.omp.ub, align 4, !tbaa !30
  %2 = bitcast i32* %.omp.stride to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #2
  store i32 1, i32* %.omp.stride, align 4, !tbaa !30
  %3 = bitcast i32* %.omp.is_last to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #2
  store i32 0, i32* %.omp.is_last, align 4, !tbaa !30
  %4 = load i32, i32* %.global_tid., align 4, !tbaa !30
  call void @__kmpc_for_static_init_4(%struct.ident_t* nonnull @3, i32 %4, i32 33, i32* nonnull %.omp.is_last, i32* nonnull %.omp.lb, i32* nonnull %.omp.ub, i32* nonnull %.omp.stride, i32 1, i32 1)
  %5 = load i32, i32* %.omp.lb, align 4, !tbaa !30
  %6 = bitcast i64 %alpha to double
  %7 = bitcast i64 %beta to double
  %8 = load i32, i32* %.omp.stride, align 4
  %conv835 = sext i32 %5 to i64
  %cmp9.not36 = icmp ugt i64 %conv835, %.previous.ub.
  br i1 %cmp9.not36, label %omp.loop.exit, label %omp.inner.for.body

omp.inner.for.body:                               ; preds = %omp.precond.then, %omp.inner.for.body
  %conv838 = phi i64 [ %conv8, %omp.inner.for.body ], [ %conv835, %omp.precond.then ]
  %indvars = trunc i64 %conv838 to i32
  %arrayidx = getelementptr inbounds double, double* %xcoefs, i64 %conv838
  %9 = load double, double* %arrayidx, align 8, !tbaa !40, !llvm.access.group !60
  %mul10 = fmul contract double %9, %6
  %arrayidx12 = getelementptr inbounds double, double* %ycoefs, i64 %conv838
  %10 = load double, double* %arrayidx12, align 8, !tbaa !40, !llvm.access.group !60
  %mul13 = fmul contract double %10, %7
  %add14 = fadd contract double %mul10, %mul13
  %arrayidx16 = getelementptr inbounds double, double* %wcoefs, i64 %conv838
  store double %add14, double* %arrayidx16, align 8, !tbaa !40, !llvm.access.group !60
  %add17 = add nsw i32 %8, %indvars
  %conv8 = sext i32 %add17 to i64
  %cmp9.not = icmp ugt i64 %conv8, %.previous.ub.
  br i1 %cmp9.not, label %omp.loop.exit, label %omp.inner.for.body, !llvm.loop !61

omp.loop.exit:                                    ; preds = %omp.inner.for.body, %omp.precond.then
  call void @__kmpc_distribute_static_fini(%struct.ident_t* nonnull @2, i32 %4)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #2
  br label %omp.precond.end

omp.precond.end:                                  ; preds = %omp.loop.exit, %entry
  ret void
}

; Function Attrs: alwaysinline norecurse nounwind
define weak void @__omp_offloading_31_355dd0b__ZN6miniFE6dot_r2INS_6VectorIdiiEEEENS_10TypeTraitsINT_10ScalarTypeEE14magnitude_typeERKS4__l289(i64 noundef %n, double* nocapture noundef nonnull align 8 dereferenceable(8) %result, double* noundef %xcoefs) local_unnamed_addr #0 {
entry:
  %result1.i = alloca double, align 8
  %.omp.comb.lb.i = alloca i32, align 4
  %.omp.comb.ub.i = alloca i32, align 4
  %.omp.stride.i = alloca i32, align 4
  %.omp.is_last.i = alloca i32, align 4
  %captured_vars_addrs.i = alloca [5 x i8*], align 8
  %.omp.reduction.red_list.i = alloca [1 x i8*], align 8
  %0 = tail call i32 @__kmpc_target_init(%struct.ident_t* nonnull @1, i8 2, i1 false, i1 false) #2
  %exec_user_code = icmp eq i32 %0, -1
  br i1 %exec_user_code, label %user_code.entry, label %common.ret

common.ret:                                       ; preds = %entry, %__omp_outlined__8.exit
  ret void

user_code.entry:                                  ; preds = %entry
  %1 = tail call i32 @__kmpc_global_thread_num(%struct.ident_t* nonnull @4) #2
  %2 = bitcast [5 x i8*]* %captured_vars_addrs.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %2)
  %3 = bitcast [1 x i8*]* %.omp.reduction.red_list.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3)
  %n.addr.sroa.0.0.extract.trunc.i = trunc i64 %n to i32
  %4 = bitcast double* %result1.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 noundef 8, i8* noundef nonnull align 8 %4) #2
  store double 0.000000e+00, double* %result1.i, align 8, !tbaa !40
  %sub3.i = add nsw i32 %n.addr.sroa.0.0.extract.trunc.i, -1
  %cmp.i = icmp sgt i32 %n.addr.sroa.0.0.extract.trunc.i, 0
  br i1 %cmp.i, label %omp.precond.then.i, label %omp.precond.end.i

omp.precond.then.i:                               ; preds = %user_code.entry
  %n.casted.sroa.0.0.insert.ext = and i64 %n, 4294967295
  %5 = bitcast i32* %.omp.comb.lb.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %5) #2
  store i32 0, i32* %.omp.comb.lb.i, align 4, !tbaa !30
  %6 = bitcast i32* %.omp.comb.ub.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %6) #2
  store i32 %sub3.i, i32* %.omp.comb.ub.i, align 4, !tbaa !30
  %7 = bitcast i32* %.omp.stride.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %7) #2
  store i32 1, i32* %.omp.stride.i, align 4, !tbaa !30
  %8 = bitcast i32* %.omp.is_last.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %8) #2
  store i32 0, i32* %.omp.is_last.i, align 4, !tbaa !30
  %nvptx_num_threads.i = tail call i32 @__kmpc_get_hardware_num_threads_in_block() #2
  call void @__kmpc_distribute_static_init_4(%struct.ident_t* noundef nonnull @2, i32 %1, i32 noundef 91, i32* noundef nonnull %.omp.is_last.i, i32* noundef nonnull %.omp.comb.lb.i, i32* noundef nonnull %.omp.comb.ub.i, i32* noundef nonnull %.omp.stride.i, i32 noundef 1, i32 %nvptx_num_threads.i) #2
  %9 = load i32, i32* %.omp.comb.ub.i, align 4, !tbaa !30
  %cmp5.i = icmp sgt i32 %9, %sub3.i
  %cond.i = select i1 %cmp5.i, i32 %sub3.i, i32 %9
  %10 = getelementptr inbounds [5 x i8*], [5 x i8*]* %captured_vars_addrs.i, i64 0, i64 0
  %11 = getelementptr inbounds [5 x i8*], [5 x i8*]* %captured_vars_addrs.i, i64 0, i64 1
  %12 = getelementptr inbounds [5 x i8*], [5 x i8*]* %captured_vars_addrs.i, i64 0, i64 2
  %13 = inttoptr i64 %n.casted.sroa.0.0.insert.ext to i8*
  %14 = getelementptr inbounds [5 x i8*], [5 x i8*]* %captured_vars_addrs.i, i64 0, i64 3
  %15 = bitcast i8** %14 to double**
  %16 = getelementptr inbounds [5 x i8*], [5 x i8*]* %captured_vars_addrs.i, i64 0, i64 4
  %17 = bitcast i8** %16 to double**
  store i32 %cond.i, i32* %.omp.comb.ub.i, align 4, !tbaa !30
  %.omp.iv.01.i = load i32, i32* %.omp.comb.lb.i, align 4, !tbaa !30
  %cmp62.i = icmp slt i32 %.omp.iv.01.i, %n.addr.sroa.0.0.extract.trunc.i
  br i1 %cmp62.i, label %omp.inner.for.body.i, label %omp.loop.exit.i

omp.inner.for.body.i:                             ; preds = %omp.precond.then.i, %omp.inner.for.body.i
  %.omp.iv.04.i = phi i32 [ %add9.i, %omp.inner.for.body.i ], [ %.omp.iv.01.i, %omp.precond.then.i ]
  %storemerge3.i = phi i32 [ %cond15.i, %omp.inner.for.body.i ], [ %cond.i, %omp.precond.then.i ]
  %18 = zext i32 %.omp.iv.04.i to i64
  %19 = zext i32 %storemerge3.i to i64
  %20 = inttoptr i64 %18 to i8*
  store i8* %20, i8** %10, align 8, !tbaa !34
  %21 = inttoptr i64 %19 to i8*
  store i8* %21, i8** %11, align 8, !tbaa !34
  store i8* %13, i8** %12, align 8, !tbaa !34
  store double* %result1.i, double** %15, align 8, !tbaa !34
  store double* %xcoefs, double** %17, align 8, !tbaa !34
  call void @__kmpc_parallel_51(%struct.ident_t* noundef nonnull @4, i32 %1, i32 noundef 1, i32 noundef -1, i32 noundef -1, i8* noundef bitcast (void (i32*, i32*, i64, i64, i64, double*, double*)* @__omp_outlined__9 to i8*), i8* noundef null, i8** noundef nonnull %10, i64 noundef 5) #2
  %22 = load i32, i32* %.omp.stride.i, align 4, !tbaa !30
  %23 = load i32, i32* %.omp.comb.lb.i, align 4, !tbaa !30
  %add9.i = add nsw i32 %23, %22
  store i32 %add9.i, i32* %.omp.comb.lb.i, align 4, !tbaa !30
  %24 = load i32, i32* %.omp.comb.ub.i, align 4, !tbaa !30
  %add10.i = add nsw i32 %24, %22
  %cmp11.i = icmp sgt i32 %add10.i, %sub3.i
  %cond15.i = select i1 %cmp11.i, i32 %sub3.i, i32 %add10.i
  store i32 %cond15.i, i32* %.omp.comb.ub.i, align 4, !tbaa !30
  %cmp6.i = icmp slt i32 %add9.i, %n.addr.sroa.0.0.extract.trunc.i
  br i1 %cmp6.i, label %omp.inner.for.body.i, label %omp.loop.exit.i

omp.loop.exit.i:                                  ; preds = %omp.inner.for.body.i, %omp.precond.then.i
  call void @__kmpc_distribute_static_fini(%struct.ident_t* noundef nonnull @2, i32 %1) #2
  br label %omp.precond.end.i

omp.precond.end.i:                                ; preds = %user_code.entry, %omp.loop.exit.i
  %.pre-phi.i.pre-phi = bitcast i32* %.omp.is_last.i to i8*
  %.pre-phi6.i.pre-phi = bitcast i32* %.omp.stride.i to i8*
  %.pre-phi8.i.pre-phi = bitcast i32* %.omp.comb.ub.i to i8*
  %.pre-phi10.i.pre-phi = bitcast i32* %.omp.comb.lb.i to i8*
  call void @llvm.lifetime.end.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %.pre-phi.i.pre-phi) #2
  call void @llvm.lifetime.end.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %.pre-phi6.i.pre-phi) #2
  call void @llvm.lifetime.end.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %.pre-phi8.i.pre-phi) #2
  call void @llvm.lifetime.end.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %.pre-phi10.i.pre-phi) #2
  %25 = bitcast [1 x i8*]* %.omp.reduction.red_list.i to double**
  store double* %result1.i, double** %25, align 8
  %26 = call i32 @__kmpc_nvptx_teams_reduce_nowait_v2(%struct.ident_t* noundef nonnull @4, i32 %1, i8* noundef bitcast (%"union._openmp_teams_reduction_type_$_"* @"_openmp_teams_reductions_buffer_$_" to i8*), i32 noundef 1024, i8* noundef nonnull align 8 %3, void (i8*, i16, i16, i16)* noundef nonnull @_omp_reduction_shuffle_and_reduce_func11, void (i8*, i32)* noundef nonnull @_omp_reduction_inter_warp_copy_func12, void (i8*, i32, i8*)* noundef nonnull @_omp_reduction_list_to_global_copy_func, void (i8*, i32, i8*)* noundef nonnull @_omp_reduction_list_to_global_reduce_func, void (i8*, i32, i8*)* noundef nonnull @_omp_reduction_global_to_list_copy_func, void (i8*, i32, i8*)* noundef nonnull @_omp_reduction_global_to_list_reduce_func) #2
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %.omp.reduction.then.i, label %__omp_outlined__8.exit

.omp.reduction.then.i:                            ; preds = %omp.precond.end.i
  %28 = load double, double* %result, align 8, !tbaa !40
  %29 = load double, double* %result1.i, align 8, !tbaa !40
  %add16.i = fadd contract double %28, %29
  store double %add16.i, double* %result, align 8, !tbaa !40
  call void @__kmpc_nvptx_end_reduce_nowait(i32 %1) #2
  br label %__omp_outlined__8.exit

__omp_outlined__8.exit:                           ; preds = %omp.precond.end.i, %.omp.reduction.then.i
  call void @llvm.lifetime.end.p0i8(i64 noundef 8, i8* noundef nonnull %4) #2
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3)
  call void @__kmpc_target_deinit(%struct.ident_t* nonnull @1, i8 2, i1 false) #2
  br label %common.ret
}

; Function Attrs: alwaysinline norecurse nounwind
define internal void @__omp_outlined__9(i32* noalias nocapture noundef readonly %.global_tid., i32* noalias nocapture noundef readnone %.bound_tid., i64 noundef %.previous.lb., i64 noundef %.previous.ub., i64 noundef %n, double* nocapture noundef nonnull align 8 dereferenceable(8) %result, double* nocapture noundef readonly %xcoefs) #0 {
entry:
  %.omp.lb = alloca i32, align 4
  %.omp.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %result5 = alloca double, align 8
  %.omp.reduction.red_list = alloca [1 x i8*], align 8
  %n.addr.sroa.0.0.extract.trunc = trunc i64 %n to i32
  %cmp = icmp sgt i32 %n.addr.sroa.0.0.extract.trunc, 0
  br i1 %cmp, label %omp.precond.then, label %omp.precond.end

omp.precond.then:                                 ; preds = %entry
  %0 = bitcast i32* %.omp.lb to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #2
  %1 = bitcast i32* %.omp.ub to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #2
  %conv3 = trunc i64 %.previous.lb. to i32
  %conv4 = trunc i64 %.previous.ub. to i32
  store i32 %conv3, i32* %.omp.lb, align 4, !tbaa !30
  store i32 %conv4, i32* %.omp.ub, align 4, !tbaa !30
  %2 = bitcast i32* %.omp.stride to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #2
  store i32 1, i32* %.omp.stride, align 4, !tbaa !30
  %3 = bitcast i32* %.omp.is_last to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #2
  store i32 0, i32* %.omp.is_last, align 4, !tbaa !30
  %4 = bitcast double* %result5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #2
  %5 = load i32, i32* %.global_tid., align 4, !tbaa !30
  call void @__kmpc_for_static_init_4(%struct.ident_t* nonnull @3, i32 %5, i32 33, i32* nonnull %.omp.is_last, i32* nonnull %.omp.lb, i32* nonnull %.omp.ub, i32* nonnull %.omp.stride, i32 1, i32 1)
  %6 = load i32, i32* %.omp.lb, align 4, !tbaa !30
  %7 = load i32, i32* %.omp.stride, align 4
  %conv729 = sext i32 %6 to i64
  %cmp8.not30 = icmp ugt i64 %conv729, %.previous.ub.
  br i1 %cmp8.not30, label %omp.loop.exit, label %omp.inner.for.body

omp.inner.for.body:                               ; preds = %omp.precond.then, %omp.inner.for.body
  %conv733 = phi i64 [ %conv7, %omp.inner.for.body ], [ %conv729, %omp.precond.then ]
  %add122831 = phi double [ %add12, %omp.inner.for.body ], [ 0.000000e+00, %omp.precond.then ]
  %indvars = trunc i64 %conv733 to i32
  %arrayidx = getelementptr inbounds double, double* %xcoefs, i64 %conv733
  %8 = load double, double* %arrayidx, align 8, !tbaa !40
  %mul11 = fmul contract double %8, %8
  %add12 = fadd contract double %add122831, %mul11
  %add13 = add nsw i32 %7, %indvars
  %conv7 = sext i32 %add13 to i64
  %cmp8.not = icmp ugt i64 %conv7, %.previous.ub.
  br i1 %cmp8.not, label %omp.loop.exit, label %omp.inner.for.body

omp.loop.exit:                                    ; preds = %omp.inner.for.body, %omp.precond.then
  %add1228.lcssa = phi double [ 0.000000e+00, %omp.precond.then ], [ %add12, %omp.inner.for.body ]
  store double %add1228.lcssa, double* %result5, align 8, !tbaa !40
  call void @__kmpc_distribute_static_fini(%struct.ident_t* nonnull @2, i32 %5)
  %9 = bitcast [1 x i8*]* %.omp.reduction.red_list to double**
  store double* %result5, double** %9, align 8
  %10 = bitcast [1 x i8*]* %.omp.reduction.red_list to i8*
  %11 = call i32 @__kmpc_nvptx_parallel_reduce_nowait_v2(%struct.ident_t* nonnull @4, i32 %5, i32 1, i64 8, i8* nonnull %10, void (i8*, i16, i16, i16)* nonnull @_omp_reduction_shuffle_and_reduce_func, void (i8*, i32)* nonnull @_omp_reduction_inter_warp_copy_func) #2
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %.omp.reduction.then, label %.omp.reduction.done

.omp.reduction.then:                              ; preds = %omp.loop.exit
  %13 = load double, double* %result, align 8, !tbaa !40
  %14 = load double, double* %result5, align 8, !tbaa !40
  %add14 = fadd contract double %13, %14
  store double %add14, double* %result, align 8, !tbaa !40
  call void @__kmpc_nvptx_end_reduce_nowait(i32 %5) #2
  br label %.omp.reduction.done

.omp.reduction.done:                              ; preds = %.omp.reduction.then, %omp.loop.exit
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #2
  br label %omp.precond.end

omp.precond.end:                                  ; preds = %.omp.reduction.done, %entry
  ret void
}

; Function Attrs: norecurse nounwind
define internal void @_omp_reduction_shuffle_and_reduce_func(i8* nocapture noundef nonnull readonly align 8 dereferenceable(8) %0, i16 noundef signext %1, i16 noundef signext %2, i16 noundef signext %3) #4 {
entry:
  %4 = bitcast i8* %0 to i64**
  %5 = load i64*, i64** %4, align 8
  %6 = load i64, i64* %5, align 8
  %7 = tail call i32 @__kmpc_get_warp_size() #2
  %8 = trunc i32 %7 to i16
  %9 = tail call i64 @__kmpc_shuffle_int64(i64 %6, i16 %2, i16 %8) #2
  %10 = icmp eq i16 %3, 0
  %11 = icmp eq i16 %3, 1
  %12 = icmp ult i16 %1, %2
  %13 = and i1 %12, %11
  %14 = icmp eq i16 %3, 2
  %15 = and i16 %1, 1
  %16 = icmp eq i16 %15, 0
  %17 = and i1 %16, %14
  %18 = icmp sgt i16 %2, 0
  %19 = and i1 %18, %17
  %20 = or i1 %10, %13
  %21 = or i1 %20, %19
  br i1 %21, label %then, label %ifcont

then:                                             ; preds = %entry
  %22 = bitcast i64 %9 to double
  %23 = bitcast i8* %0 to double**
  %24 = load double*, double** %23, align 8
  %25 = load double, double* %24, align 8, !tbaa !40
  %add.i = fadd contract double %25, %22
  store double %add.i, double* %24, align 8, !tbaa !40
  br label %ifcont

ifcont:                                           ; preds = %entry, %then
  %26 = icmp uge i16 %1, %2
  %27 = and i1 %26, %11
  br i1 %27, label %then4, label %ifcont6

then4:                                            ; preds = %ifcont
  %28 = load i64*, i64** %4, align 8
  store i64 %9, i64* %28, align 8
  br label %ifcont6

ifcont6:                                          ; preds = %ifcont, %then4
  ret void
}

; Function Attrs: nounwind
declare i32 @__kmpc_get_warp_size() local_unnamed_addr #2

declare i64 @__kmpc_shuffle_int64(i64, i16, i16) local_unnamed_addr

; Function Attrs: convergent norecurse nounwind
define internal void @_omp_reduction_inter_warp_copy_func(i8* nocapture noundef readonly %0, i32 noundef %1) #5 {
entry:
  %2 = tail call i32 @__kmpc_global_thread_num(%struct.ident_t* nonnull @4)
  %3 = tail call i32 @__kmpc_get_hardware_thread_id_in_block() #2
  %4 = tail call i32 @__kmpc_get_hardware_thread_id_in_block() #2
  %nvptx_lane_id = and i32 %4, 31
  %5 = tail call i32 @__kmpc_get_hardware_thread_id_in_block() #2
  %nvptx_warp_id = ashr i32 %5, 5
  %warp_master = icmp eq i32 %nvptx_lane_id, 0
  %6 = sext i32 %nvptx_warp_id to i64
  %7 = getelementptr inbounds [32 x i32], [32 x i32] addrspace(3)* @__openmp_nvptx_data_transfer_temporary_storage, i64 0, i64 %6
  %8 = bitcast i8* %0 to i32**
  %is_active_thread = icmp ult i32 %3, %1
  %9 = sext i32 %3 to i64
  %10 = getelementptr inbounds [32 x i32], [32 x i32] addrspace(3)* @__openmp_nvptx_data_transfer_temporary_storage, i64 0, i64 %9
  tail call void @__kmpc_barrier(%struct.ident_t* nonnull @5, i32 %2)
  br i1 %warp_master, label %then, label %ifcont

then:                                             ; preds = %entry
  %11 = load i32*, i32** %8, align 8, !tbaa !34
  %12 = load i32, i32* %11, align 4
  store volatile i32 %12, i32 addrspace(3)* %7, align 4
  br label %ifcont

ifcont:                                           ; preds = %entry, %then
  tail call void @__kmpc_barrier(%struct.ident_t* nonnull @5, i32 %2)
  br i1 %is_active_thread, label %then2, label %ifcont4

then2:                                            ; preds = %ifcont
  %13 = load i32*, i32** %8, align 8, !tbaa !34
  %14 = load volatile i32, i32 addrspace(3)* %10, align 4, !tbaa !30
  store i32 %14, i32* %13, align 4, !tbaa !30
  br label %ifcont4

ifcont4:                                          ; preds = %ifcont, %then2
  tail call void @__kmpc_barrier(%struct.ident_t* nonnull @5, i32 %2)
  br i1 %warp_master, label %then.1, label %ifcont.1

then.1:                                           ; preds = %ifcont4
  %15 = load i32*, i32** %8, align 8, !tbaa !34
  %16 = getelementptr i32, i32* %15, i64 1
  %17 = load i32, i32* %16, align 4
  store volatile i32 %17, i32 addrspace(3)* %7, align 4
  br label %ifcont.1

ifcont.1:                                         ; preds = %then.1, %ifcont4
  tail call void @__kmpc_barrier(%struct.ident_t* nonnull @5, i32 %2)
  br i1 %is_active_thread, label %then2.1, label %ifcont4.1

then2.1:                                          ; preds = %ifcont.1
  %18 = load i32*, i32** %8, align 8, !tbaa !34
  %19 = getelementptr i32, i32* %18, i64 1
  %20 = load volatile i32, i32 addrspace(3)* %10, align 4, !tbaa !30
  store i32 %20, i32* %19, align 4, !tbaa !30
  br label %ifcont4.1

ifcont4.1:                                        ; preds = %then2.1, %ifcont.1
  ret void
}

declare i32 @__kmpc_get_hardware_thread_id_in_block() local_unnamed_addr

; Function Attrs: convergent nounwind
declare void @__kmpc_barrier(%struct.ident_t*, i32) local_unnamed_addr #6

declare i32 @__kmpc_nvptx_parallel_reduce_nowait_v2(%struct.ident_t*, i32, i32, i64, i8*, void (i8*, i16, i16, i16)*, void (i8*, i32)*) local_unnamed_addr

declare void @__kmpc_nvptx_end_reduce_nowait(i32) local_unnamed_addr

; Function Attrs: norecurse nounwind
define internal void @_omp_reduction_shuffle_and_reduce_func11(i8* nocapture noundef nonnull readonly dereferenceable(8) %0, i16 noundef signext %1, i16 noundef signext %2, i16 noundef signext %3) #4 {
entry:
  %4 = bitcast i8* %0 to i64**
  %5 = load i64*, i64** %4, align 8
  %6 = load i64, i64* %5, align 8
  %7 = tail call i32 @__kmpc_get_warp_size()
  %8 = trunc i32 %7 to i16
  %9 = tail call i64 @__kmpc_shuffle_int64(i64 %6, i16 %2, i16 %8) #2
  %10 = icmp eq i16 %3, 0
  %11 = icmp eq i16 %3, 1
  %12 = icmp ult i16 %1, %2
  %13 = and i1 %12, %11
  %14 = icmp eq i16 %3, 2
  %15 = and i16 %1, 1
  %16 = icmp eq i16 %15, 0
  %17 = and i1 %16, %14
  %18 = icmp sgt i16 %2, 0
  %19 = and i1 %18, %17
  %20 = or i1 %10, %13
  %21 = or i1 %20, %19
  br i1 %21, label %then, label %ifcont

then:                                             ; preds = %entry
  %22 = bitcast i64 %9 to double
  %23 = bitcast i8* %0 to double**
  %24 = load double*, double** %23, align 8
  %25 = load double, double* %24, align 8, !tbaa !40
  %add.i = fadd contract double %25, %22
  store double %add.i, double* %24, align 8, !tbaa !40
  br label %ifcont

ifcont:                                           ; preds = %entry, %then
  %26 = icmp uge i16 %1, %2
  %27 = and i1 %26, %11
  br i1 %27, label %then4, label %ifcont6

then4:                                            ; preds = %ifcont
  %28 = load i64*, i64** %4, align 8
  store i64 %9, i64* %28, align 8
  br label %ifcont6

ifcont6:                                          ; preds = %ifcont, %then4
  ret void
}

; Function Attrs: convergent norecurse nounwind
define internal void @_omp_reduction_inter_warp_copy_func12(i8* nocapture noundef readonly %0, i32 noundef %1) #5 {
entry:
  %2 = tail call i32 @__kmpc_global_thread_num(%struct.ident_t* nonnull @4)
  %3 = tail call i32 @__kmpc_get_hardware_thread_id_in_block() #2
  %4 = tail call i32 @__kmpc_get_hardware_thread_id_in_block() #2
  %nvptx_lane_id = and i32 %4, 31
  %5 = tail call i32 @__kmpc_get_hardware_thread_id_in_block() #2
  %nvptx_warp_id = ashr i32 %5, 5
  %warp_master = icmp eq i32 %nvptx_lane_id, 0
  %6 = sext i32 %nvptx_warp_id to i64
  %7 = getelementptr inbounds [32 x i32], [32 x i32] addrspace(3)* @__openmp_nvptx_data_transfer_temporary_storage, i64 0, i64 %6
  %8 = bitcast i8* %0 to i32**
  %is_active_thread = icmp ult i32 %3, %1
  %9 = sext i32 %3 to i64
  %10 = getelementptr inbounds [32 x i32], [32 x i32] addrspace(3)* @__openmp_nvptx_data_transfer_temporary_storage, i64 0, i64 %9
  tail call void @__kmpc_barrier(%struct.ident_t* nonnull @5, i32 %2)
  br i1 %warp_master, label %then, label %ifcont

then:                                             ; preds = %entry
  %11 = load i32*, i32** %8, align 8, !tbaa !34
  %12 = load i32, i32* %11, align 4
  store volatile i32 %12, i32 addrspace(3)* %7, align 4
  br label %ifcont

ifcont:                                           ; preds = %entry, %then
  tail call void @__kmpc_barrier(%struct.ident_t* nonnull @5, i32 %2)
  br i1 %is_active_thread, label %then2, label %ifcont4

then2:                                            ; preds = %ifcont
  %13 = load i32*, i32** %8, align 8, !tbaa !34
  %14 = load volatile i32, i32 addrspace(3)* %10, align 4, !tbaa !30
  store i32 %14, i32* %13, align 4, !tbaa !30
  br label %ifcont4

ifcont4:                                          ; preds = %ifcont, %then2
  tail call void @__kmpc_barrier(%struct.ident_t* nonnull @5, i32 %2)
  br i1 %warp_master, label %then.1, label %ifcont.1

then.1:                                           ; preds = %ifcont4
  %15 = load i32*, i32** %8, align 8, !tbaa !34
  %16 = getelementptr i32, i32* %15, i64 1
  %17 = load i32, i32* %16, align 4
  store volatile i32 %17, i32 addrspace(3)* %7, align 4
  br label %ifcont.1

ifcont.1:                                         ; preds = %then.1, %ifcont4
  tail call void @__kmpc_barrier(%struct.ident_t* nonnull @5, i32 %2)
  br i1 %is_active_thread, label %then2.1, label %ifcont4.1

then2.1:                                          ; preds = %ifcont.1
  %18 = load i32*, i32** %8, align 8, !tbaa !34
  %19 = getelementptr i32, i32* %18, i64 1
  %20 = load volatile i32, i32 addrspace(3)* %10, align 4, !tbaa !30
  store i32 %20, i32* %19, align 4, !tbaa !30
  br label %ifcont4.1

ifcont4.1:                                        ; preds = %then2.1, %ifcont.1
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal void @_omp_reduction_list_to_global_copy_func(i8* nocapture noundef writeonly %0, i32 noundef %1, i8* nocapture noundef readonly %2) #7 {
entry:
  %3 = bitcast i8* %2 to double**
  %4 = load double*, double** %3, align 8, !tbaa !34
  %result = bitcast i8* %0 to [1024 x double]*
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds [1024 x double], [1024 x double]* %result, i64 0, i64 %5
  %7 = load double, double* %4, align 8
  store double %7, double* %6, align 128, !tbaa !63
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal void @_omp_reduction_list_to_global_reduce_func(i8* noundef %0, i32 noundef %1, i8* nocapture noundef readonly align 8 %2) #7 {
entry:
  %result = bitcast i8* %0 to [1024 x double]*
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds [1024 x double], [1024 x double]* %result, i64 0, i64 %3
  %5 = bitcast i8* %2 to double**
  %6 = load double*, double** %5, align 8
  %7 = load double, double* %4, align 8, !tbaa !40
  %8 = load double, double* %6, align 8, !tbaa !40
  %add.i = fadd contract double %7, %8
  store double %add.i, double* %4, align 8, !tbaa !40
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal void @_omp_reduction_global_to_list_copy_func(i8* nocapture noundef readonly %0, i32 noundef %1, i8* nocapture noundef readonly %2) #7 {
entry:
  %3 = bitcast i8* %2 to double**
  %4 = load double*, double** %3, align 8, !tbaa !34
  %result = bitcast i8* %0 to [1024 x double]*
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds [1024 x double], [1024 x double]* %result, i64 0, i64 %5
  %7 = load double, double* %6, align 128, !tbaa !63
  store double %7, double* %4, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal void @_omp_reduction_global_to_list_reduce_func(i8* noundef %0, i32 noundef %1, i8* nocapture noundef readonly %2) #7 {
entry:
  %result = bitcast i8* %0 to [1024 x double]*
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds [1024 x double], [1024 x double]* %result, i64 0, i64 %3
  %5 = bitcast i8* %2 to double**
  %6 = load double*, double** %5, align 8
  %7 = load double, double* %6, align 8, !tbaa !40
  %8 = load double, double* %4, align 8, !tbaa !40
  %add.i = fadd contract double %7, %8
  store double %add.i, double* %6, align 8, !tbaa !40
  ret void
}

declare i32 @__kmpc_nvptx_teams_reduce_nowait_v2(%struct.ident_t*, i32, i8*, i32, i8*, void (i8*, i16, i16, i16)*, void (i8*, i32)*, void (i8*, i32, i8*)*, void (i8*, i32, i8*)*, void (i8*, i32, i8*)*, void (i8*, i32, i8*)*) local_unnamed_addr

; Function Attrs: alwaysinline norecurse nounwind
define weak void @__omp_offloading_31_355dd0b__ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3__l200(i64 noundef %n, double* noundef %ycoefs, double* noundef %xcoefs) local_unnamed_addr #0 {
entry:
  %.omp.comb.lb.i = alloca i32, align 4
  %.omp.comb.ub.i = alloca i32, align 4
  %.omp.stride.i = alloca i32, align 4
  %.omp.is_last.i = alloca i32, align 4
  %captured_vars_addrs.i = alloca [5 x i8*], align 8
  %0 = tail call i32 @__kmpc_target_init(%struct.ident_t* nonnull @1, i8 2, i1 false, i1 false) #2
  %exec_user_code = icmp eq i32 %0, -1
  br i1 %exec_user_code, label %user_code.entry, label %common.ret

common.ret:                                       ; preds = %entry, %__omp_outlined__13.exit
  ret void

user_code.entry:                                  ; preds = %entry
  %1 = tail call i32 @__kmpc_global_thread_num(%struct.ident_t* nonnull @4) #2
  %2 = bitcast [5 x i8*]* %captured_vars_addrs.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %2)
  %n.addr.sroa.0.0.extract.trunc.i = trunc i64 %n to i32
  %sub2.i = add nsw i32 %n.addr.sroa.0.0.extract.trunc.i, -1
  %cmp.i = icmp sgt i32 %n.addr.sroa.0.0.extract.trunc.i, 0
  br i1 %cmp.i, label %omp.precond.then.i, label %__omp_outlined__13.exit

omp.precond.then.i:                               ; preds = %user_code.entry
  %n.casted.sroa.0.0.insert.ext = and i64 %n, 4294967295
  %3 = bitcast i32* %.omp.comb.lb.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %3) #2
  store i32 0, i32* %.omp.comb.lb.i, align 4, !tbaa !30
  %4 = bitcast i32* %.omp.comb.ub.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %4) #2
  store i32 %sub2.i, i32* %.omp.comb.ub.i, align 4, !tbaa !30
  %5 = bitcast i32* %.omp.stride.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %5) #2
  store i32 1, i32* %.omp.stride.i, align 4, !tbaa !30
  %6 = bitcast i32* %.omp.is_last.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %6) #2
  store i32 0, i32* %.omp.is_last.i, align 4, !tbaa !30
  %nvptx_num_threads.i = tail call i32 @__kmpc_get_hardware_num_threads_in_block() #2
  call void @__kmpc_distribute_static_init_4(%struct.ident_t* noundef nonnull @2, i32 %1, i32 noundef 91, i32* noundef nonnull %.omp.is_last.i, i32* noundef nonnull %.omp.comb.lb.i, i32* noundef nonnull %.omp.comb.ub.i, i32* noundef nonnull %.omp.stride.i, i32 noundef 1, i32 %nvptx_num_threads.i) #2
  %7 = load i32, i32* %.omp.comb.ub.i, align 4, !tbaa !30
  %cmp4.i = icmp sgt i32 %7, %sub2.i
  %cond.i = select i1 %cmp4.i, i32 %sub2.i, i32 %7
  %8 = getelementptr inbounds [5 x i8*], [5 x i8*]* %captured_vars_addrs.i, i64 0, i64 0
  %9 = getelementptr inbounds [5 x i8*], [5 x i8*]* %captured_vars_addrs.i, i64 0, i64 1
  %10 = getelementptr inbounds [5 x i8*], [5 x i8*]* %captured_vars_addrs.i, i64 0, i64 2
  %11 = inttoptr i64 %n.casted.sroa.0.0.insert.ext to i8*
  %12 = getelementptr inbounds [5 x i8*], [5 x i8*]* %captured_vars_addrs.i, i64 0, i64 3
  %13 = bitcast i8** %12 to double**
  %14 = getelementptr inbounds [5 x i8*], [5 x i8*]* %captured_vars_addrs.i, i64 0, i64 4
  %15 = bitcast i8** %14 to double**
  store i32 %cond.i, i32* %.omp.comb.ub.i, align 4, !tbaa !30
  %.omp.iv.01.i = load i32, i32* %.omp.comb.lb.i, align 4, !tbaa !30
  %cmp52.i = icmp slt i32 %.omp.iv.01.i, %n.addr.sroa.0.0.extract.trunc.i
  br i1 %cmp52.i, label %omp.inner.for.body.i, label %omp.loop.exit.i

omp.inner.for.body.i:                             ; preds = %omp.precond.then.i, %omp.inner.for.body.i
  %.omp.iv.04.i = phi i32 [ %add8.i, %omp.inner.for.body.i ], [ %.omp.iv.01.i, %omp.precond.then.i ]
  %storemerge3.i = phi i32 [ %cond14.i, %omp.inner.for.body.i ], [ %cond.i, %omp.precond.then.i ]
  %16 = zext i32 %.omp.iv.04.i to i64
  %17 = zext i32 %storemerge3.i to i64
  %18 = inttoptr i64 %16 to i8*
  store i8* %18, i8** %8, align 8, !tbaa !34, !llvm.access.group !65
  %19 = inttoptr i64 %17 to i8*
  store i8* %19, i8** %9, align 8, !tbaa !34, !llvm.access.group !65
  store i8* %11, i8** %10, align 8, !tbaa !34, !llvm.access.group !65
  store double* %ycoefs, double** %13, align 8, !tbaa !34, !llvm.access.group !65
  store double* %xcoefs, double** %15, align 8, !tbaa !34, !llvm.access.group !65
  call void @__kmpc_parallel_51(%struct.ident_t* noundef nonnull @4, i32 %1, i32 noundef 1, i32 noundef -1, i32 noundef -1, i8* noundef bitcast (void (i32*, i32*, i64, i64, i64, double*, double*)* @__omp_outlined__14 to i8*), i8* noundef null, i8** noundef nonnull %8, i64 noundef 5) #2, !llvm.access.group !65
  %20 = load i32, i32* %.omp.stride.i, align 4, !tbaa !30, !llvm.access.group !65
  %21 = load i32, i32* %.omp.comb.lb.i, align 4, !tbaa !30, !llvm.access.group !65
  %add8.i = add nsw i32 %21, %20
  store i32 %add8.i, i32* %.omp.comb.lb.i, align 4, !tbaa !30, !llvm.access.group !65
  %22 = load i32, i32* %.omp.comb.ub.i, align 4, !tbaa !30, !llvm.access.group !65
  %add9.i = add nsw i32 %22, %20
  %cmp10.i = icmp sgt i32 %add9.i, %sub2.i
  %cond14.i = select i1 %cmp10.i, i32 %sub2.i, i32 %add9.i
  store i32 %cond14.i, i32* %.omp.comb.ub.i, align 4, !tbaa !30
  %cmp5.i = icmp slt i32 %add8.i, %n.addr.sroa.0.0.extract.trunc.i
  br i1 %cmp5.i, label %omp.inner.for.body.i, label %omp.loop.exit.i, !llvm.loop !66

omp.loop.exit.i:                                  ; preds = %omp.inner.for.body.i, %omp.precond.then.i
  call void @__kmpc_distribute_static_fini(%struct.ident_t* noundef nonnull @2, i32 %1) #2
  br label %__omp_outlined__13.exit

__omp_outlined__13.exit:                          ; preds = %user_code.entry, %omp.loop.exit.i
  %.pre-phi.i.pre-phi = bitcast i32* %.omp.is_last.i to i8*
  %.pre-phi6.i.pre-phi = bitcast i32* %.omp.stride.i to i8*
  %.pre-phi8.i.pre-phi = bitcast i32* %.omp.comb.ub.i to i8*
  %.pre-phi10.i.pre-phi = bitcast i32* %.omp.comb.lb.i to i8*
  call void @llvm.lifetime.end.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %.pre-phi.i.pre-phi) #2
  call void @llvm.lifetime.end.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %.pre-phi6.i.pre-phi) #2
  call void @llvm.lifetime.end.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %.pre-phi8.i.pre-phi) #2
  call void @llvm.lifetime.end.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %.pre-phi10.i.pre-phi) #2
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %2)
  call void @__kmpc_target_deinit(%struct.ident_t* nonnull @1, i8 2, i1 false) #2
  br label %common.ret
}

; Function Attrs: alwaysinline norecurse nounwind
define internal void @__omp_outlined__14(i32* noalias nocapture noundef readonly %.global_tid., i32* noalias nocapture noundef readnone %.bound_tid., i64 noundef %.previous.lb., i64 noundef %.previous.ub., i64 noundef %n, double* nocapture noundef %ycoefs, double* nocapture noundef readonly %xcoefs) #0 {
entry:
  %.omp.lb = alloca i32, align 4
  %.omp.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %n.addr.sroa.0.0.extract.trunc = trunc i64 %n to i32
  %cmp = icmp sgt i32 %n.addr.sroa.0.0.extract.trunc, 0
  br i1 %cmp, label %omp.precond.then, label %omp.precond.end

omp.precond.then:                                 ; preds = %entry
  %0 = bitcast i32* %.omp.lb to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #2
  %1 = bitcast i32* %.omp.ub to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #2
  %conv3 = trunc i64 %.previous.lb. to i32
  %conv4 = trunc i64 %.previous.ub. to i32
  store i32 %conv3, i32* %.omp.lb, align 4, !tbaa !30
  store i32 %conv4, i32* %.omp.ub, align 4, !tbaa !30
  %2 = bitcast i32* %.omp.stride to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #2
  store i32 1, i32* %.omp.stride, align 4, !tbaa !30
  %3 = bitcast i32* %.omp.is_last to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #2
  store i32 0, i32* %.omp.is_last, align 4, !tbaa !30
  %4 = load i32, i32* %.global_tid., align 4, !tbaa !30
  call void @__kmpc_for_static_init_4(%struct.ident_t* nonnull @3, i32 %4, i32 33, i32* nonnull %.omp.is_last, i32* nonnull %.omp.lb, i32* nonnull %.omp.ub, i32* nonnull %.omp.stride, i32 1, i32 1)
  %5 = load i32, i32* %.omp.lb, align 4, !tbaa !30
  %6 = load i32, i32* %.omp.stride, align 4
  %conv628 = sext i32 %5 to i64
  %cmp7.not29 = icmp ugt i64 %conv628, %.previous.ub.
  br i1 %cmp7.not29, label %omp.loop.exit, label %omp.inner.for.body

omp.inner.for.body:                               ; preds = %omp.precond.then, %omp.inner.for.body
  %conv631 = phi i64 [ %conv6, %omp.inner.for.body ], [ %conv628, %omp.precond.then ]
  %indvars = trunc i64 %conv631 to i32
  %arrayidx = getelementptr inbounds double, double* %xcoefs, i64 %conv631
  %7 = load double, double* %arrayidx, align 8, !tbaa !40, !llvm.access.group !68
  %arrayidx9 = getelementptr inbounds double, double* %ycoefs, i64 %conv631
  %8 = load double, double* %arrayidx9, align 8, !tbaa !40, !llvm.access.group !68
  %add10 = fadd contract double %7, %8
  store double %add10, double* %arrayidx9, align 8, !tbaa !40, !llvm.access.group !68
  %add11 = add nsw i32 %6, %indvars
  %conv6 = sext i32 %add11 to i64
  %cmp7.not = icmp ugt i64 %conv6, %.previous.ub.
  br i1 %cmp7.not, label %omp.loop.exit, label %omp.inner.for.body, !llvm.loop !69

omp.loop.exit:                                    ; preds = %omp.inner.for.body, %omp.precond.then
  call void @__kmpc_distribute_static_fini(%struct.ident_t* nonnull @2, i32 %4)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #2
  br label %omp.precond.end

omp.precond.end:                                  ; preds = %omp.loop.exit, %entry
  ret void
}

; Function Attrs: alwaysinline norecurse nounwind
define weak void @__omp_offloading_31_355dd0b__ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3__l205(i64 noundef %n, double* noundef %ycoefs, i64 noundef %alpha, double* noundef %xcoefs) local_unnamed_addr #0 {
entry:
  %.omp.comb.lb.i = alloca i32, align 4
  %.omp.comb.ub.i = alloca i32, align 4
  %.omp.stride.i = alloca i32, align 4
  %.omp.is_last.i = alloca i32, align 4
  %captured_vars_addrs.i = alloca [6 x i8*], align 8
  %0 = tail call i32 @__kmpc_target_init(%struct.ident_t* nonnull @1, i8 2, i1 false, i1 false) #2
  %exec_user_code = icmp eq i32 %0, -1
  br i1 %exec_user_code, label %user_code.entry, label %common.ret

common.ret:                                       ; preds = %entry, %__omp_outlined__15.exit
  ret void

user_code.entry:                                  ; preds = %entry
  %1 = tail call i32 @__kmpc_global_thread_num(%struct.ident_t* nonnull @4) #2
  %2 = bitcast [6 x i8*]* %captured_vars_addrs.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %2)
  %n.addr.sroa.0.0.extract.trunc.i = trunc i64 %n to i32
  %sub3.i = add nsw i32 %n.addr.sroa.0.0.extract.trunc.i, -1
  %cmp.i = icmp sgt i32 %n.addr.sroa.0.0.extract.trunc.i, 0
  br i1 %cmp.i, label %omp.precond.then.i, label %__omp_outlined__15.exit

omp.precond.then.i:                               ; preds = %user_code.entry
  %n.casted.sroa.0.0.insert.ext = and i64 %n, 4294967295
  %3 = bitcast i32* %.omp.comb.lb.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %3) #2
  store i32 0, i32* %.omp.comb.lb.i, align 4, !tbaa !30
  %4 = bitcast i32* %.omp.comb.ub.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %4) #2
  store i32 %sub3.i, i32* %.omp.comb.ub.i, align 4, !tbaa !30
  %5 = bitcast i32* %.omp.stride.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %5) #2
  store i32 1, i32* %.omp.stride.i, align 4, !tbaa !30
  %6 = bitcast i32* %.omp.is_last.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %6) #2
  store i32 0, i32* %.omp.is_last.i, align 4, !tbaa !30
  %nvptx_num_threads.i = tail call i32 @__kmpc_get_hardware_num_threads_in_block() #2
  call void @__kmpc_distribute_static_init_4(%struct.ident_t* noundef nonnull @2, i32 %1, i32 noundef 91, i32* noundef nonnull %.omp.is_last.i, i32* noundef nonnull %.omp.comb.lb.i, i32* noundef nonnull %.omp.comb.ub.i, i32* noundef nonnull %.omp.stride.i, i32 noundef 1, i32 %nvptx_num_threads.i) #2
  %7 = load i32, i32* %.omp.comb.ub.i, align 4, !tbaa !30
  %cmp5.i = icmp sgt i32 %7, %sub3.i
  %cond.i = select i1 %cmp5.i, i32 %sub3.i, i32 %7
  %8 = getelementptr inbounds [6 x i8*], [6 x i8*]* %captured_vars_addrs.i, i64 0, i64 0
  %9 = getelementptr inbounds [6 x i8*], [6 x i8*]* %captured_vars_addrs.i, i64 0, i64 1
  %10 = getelementptr inbounds [6 x i8*], [6 x i8*]* %captured_vars_addrs.i, i64 0, i64 2
  %11 = inttoptr i64 %n.casted.sroa.0.0.insert.ext to i8*
  %12 = getelementptr inbounds [6 x i8*], [6 x i8*]* %captured_vars_addrs.i, i64 0, i64 3
  %13 = bitcast i8** %12 to double**
  %14 = getelementptr inbounds [6 x i8*], [6 x i8*]* %captured_vars_addrs.i, i64 0, i64 4
  %15 = inttoptr i64 %alpha to i8*
  %16 = getelementptr inbounds [6 x i8*], [6 x i8*]* %captured_vars_addrs.i, i64 0, i64 5
  %17 = bitcast i8** %16 to double**
  store i32 %cond.i, i32* %.omp.comb.ub.i, align 4, !tbaa !30
  %.omp.iv.01.i = load i32, i32* %.omp.comb.lb.i, align 4, !tbaa !30
  %cmp62.i = icmp slt i32 %.omp.iv.01.i, %n.addr.sroa.0.0.extract.trunc.i
  br i1 %cmp62.i, label %omp.inner.for.body.i, label %omp.loop.exit.i

omp.inner.for.body.i:                             ; preds = %omp.precond.then.i, %omp.inner.for.body.i
  %.omp.iv.04.i = phi i32 [ %add10.i, %omp.inner.for.body.i ], [ %.omp.iv.01.i, %omp.precond.then.i ]
  %storemerge3.i = phi i32 [ %cond16.i, %omp.inner.for.body.i ], [ %cond.i, %omp.precond.then.i ]
  %18 = zext i32 %.omp.iv.04.i to i64
  %19 = zext i32 %storemerge3.i to i64
  %20 = inttoptr i64 %18 to i8*
  store i8* %20, i8** %8, align 8, !tbaa !34, !llvm.access.group !71
  %21 = inttoptr i64 %19 to i8*
  store i8* %21, i8** %9, align 8, !tbaa !34, !llvm.access.group !71
  store i8* %11, i8** %10, align 8, !tbaa !34, !llvm.access.group !71
  store double* %ycoefs, double** %13, align 8, !tbaa !34, !llvm.access.group !71
  store i8* %15, i8** %14, align 8, !tbaa !34, !llvm.access.group !71
  store double* %xcoefs, double** %17, align 8, !tbaa !34, !llvm.access.group !71
  call void @__kmpc_parallel_51(%struct.ident_t* noundef nonnull @4, i32 %1, i32 noundef 1, i32 noundef -1, i32 noundef -1, i8* noundef bitcast (void (i32*, i32*, i64, i64, i64, double*, i64, double*)* @__omp_outlined__16 to i8*), i8* noundef null, i8** noundef nonnull %8, i64 noundef 6) #2, !llvm.access.group !71
  %22 = load i32, i32* %.omp.stride.i, align 4, !tbaa !30, !llvm.access.group !71
  %23 = load i32, i32* %.omp.comb.lb.i, align 4, !tbaa !30, !llvm.access.group !71
  %add10.i = add nsw i32 %23, %22
  store i32 %add10.i, i32* %.omp.comb.lb.i, align 4, !tbaa !30, !llvm.access.group !71
  %24 = load i32, i32* %.omp.comb.ub.i, align 4, !tbaa !30, !llvm.access.group !71
  %add11.i = add nsw i32 %24, %22
  %cmp12.i = icmp sgt i32 %add11.i, %sub3.i
  %cond16.i = select i1 %cmp12.i, i32 %sub3.i, i32 %add11.i
  store i32 %cond16.i, i32* %.omp.comb.ub.i, align 4, !tbaa !30
  %cmp6.i = icmp slt i32 %add10.i, %n.addr.sroa.0.0.extract.trunc.i
  br i1 %cmp6.i, label %omp.inner.for.body.i, label %omp.loop.exit.i, !llvm.loop !72

omp.loop.exit.i:                                  ; preds = %omp.inner.for.body.i, %omp.precond.then.i
  call void @__kmpc_distribute_static_fini(%struct.ident_t* noundef nonnull @2, i32 %1) #2
  br label %__omp_outlined__15.exit

__omp_outlined__15.exit:                          ; preds = %user_code.entry, %omp.loop.exit.i
  %.pre-phi.i.pre-phi = bitcast i32* %.omp.is_last.i to i8*
  %.pre-phi6.i.pre-phi = bitcast i32* %.omp.stride.i to i8*
  %.pre-phi8.i.pre-phi = bitcast i32* %.omp.comb.ub.i to i8*
  %.pre-phi10.i.pre-phi = bitcast i32* %.omp.comb.lb.i to i8*
  call void @llvm.lifetime.end.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %.pre-phi.i.pre-phi) #2
  call void @llvm.lifetime.end.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %.pre-phi6.i.pre-phi) #2
  call void @llvm.lifetime.end.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %.pre-phi8.i.pre-phi) #2
  call void @llvm.lifetime.end.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %.pre-phi10.i.pre-phi) #2
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %2)
  call void @__kmpc_target_deinit(%struct.ident_t* nonnull @1, i8 2, i1 false) #2
  br label %common.ret
}

; Function Attrs: alwaysinline norecurse nounwind
define internal void @__omp_outlined__16(i32* noalias nocapture noundef readonly %.global_tid., i32* noalias nocapture noundef readnone %.bound_tid., i64 noundef %.previous.lb., i64 noundef %.previous.ub., i64 noundef %n, double* nocapture noundef %ycoefs, i64 noundef %alpha, double* nocapture noundef readonly %xcoefs) #0 {
entry:
  %.omp.lb = alloca i32, align 4
  %.omp.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %n.addr.sroa.0.0.extract.trunc = trunc i64 %n to i32
  %cmp = icmp sgt i32 %n.addr.sroa.0.0.extract.trunc, 0
  br i1 %cmp, label %omp.precond.then, label %omp.precond.end

omp.precond.then:                                 ; preds = %entry
  %0 = bitcast i32* %.omp.lb to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #2
  %1 = bitcast i32* %.omp.ub to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #2
  %conv4 = trunc i64 %.previous.lb. to i32
  %conv5 = trunc i64 %.previous.ub. to i32
  store i32 %conv4, i32* %.omp.lb, align 4, !tbaa !30
  store i32 %conv5, i32* %.omp.ub, align 4, !tbaa !30
  %2 = bitcast i32* %.omp.stride to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #2
  store i32 1, i32* %.omp.stride, align 4, !tbaa !30
  %3 = bitcast i32* %.omp.is_last to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #2
  store i32 0, i32* %.omp.is_last, align 4, !tbaa !30
  %4 = load i32, i32* %.global_tid., align 4, !tbaa !30
  call void @__kmpc_for_static_init_4(%struct.ident_t* nonnull @3, i32 %4, i32 33, i32* nonnull %.omp.is_last, i32* nonnull %.omp.lb, i32* nonnull %.omp.ub, i32* nonnull %.omp.stride, i32 1, i32 1)
  %5 = load i32, i32* %.omp.lb, align 4, !tbaa !30
  %6 = bitcast i64 %alpha to double
  %7 = load i32, i32* %.omp.stride, align 4
  %conv730 = sext i32 %5 to i64
  %cmp8.not31 = icmp ugt i64 %conv730, %.previous.ub.
  br i1 %cmp8.not31, label %omp.loop.exit, label %omp.inner.for.body

omp.inner.for.body:                               ; preds = %omp.precond.then, %omp.inner.for.body
  %conv733 = phi i64 [ %conv7, %omp.inner.for.body ], [ %conv730, %omp.precond.then ]
  %indvars = trunc i64 %conv733 to i32
  %arrayidx = getelementptr inbounds double, double* %xcoefs, i64 %conv733
  %8 = load double, double* %arrayidx, align 8, !tbaa !40, !llvm.access.group !74
  %mul9 = fmul contract double %8, %6
  %arrayidx11 = getelementptr inbounds double, double* %ycoefs, i64 %conv733
  %9 = load double, double* %arrayidx11, align 8, !tbaa !40, !llvm.access.group !74
  %add12 = fadd contract double %9, %mul9
  store double %add12, double* %arrayidx11, align 8, !tbaa !40, !llvm.access.group !74
  %add13 = add nsw i32 %7, %indvars
  %conv7 = sext i32 %add13 to i64
  %cmp8.not = icmp ugt i64 %conv7, %.previous.ub.
  br i1 %cmp8.not, label %omp.loop.exit, label %omp.inner.for.body, !llvm.loop !75

omp.loop.exit:                                    ; preds = %omp.inner.for.body, %omp.precond.then
  call void @__kmpc_distribute_static_fini(%struct.ident_t* nonnull @2, i32 %4)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #2
  br label %omp.precond.end

omp.precond.end:                                  ; preds = %omp.loop.exit, %entry
  ret void
}

; Function Attrs: alwaysinline norecurse nounwind
define weak void @__omp_offloading_31_355dd0b__ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3__l210(i64 noundef %n, double* noundef %ycoefs, double* noundef %xcoefs, i64 noundef %beta) local_unnamed_addr #0 {
entry:
  %.omp.comb.lb.i = alloca i32, align 4
  %.omp.comb.ub.i = alloca i32, align 4
  %.omp.stride.i = alloca i32, align 4
  %.omp.is_last.i = alloca i32, align 4
  %captured_vars_addrs.i = alloca [6 x i8*], align 8
  %0 = tail call i32 @__kmpc_target_init(%struct.ident_t* nonnull @1, i8 2, i1 false, i1 false) #2
  %exec_user_code = icmp eq i32 %0, -1
  br i1 %exec_user_code, label %user_code.entry, label %common.ret

common.ret:                                       ; preds = %entry, %__omp_outlined__17.exit
  ret void

user_code.entry:                                  ; preds = %entry
  %1 = tail call i32 @__kmpc_global_thread_num(%struct.ident_t* nonnull @4) #2
  %2 = bitcast [6 x i8*]* %captured_vars_addrs.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %2)
  %n.addr.sroa.0.0.extract.trunc.i = trunc i64 %n to i32
  %sub3.i = add nsw i32 %n.addr.sroa.0.0.extract.trunc.i, -1
  %cmp.i = icmp sgt i32 %n.addr.sroa.0.0.extract.trunc.i, 0
  br i1 %cmp.i, label %omp.precond.then.i, label %__omp_outlined__17.exit

omp.precond.then.i:                               ; preds = %user_code.entry
  %n.casted.sroa.0.0.insert.ext = and i64 %n, 4294967295
  %3 = bitcast i32* %.omp.comb.lb.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %3) #2
  store i32 0, i32* %.omp.comb.lb.i, align 4, !tbaa !30
  %4 = bitcast i32* %.omp.comb.ub.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %4) #2
  store i32 %sub3.i, i32* %.omp.comb.ub.i, align 4, !tbaa !30
  %5 = bitcast i32* %.omp.stride.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %5) #2
  store i32 1, i32* %.omp.stride.i, align 4, !tbaa !30
  %6 = bitcast i32* %.omp.is_last.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %6) #2
  store i32 0, i32* %.omp.is_last.i, align 4, !tbaa !30
  %nvptx_num_threads.i = tail call i32 @__kmpc_get_hardware_num_threads_in_block() #2
  call void @__kmpc_distribute_static_init_4(%struct.ident_t* noundef nonnull @2, i32 %1, i32 noundef 91, i32* noundef nonnull %.omp.is_last.i, i32* noundef nonnull %.omp.comb.lb.i, i32* noundef nonnull %.omp.comb.ub.i, i32* noundef nonnull %.omp.stride.i, i32 noundef 1, i32 %nvptx_num_threads.i) #2
  %7 = load i32, i32* %.omp.comb.ub.i, align 4, !tbaa !30
  %cmp5.i = icmp sgt i32 %7, %sub3.i
  %cond.i = select i1 %cmp5.i, i32 %sub3.i, i32 %7
  %8 = getelementptr inbounds [6 x i8*], [6 x i8*]* %captured_vars_addrs.i, i64 0, i64 0
  %9 = getelementptr inbounds [6 x i8*], [6 x i8*]* %captured_vars_addrs.i, i64 0, i64 1
  %10 = getelementptr inbounds [6 x i8*], [6 x i8*]* %captured_vars_addrs.i, i64 0, i64 2
  %11 = inttoptr i64 %n.casted.sroa.0.0.insert.ext to i8*
  %12 = getelementptr inbounds [6 x i8*], [6 x i8*]* %captured_vars_addrs.i, i64 0, i64 3
  %13 = bitcast i8** %12 to double**
  %14 = getelementptr inbounds [6 x i8*], [6 x i8*]* %captured_vars_addrs.i, i64 0, i64 4
  %15 = bitcast i8** %14 to double**
  %16 = getelementptr inbounds [6 x i8*], [6 x i8*]* %captured_vars_addrs.i, i64 0, i64 5
  %17 = inttoptr i64 %beta to i8*
  store i32 %cond.i, i32* %.omp.comb.ub.i, align 4, !tbaa !30
  %.omp.iv.01.i = load i32, i32* %.omp.comb.lb.i, align 4, !tbaa !30
  %cmp62.i = icmp slt i32 %.omp.iv.01.i, %n.addr.sroa.0.0.extract.trunc.i
  br i1 %cmp62.i, label %omp.inner.for.body.i, label %omp.loop.exit.i

omp.inner.for.body.i:                             ; preds = %omp.precond.then.i, %omp.inner.for.body.i
  %.omp.iv.04.i = phi i32 [ %add10.i, %omp.inner.for.body.i ], [ %.omp.iv.01.i, %omp.precond.then.i ]
  %storemerge3.i = phi i32 [ %cond16.i, %omp.inner.for.body.i ], [ %cond.i, %omp.precond.then.i ]
  %18 = zext i32 %.omp.iv.04.i to i64
  %19 = zext i32 %storemerge3.i to i64
  %20 = inttoptr i64 %18 to i8*
  store i8* %20, i8** %8, align 8, !tbaa !34, !llvm.access.group !77
  %21 = inttoptr i64 %19 to i8*
  store i8* %21, i8** %9, align 8, !tbaa !34, !llvm.access.group !77
  store i8* %11, i8** %10, align 8, !tbaa !34, !llvm.access.group !77
  store double* %ycoefs, double** %13, align 8, !tbaa !34, !llvm.access.group !77
  store double* %xcoefs, double** %15, align 8, !tbaa !34, !llvm.access.group !77
  store i8* %17, i8** %16, align 8, !tbaa !34, !llvm.access.group !77
  call void @__kmpc_parallel_51(%struct.ident_t* noundef nonnull @4, i32 %1, i32 noundef 1, i32 noundef -1, i32 noundef -1, i8* noundef bitcast (void (i32*, i32*, i64, i64, i64, double*, double*, i64)* @__omp_outlined__18 to i8*), i8* noundef null, i8** noundef nonnull %8, i64 noundef 6) #2, !llvm.access.group !77
  %22 = load i32, i32* %.omp.stride.i, align 4, !tbaa !30, !llvm.access.group !77
  %23 = load i32, i32* %.omp.comb.lb.i, align 4, !tbaa !30, !llvm.access.group !77
  %add10.i = add nsw i32 %23, %22
  store i32 %add10.i, i32* %.omp.comb.lb.i, align 4, !tbaa !30, !llvm.access.group !77
  %24 = load i32, i32* %.omp.comb.ub.i, align 4, !tbaa !30, !llvm.access.group !77
  %add11.i = add nsw i32 %24, %22
  %cmp12.i = icmp sgt i32 %add11.i, %sub3.i
  %cond16.i = select i1 %cmp12.i, i32 %sub3.i, i32 %add11.i
  store i32 %cond16.i, i32* %.omp.comb.ub.i, align 4, !tbaa !30
  %cmp6.i = icmp slt i32 %add10.i, %n.addr.sroa.0.0.extract.trunc.i
  br i1 %cmp6.i, label %omp.inner.for.body.i, label %omp.loop.exit.i, !llvm.loop !78

omp.loop.exit.i:                                  ; preds = %omp.inner.for.body.i, %omp.precond.then.i
  call void @__kmpc_distribute_static_fini(%struct.ident_t* noundef nonnull @2, i32 %1) #2
  br label %__omp_outlined__17.exit

__omp_outlined__17.exit:                          ; preds = %user_code.entry, %omp.loop.exit.i
  %.pre-phi.i.pre-phi = bitcast i32* %.omp.is_last.i to i8*
  %.pre-phi6.i.pre-phi = bitcast i32* %.omp.stride.i to i8*
  %.pre-phi8.i.pre-phi = bitcast i32* %.omp.comb.ub.i to i8*
  %.pre-phi10.i.pre-phi = bitcast i32* %.omp.comb.lb.i to i8*
  call void @llvm.lifetime.end.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %.pre-phi.i.pre-phi) #2
  call void @llvm.lifetime.end.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %.pre-phi6.i.pre-phi) #2
  call void @llvm.lifetime.end.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %.pre-phi8.i.pre-phi) #2
  call void @llvm.lifetime.end.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %.pre-phi10.i.pre-phi) #2
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %2)
  call void @__kmpc_target_deinit(%struct.ident_t* nonnull @1, i8 2, i1 false) #2
  br label %common.ret
}

; Function Attrs: alwaysinline norecurse nounwind
define internal void @__omp_outlined__18(i32* noalias nocapture noundef readonly %.global_tid., i32* noalias nocapture noundef readnone %.bound_tid., i64 noundef %.previous.lb., i64 noundef %.previous.ub., i64 noundef %n, double* nocapture noundef %ycoefs, double* nocapture noundef readonly %xcoefs, i64 noundef %beta) #0 {
entry:
  %.omp.lb = alloca i32, align 4
  %.omp.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %n.addr.sroa.0.0.extract.trunc = trunc i64 %n to i32
  %cmp = icmp sgt i32 %n.addr.sroa.0.0.extract.trunc, 0
  br i1 %cmp, label %omp.precond.then, label %omp.precond.end

omp.precond.then:                                 ; preds = %entry
  %0 = bitcast i32* %.omp.lb to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #2
  %1 = bitcast i32* %.omp.ub to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #2
  %conv4 = trunc i64 %.previous.lb. to i32
  %conv5 = trunc i64 %.previous.ub. to i32
  store i32 %conv4, i32* %.omp.lb, align 4, !tbaa !30
  store i32 %conv5, i32* %.omp.ub, align 4, !tbaa !30
  %2 = bitcast i32* %.omp.stride to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #2
  store i32 1, i32* %.omp.stride, align 4, !tbaa !30
  %3 = bitcast i32* %.omp.is_last to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #2
  store i32 0, i32* %.omp.is_last, align 4, !tbaa !30
  %4 = load i32, i32* %.global_tid., align 4, !tbaa !30
  call void @__kmpc_for_static_init_4(%struct.ident_t* nonnull @3, i32 %4, i32 33, i32* nonnull %.omp.is_last, i32* nonnull %.omp.lb, i32* nonnull %.omp.ub, i32* nonnull %.omp.stride, i32 1, i32 1)
  %5 = load i32, i32* %.omp.lb, align 4, !tbaa !30
  %6 = bitcast i64 %beta to double
  %7 = load i32, i32* %.omp.stride, align 4
  %conv734 = sext i32 %5 to i64
  %cmp8.not35 = icmp ugt i64 %conv734, %.previous.ub.
  br i1 %cmp8.not35, label %omp.loop.exit, label %omp.inner.for.body

omp.inner.for.body:                               ; preds = %omp.precond.then, %omp.inner.for.body
  %conv737 = phi i64 [ %conv7, %omp.inner.for.body ], [ %conv734, %omp.precond.then ]
  %indvars = trunc i64 %conv737 to i32
  %arrayidx = getelementptr inbounds double, double* %xcoefs, i64 %conv737
  %8 = load double, double* %arrayidx, align 8, !tbaa !40, !llvm.access.group !80
  %arrayidx10 = getelementptr inbounds double, double* %ycoefs, i64 %conv737
  %9 = load double, double* %arrayidx10, align 8, !tbaa !40, !llvm.access.group !80
  %mul11 = fmul contract double %9, %6
  %add12 = fadd contract double %8, %mul11
  store double %add12, double* %arrayidx10, align 8, !tbaa !40, !llvm.access.group !80
  %add15 = add nsw i32 %7, %indvars
  %conv7 = sext i32 %add15 to i64
  %cmp8.not = icmp ugt i64 %conv7, %.previous.ub.
  br i1 %cmp8.not, label %omp.loop.exit, label %omp.inner.for.body, !llvm.loop !81

omp.loop.exit:                                    ; preds = %omp.inner.for.body, %omp.precond.then
  call void @__kmpc_distribute_static_fini(%struct.ident_t* nonnull @2, i32 %4)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #2
  br label %omp.precond.end

omp.precond.end:                                  ; preds = %omp.loop.exit, %entry
  ret void
}

; Function Attrs: alwaysinline norecurse nounwind
define weak void @__omp_offloading_31_355dd0b__ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3__l215(i64 noundef %n, double* noundef %ycoefs, i64 noundef %alpha, double* noundef %xcoefs) local_unnamed_addr #0 {
entry:
  %.omp.comb.lb.i = alloca i32, align 4
  %.omp.comb.ub.i = alloca i32, align 4
  %.omp.stride.i = alloca i32, align 4
  %.omp.is_last.i = alloca i32, align 4
  %captured_vars_addrs.i = alloca [6 x i8*], align 8
  %0 = tail call i32 @__kmpc_target_init(%struct.ident_t* nonnull @1, i8 2, i1 false, i1 false) #2
  %exec_user_code = icmp eq i32 %0, -1
  br i1 %exec_user_code, label %user_code.entry, label %common.ret

common.ret:                                       ; preds = %entry, %__omp_outlined__19.exit
  ret void

user_code.entry:                                  ; preds = %entry
  %1 = tail call i32 @__kmpc_global_thread_num(%struct.ident_t* nonnull @4) #2
  %2 = bitcast [6 x i8*]* %captured_vars_addrs.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %2)
  %n.addr.sroa.0.0.extract.trunc.i = trunc i64 %n to i32
  %sub3.i = add nsw i32 %n.addr.sroa.0.0.extract.trunc.i, -1
  %cmp.i = icmp sgt i32 %n.addr.sroa.0.0.extract.trunc.i, 0
  br i1 %cmp.i, label %omp.precond.then.i, label %__omp_outlined__19.exit

omp.precond.then.i:                               ; preds = %user_code.entry
  %n.casted.sroa.0.0.insert.ext = and i64 %n, 4294967295
  %3 = bitcast i32* %.omp.comb.lb.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %3) #2
  store i32 0, i32* %.omp.comb.lb.i, align 4, !tbaa !30
  %4 = bitcast i32* %.omp.comb.ub.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %4) #2
  store i32 %sub3.i, i32* %.omp.comb.ub.i, align 4, !tbaa !30
  %5 = bitcast i32* %.omp.stride.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %5) #2
  store i32 1, i32* %.omp.stride.i, align 4, !tbaa !30
  %6 = bitcast i32* %.omp.is_last.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %6) #2
  store i32 0, i32* %.omp.is_last.i, align 4, !tbaa !30
  %nvptx_num_threads.i = tail call i32 @__kmpc_get_hardware_num_threads_in_block() #2
  call void @__kmpc_distribute_static_init_4(%struct.ident_t* noundef nonnull @2, i32 %1, i32 noundef 91, i32* noundef nonnull %.omp.is_last.i, i32* noundef nonnull %.omp.comb.lb.i, i32* noundef nonnull %.omp.comb.ub.i, i32* noundef nonnull %.omp.stride.i, i32 noundef 1, i32 %nvptx_num_threads.i) #2
  %7 = load i32, i32* %.omp.comb.ub.i, align 4, !tbaa !30
  %cmp5.i = icmp sgt i32 %7, %sub3.i
  %cond.i = select i1 %cmp5.i, i32 %sub3.i, i32 %7
  %8 = getelementptr inbounds [6 x i8*], [6 x i8*]* %captured_vars_addrs.i, i64 0, i64 0
  %9 = getelementptr inbounds [6 x i8*], [6 x i8*]* %captured_vars_addrs.i, i64 0, i64 1
  %10 = getelementptr inbounds [6 x i8*], [6 x i8*]* %captured_vars_addrs.i, i64 0, i64 2
  %11 = inttoptr i64 %n.casted.sroa.0.0.insert.ext to i8*
  %12 = getelementptr inbounds [6 x i8*], [6 x i8*]* %captured_vars_addrs.i, i64 0, i64 3
  %13 = bitcast i8** %12 to double**
  %14 = getelementptr inbounds [6 x i8*], [6 x i8*]* %captured_vars_addrs.i, i64 0, i64 4
  %15 = inttoptr i64 %alpha to i8*
  %16 = getelementptr inbounds [6 x i8*], [6 x i8*]* %captured_vars_addrs.i, i64 0, i64 5
  %17 = bitcast i8** %16 to double**
  store i32 %cond.i, i32* %.omp.comb.ub.i, align 4, !tbaa !30
  %.omp.iv.01.i = load i32, i32* %.omp.comb.lb.i, align 4, !tbaa !30
  %cmp62.i = icmp slt i32 %.omp.iv.01.i, %n.addr.sroa.0.0.extract.trunc.i
  br i1 %cmp62.i, label %omp.inner.for.body.i, label %omp.loop.exit.i

omp.inner.for.body.i:                             ; preds = %omp.precond.then.i, %omp.inner.for.body.i
  %.omp.iv.04.i = phi i32 [ %add10.i, %omp.inner.for.body.i ], [ %.omp.iv.01.i, %omp.precond.then.i ]
  %storemerge3.i = phi i32 [ %cond16.i, %omp.inner.for.body.i ], [ %cond.i, %omp.precond.then.i ]
  %18 = zext i32 %.omp.iv.04.i to i64
  %19 = zext i32 %storemerge3.i to i64
  %20 = inttoptr i64 %18 to i8*
  store i8* %20, i8** %8, align 8, !tbaa !34, !llvm.access.group !83
  %21 = inttoptr i64 %19 to i8*
  store i8* %21, i8** %9, align 8, !tbaa !34, !llvm.access.group !83
  store i8* %11, i8** %10, align 8, !tbaa !34, !llvm.access.group !83
  store double* %ycoefs, double** %13, align 8, !tbaa !34, !llvm.access.group !83
  store i8* %15, i8** %14, align 8, !tbaa !34, !llvm.access.group !83
  store double* %xcoefs, double** %17, align 8, !tbaa !34, !llvm.access.group !83
  call void @__kmpc_parallel_51(%struct.ident_t* noundef nonnull @4, i32 %1, i32 noundef 1, i32 noundef -1, i32 noundef -1, i8* noundef bitcast (void (i32*, i32*, i64, i64, i64, double*, i64, double*)* @__omp_outlined__20 to i8*), i8* noundef null, i8** noundef nonnull %8, i64 noundef 6) #2, !llvm.access.group !83
  %22 = load i32, i32* %.omp.stride.i, align 4, !tbaa !30, !llvm.access.group !83
  %23 = load i32, i32* %.omp.comb.lb.i, align 4, !tbaa !30, !llvm.access.group !83
  %add10.i = add nsw i32 %23, %22
  store i32 %add10.i, i32* %.omp.comb.lb.i, align 4, !tbaa !30, !llvm.access.group !83
  %24 = load i32, i32* %.omp.comb.ub.i, align 4, !tbaa !30, !llvm.access.group !83
  %add11.i = add nsw i32 %24, %22
  %cmp12.i = icmp sgt i32 %add11.i, %sub3.i
  %cond16.i = select i1 %cmp12.i, i32 %sub3.i, i32 %add11.i
  store i32 %cond16.i, i32* %.omp.comb.ub.i, align 4, !tbaa !30
  %cmp6.i = icmp slt i32 %add10.i, %n.addr.sroa.0.0.extract.trunc.i
  br i1 %cmp6.i, label %omp.inner.for.body.i, label %omp.loop.exit.i, !llvm.loop !84

omp.loop.exit.i:                                  ; preds = %omp.inner.for.body.i, %omp.precond.then.i
  call void @__kmpc_distribute_static_fini(%struct.ident_t* noundef nonnull @2, i32 %1) #2
  br label %__omp_outlined__19.exit

__omp_outlined__19.exit:                          ; preds = %user_code.entry, %omp.loop.exit.i
  %.pre-phi.i.pre-phi = bitcast i32* %.omp.is_last.i to i8*
  %.pre-phi6.i.pre-phi = bitcast i32* %.omp.stride.i to i8*
  %.pre-phi8.i.pre-phi = bitcast i32* %.omp.comb.ub.i to i8*
  %.pre-phi10.i.pre-phi = bitcast i32* %.omp.comb.lb.i to i8*
  call void @llvm.lifetime.end.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %.pre-phi.i.pre-phi) #2
  call void @llvm.lifetime.end.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %.pre-phi6.i.pre-phi) #2
  call void @llvm.lifetime.end.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %.pre-phi8.i.pre-phi) #2
  call void @llvm.lifetime.end.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %.pre-phi10.i.pre-phi) #2
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %2)
  call void @__kmpc_target_deinit(%struct.ident_t* nonnull @1, i8 2, i1 false) #2
  br label %common.ret
}

; Function Attrs: alwaysinline norecurse nounwind
define internal void @__omp_outlined__20(i32* noalias nocapture noundef readonly %.global_tid., i32* noalias nocapture noundef readnone %.bound_tid., i64 noundef %.previous.lb., i64 noundef %.previous.ub., i64 noundef %n, double* nocapture noundef writeonly %ycoefs, i64 noundef %alpha, double* nocapture noundef readonly %xcoefs) #0 {
entry:
  %.omp.lb = alloca i32, align 4
  %.omp.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %n.addr.sroa.0.0.extract.trunc = trunc i64 %n to i32
  %cmp = icmp sgt i32 %n.addr.sroa.0.0.extract.trunc, 0
  br i1 %cmp, label %omp.precond.then, label %omp.precond.end

omp.precond.then:                                 ; preds = %entry
  %0 = bitcast i32* %.omp.lb to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #2
  %1 = bitcast i32* %.omp.ub to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #2
  %conv4 = trunc i64 %.previous.lb. to i32
  %conv5 = trunc i64 %.previous.ub. to i32
  store i32 %conv4, i32* %.omp.lb, align 4, !tbaa !30
  store i32 %conv5, i32* %.omp.ub, align 4, !tbaa !30
  %2 = bitcast i32* %.omp.stride to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #2
  store i32 1, i32* %.omp.stride, align 4, !tbaa !30
  %3 = bitcast i32* %.omp.is_last to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #2
  store i32 0, i32* %.omp.is_last, align 4, !tbaa !30
  %4 = load i32, i32* %.global_tid., align 4, !tbaa !30
  call void @__kmpc_for_static_init_4(%struct.ident_t* nonnull @3, i32 %4, i32 33, i32* nonnull %.omp.is_last, i32* nonnull %.omp.lb, i32* nonnull %.omp.ub, i32* nonnull %.omp.stride, i32 1, i32 1)
  %5 = load i32, i32* %.omp.lb, align 4, !tbaa !30
  %6 = bitcast i64 %alpha to double
  %7 = load i32, i32* %.omp.stride, align 4
  %conv729 = sext i32 %5 to i64
  %cmp8.not30 = icmp ugt i64 %conv729, %.previous.ub.
  br i1 %cmp8.not30, label %omp.loop.exit, label %omp.inner.for.body

omp.inner.for.body:                               ; preds = %omp.precond.then, %omp.inner.for.body
  %conv732 = phi i64 [ %conv7, %omp.inner.for.body ], [ %conv729, %omp.precond.then ]
  %indvars = trunc i64 %conv732 to i32
  %arrayidx = getelementptr inbounds double, double* %xcoefs, i64 %conv732
  %8 = load double, double* %arrayidx, align 8, !tbaa !40, !llvm.access.group !86
  %mul9 = fmul contract double %8, %6
  %arrayidx11 = getelementptr inbounds double, double* %ycoefs, i64 %conv732
  store double %mul9, double* %arrayidx11, align 8, !tbaa !40, !llvm.access.group !86
  %add12 = add nsw i32 %7, %indvars
  %conv7 = sext i32 %add12 to i64
  %cmp8.not = icmp ugt i64 %conv7, %.previous.ub.
  br i1 %cmp8.not, label %omp.loop.exit, label %omp.inner.for.body, !llvm.loop !87

omp.loop.exit:                                    ; preds = %omp.inner.for.body, %omp.precond.then
  call void @__kmpc_distribute_static_fini(%struct.ident_t* nonnull @2, i32 %4)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #2
  br label %omp.precond.end

omp.precond.end:                                  ; preds = %omp.loop.exit, %entry
  ret void
}

; Function Attrs: alwaysinline norecurse nounwind
define weak void @__omp_offloading_31_355dd0b__ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3__l220(i64 noundef %n, double* noundef %ycoefs, i64 noundef %alpha, double* noundef %xcoefs, i64 noundef %beta) local_unnamed_addr #0 {
entry:
  %.omp.comb.lb.i = alloca i32, align 4
  %.omp.comb.ub.i = alloca i32, align 4
  %.omp.stride.i = alloca i32, align 4
  %.omp.is_last.i = alloca i32, align 4
  %captured_vars_addrs.i = alloca [7 x i8*], align 8
  %0 = tail call i32 @__kmpc_target_init(%struct.ident_t* nonnull @1, i8 2, i1 false, i1 false) #2
  %exec_user_code = icmp eq i32 %0, -1
  br i1 %exec_user_code, label %user_code.entry, label %common.ret

common.ret:                                       ; preds = %entry, %__omp_outlined__21.exit
  ret void

user_code.entry:                                  ; preds = %entry
  %1 = tail call i32 @__kmpc_global_thread_num(%struct.ident_t* nonnull @4) #2
  %2 = bitcast [7 x i8*]* %captured_vars_addrs.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %2)
  %n.addr.sroa.0.0.extract.trunc.i = trunc i64 %n to i32
  %sub4.i = add nsw i32 %n.addr.sroa.0.0.extract.trunc.i, -1
  %cmp.i = icmp sgt i32 %n.addr.sroa.0.0.extract.trunc.i, 0
  br i1 %cmp.i, label %omp.precond.then.i, label %__omp_outlined__21.exit

omp.precond.then.i:                               ; preds = %user_code.entry
  %n.casted.sroa.0.0.insert.ext = and i64 %n, 4294967295
  %3 = bitcast i32* %.omp.comb.lb.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %3) #2
  store i32 0, i32* %.omp.comb.lb.i, align 4, !tbaa !30
  %4 = bitcast i32* %.omp.comb.ub.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %4) #2
  store i32 %sub4.i, i32* %.omp.comb.ub.i, align 4, !tbaa !30
  %5 = bitcast i32* %.omp.stride.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %5) #2
  store i32 1, i32* %.omp.stride.i, align 4, !tbaa !30
  %6 = bitcast i32* %.omp.is_last.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %6) #2
  store i32 0, i32* %.omp.is_last.i, align 4, !tbaa !30
  %nvptx_num_threads.i = tail call i32 @__kmpc_get_hardware_num_threads_in_block() #2
  call void @__kmpc_distribute_static_init_4(%struct.ident_t* noundef nonnull @2, i32 %1, i32 noundef 91, i32* noundef nonnull %.omp.is_last.i, i32* noundef nonnull %.omp.comb.lb.i, i32* noundef nonnull %.omp.comb.ub.i, i32* noundef nonnull %.omp.stride.i, i32 noundef 1, i32 %nvptx_num_threads.i) #2
  %7 = load i32, i32* %.omp.comb.ub.i, align 4, !tbaa !30
  %cmp6.i = icmp sgt i32 %7, %sub4.i
  %cond.i = select i1 %cmp6.i, i32 %sub4.i, i32 %7
  %8 = getelementptr inbounds [7 x i8*], [7 x i8*]* %captured_vars_addrs.i, i64 0, i64 0
  %9 = getelementptr inbounds [7 x i8*], [7 x i8*]* %captured_vars_addrs.i, i64 0, i64 1
  %10 = getelementptr inbounds [7 x i8*], [7 x i8*]* %captured_vars_addrs.i, i64 0, i64 2
  %11 = inttoptr i64 %n.casted.sroa.0.0.insert.ext to i8*
  %12 = getelementptr inbounds [7 x i8*], [7 x i8*]* %captured_vars_addrs.i, i64 0, i64 3
  %13 = bitcast i8** %12 to double**
  %14 = getelementptr inbounds [7 x i8*], [7 x i8*]* %captured_vars_addrs.i, i64 0, i64 4
  %15 = inttoptr i64 %alpha to i8*
  %16 = getelementptr inbounds [7 x i8*], [7 x i8*]* %captured_vars_addrs.i, i64 0, i64 5
  %17 = bitcast i8** %16 to double**
  %18 = getelementptr inbounds [7 x i8*], [7 x i8*]* %captured_vars_addrs.i, i64 0, i64 6
  %19 = inttoptr i64 %beta to i8*
  store i32 %cond.i, i32* %.omp.comb.ub.i, align 4, !tbaa !30
  %.omp.iv.01.i = load i32, i32* %.omp.comb.lb.i, align 4, !tbaa !30
  %cmp72.i = icmp slt i32 %.omp.iv.01.i, %n.addr.sroa.0.0.extract.trunc.i
  br i1 %cmp72.i, label %omp.inner.for.body.i, label %omp.loop.exit.i

omp.inner.for.body.i:                             ; preds = %omp.precond.then.i, %omp.inner.for.body.i
  %.omp.iv.04.i = phi i32 [ %add12.i, %omp.inner.for.body.i ], [ %.omp.iv.01.i, %omp.precond.then.i ]
  %storemerge3.i = phi i32 [ %cond18.i, %omp.inner.for.body.i ], [ %cond.i, %omp.precond.then.i ]
  %20 = zext i32 %.omp.iv.04.i to i64
  %21 = zext i32 %storemerge3.i to i64
  %22 = inttoptr i64 %20 to i8*
  store i8* %22, i8** %8, align 8, !tbaa !34, !llvm.access.group !89
  %23 = inttoptr i64 %21 to i8*
  store i8* %23, i8** %9, align 8, !tbaa !34, !llvm.access.group !89
  store i8* %11, i8** %10, align 8, !tbaa !34, !llvm.access.group !89
  store double* %ycoefs, double** %13, align 8, !tbaa !34, !llvm.access.group !89
  store i8* %15, i8** %14, align 8, !tbaa !34, !llvm.access.group !89
  store double* %xcoefs, double** %17, align 8, !tbaa !34, !llvm.access.group !89
  store i8* %19, i8** %18, align 8, !tbaa !34, !llvm.access.group !89
  call void @__kmpc_parallel_51(%struct.ident_t* noundef nonnull @4, i32 %1, i32 noundef 1, i32 noundef -1, i32 noundef -1, i8* noundef bitcast (void (i32*, i32*, i64, i64, i64, double*, i64, double*, i64)* @__omp_outlined__22 to i8*), i8* noundef null, i8** noundef nonnull %8, i64 noundef 7) #2, !llvm.access.group !89
  %24 = load i32, i32* %.omp.stride.i, align 4, !tbaa !30, !llvm.access.group !89
  %25 = load i32, i32* %.omp.comb.lb.i, align 4, !tbaa !30, !llvm.access.group !89
  %add12.i = add nsw i32 %25, %24
  store i32 %add12.i, i32* %.omp.comb.lb.i, align 4, !tbaa !30, !llvm.access.group !89
  %26 = load i32, i32* %.omp.comb.ub.i, align 4, !tbaa !30, !llvm.access.group !89
  %add13.i = add nsw i32 %26, %24
  %cmp14.i = icmp sgt i32 %add13.i, %sub4.i
  %cond18.i = select i1 %cmp14.i, i32 %sub4.i, i32 %add13.i
  store i32 %cond18.i, i32* %.omp.comb.ub.i, align 4, !tbaa !30
  %cmp7.i = icmp slt i32 %add12.i, %n.addr.sroa.0.0.extract.trunc.i
  br i1 %cmp7.i, label %omp.inner.for.body.i, label %omp.loop.exit.i, !llvm.loop !90

omp.loop.exit.i:                                  ; preds = %omp.inner.for.body.i, %omp.precond.then.i
  call void @__kmpc_distribute_static_fini(%struct.ident_t* noundef nonnull @2, i32 %1) #2
  br label %__omp_outlined__21.exit

__omp_outlined__21.exit:                          ; preds = %user_code.entry, %omp.loop.exit.i
  %.pre-phi.i.pre-phi = bitcast i32* %.omp.is_last.i to i8*
  %.pre-phi6.i.pre-phi = bitcast i32* %.omp.stride.i to i8*
  %.pre-phi8.i.pre-phi = bitcast i32* %.omp.comb.ub.i to i8*
  %.pre-phi10.i.pre-phi = bitcast i32* %.omp.comb.lb.i to i8*
  call void @llvm.lifetime.end.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %.pre-phi.i.pre-phi) #2
  call void @llvm.lifetime.end.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %.pre-phi6.i.pre-phi) #2
  call void @llvm.lifetime.end.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %.pre-phi8.i.pre-phi) #2
  call void @llvm.lifetime.end.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %.pre-phi10.i.pre-phi) #2
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %2)
  call void @__kmpc_target_deinit(%struct.ident_t* nonnull @1, i8 2, i1 false) #2
  br label %common.ret
}

; Function Attrs: alwaysinline norecurse nounwind
define internal void @__omp_outlined__22(i32* noalias nocapture noundef readonly %.global_tid., i32* noalias nocapture noundef readnone %.bound_tid., i64 noundef %.previous.lb., i64 noundef %.previous.ub., i64 noundef %n, double* nocapture noundef %ycoefs, i64 noundef %alpha, double* nocapture noundef readonly %xcoefs, i64 noundef %beta) #0 {
entry:
  %.omp.lb = alloca i32, align 4
  %.omp.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %n.addr.sroa.0.0.extract.trunc = trunc i64 %n to i32
  %cmp = icmp sgt i32 %n.addr.sroa.0.0.extract.trunc, 0
  br i1 %cmp, label %omp.precond.then, label %omp.precond.end

omp.precond.then:                                 ; preds = %entry
  %0 = bitcast i32* %.omp.lb to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #2
  %1 = bitcast i32* %.omp.ub to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #2
  %conv5 = trunc i64 %.previous.lb. to i32
  %conv6 = trunc i64 %.previous.ub. to i32
  store i32 %conv5, i32* %.omp.lb, align 4, !tbaa !30
  store i32 %conv6, i32* %.omp.ub, align 4, !tbaa !30
  %2 = bitcast i32* %.omp.stride to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #2
  store i32 1, i32* %.omp.stride, align 4, !tbaa !30
  %3 = bitcast i32* %.omp.is_last to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #2
  store i32 0, i32* %.omp.is_last, align 4, !tbaa !30
  %4 = load i32, i32* %.global_tid., align 4, !tbaa !30
  call void @__kmpc_for_static_init_4(%struct.ident_t* nonnull @3, i32 %4, i32 33, i32* nonnull %.omp.is_last, i32* nonnull %.omp.lb, i32* nonnull %.omp.ub, i32* nonnull %.omp.stride, i32 1, i32 1)
  %5 = load i32, i32* %.omp.lb, align 4, !tbaa !30
  %6 = bitcast i64 %alpha to double
  %7 = bitcast i64 %beta to double
  %8 = load i32, i32* %.omp.stride, align 4
  %conv836 = sext i32 %5 to i64
  %cmp9.not37 = icmp ugt i64 %conv836, %.previous.ub.
  br i1 %cmp9.not37, label %omp.loop.exit, label %omp.inner.for.body

omp.inner.for.body:                               ; preds = %omp.precond.then, %omp.inner.for.body
  %conv839 = phi i64 [ %conv8, %omp.inner.for.body ], [ %conv836, %omp.precond.then ]
  %indvars = trunc i64 %conv839 to i32
  %arrayidx = getelementptr inbounds double, double* %xcoefs, i64 %conv839
  %9 = load double, double* %arrayidx, align 8, !tbaa !40, !llvm.access.group !92
  %mul10 = fmul contract double %9, %6
  %arrayidx12 = getelementptr inbounds double, double* %ycoefs, i64 %conv839
  %10 = load double, double* %arrayidx12, align 8, !tbaa !40, !llvm.access.group !92
  %mul13 = fmul contract double %10, %7
  %add14 = fadd contract double %mul10, %mul13
  store double %add14, double* %arrayidx12, align 8, !tbaa !40, !llvm.access.group !92
  %add17 = add nsw i32 %8, %indvars
  %conv8 = sext i32 %add17 to i64
  %cmp9.not = icmp ugt i64 %conv8, %.previous.ub.
  br i1 %cmp9.not, label %omp.loop.exit, label %omp.inner.for.body, !llvm.loop !93

omp.loop.exit:                                    ; preds = %omp.inner.for.body, %omp.precond.then
  call void @__kmpc_distribute_static_fini(%struct.ident_t* nonnull @2, i32 %4)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #2
  br label %omp.precond.end

omp.precond.end:                                  ; preds = %omp.loop.exit, %entry
  ret void
}

; Function Attrs: alwaysinline norecurse nounwind
define weak void @__omp_offloading_31_355dd0b__ZN6miniFE3dotINS_6VectorIdiiEEEENS_10TypeTraitsINT_10ScalarTypeEE14magnitude_typeERKS4_S9__l253(i64 noundef %n, double* nocapture noundef nonnull align 8 dereferenceable(8) %result, double* noundef %xcoefs, double* noundef %ycoefs) local_unnamed_addr #0 {
entry:
  %result1.i = alloca double, align 8
  %.omp.comb.lb.i = alloca i32, align 4
  %.omp.comb.ub.i = alloca i32, align 4
  %.omp.stride.i = alloca i32, align 4
  %.omp.is_last.i = alloca i32, align 4
  %captured_vars_addrs.i = alloca [6 x i8*], align 8
  %.omp.reduction.red_list.i = alloca [1 x i8*], align 8
  %0 = tail call i32 @__kmpc_target_init(%struct.ident_t* nonnull @1, i8 2, i1 false, i1 false) #2
  %exec_user_code = icmp eq i32 %0, -1
  br i1 %exec_user_code, label %user_code.entry, label %common.ret

common.ret:                                       ; preds = %entry, %__omp_outlined__23.exit
  ret void

user_code.entry:                                  ; preds = %entry
  %1 = tail call i32 @__kmpc_global_thread_num(%struct.ident_t* nonnull @4) #2
  %2 = bitcast [6 x i8*]* %captured_vars_addrs.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %2)
  %3 = bitcast [1 x i8*]* %.omp.reduction.red_list.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3)
  %n.addr.sroa.0.0.extract.trunc.i = trunc i64 %n to i32
  %4 = bitcast double* %result1.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 noundef 8, i8* noundef nonnull align 8 %4) #2
  store double 0.000000e+00, double* %result1.i, align 8, !tbaa !40
  %sub3.i = add nsw i32 %n.addr.sroa.0.0.extract.trunc.i, -1
  %cmp.i = icmp sgt i32 %n.addr.sroa.0.0.extract.trunc.i, 0
  br i1 %cmp.i, label %omp.precond.then.i, label %omp.precond.end.i

omp.precond.then.i:                               ; preds = %user_code.entry
  %n.casted.sroa.0.0.insert.ext = and i64 %n, 4294967295
  %5 = bitcast i32* %.omp.comb.lb.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %5) #2
  store i32 0, i32* %.omp.comb.lb.i, align 4, !tbaa !30
  %6 = bitcast i32* %.omp.comb.ub.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %6) #2
  store i32 %sub3.i, i32* %.omp.comb.ub.i, align 4, !tbaa !30
  %7 = bitcast i32* %.omp.stride.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %7) #2
  store i32 1, i32* %.omp.stride.i, align 4, !tbaa !30
  %8 = bitcast i32* %.omp.is_last.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %8) #2
  store i32 0, i32* %.omp.is_last.i, align 4, !tbaa !30
  %nvptx_num_threads.i = tail call i32 @__kmpc_get_hardware_num_threads_in_block() #2
  call void @__kmpc_distribute_static_init_4(%struct.ident_t* noundef nonnull @2, i32 %1, i32 noundef 91, i32* noundef nonnull %.omp.is_last.i, i32* noundef nonnull %.omp.comb.lb.i, i32* noundef nonnull %.omp.comb.ub.i, i32* noundef nonnull %.omp.stride.i, i32 noundef 1, i32 %nvptx_num_threads.i) #2
  %9 = load i32, i32* %.omp.comb.ub.i, align 4, !tbaa !30
  %cmp5.i = icmp sgt i32 %9, %sub3.i
  %cond.i = select i1 %cmp5.i, i32 %sub3.i, i32 %9
  %10 = getelementptr inbounds [6 x i8*], [6 x i8*]* %captured_vars_addrs.i, i64 0, i64 0
  %11 = getelementptr inbounds [6 x i8*], [6 x i8*]* %captured_vars_addrs.i, i64 0, i64 1
  %12 = getelementptr inbounds [6 x i8*], [6 x i8*]* %captured_vars_addrs.i, i64 0, i64 2
  %13 = inttoptr i64 %n.casted.sroa.0.0.insert.ext to i8*
  %14 = getelementptr inbounds [6 x i8*], [6 x i8*]* %captured_vars_addrs.i, i64 0, i64 3
  %15 = bitcast i8** %14 to double**
  %16 = getelementptr inbounds [6 x i8*], [6 x i8*]* %captured_vars_addrs.i, i64 0, i64 4
  %17 = bitcast i8** %16 to double**
  %18 = getelementptr inbounds [6 x i8*], [6 x i8*]* %captured_vars_addrs.i, i64 0, i64 5
  %19 = bitcast i8** %18 to double**
  store i32 %cond.i, i32* %.omp.comb.ub.i, align 4, !tbaa !30
  %.omp.iv.01.i = load i32, i32* %.omp.comb.lb.i, align 4, !tbaa !30
  %cmp62.i = icmp slt i32 %.omp.iv.01.i, %n.addr.sroa.0.0.extract.trunc.i
  br i1 %cmp62.i, label %omp.inner.for.body.i, label %omp.loop.exit.i

omp.inner.for.body.i:                             ; preds = %omp.precond.then.i, %omp.inner.for.body.i
  %.omp.iv.04.i = phi i32 [ %add9.i, %omp.inner.for.body.i ], [ %.omp.iv.01.i, %omp.precond.then.i ]
  %storemerge3.i = phi i32 [ %cond15.i, %omp.inner.for.body.i ], [ %cond.i, %omp.precond.then.i ]
  %20 = zext i32 %.omp.iv.04.i to i64
  %21 = zext i32 %storemerge3.i to i64
  %22 = inttoptr i64 %20 to i8*
  store i8* %22, i8** %10, align 8, !tbaa !34
  %23 = inttoptr i64 %21 to i8*
  store i8* %23, i8** %11, align 8, !tbaa !34
  store i8* %13, i8** %12, align 8, !tbaa !34
  store double* %result1.i, double** %15, align 8, !tbaa !34
  store double* %xcoefs, double** %17, align 8, !tbaa !34
  store double* %ycoefs, double** %19, align 8, !tbaa !34
  call void @__kmpc_parallel_51(%struct.ident_t* noundef nonnull @4, i32 %1, i32 noundef 1, i32 noundef -1, i32 noundef -1, i8* noundef bitcast (void (i32*, i32*, i64, i64, i64, double*, double*, double*)* @__omp_outlined__24 to i8*), i8* noundef null, i8** noundef nonnull %10, i64 noundef 6) #2
  %24 = load i32, i32* %.omp.stride.i, align 4, !tbaa !30
  %25 = load i32, i32* %.omp.comb.lb.i, align 4, !tbaa !30
  %add9.i = add nsw i32 %25, %24
  store i32 %add9.i, i32* %.omp.comb.lb.i, align 4, !tbaa !30
  %26 = load i32, i32* %.omp.comb.ub.i, align 4, !tbaa !30
  %add10.i = add nsw i32 %26, %24
  %cmp11.i = icmp sgt i32 %add10.i, %sub3.i
  %cond15.i = select i1 %cmp11.i, i32 %sub3.i, i32 %add10.i
  store i32 %cond15.i, i32* %.omp.comb.ub.i, align 4, !tbaa !30
  %cmp6.i = icmp slt i32 %add9.i, %n.addr.sroa.0.0.extract.trunc.i
  br i1 %cmp6.i, label %omp.inner.for.body.i, label %omp.loop.exit.i

omp.loop.exit.i:                                  ; preds = %omp.inner.for.body.i, %omp.precond.then.i
  call void @__kmpc_distribute_static_fini(%struct.ident_t* noundef nonnull @2, i32 %1) #2
  br label %omp.precond.end.i

omp.precond.end.i:                                ; preds = %user_code.entry, %omp.loop.exit.i
  %.pre-phi.i.pre-phi = bitcast i32* %.omp.is_last.i to i8*
  %.pre-phi6.i.pre-phi = bitcast i32* %.omp.stride.i to i8*
  %.pre-phi8.i.pre-phi = bitcast i32* %.omp.comb.ub.i to i8*
  %.pre-phi10.i.pre-phi = bitcast i32* %.omp.comb.lb.i to i8*
  call void @llvm.lifetime.end.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %.pre-phi.i.pre-phi) #2
  call void @llvm.lifetime.end.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %.pre-phi6.i.pre-phi) #2
  call void @llvm.lifetime.end.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %.pre-phi8.i.pre-phi) #2
  call void @llvm.lifetime.end.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %.pre-phi10.i.pre-phi) #2
  %27 = bitcast [1 x i8*]* %.omp.reduction.red_list.i to double**
  store double* %result1.i, double** %27, align 8
  %28 = call i32 @__kmpc_nvptx_teams_reduce_nowait_v2(%struct.ident_t* noundef nonnull @4, i32 %1, i8* noundef bitcast (%"union._openmp_teams_reduction_type_$_"* @"_openmp_teams_reductions_buffer_$_" to i8*), i32 noundef 1024, i8* noundef nonnull align 8 %3, void (i8*, i16, i16, i16)* noundef nonnull @_omp_reduction_shuffle_and_reduce_func29, void (i8*, i32)* noundef nonnull @_omp_reduction_inter_warp_copy_func30, void (i8*, i32, i8*)* noundef nonnull @_omp_reduction_list_to_global_copy_func31, void (i8*, i32, i8*)* noundef nonnull @_omp_reduction_list_to_global_reduce_func32, void (i8*, i32, i8*)* noundef nonnull @_omp_reduction_global_to_list_copy_func33, void (i8*, i32, i8*)* noundef nonnull @_omp_reduction_global_to_list_reduce_func34) #2
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %.omp.reduction.then.i, label %__omp_outlined__23.exit

.omp.reduction.then.i:                            ; preds = %omp.precond.end.i
  %30 = load double, double* %result, align 8, !tbaa !40
  %31 = load double, double* %result1.i, align 8, !tbaa !40
  %add16.i = fadd contract double %30, %31
  store double %add16.i, double* %result, align 8, !tbaa !40
  call void @__kmpc_nvptx_end_reduce_nowait(i32 %1) #2
  br label %__omp_outlined__23.exit

__omp_outlined__23.exit:                          ; preds = %omp.precond.end.i, %.omp.reduction.then.i
  call void @llvm.lifetime.end.p0i8(i64 noundef 8, i8* noundef nonnull %4) #2
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3)
  call void @__kmpc_target_deinit(%struct.ident_t* nonnull @1, i8 2, i1 false) #2
  br label %common.ret
}

; Function Attrs: alwaysinline norecurse nounwind
define internal void @__omp_outlined__24(i32* noalias nocapture noundef readonly %.global_tid., i32* noalias nocapture noundef readnone %.bound_tid., i64 noundef %.previous.lb., i64 noundef %.previous.ub., i64 noundef %n, double* nocapture noundef nonnull align 8 dereferenceable(8) %result, double* nocapture noundef readonly %xcoefs, double* nocapture noundef readonly %ycoefs) #0 {
entry:
  %.omp.lb = alloca i32, align 4
  %.omp.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %result5 = alloca double, align 8
  %.omp.reduction.red_list = alloca [1 x i8*], align 8
  %n.addr.sroa.0.0.extract.trunc = trunc i64 %n to i32
  %cmp = icmp sgt i32 %n.addr.sroa.0.0.extract.trunc, 0
  br i1 %cmp, label %omp.precond.then, label %omp.precond.end

omp.precond.then:                                 ; preds = %entry
  %0 = bitcast i32* %.omp.lb to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #2
  %1 = bitcast i32* %.omp.ub to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #2
  %conv3 = trunc i64 %.previous.lb. to i32
  %conv4 = trunc i64 %.previous.ub. to i32
  store i32 %conv3, i32* %.omp.lb, align 4, !tbaa !30
  store i32 %conv4, i32* %.omp.ub, align 4, !tbaa !30
  %2 = bitcast i32* %.omp.stride to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #2
  store i32 1, i32* %.omp.stride, align 4, !tbaa !30
  %3 = bitcast i32* %.omp.is_last to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #2
  store i32 0, i32* %.omp.is_last, align 4, !tbaa !30
  %4 = bitcast double* %result5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #2
  %5 = load i32, i32* %.global_tid., align 4, !tbaa !30
  call void @__kmpc_for_static_init_4(%struct.ident_t* nonnull @3, i32 %5, i32 33, i32* nonnull %.omp.is_last, i32* nonnull %.omp.lb, i32* nonnull %.omp.ub, i32* nonnull %.omp.stride, i32 1, i32 1)
  %6 = load i32, i32* %.omp.lb, align 4, !tbaa !30
  %7 = load i32, i32* %.omp.stride, align 4
  %conv728 = sext i32 %6 to i64
  %cmp8.not29 = icmp ugt i64 %conv728, %.previous.ub.
  br i1 %cmp8.not29, label %omp.loop.exit, label %omp.inner.for.body

omp.inner.for.body:                               ; preds = %omp.precond.then, %omp.inner.for.body
  %conv732 = phi i64 [ %conv7, %omp.inner.for.body ], [ %conv728, %omp.precond.then ]
  %add122730 = phi double [ %add12, %omp.inner.for.body ], [ 0.000000e+00, %omp.precond.then ]
  %indvars = trunc i64 %conv732 to i32
  %arrayidx = getelementptr inbounds double, double* %xcoefs, i64 %conv732
  %8 = load double, double* %arrayidx, align 8, !tbaa !40
  %arrayidx10 = getelementptr inbounds double, double* %ycoefs, i64 %conv732
  %9 = load double, double* %arrayidx10, align 8, !tbaa !40
  %mul11 = fmul contract double %8, %9
  %add12 = fadd contract double %add122730, %mul11
  %add13 = add nsw i32 %7, %indvars
  %conv7 = sext i32 %add13 to i64
  %cmp8.not = icmp ugt i64 %conv7, %.previous.ub.
  br i1 %cmp8.not, label %omp.loop.exit, label %omp.inner.for.body

omp.loop.exit:                                    ; preds = %omp.inner.for.body, %omp.precond.then
  %add1227.lcssa = phi double [ 0.000000e+00, %omp.precond.then ], [ %add12, %omp.inner.for.body ]
  store double %add1227.lcssa, double* %result5, align 8, !tbaa !40
  call void @__kmpc_distribute_static_fini(%struct.ident_t* nonnull @2, i32 %5)
  %10 = bitcast [1 x i8*]* %.omp.reduction.red_list to double**
  store double* %result5, double** %10, align 8
  %11 = bitcast [1 x i8*]* %.omp.reduction.red_list to i8*
  %12 = call i32 @__kmpc_nvptx_parallel_reduce_nowait_v2(%struct.ident_t* nonnull @4, i32 %5, i32 1, i64 8, i8* nonnull %11, void (i8*, i16, i16, i16)* nonnull @_omp_reduction_shuffle_and_reduce_func26, void (i8*, i32)* nonnull @_omp_reduction_inter_warp_copy_func27) #2
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %.omp.reduction.then, label %.omp.reduction.done

.omp.reduction.then:                              ; preds = %omp.loop.exit
  %14 = load double, double* %result, align 8, !tbaa !40
  %15 = load double, double* %result5, align 8, !tbaa !40
  %add14 = fadd contract double %14, %15
  store double %add14, double* %result, align 8, !tbaa !40
  call void @__kmpc_nvptx_end_reduce_nowait(i32 %5) #2
  br label %.omp.reduction.done

.omp.reduction.done:                              ; preds = %.omp.reduction.then, %omp.loop.exit
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #2
  br label %omp.precond.end

omp.precond.end:                                  ; preds = %.omp.reduction.done, %entry
  ret void
}

; Function Attrs: norecurse nounwind
define internal void @_omp_reduction_shuffle_and_reduce_func26(i8* nocapture noundef nonnull readonly align 8 dereferenceable(8) %0, i16 noundef signext %1, i16 noundef signext %2, i16 noundef signext %3) #4 {
entry:
  %4 = bitcast i8* %0 to i64**
  %5 = load i64*, i64** %4, align 8
  %6 = load i64, i64* %5, align 8
  %7 = tail call i32 @__kmpc_get_warp_size() #2
  %8 = trunc i32 %7 to i16
  %9 = tail call i64 @__kmpc_shuffle_int64(i64 %6, i16 %2, i16 %8) #2
  %10 = icmp eq i16 %3, 0
  %11 = icmp eq i16 %3, 1
  %12 = icmp ult i16 %1, %2
  %13 = and i1 %12, %11
  %14 = icmp eq i16 %3, 2
  %15 = and i16 %1, 1
  %16 = icmp eq i16 %15, 0
  %17 = and i1 %16, %14
  %18 = icmp sgt i16 %2, 0
  %19 = and i1 %18, %17
  %20 = or i1 %10, %13
  %21 = or i1 %20, %19
  br i1 %21, label %then, label %ifcont

then:                                             ; preds = %entry
  %22 = bitcast i64 %9 to double
  %23 = bitcast i8* %0 to double**
  %24 = load double*, double** %23, align 8
  %25 = load double, double* %24, align 8, !tbaa !40
  %add.i = fadd contract double %25, %22
  store double %add.i, double* %24, align 8, !tbaa !40
  br label %ifcont

ifcont:                                           ; preds = %entry, %then
  %26 = icmp uge i16 %1, %2
  %27 = and i1 %26, %11
  br i1 %27, label %then4, label %ifcont6

then4:                                            ; preds = %ifcont
  %28 = load i64*, i64** %4, align 8
  store i64 %9, i64* %28, align 8
  br label %ifcont6

ifcont6:                                          ; preds = %ifcont, %then4
  ret void
}

; Function Attrs: convergent norecurse nounwind
define internal void @_omp_reduction_inter_warp_copy_func27(i8* nocapture noundef readonly %0, i32 noundef %1) #5 {
entry:
  %2 = tail call i32 @__kmpc_global_thread_num(%struct.ident_t* nonnull @4)
  %3 = tail call i32 @__kmpc_get_hardware_thread_id_in_block() #2
  %4 = tail call i32 @__kmpc_get_hardware_thread_id_in_block() #2
  %nvptx_lane_id = and i32 %4, 31
  %5 = tail call i32 @__kmpc_get_hardware_thread_id_in_block() #2
  %nvptx_warp_id = ashr i32 %5, 5
  %warp_master = icmp eq i32 %nvptx_lane_id, 0
  %6 = sext i32 %nvptx_warp_id to i64
  %7 = getelementptr inbounds [32 x i32], [32 x i32] addrspace(3)* @__openmp_nvptx_data_transfer_temporary_storage, i64 0, i64 %6
  %8 = bitcast i8* %0 to i32**
  %is_active_thread = icmp ult i32 %3, %1
  %9 = sext i32 %3 to i64
  %10 = getelementptr inbounds [32 x i32], [32 x i32] addrspace(3)* @__openmp_nvptx_data_transfer_temporary_storage, i64 0, i64 %9
  tail call void @__kmpc_barrier(%struct.ident_t* nonnull @5, i32 %2)
  br i1 %warp_master, label %then, label %ifcont

then:                                             ; preds = %entry
  %11 = load i32*, i32** %8, align 8, !tbaa !34
  %12 = load i32, i32* %11, align 4
  store volatile i32 %12, i32 addrspace(3)* %7, align 4
  br label %ifcont

ifcont:                                           ; preds = %entry, %then
  tail call void @__kmpc_barrier(%struct.ident_t* nonnull @5, i32 %2)
  br i1 %is_active_thread, label %then2, label %ifcont4

then2:                                            ; preds = %ifcont
  %13 = load i32*, i32** %8, align 8, !tbaa !34
  %14 = load volatile i32, i32 addrspace(3)* %10, align 4, !tbaa !30
  store i32 %14, i32* %13, align 4, !tbaa !30
  br label %ifcont4

ifcont4:                                          ; preds = %ifcont, %then2
  tail call void @__kmpc_barrier(%struct.ident_t* nonnull @5, i32 %2)
  br i1 %warp_master, label %then.1, label %ifcont.1

then.1:                                           ; preds = %ifcont4
  %15 = load i32*, i32** %8, align 8, !tbaa !34
  %16 = getelementptr i32, i32* %15, i64 1
  %17 = load i32, i32* %16, align 4
  store volatile i32 %17, i32 addrspace(3)* %7, align 4
  br label %ifcont.1

ifcont.1:                                         ; preds = %then.1, %ifcont4
  tail call void @__kmpc_barrier(%struct.ident_t* nonnull @5, i32 %2)
  br i1 %is_active_thread, label %then2.1, label %ifcont4.1

then2.1:                                          ; preds = %ifcont.1
  %18 = load i32*, i32** %8, align 8, !tbaa !34
  %19 = getelementptr i32, i32* %18, i64 1
  %20 = load volatile i32, i32 addrspace(3)* %10, align 4, !tbaa !30
  store i32 %20, i32* %19, align 4, !tbaa !30
  br label %ifcont4.1

ifcont4.1:                                        ; preds = %then2.1, %ifcont.1
  ret void
}

; Function Attrs: norecurse nounwind
define internal void @_omp_reduction_shuffle_and_reduce_func29(i8* nocapture noundef nonnull readonly dereferenceable(8) %0, i16 noundef signext %1, i16 noundef signext %2, i16 noundef signext %3) #4 {
entry:
  %4 = bitcast i8* %0 to i64**
  %5 = load i64*, i64** %4, align 8
  %6 = load i64, i64* %5, align 8
  %7 = tail call i32 @__kmpc_get_warp_size()
  %8 = trunc i32 %7 to i16
  %9 = tail call i64 @__kmpc_shuffle_int64(i64 %6, i16 %2, i16 %8) #2
  %10 = icmp eq i16 %3, 0
  %11 = icmp eq i16 %3, 1
  %12 = icmp ult i16 %1, %2
  %13 = and i1 %12, %11
  %14 = icmp eq i16 %3, 2
  %15 = and i16 %1, 1
  %16 = icmp eq i16 %15, 0
  %17 = and i1 %16, %14
  %18 = icmp sgt i16 %2, 0
  %19 = and i1 %18, %17
  %20 = or i1 %10, %13
  %21 = or i1 %20, %19
  br i1 %21, label %then, label %ifcont

then:                                             ; preds = %entry
  %22 = bitcast i64 %9 to double
  %23 = bitcast i8* %0 to double**
  %24 = load double*, double** %23, align 8
  %25 = load double, double* %24, align 8, !tbaa !40
  %add.i = fadd contract double %25, %22
  store double %add.i, double* %24, align 8, !tbaa !40
  br label %ifcont

ifcont:                                           ; preds = %entry, %then
  %26 = icmp uge i16 %1, %2
  %27 = and i1 %26, %11
  br i1 %27, label %then4, label %ifcont6

then4:                                            ; preds = %ifcont
  %28 = load i64*, i64** %4, align 8
  store i64 %9, i64* %28, align 8
  br label %ifcont6

ifcont6:                                          ; preds = %ifcont, %then4
  ret void
}

; Function Attrs: convergent norecurse nounwind
define internal void @_omp_reduction_inter_warp_copy_func30(i8* nocapture noundef readonly %0, i32 noundef %1) #5 {
entry:
  %2 = tail call i32 @__kmpc_global_thread_num(%struct.ident_t* nonnull @4)
  %3 = tail call i32 @__kmpc_get_hardware_thread_id_in_block() #2
  %4 = tail call i32 @__kmpc_get_hardware_thread_id_in_block() #2
  %nvptx_lane_id = and i32 %4, 31
  %5 = tail call i32 @__kmpc_get_hardware_thread_id_in_block() #2
  %nvptx_warp_id = ashr i32 %5, 5
  %warp_master = icmp eq i32 %nvptx_lane_id, 0
  %6 = sext i32 %nvptx_warp_id to i64
  %7 = getelementptr inbounds [32 x i32], [32 x i32] addrspace(3)* @__openmp_nvptx_data_transfer_temporary_storage, i64 0, i64 %6
  %8 = bitcast i8* %0 to i32**
  %is_active_thread = icmp ult i32 %3, %1
  %9 = sext i32 %3 to i64
  %10 = getelementptr inbounds [32 x i32], [32 x i32] addrspace(3)* @__openmp_nvptx_data_transfer_temporary_storage, i64 0, i64 %9
  tail call void @__kmpc_barrier(%struct.ident_t* nonnull @5, i32 %2)
  br i1 %warp_master, label %then, label %ifcont

then:                                             ; preds = %entry
  %11 = load i32*, i32** %8, align 8, !tbaa !34
  %12 = load i32, i32* %11, align 4
  store volatile i32 %12, i32 addrspace(3)* %7, align 4
  br label %ifcont

ifcont:                                           ; preds = %entry, %then
  tail call void @__kmpc_barrier(%struct.ident_t* nonnull @5, i32 %2)
  br i1 %is_active_thread, label %then2, label %ifcont4

then2:                                            ; preds = %ifcont
  %13 = load i32*, i32** %8, align 8, !tbaa !34
  %14 = load volatile i32, i32 addrspace(3)* %10, align 4, !tbaa !30
  store i32 %14, i32* %13, align 4, !tbaa !30
  br label %ifcont4

ifcont4:                                          ; preds = %ifcont, %then2
  tail call void @__kmpc_barrier(%struct.ident_t* nonnull @5, i32 %2)
  br i1 %warp_master, label %then.1, label %ifcont.1

then.1:                                           ; preds = %ifcont4
  %15 = load i32*, i32** %8, align 8, !tbaa !34
  %16 = getelementptr i32, i32* %15, i64 1
  %17 = load i32, i32* %16, align 4
  store volatile i32 %17, i32 addrspace(3)* %7, align 4
  br label %ifcont.1

ifcont.1:                                         ; preds = %then.1, %ifcont4
  tail call void @__kmpc_barrier(%struct.ident_t* nonnull @5, i32 %2)
  br i1 %is_active_thread, label %then2.1, label %ifcont4.1

then2.1:                                          ; preds = %ifcont.1
  %18 = load i32*, i32** %8, align 8, !tbaa !34
  %19 = getelementptr i32, i32* %18, i64 1
  %20 = load volatile i32, i32 addrspace(3)* %10, align 4, !tbaa !30
  store i32 %20, i32* %19, align 4, !tbaa !30
  br label %ifcont4.1

ifcont4.1:                                        ; preds = %then2.1, %ifcont.1
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal void @_omp_reduction_list_to_global_copy_func31(i8* nocapture noundef writeonly %0, i32 noundef %1, i8* nocapture noundef readonly %2) #7 {
entry:
  %3 = bitcast i8* %2 to double**
  %4 = load double*, double** %3, align 8, !tbaa !34
  %result = bitcast i8* %0 to [1024 x double]*
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds [1024 x double], [1024 x double]* %result, i64 0, i64 %5
  %7 = load double, double* %4, align 8
  store double %7, double* %6, align 128, !tbaa !63
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal void @_omp_reduction_list_to_global_reduce_func32(i8* noundef %0, i32 noundef %1, i8* nocapture noundef readonly align 8 %2) #7 {
entry:
  %result = bitcast i8* %0 to [1024 x double]*
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds [1024 x double], [1024 x double]* %result, i64 0, i64 %3
  %5 = bitcast i8* %2 to double**
  %6 = load double*, double** %5, align 8
  %7 = load double, double* %4, align 8, !tbaa !40
  %8 = load double, double* %6, align 8, !tbaa !40
  %add.i = fadd contract double %7, %8
  store double %add.i, double* %4, align 8, !tbaa !40
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal void @_omp_reduction_global_to_list_copy_func33(i8* nocapture noundef readonly %0, i32 noundef %1, i8* nocapture noundef readonly %2) #7 {
entry:
  %3 = bitcast i8* %2 to double**
  %4 = load double*, double** %3, align 8, !tbaa !34
  %result = bitcast i8* %0 to [1024 x double]*
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds [1024 x double], [1024 x double]* %result, i64 0, i64 %5
  %7 = load double, double* %6, align 128, !tbaa !63
  store double %7, double* %4, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal void @_omp_reduction_global_to_list_reduce_func34(i8* noundef %0, i32 noundef %1, i8* nocapture noundef readonly %2) #7 {
entry:
  %result = bitcast i8* %0 to [1024 x double]*
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds [1024 x double], [1024 x double]* %result, i64 0, i64 %3
  %5 = bitcast i8* %2 to double**
  %6 = load double*, double** %5, align 8
  %7 = load double, double* %6, align 8, !tbaa !40
  %8 = load double, double* %4, align 8, !tbaa !40
  %add.i = fadd contract double %7, %8
  store double %add.i, double* %6, align 8, !tbaa !40
  ret void
}

; Function Attrs: alwaysinline norecurse nounwind
define weak void @__omp_offloading_31_355dd02__ZN6miniFE10matvec_stdINS_9CSRMatrixIdiiEENS_6VectorIdiiEEEclERS2_RS4_S7__l521(i64 noundef %rows_size, i64 noundef %row_start, i32* noundef %Arowoffsets, i64 noundef %row_end, double* noundef %Acoefs, double* noundef %xcoefs, i32* noundef %Acols, double* noundef %ycoefs) local_unnamed_addr #0 {
entry:
  %.omp.comb.lb.i = alloca i32, align 4
  %.omp.comb.ub.i = alloca i32, align 4
  %.omp.stride.i = alloca i32, align 4
  %.omp.is_last.i = alloca i32, align 4
  %captured_vars_addrs.i = alloca [10 x i8*], align 8
  %0 = tail call i32 @__kmpc_target_init(%struct.ident_t* nonnull @1, i8 2, i1 false, i1 false) #2
  %exec_user_code = icmp eq i32 %0, -1
  br i1 %exec_user_code, label %user_code.entry, label %common.ret

common.ret:                                       ; preds = %entry, %__omp_outlined__35.exit
  ret void

user_code.entry:                                  ; preds = %entry
  %1 = tail call i32 @__kmpc_global_thread_num(%struct.ident_t* nonnull @4) #2
  %2 = bitcast [10 x i8*]* %captured_vars_addrs.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %2)
  %rows_size.addr.sroa.0.0.extract.trunc.i = trunc i64 %rows_size to i32
  %sub4.i = add nsw i32 %rows_size.addr.sroa.0.0.extract.trunc.i, -1
  %cmp.i = icmp sgt i32 %rows_size.addr.sroa.0.0.extract.trunc.i, 0
  br i1 %cmp.i, label %omp.precond.then.i, label %__omp_outlined__35.exit

omp.precond.then.i:                               ; preds = %user_code.entry
  %rows_size.casted.sroa.0.0.insert.ext = and i64 %rows_size, 4294967295
  %row_end.casted.sroa.0.0.insert.ext = and i64 %row_end, 4294967295
  %row_start.casted.sroa.0.0.insert.ext = and i64 %row_start, 4294967295
  %3 = bitcast i32* %.omp.comb.lb.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %3) #2
  store i32 0, i32* %.omp.comb.lb.i, align 4, !tbaa !30
  %4 = bitcast i32* %.omp.comb.ub.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %4) #2
  store i32 %sub4.i, i32* %.omp.comb.ub.i, align 4, !tbaa !30
  %5 = bitcast i32* %.omp.stride.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %5) #2
  store i32 1, i32* %.omp.stride.i, align 4, !tbaa !30
  %6 = bitcast i32* %.omp.is_last.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %6) #2
  store i32 0, i32* %.omp.is_last.i, align 4, !tbaa !30
  %nvptx_num_threads.i = tail call i32 @__kmpc_get_hardware_num_threads_in_block() #2
  call void @__kmpc_distribute_static_init_4(%struct.ident_t* noundef nonnull @2, i32 %1, i32 noundef 91, i32* noundef nonnull %.omp.is_last.i, i32* noundef nonnull %.omp.comb.lb.i, i32* noundef nonnull %.omp.comb.ub.i, i32* noundef nonnull %.omp.stride.i, i32 noundef 1, i32 %nvptx_num_threads.i) #2
  %7 = load i32, i32* %.omp.comb.ub.i, align 4, !tbaa !30
  %cmp6.i = icmp sgt i32 %7, %sub4.i
  %cond.i = select i1 %cmp6.i, i32 %sub4.i, i32 %7
  %8 = getelementptr inbounds [10 x i8*], [10 x i8*]* %captured_vars_addrs.i, i64 0, i64 0
  %9 = getelementptr inbounds [10 x i8*], [10 x i8*]* %captured_vars_addrs.i, i64 0, i64 1
  %10 = getelementptr inbounds [10 x i8*], [10 x i8*]* %captured_vars_addrs.i, i64 0, i64 2
  %11 = inttoptr i64 %rows_size.casted.sroa.0.0.insert.ext to i8*
  %12 = getelementptr inbounds [10 x i8*], [10 x i8*]* %captured_vars_addrs.i, i64 0, i64 3
  %13 = inttoptr i64 %row_start.casted.sroa.0.0.insert.ext to i8*
  %14 = getelementptr inbounds [10 x i8*], [10 x i8*]* %captured_vars_addrs.i, i64 0, i64 4
  %15 = bitcast i8** %14 to i32**
  %16 = getelementptr inbounds [10 x i8*], [10 x i8*]* %captured_vars_addrs.i, i64 0, i64 5
  %17 = inttoptr i64 %row_end.casted.sroa.0.0.insert.ext to i8*
  %18 = getelementptr inbounds [10 x i8*], [10 x i8*]* %captured_vars_addrs.i, i64 0, i64 6
  %19 = bitcast i8** %18 to double**
  %20 = getelementptr inbounds [10 x i8*], [10 x i8*]* %captured_vars_addrs.i, i64 0, i64 7
  %21 = bitcast i8** %20 to double**
  %22 = getelementptr inbounds [10 x i8*], [10 x i8*]* %captured_vars_addrs.i, i64 0, i64 8
  %23 = bitcast i8** %22 to i32**
  %24 = getelementptr inbounds [10 x i8*], [10 x i8*]* %captured_vars_addrs.i, i64 0, i64 9
  %25 = bitcast i8** %24 to double**
  store i32 %cond.i, i32* %.omp.comb.ub.i, align 4, !tbaa !30
  %.omp.iv.01.i = load i32, i32* %.omp.comb.lb.i, align 4, !tbaa !30
  %cmp72.i = icmp slt i32 %.omp.iv.01.i, %rows_size.addr.sroa.0.0.extract.trunc.i
  br i1 %cmp72.i, label %omp.inner.for.body.i, label %omp.loop.exit.i

omp.inner.for.body.i:                             ; preds = %omp.precond.then.i, %omp.inner.for.body.i
  %.omp.iv.04.i = phi i32 [ %add12.i, %omp.inner.for.body.i ], [ %.omp.iv.01.i, %omp.precond.then.i ]
  %storemerge3.i = phi i32 [ %cond18.i, %omp.inner.for.body.i ], [ %cond.i, %omp.precond.then.i ]
  %26 = zext i32 %.omp.iv.04.i to i64
  %27 = zext i32 %storemerge3.i to i64
  %28 = inttoptr i64 %26 to i8*
  store i8* %28, i8** %8, align 8, !tbaa !34
  %29 = inttoptr i64 %27 to i8*
  store i8* %29, i8** %9, align 8, !tbaa !34
  store i8* %11, i8** %10, align 8, !tbaa !34
  store i8* %13, i8** %12, align 8, !tbaa !34
  store i32* %Arowoffsets, i32** %15, align 8, !tbaa !34
  store i8* %17, i8** %16, align 8, !tbaa !34
  store double* %Acoefs, double** %19, align 8, !tbaa !34
  store double* %xcoefs, double** %21, align 8, !tbaa !34
  store i32* %Acols, i32** %23, align 8, !tbaa !34
  store double* %ycoefs, double** %25, align 8, !tbaa !34
  call void @__kmpc_parallel_51(%struct.ident_t* noundef nonnull @4, i32 %1, i32 noundef 1, i32 noundef -1, i32 noundef -1, i8* noundef bitcast (void (i32*, i32*, i64, i64, i64, i64, i32*, i64, double*, double*, i32*, double*)* @__omp_outlined__36 to i8*), i8* noundef null, i8** noundef nonnull %8, i64 noundef 10) #2
  %30 = load i32, i32* %.omp.stride.i, align 4, !tbaa !30
  %31 = load i32, i32* %.omp.comb.lb.i, align 4, !tbaa !30
  %add12.i = add nsw i32 %31, %30
  store i32 %add12.i, i32* %.omp.comb.lb.i, align 4, !tbaa !30
  %32 = load i32, i32* %.omp.comb.ub.i, align 4, !tbaa !30
  %add13.i = add nsw i32 %32, %30
  %cmp14.i = icmp sgt i32 %add13.i, %sub4.i
  %cond18.i = select i1 %cmp14.i, i32 %sub4.i, i32 %add13.i
  store i32 %cond18.i, i32* %.omp.comb.ub.i, align 4, !tbaa !30
  %cmp7.i = icmp slt i32 %add12.i, %rows_size.addr.sroa.0.0.extract.trunc.i
  br i1 %cmp7.i, label %omp.inner.for.body.i, label %omp.loop.exit.i

omp.loop.exit.i:                                  ; preds = %omp.inner.for.body.i, %omp.precond.then.i
  call void @__kmpc_distribute_static_fini(%struct.ident_t* noundef nonnull @2, i32 %1) #2
  br label %__omp_outlined__35.exit

__omp_outlined__35.exit:                          ; preds = %user_code.entry, %omp.loop.exit.i
  %.pre-phi.i.pre-phi = bitcast i32* %.omp.is_last.i to i8*
  %.pre-phi6.i.pre-phi = bitcast i32* %.omp.stride.i to i8*
  %.pre-phi8.i.pre-phi = bitcast i32* %.omp.comb.ub.i to i8*
  %.pre-phi10.i.pre-phi = bitcast i32* %.omp.comb.lb.i to i8*
  call void @llvm.lifetime.end.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %.pre-phi.i.pre-phi) #2
  call void @llvm.lifetime.end.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %.pre-phi6.i.pre-phi) #2
  call void @llvm.lifetime.end.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %.pre-phi8.i.pre-phi) #2
  call void @llvm.lifetime.end.p0i8(i64 noundef 4, i8* noundef nonnull align 4 %.pre-phi10.i.pre-phi) #2
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %2)
  call void @__kmpc_target_deinit(%struct.ident_t* nonnull @1, i8 2, i1 false) #2
  br label %common.ret
}

; Function Attrs: alwaysinline norecurse nounwind
define internal void @__omp_outlined__36(i32* noalias nocapture noundef readonly %.global_tid., i32* noalias nocapture noundef readnone %.bound_tid., i64 noundef %.previous.lb., i64 noundef %.previous.ub., i64 noundef %rows_size, i64 noundef %row_start, i32* nocapture noundef readonly %Arowoffsets, i64 noundef %row_end, double* nocapture noundef readonly %Acoefs, double* nocapture noundef readonly %xcoefs, i32* nocapture noundef readonly %Acols, double* nocapture noundef writeonly %ycoefs) #0 {
entry:
  %.omp.lb = alloca i32, align 4
  %.omp.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %rows_size.addr.sroa.0.0.extract.trunc = trunc i64 %rows_size to i32
  %cmp = icmp sgt i32 %rows_size.addr.sroa.0.0.extract.trunc, 0
  br i1 %cmp, label %omp.precond.then, label %omp.precond.end

omp.precond.then:                                 ; preds = %entry
  %0 = bitcast i32* %.omp.lb to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #2
  %1 = bitcast i32* %.omp.ub to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #2
  %conv5 = trunc i64 %.previous.lb. to i32
  %conv6 = trunc i64 %.previous.ub. to i32
  store i32 %conv5, i32* %.omp.lb, align 4, !tbaa !30
  store i32 %conv6, i32* %.omp.ub, align 4, !tbaa !30
  %2 = bitcast i32* %.omp.stride to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #2
  store i32 1, i32* %.omp.stride, align 4, !tbaa !30
  %3 = bitcast i32* %.omp.is_last to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #2
  store i32 0, i32* %.omp.is_last, align 4, !tbaa !30
  %4 = load i32, i32* %.global_tid., align 4, !tbaa !30
  call void @__kmpc_for_static_init_4(%struct.ident_t* nonnull @3, i32 %4, i32 33, i32* nonnull %.omp.is_last, i32* nonnull %.omp.lb, i32* nonnull %.omp.ub, i32* nonnull %.omp.stride, i32 1, i32 1)
  %5 = load i32, i32* %.omp.lb, align 4, !tbaa !30
  %6 = load i32, i32* %.omp.stride, align 4
  %conv847 = sext i32 %5 to i64
  %cmp9.not48 = icmp ugt i64 %conv847, %.previous.ub.
  br i1 %cmp9.not48, label %omp.loop.exit, label %omp.inner.for.body

omp.inner.for.body:                               ; preds = %omp.precond.then, %for.cond.cleanup
  %conv850 = phi i64 [ %conv8, %for.cond.cleanup ], [ %conv847, %omp.precond.then ]
  %indvars = trunc i64 %conv850 to i32
  %arrayidx = getelementptr inbounds i32, i32* %Arowoffsets, i64 %conv850
  %7 = load i32, i32* %arrayidx, align 4, !tbaa !30
  %add10 = shl nsw i64 %conv850, 32
  %sext = add i64 %add10, 4294967296
  %idxprom11 = ashr exact i64 %sext, 32
  %arrayidx12 = getelementptr inbounds i32, i32* %Arowoffsets, i64 %idxprom11
  %8 = load i32, i32* %arrayidx12, align 4, !tbaa !30
  %cmp1344 = icmp sgt i32 %8, %7
  br i1 %cmp1344, label %for.body.preheader, label %for.cond.cleanup

for.body.preheader:                               ; preds = %omp.inner.for.body
  %9 = sub i32 %8, %7
  %10 = xor i32 %7, -1
  %11 = add i32 %8, %10
  %xtraiter = and i32 %9, 3
  %lcmp.mod.not = icmp eq i32 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.body.prol.loopexit, label %for.body.prol

for.body.prol:                                    ; preds = %for.body.preheader, %for.body.prol
  %i.046.prol = phi i32 [ %inc.prol, %for.body.prol ], [ %7, %for.body.preheader ]
  %sum.045.prol = phi double [ %add21.prol, %for.body.prol ], [ 0.000000e+00, %for.body.preheader ]
  %prol.iter = phi i32 [ %prol.iter.next, %for.body.prol ], [ 0, %for.body.preheader ]
  %idxprom14.prol = sext i32 %i.046.prol to i64
  %arrayidx15.prol = getelementptr inbounds double, double* %Acoefs, i64 %idxprom14.prol
  %12 = load double, double* %arrayidx15.prol, align 8, !tbaa !40
  %arrayidx17.prol = getelementptr inbounds i32, i32* %Acols, i64 %idxprom14.prol
  %13 = load i32, i32* %arrayidx17.prol, align 4, !tbaa !30
  %idxprom18.prol = sext i32 %13 to i64
  %arrayidx19.prol = getelementptr inbounds double, double* %xcoefs, i64 %idxprom18.prol
  %14 = load double, double* %arrayidx19.prol, align 8, !tbaa !40
  %mul20.prol = fmul contract double %12, %14
  %add21.prol = fadd contract double %sum.045.prol, %mul20.prol
  %inc.prol = add nsw i32 %i.046.prol, 1
  %prol.iter.next = add i32 %prol.iter, 1
  %prol.iter.cmp.not = icmp eq i32 %prol.iter.next, %xtraiter
  br i1 %prol.iter.cmp.not, label %for.body.prol.loopexit, label %for.body.prol, !llvm.loop !95

for.body.prol.loopexit:                           ; preds = %for.body.prol, %for.body.preheader
  %add21.lcssa.unr = phi double [ undef, %for.body.preheader ], [ %add21.prol, %for.body.prol ]
  %i.046.unr = phi i32 [ %7, %for.body.preheader ], [ %inc.prol, %for.body.prol ]
  %sum.045.unr = phi double [ 0.000000e+00, %for.body.preheader ], [ %add21.prol, %for.body.prol ]
  %15 = icmp ult i32 %11, 3
  br i1 %15, label %for.cond.cleanup, label %for.body

for.cond.cleanup:                                 ; preds = %for.body.prol.loopexit, %for.body, %omp.inner.for.body
  %sum.0.lcssa = phi double [ 0.000000e+00, %omp.inner.for.body ], [ %add21.lcssa.unr, %for.body.prol.loopexit ], [ %add21.3, %for.body ]
  %arrayidx23 = getelementptr inbounds double, double* %ycoefs, i64 %conv850
  store double %sum.0.lcssa, double* %arrayidx23, align 8, !tbaa !40
  %add24 = add nsw i32 %6, %indvars
  %conv8 = sext i32 %add24 to i64
  %cmp9.not = icmp ugt i64 %conv8, %.previous.ub.
  br i1 %cmp9.not, label %omp.loop.exit, label %omp.inner.for.body

for.body:                                         ; preds = %for.body.prol.loopexit, %for.body
  %i.046 = phi i32 [ %inc.3, %for.body ], [ %i.046.unr, %for.body.prol.loopexit ]
  %sum.045 = phi double [ %add21.3, %for.body ], [ %sum.045.unr, %for.body.prol.loopexit ]
  %idxprom14 = sext i32 %i.046 to i64
  %arrayidx15 = getelementptr inbounds double, double* %Acoefs, i64 %idxprom14
  %16 = load double, double* %arrayidx15, align 8, !tbaa !40
  %arrayidx17 = getelementptr inbounds i32, i32* %Acols, i64 %idxprom14
  %17 = load i32, i32* %arrayidx17, align 4, !tbaa !30
  %idxprom18 = sext i32 %17 to i64
  %arrayidx19 = getelementptr inbounds double, double* %xcoefs, i64 %idxprom18
  %18 = load double, double* %arrayidx19, align 8, !tbaa !40
  %mul20 = fmul contract double %16, %18
  %add21 = fadd contract double %sum.045, %mul20
  %inc = add nsw i32 %i.046, 1
  %idxprom14.1 = sext i32 %inc to i64
  %arrayidx15.1 = getelementptr inbounds double, double* %Acoefs, i64 %idxprom14.1
  %19 = load double, double* %arrayidx15.1, align 8, !tbaa !40
  %arrayidx17.1 = getelementptr inbounds i32, i32* %Acols, i64 %idxprom14.1
  %20 = load i32, i32* %arrayidx17.1, align 4, !tbaa !30
  %idxprom18.1 = sext i32 %20 to i64
  %arrayidx19.1 = getelementptr inbounds double, double* %xcoefs, i64 %idxprom18.1
  %21 = load double, double* %arrayidx19.1, align 8, !tbaa !40
  %mul20.1 = fmul contract double %19, %21
  %add21.1 = fadd contract double %add21, %mul20.1
  %inc.1 = add nsw i32 %i.046, 2
  %idxprom14.2 = sext i32 %inc.1 to i64
  %arrayidx15.2 = getelementptr inbounds double, double* %Acoefs, i64 %idxprom14.2
  %22 = load double, double* %arrayidx15.2, align 8, !tbaa !40
  %arrayidx17.2 = getelementptr inbounds i32, i32* %Acols, i64 %idxprom14.2
  %23 = load i32, i32* %arrayidx17.2, align 4, !tbaa !30
  %idxprom18.2 = sext i32 %23 to i64
  %arrayidx19.2 = getelementptr inbounds double, double* %xcoefs, i64 %idxprom18.2
  %24 = load double, double* %arrayidx19.2, align 8, !tbaa !40
  %mul20.2 = fmul contract double %22, %24
  %add21.2 = fadd contract double %add21.1, %mul20.2
  %inc.2 = add nsw i32 %i.046, 3
  %idxprom14.3 = sext i32 %inc.2 to i64
  %arrayidx15.3 = getelementptr inbounds double, double* %Acoefs, i64 %idxprom14.3
  %25 = load double, double* %arrayidx15.3, align 8, !tbaa !40
  %arrayidx17.3 = getelementptr inbounds i32, i32* %Acols, i64 %idxprom14.3
  %26 = load i32, i32* %arrayidx17.3, align 4, !tbaa !30
  %idxprom18.3 = sext i32 %26 to i64
  %arrayidx19.3 = getelementptr inbounds double, double* %xcoefs, i64 %idxprom18.3
  %27 = load double, double* %arrayidx19.3, align 8, !tbaa !40
  %mul20.3 = fmul contract double %25, %27
  %add21.3 = fadd contract double %add21.2, %mul20.3
  %inc.3 = add nsw i32 %i.046, 4
  %exitcond.not.3 = icmp eq i32 %inc.3, %8
  br i1 %exitcond.not.3, label %for.cond.cleanup, label %for.body, !llvm.loop !97

omp.loop.exit:                                    ; preds = %for.cond.cleanup, %omp.precond.then
  call void @__kmpc_distribute_static_fini(%struct.ident_t* nonnull @2, i32 %4)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #2
  br label %omp.precond.end

omp.precond.end:                                  ; preds = %omp.loop.exit, %entry
  ret void
}

; Function Attrs: cold convergent mustprogress noinline nounwind optsize
define weak protected { double, double } @__muldc3(double noundef %__a, double noundef %__b, double noundef %__c, double noundef %__d) local_unnamed_addr #8 {
entry:
  %mul = fmul contract double %__a, %__c
  %mul1 = fmul contract double %__b, %__d
  %mul2 = fmul contract double %__a, %__d
  %mul3 = fmul contract double %__b, %__c
  %sub = fsub contract double %mul, %mul1
  %add = fadd contract double %mul3, %mul2
  %call = tail call i32 @__nv_isnand(double noundef %sub) #10
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end106, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %call6 = tail call i32 @__nv_isnand(double noundef %add) #10
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %if.end106, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %call8 = tail call i32 @__nv_isinfd(double noundef %__a) #10
  %tobool9.not = icmp eq i32 %call8, 0
  br i1 %tobool9.not, label %lor.lhs.false, label %if.then12

lor.lhs.false:                                    ; preds = %if.then
  %call10 = tail call i32 @__nv_isinfd(double noundef %__b) #10
  %tobool11.not = icmp eq i32 %call10, 0
  br i1 %tobool11.not, label %if.end30, label %if.then12

if.then12:                                        ; preds = %lor.lhs.false, %if.then
  %call13 = tail call i32 @__nv_isinfd(double noundef %__a) #10
  %tobool14.not = icmp ne i32 %call13, 0
  %conv = uitofp i1 %tobool14.not to double
  %call15 = tail call contract double @__nv_copysign(double noundef %conv, double noundef %__a) #10
  %call16 = tail call i32 @__nv_isinfd(double noundef %__b) #10
  %tobool17.not = icmp ne i32 %call16, 0
  %conv19 = uitofp i1 %tobool17.not to double
  %call20 = tail call contract double @__nv_copysign(double noundef %conv19, double noundef %__b) #10
  %call21 = tail call i32 @__nv_isnand(double noundef %__c) #10
  %tobool22.not = icmp eq i32 %call21, 0
  br i1 %tobool22.not, label %if.end, label %if.then23

if.then23:                                        ; preds = %if.then12
  %call24 = tail call contract double @__nv_copysign(double noundef 0.000000e+00, double noundef %__c) #10
  br label %if.end

if.end:                                           ; preds = %if.then23, %if.then12
  %__c.addr.0 = phi double [ %call24, %if.then23 ], [ %__c, %if.then12 ]
  %call25 = tail call i32 @__nv_isnand(double noundef %__d) #10
  %tobool26.not = icmp eq i32 %call25, 0
  br i1 %tobool26.not, label %if.end30, label %if.then27

if.then27:                                        ; preds = %if.end
  %call28 = tail call contract double @__nv_copysign(double noundef 0.000000e+00, double noundef %__d) #10
  br label %if.end30

if.end30:                                         ; preds = %if.end, %if.then27, %lor.lhs.false
  %__d.addr.1 = phi double [ %__d, %lor.lhs.false ], [ %call28, %if.then27 ], [ %__d, %if.end ]
  %__c.addr.1 = phi double [ %__c, %lor.lhs.false ], [ %__c.addr.0, %if.then27 ], [ %__c.addr.0, %if.end ]
  %__b.addr.0 = phi double [ %__b, %lor.lhs.false ], [ %call20, %if.then27 ], [ %call20, %if.end ]
  %__a.addr.0 = phi double [ %__a, %lor.lhs.false ], [ %call15, %if.then27 ], [ %call15, %if.end ]
  %__recalc.0 = phi i32 [ 0, %lor.lhs.false ], [ 1, %if.then27 ], [ 1, %if.end ]
  %call31 = tail call i32 @__nv_isinfd(double noundef %__c.addr.1) #10
  %tobool32.not = icmp eq i32 %call31, 0
  br i1 %tobool32.not, label %lor.lhs.false33, label %if.then36

lor.lhs.false33:                                  ; preds = %if.end30
  %call34 = tail call i32 @__nv_isinfd(double noundef %__d.addr.1) #10
  %tobool35.not = icmp eq i32 %call34, 0
  br i1 %tobool35.not, label %if.end57, label %if.then36

if.then36:                                        ; preds = %lor.lhs.false33, %if.end30
  %call37 = tail call i32 @__nv_isinfd(double noundef %__c.addr.1) #10
  %tobool38.not = icmp ne i32 %call37, 0
  %conv40 = uitofp i1 %tobool38.not to double
  %call41 = tail call contract double @__nv_copysign(double noundef %conv40, double noundef %__c.addr.1) #10
  %call42 = tail call i32 @__nv_isinfd(double noundef %__d.addr.1) #10
  %tobool43.not = icmp ne i32 %call42, 0
  %conv45 = uitofp i1 %tobool43.not to double
  %call46 = tail call contract double @__nv_copysign(double noundef %conv45, double noundef %__d.addr.1) #10
  %call47 = tail call i32 @__nv_isnand(double noundef %__a.addr.0) #10
  %tobool48.not = icmp eq i32 %call47, 0
  br i1 %tobool48.not, label %if.end51, label %if.then49

if.then49:                                        ; preds = %if.then36
  %call50 = tail call contract double @__nv_copysign(double noundef 0.000000e+00, double noundef %__a.addr.0) #10
  br label %if.end51

if.end51:                                         ; preds = %if.then49, %if.then36
  %__a.addr.1 = phi double [ %call50, %if.then49 ], [ %__a.addr.0, %if.then36 ]
  %call52 = tail call i32 @__nv_isnand(double noundef %__b.addr.0) #10
  %tobool53.not = icmp eq i32 %call52, 0
  br i1 %tobool53.not, label %if.end57, label %if.then54

if.then54:                                        ; preds = %if.end51
  %call55 = tail call contract double @__nv_copysign(double noundef 0.000000e+00, double noundef %__b.addr.0) #10
  br label %if.end57

if.end57:                                         ; preds = %if.end51, %if.then54, %lor.lhs.false33
  %__d.addr.2 = phi double [ %__d.addr.1, %lor.lhs.false33 ], [ %call46, %if.then54 ], [ %call46, %if.end51 ]
  %__c.addr.2 = phi double [ %__c.addr.1, %lor.lhs.false33 ], [ %call41, %if.then54 ], [ %call41, %if.end51 ]
  %__b.addr.2 = phi double [ %__b.addr.0, %lor.lhs.false33 ], [ %call55, %if.then54 ], [ %__b.addr.0, %if.end51 ]
  %__a.addr.2 = phi double [ %__a.addr.0, %lor.lhs.false33 ], [ %__a.addr.1, %if.then54 ], [ %__a.addr.1, %if.end51 ]
  %__recalc.1 = phi i32 [ %__recalc.0, %lor.lhs.false33 ], [ 1, %if.then54 ], [ 1, %if.end51 ]
  %tobool58.not = icmp eq i32 %__recalc.1, 0
  br i1 %tobool58.not, label %land.lhs.true59, label %if.end92

land.lhs.true59:                                  ; preds = %if.end57
  %call60 = tail call i32 @__nv_isinfd(double noundef %mul) #10
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %lor.lhs.false62, label %if.then71

lor.lhs.false62:                                  ; preds = %land.lhs.true59
  %call63 = tail call i32 @__nv_isinfd(double noundef %mul1) #10
  %tobool64.not = icmp eq i32 %call63, 0
  br i1 %tobool64.not, label %lor.lhs.false65, label %if.then71

lor.lhs.false65:                                  ; preds = %lor.lhs.false62
  %call66 = tail call i32 @__nv_isinfd(double noundef %mul2) #10
  %tobool67.not = icmp eq i32 %call66, 0
  br i1 %tobool67.not, label %lor.lhs.false68, label %if.then71

lor.lhs.false68:                                  ; preds = %lor.lhs.false65
  %call69 = tail call i32 @__nv_isinfd(double noundef %mul3) #10
  %tobool70.not = icmp eq i32 %call69, 0
  br i1 %tobool70.not, label %if.end92, label %if.then71

if.then71:                                        ; preds = %lor.lhs.false68, %lor.lhs.false65, %lor.lhs.false62, %land.lhs.true59
  %call72 = tail call i32 @__nv_isnand(double noundef %__a.addr.2) #10
  %tobool73.not = icmp eq i32 %call72, 0
  br i1 %tobool73.not, label %if.end76, label %if.then74

if.then74:                                        ; preds = %if.then71
  %call75 = tail call contract double @__nv_copysign(double noundef 0.000000e+00, double noundef %__a.addr.2) #10
  br label %if.end76

if.end76:                                         ; preds = %if.then74, %if.then71
  %__a.addr.3 = phi double [ %call75, %if.then74 ], [ %__a.addr.2, %if.then71 ]
  %call77 = tail call i32 @__nv_isnand(double noundef %__b.addr.2) #10
  %tobool78.not = icmp eq i32 %call77, 0
  br i1 %tobool78.not, label %if.end81, label %if.then79

if.then79:                                        ; preds = %if.end76
  %call80 = tail call contract double @__nv_copysign(double noundef 0.000000e+00, double noundef %__b.addr.2) #10
  br label %if.end81

if.end81:                                         ; preds = %if.then79, %if.end76
  %__b.addr.3 = phi double [ %call80, %if.then79 ], [ %__b.addr.2, %if.end76 ]
  %call82 = tail call i32 @__nv_isnand(double noundef %__c.addr.2) #10
  %tobool83.not = icmp eq i32 %call82, 0
  br i1 %tobool83.not, label %if.end86, label %if.then84

if.then84:                                        ; preds = %if.end81
  %call85 = tail call contract double @__nv_copysign(double noundef 0.000000e+00, double noundef %__c.addr.2) #10
  br label %if.end86

if.end86:                                         ; preds = %if.then84, %if.end81
  %__c.addr.3 = phi double [ %call85, %if.then84 ], [ %__c.addr.2, %if.end81 ]
  %call87 = tail call i32 @__nv_isnand(double noundef %__d.addr.2) #10
  %tobool88.not = icmp eq i32 %call87, 0
  br i1 %tobool88.not, label %if.end92, label %if.then89

if.then89:                                        ; preds = %if.end86
  %call90 = tail call contract double @__nv_copysign(double noundef 0.000000e+00, double noundef %__d.addr.2) #10
  br label %if.end92

if.end92:                                         ; preds = %if.end86, %if.then89, %lor.lhs.false68, %if.end57
  %__d.addr.4 = phi double [ %__d.addr.2, %if.end57 ], [ %__d.addr.2, %lor.lhs.false68 ], [ %call90, %if.then89 ], [ %__d.addr.2, %if.end86 ]
  %__c.addr.4 = phi double [ %__c.addr.2, %if.end57 ], [ %__c.addr.2, %lor.lhs.false68 ], [ %__c.addr.3, %if.then89 ], [ %__c.addr.3, %if.end86 ]
  %__b.addr.4 = phi double [ %__b.addr.2, %if.end57 ], [ %__b.addr.2, %lor.lhs.false68 ], [ %__b.addr.3, %if.then89 ], [ %__b.addr.3, %if.end86 ]
  %__a.addr.4 = phi double [ %__a.addr.2, %if.end57 ], [ %__a.addr.2, %lor.lhs.false68 ], [ %__a.addr.3, %if.then89 ], [ %__a.addr.3, %if.end86 ]
  %tobool93.not = phi i1 [ false, %if.end57 ], [ true, %lor.lhs.false68 ], [ false, %if.then89 ], [ false, %if.end86 ]
  br i1 %tobool93.not, label %if.end106, label %if.then94

if.then94:                                        ; preds = %if.end92
  %mul95 = fmul contract double %__c.addr.4, %__a.addr.4
  %mul96 = fmul contract double %__d.addr.4, %__b.addr.4
  %sub97 = fsub contract double %mul95, %mul96
  %mul98 = fmul contract double %sub97, 0x7FF0000000000000
  %mul100 = fmul contract double %__d.addr.4, %__a.addr.4
  %mul101 = fmul contract double %__c.addr.4, %__b.addr.4
  %add102 = fadd contract double %mul101, %mul100
  %mul103 = fmul contract double %add102, 0x7FF0000000000000
  br label %if.end106

if.end106:                                        ; preds = %if.end92, %if.then94, %land.lhs.true, %entry
  %z.sroa.6.1 = phi double [ %add, %land.lhs.true ], [ %add, %entry ], [ %mul103, %if.then94 ], [ %add, %if.end92 ]
  %z.sroa.0.1 = phi double [ %sub, %land.lhs.true ], [ %sub, %entry ], [ %mul98, %if.then94 ], [ %sub, %if.end92 ]
  %.fca.0.insert = insertvalue { double, double } poison, double %z.sroa.0.1, 0
  %.fca.1.insert = insertvalue { double, double } %.fca.0.insert, double %z.sroa.6.1, 1
  ret { double, double } %.fca.1.insert
}

; Function Attrs: convergent
declare i32 @__nv_isnand(double noundef) local_unnamed_addr #9

; Function Attrs: convergent
declare i32 @__nv_isinfd(double noundef) local_unnamed_addr #9

; Function Attrs: convergent
declare double @__nv_copysign(double noundef, double noundef) local_unnamed_addr #9

; Function Attrs: cold convergent mustprogress noinline nounwind optsize
define weak protected { float, float } @__mulsc3(float noundef %__a, float noundef %__b, float noundef %__c, float noundef %__d) local_unnamed_addr #8 {
entry:
  %mul = fmul contract float %__a, %__c
  %mul1 = fmul contract float %__b, %__d
  %mul2 = fmul contract float %__a, %__d
  %mul3 = fmul contract float %__b, %__c
  %sub = fsub contract float %mul, %mul1
  %add = fadd contract float %mul3, %mul2
  %call = tail call i32 @__nv_isnanf(float noundef %sub) #10
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end106, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %call6 = tail call i32 @__nv_isnanf(float noundef %add) #10
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %if.end106, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %call8 = tail call i32 @__nv_isinff(float noundef %__a) #10
  %tobool9.not = icmp eq i32 %call8, 0
  br i1 %tobool9.not, label %lor.lhs.false, label %if.then12

lor.lhs.false:                                    ; preds = %if.then
  %call10 = tail call i32 @__nv_isinff(float noundef %__b) #10
  %tobool11.not = icmp eq i32 %call10, 0
  br i1 %tobool11.not, label %if.end30, label %if.then12

if.then12:                                        ; preds = %lor.lhs.false, %if.then
  %call13 = tail call i32 @__nv_isinff(float noundef %__a) #10
  %tobool14.not = icmp ne i32 %call13, 0
  %conv = uitofp i1 %tobool14.not to float
  %call15 = tail call contract float @__nv_copysignf(float noundef %conv, float noundef %__a) #10
  %call16 = tail call i32 @__nv_isinff(float noundef %__b) #10
  %tobool17.not = icmp ne i32 %call16, 0
  %conv19 = uitofp i1 %tobool17.not to float
  %call20 = tail call contract float @__nv_copysignf(float noundef %conv19, float noundef %__b) #10
  %call21 = tail call i32 @__nv_isnanf(float noundef %__c) #10
  %tobool22.not = icmp eq i32 %call21, 0
  br i1 %tobool22.not, label %if.end, label %if.then23

if.then23:                                        ; preds = %if.then12
  %call24 = tail call contract float @__nv_copysignf(float noundef 0.000000e+00, float noundef %__c) #10
  br label %if.end

if.end:                                           ; preds = %if.then23, %if.then12
  %__c.addr.0 = phi float [ %call24, %if.then23 ], [ %__c, %if.then12 ]
  %call25 = tail call i32 @__nv_isnanf(float noundef %__d) #10
  %tobool26.not = icmp eq i32 %call25, 0
  br i1 %tobool26.not, label %if.end30, label %if.then27

if.then27:                                        ; preds = %if.end
  %call28 = tail call contract float @__nv_copysignf(float noundef 0.000000e+00, float noundef %__d) #10
  br label %if.end30

if.end30:                                         ; preds = %if.end, %if.then27, %lor.lhs.false
  %__d.addr.1 = phi float [ %__d, %lor.lhs.false ], [ %call28, %if.then27 ], [ %__d, %if.end ]
  %__c.addr.1 = phi float [ %__c, %lor.lhs.false ], [ %__c.addr.0, %if.then27 ], [ %__c.addr.0, %if.end ]
  %__b.addr.0 = phi float [ %__b, %lor.lhs.false ], [ %call20, %if.then27 ], [ %call20, %if.end ]
  %__a.addr.0 = phi float [ %__a, %lor.lhs.false ], [ %call15, %if.then27 ], [ %call15, %if.end ]
  %__recalc.0 = phi i32 [ 0, %lor.lhs.false ], [ 1, %if.then27 ], [ 1, %if.end ]
  %call31 = tail call i32 @__nv_isinff(float noundef %__c.addr.1) #10
  %tobool32.not = icmp eq i32 %call31, 0
  br i1 %tobool32.not, label %lor.lhs.false33, label %if.then36

lor.lhs.false33:                                  ; preds = %if.end30
  %call34 = tail call i32 @__nv_isinff(float noundef %__d.addr.1) #10
  %tobool35.not = icmp eq i32 %call34, 0
  br i1 %tobool35.not, label %if.end57, label %if.then36

if.then36:                                        ; preds = %lor.lhs.false33, %if.end30
  %call37 = tail call i32 @__nv_isinff(float noundef %__c.addr.1) #10
  %tobool38.not = icmp ne i32 %call37, 0
  %conv40 = uitofp i1 %tobool38.not to float
  %call41 = tail call contract float @__nv_copysignf(float noundef %conv40, float noundef %__c.addr.1) #10
  %call42 = tail call i32 @__nv_isinff(float noundef %__d.addr.1) #10
  %tobool43.not = icmp ne i32 %call42, 0
  %conv45 = uitofp i1 %tobool43.not to float
  %call46 = tail call contract float @__nv_copysignf(float noundef %conv45, float noundef %__d.addr.1) #10
  %call47 = tail call i32 @__nv_isnanf(float noundef %__a.addr.0) #10
  %tobool48.not = icmp eq i32 %call47, 0
  br i1 %tobool48.not, label %if.end51, label %if.then49

if.then49:                                        ; preds = %if.then36
  %call50 = tail call contract float @__nv_copysignf(float noundef 0.000000e+00, float noundef %__a.addr.0) #10
  br label %if.end51

if.end51:                                         ; preds = %if.then49, %if.then36
  %__a.addr.1 = phi float [ %call50, %if.then49 ], [ %__a.addr.0, %if.then36 ]
  %call52 = tail call i32 @__nv_isnanf(float noundef %__b.addr.0) #10
  %tobool53.not = icmp eq i32 %call52, 0
  br i1 %tobool53.not, label %if.end57, label %if.then54

if.then54:                                        ; preds = %if.end51
  %call55 = tail call contract float @__nv_copysignf(float noundef 0.000000e+00, float noundef %__b.addr.0) #10
  br label %if.end57

if.end57:                                         ; preds = %if.end51, %if.then54, %lor.lhs.false33
  %__d.addr.2 = phi float [ %__d.addr.1, %lor.lhs.false33 ], [ %call46, %if.then54 ], [ %call46, %if.end51 ]
  %__c.addr.2 = phi float [ %__c.addr.1, %lor.lhs.false33 ], [ %call41, %if.then54 ], [ %call41, %if.end51 ]
  %__b.addr.2 = phi float [ %__b.addr.0, %lor.lhs.false33 ], [ %call55, %if.then54 ], [ %__b.addr.0, %if.end51 ]
  %__a.addr.2 = phi float [ %__a.addr.0, %lor.lhs.false33 ], [ %__a.addr.1, %if.then54 ], [ %__a.addr.1, %if.end51 ]
  %__recalc.1 = phi i32 [ %__recalc.0, %lor.lhs.false33 ], [ 1, %if.then54 ], [ 1, %if.end51 ]
  %tobool58.not = icmp eq i32 %__recalc.1, 0
  br i1 %tobool58.not, label %land.lhs.true59, label %if.end92

land.lhs.true59:                                  ; preds = %if.end57
  %call60 = tail call i32 @__nv_isinff(float noundef %mul) #10
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %lor.lhs.false62, label %if.then71

lor.lhs.false62:                                  ; preds = %land.lhs.true59
  %call63 = tail call i32 @__nv_isinff(float noundef %mul1) #10
  %tobool64.not = icmp eq i32 %call63, 0
  br i1 %tobool64.not, label %lor.lhs.false65, label %if.then71

lor.lhs.false65:                                  ; preds = %lor.lhs.false62
  %call66 = tail call i32 @__nv_isinff(float noundef %mul2) #10
  %tobool67.not = icmp eq i32 %call66, 0
  br i1 %tobool67.not, label %lor.lhs.false68, label %if.then71

lor.lhs.false68:                                  ; preds = %lor.lhs.false65
  %call69 = tail call i32 @__nv_isinff(float noundef %mul3) #10
  %tobool70.not = icmp eq i32 %call69, 0
  br i1 %tobool70.not, label %if.end92, label %if.then71

if.then71:                                        ; preds = %lor.lhs.false68, %lor.lhs.false65, %lor.lhs.false62, %land.lhs.true59
  %call72 = tail call i32 @__nv_isnanf(float noundef %__a.addr.2) #10
  %tobool73.not = icmp eq i32 %call72, 0
  br i1 %tobool73.not, label %if.end76, label %if.then74

if.then74:                                        ; preds = %if.then71
  %call75 = tail call contract float @__nv_copysignf(float noundef 0.000000e+00, float noundef %__a.addr.2) #10
  br label %if.end76

if.end76:                                         ; preds = %if.then74, %if.then71
  %__a.addr.3 = phi float [ %call75, %if.then74 ], [ %__a.addr.2, %if.then71 ]
  %call77 = tail call i32 @__nv_isnanf(float noundef %__b.addr.2) #10
  %tobool78.not = icmp eq i32 %call77, 0
  br i1 %tobool78.not, label %if.end81, label %if.then79

if.then79:                                        ; preds = %if.end76
  %call80 = tail call contract float @__nv_copysignf(float noundef 0.000000e+00, float noundef %__b.addr.2) #10
  br label %if.end81

if.end81:                                         ; preds = %if.then79, %if.end76
  %__b.addr.3 = phi float [ %call80, %if.then79 ], [ %__b.addr.2, %if.end76 ]
  %call82 = tail call i32 @__nv_isnanf(float noundef %__c.addr.2) #10
  %tobool83.not = icmp eq i32 %call82, 0
  br i1 %tobool83.not, label %if.end86, label %if.then84

if.then84:                                        ; preds = %if.end81
  %call85 = tail call contract float @__nv_copysignf(float noundef 0.000000e+00, float noundef %__c.addr.2) #10
  br label %if.end86

if.end86:                                         ; preds = %if.then84, %if.end81
  %__c.addr.3 = phi float [ %call85, %if.then84 ], [ %__c.addr.2, %if.end81 ]
  %call87 = tail call i32 @__nv_isnanf(float noundef %__d.addr.2) #10
  %tobool88.not = icmp eq i32 %call87, 0
  br i1 %tobool88.not, label %if.end92, label %if.then89

if.then89:                                        ; preds = %if.end86
  %call90 = tail call contract float @__nv_copysignf(float noundef 0.000000e+00, float noundef %__d.addr.2) #10
  br label %if.end92

if.end92:                                         ; preds = %if.end86, %if.then89, %lor.lhs.false68, %if.end57
  %__d.addr.4 = phi float [ %__d.addr.2, %if.end57 ], [ %__d.addr.2, %lor.lhs.false68 ], [ %call90, %if.then89 ], [ %__d.addr.2, %if.end86 ]
  %__c.addr.4 = phi float [ %__c.addr.2, %if.end57 ], [ %__c.addr.2, %lor.lhs.false68 ], [ %__c.addr.3, %if.then89 ], [ %__c.addr.3, %if.end86 ]
  %__b.addr.4 = phi float [ %__b.addr.2, %if.end57 ], [ %__b.addr.2, %lor.lhs.false68 ], [ %__b.addr.3, %if.then89 ], [ %__b.addr.3, %if.end86 ]
  %__a.addr.4 = phi float [ %__a.addr.2, %if.end57 ], [ %__a.addr.2, %lor.lhs.false68 ], [ %__a.addr.3, %if.then89 ], [ %__a.addr.3, %if.end86 ]
  %tobool93.not = phi i1 [ false, %if.end57 ], [ true, %lor.lhs.false68 ], [ false, %if.then89 ], [ false, %if.end86 ]
  br i1 %tobool93.not, label %if.end106, label %if.then94

if.then94:                                        ; preds = %if.end92
  %mul95 = fmul contract float %__c.addr.4, %__a.addr.4
  %mul96 = fmul contract float %__d.addr.4, %__b.addr.4
  %sub97 = fsub contract float %mul95, %mul96
  %mul98 = fmul contract float %sub97, 0x7FF0000000000000
  %mul100 = fmul contract float %__d.addr.4, %__a.addr.4
  %mul101 = fmul contract float %__c.addr.4, %__b.addr.4
  %add102 = fadd contract float %mul101, %mul100
  %mul103 = fmul contract float %add102, 0x7FF0000000000000
  br label %if.end106

if.end106:                                        ; preds = %if.end92, %if.then94, %land.lhs.true, %entry
  %z.sroa.6.1 = phi float [ %add, %land.lhs.true ], [ %add, %entry ], [ %mul103, %if.then94 ], [ %add, %if.end92 ]
  %z.sroa.0.1 = phi float [ %sub, %land.lhs.true ], [ %sub, %entry ], [ %mul98, %if.then94 ], [ %sub, %if.end92 ]
  %.fca.0.insert = insertvalue { float, float } poison, float %z.sroa.0.1, 0
  %.fca.1.insert = insertvalue { float, float } %.fca.0.insert, float %z.sroa.6.1, 1
  ret { float, float } %.fca.1.insert
}

; Function Attrs: convergent
declare i32 @__nv_isnanf(float noundef) local_unnamed_addr #9

; Function Attrs: convergent
declare i32 @__nv_isinff(float noundef) local_unnamed_addr #9

; Function Attrs: convergent
declare float @__nv_copysignf(float noundef, float noundef) local_unnamed_addr #9

; Function Attrs: cold convergent mustprogress noinline nounwind optsize
define weak protected { double, double } @__divdc3(double noundef %__a, double noundef %__b, double noundef %__c, double noundef %__d) local_unnamed_addr #8 {
entry:
  %call = tail call contract double @__nv_fabs(double noundef %__c) #10
  %call1 = tail call contract double @__nv_fabs(double noundef %__d) #10
  %call2 = tail call contract double @__nv_fmax(double noundef %call, double noundef %call1) #10
  %call3 = tail call contract double @__nv_logb(double noundef %call2) #10
  %call4 = tail call i32 @__nv_isfinited(double noundef %call3) #10
  %tobool.not = icmp eq i32 %call4, 0
  %conv = fptosi double %call3 to i32
  %sub = sub nsw i32 0, %conv
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call5 = tail call contract double @__nv_scalbn(double noundef %__c, i32 noundef %sub) #10
  %call7 = tail call contract double @__nv_scalbn(double noundef %__d, i32 noundef %sub) #10
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %__c.addr.0 = phi double [ %call5, %if.then ], [ %__c, %entry ]
  %__d.addr.0 = phi double [ %call7, %if.then ], [ %__d, %entry ]
  %__ilogbw.0 = phi i32 [ %conv, %if.then ], [ 0, %entry ]
  %mul = fmul contract double %__c.addr.0, %__c.addr.0
  %mul8 = fmul contract double %__d.addr.0, %__d.addr.0
  %add = fadd contract double %mul, %mul8
  %mul9 = fmul contract double %__c.addr.0, %__a
  %mul10 = fmul contract double %__d.addr.0, %__b
  %add11 = fadd contract double %mul9, %mul10
  %div = fdiv contract double %add11, %add
  %sub12 = sub nsw i32 0, %__ilogbw.0
  %call13 = tail call contract double @__nv_scalbn(double noundef %div, i32 noundef %sub12) #10
  %mul14 = fmul contract double %__c.addr.0, %__b
  %mul15 = fmul contract double %__d.addr.0, %__a
  %sub16 = fsub contract double %mul14, %mul15
  %div17 = fdiv contract double %sub16, %add
  %call19 = tail call contract double @__nv_scalbn(double noundef %div17, i32 noundef %sub12) #10
  %call21 = tail call i32 @__nv_isnand(double noundef %call13) #10
  %tobool22.not = icmp eq i32 %call21, 0
  br i1 %tobool22.not, label %if.end101, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end
  %call24 = tail call i32 @__nv_isnand(double noundef %call19) #10
  %tobool25.not = icmp eq i32 %call24, 0
  br i1 %tobool25.not, label %if.end101, label %if.then26

if.then26:                                        ; preds = %land.lhs.true
  %cmp = fcmp contract oeq double %add, 0.000000e+00
  br i1 %cmp, label %land.lhs.true27, label %if.else

land.lhs.true27:                                  ; preds = %if.then26
  %call28 = tail call i32 @__nv_isnand(double noundef %__a) #10
  %tobool29.not = icmp eq i32 %call28, 0
  br i1 %tobool29.not, label %if.then32, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true27
  %call30 = tail call i32 @__nv_isnand(double noundef %__b) #10
  %tobool31.not = icmp eq i32 %call30, 0
  br i1 %tobool31.not, label %if.then32, label %if.else

if.then32:                                        ; preds = %lor.lhs.false, %land.lhs.true27
  %call33 = tail call contract double @__nv_copysign(double noundef 0x7FF0000000000000, double noundef %__c.addr.0) #10
  %mul34 = fmul contract double %call33, %__a
  %call36 = tail call contract double @__nv_copysign(double noundef 0x7FF0000000000000, double noundef %__c.addr.0) #10
  %mul37 = fmul contract double %call36, %__b
  br label %if.end101

if.else:                                          ; preds = %lor.lhs.false, %if.then26
  %call39 = tail call i32 @__nv_isinfd(double noundef %__a) #10
  %tobool40.not = icmp eq i32 %call39, 0
  br i1 %tobool40.not, label %lor.lhs.false41, label %land.lhs.true44

lor.lhs.false41:                                  ; preds = %if.else
  %call42 = tail call i32 @__nv_isinfd(double noundef %__b) #10
  %tobool43.not = icmp eq i32 %call42, 0
  br i1 %tobool43.not, label %if.else68, label %land.lhs.true44

land.lhs.true44:                                  ; preds = %lor.lhs.false41, %if.else
  %call45 = tail call i32 @__nv_isfinited(double noundef %__c.addr.0) #10
  %tobool46.not = icmp eq i32 %call45, 0
  br i1 %tobool46.not, label %if.else68, label %land.lhs.true47

land.lhs.true47:                                  ; preds = %land.lhs.true44
  %call48 = tail call i32 @__nv_isfinited(double noundef %__d.addr.0) #10
  %tobool49.not = icmp eq i32 %call48, 0
  br i1 %tobool49.not, label %if.else68, label %if.then50

if.then50:                                        ; preds = %land.lhs.true47
  %call51 = tail call i32 @__nv_isinfd(double noundef %__a) #10
  %tobool52.not = icmp eq i32 %call51, 0
  %cond = select contract i1 %tobool52.not, double 0.000000e+00, double 1.000000e+00
  %call53 = tail call contract double @__nv_copysign(double noundef %cond, double noundef %__a) #10
  %call54 = tail call i32 @__nv_isinfd(double noundef %__b) #10
  %tobool55.not = icmp eq i32 %call54, 0
  %cond56 = select contract i1 %tobool55.not, double 0.000000e+00, double 1.000000e+00
  %call57 = tail call contract double @__nv_copysign(double noundef %cond56, double noundef %__b) #10
  %mul58 = fmul contract double %__c.addr.0, %call53
  %mul59 = fmul contract double %__d.addr.0, %call57
  %add60 = fadd contract double %mul58, %mul59
  %mul61 = fmul contract double %add60, 0x7FF0000000000000
  %mul63 = fmul contract double %__c.addr.0, %call57
  %mul64 = fmul contract double %__d.addr.0, %call53
  %sub65 = fsub contract double %mul63, %mul64
  %mul66 = fmul contract double %sub65, 0x7FF0000000000000
  br label %if.end101

if.else68:                                        ; preds = %land.lhs.true47, %land.lhs.true44, %lor.lhs.false41
  %call69 = tail call i32 @__nv_isinfd(double noundef %call3) #10
  %tobool70 = icmp ne i32 %call69, 0
  %cmp72 = fcmp contract ogt double %call3, 0.000000e+00
  %or.cond = and i1 %cmp72, %tobool70
  br i1 %or.cond, label %land.lhs.true73, label %if.end101

land.lhs.true73:                                  ; preds = %if.else68
  %call74 = tail call i32 @__nv_isfinited(double noundef %__a) #10
  %tobool75.not = icmp eq i32 %call74, 0
  br i1 %tobool75.not, label %if.end101, label %land.lhs.true76

land.lhs.true76:                                  ; preds = %land.lhs.true73
  %call77 = tail call i32 @__nv_isfinited(double noundef %__b) #10
  %tobool78.not = icmp eq i32 %call77, 0
  br i1 %tobool78.not, label %if.end101, label %if.then79

if.then79:                                        ; preds = %land.lhs.true76
  %call80 = tail call i32 @__nv_isinfd(double noundef %__c.addr.0) #10
  %tobool81.not = icmp eq i32 %call80, 0
  %cond82 = select contract i1 %tobool81.not, double 0.000000e+00, double 1.000000e+00
  %call83 = tail call contract double @__nv_copysign(double noundef %cond82, double noundef %__c.addr.0) #10
  %call84 = tail call i32 @__nv_isinfd(double noundef %__d.addr.0) #10
  %tobool85.not = icmp eq i32 %call84, 0
  %cond86 = select contract i1 %tobool85.not, double 0.000000e+00, double 1.000000e+00
  %call87 = tail call contract double @__nv_copysign(double noundef %cond86, double noundef %__d.addr.0) #10
  %mul88 = fmul contract double %call83, %__a
  %mul89 = fmul contract double %call87, %__b
  %add90 = fadd contract double %mul88, %mul89
  %mul91 = fmul contract double %add90, 0.000000e+00
  %mul93 = fmul contract double %call83, %__b
  %mul94 = fmul contract double %call87, %__a
  %sub95 = fsub contract double %mul93, %mul94
  %mul96 = fmul contract double %sub95, 0.000000e+00
  br label %if.end101

if.end101:                                        ; preds = %if.then32, %if.else68, %land.lhs.true73, %land.lhs.true76, %if.then79, %if.then50, %land.lhs.true, %if.end
  %z.sroa.8.0 = phi double [ %mul66, %if.then50 ], [ %mul96, %if.then79 ], [ %call19, %land.lhs.true76 ], [ %call19, %land.lhs.true73 ], [ %call19, %if.else68 ], [ %mul37, %if.then32 ], [ %call19, %land.lhs.true ], [ %call19, %if.end ]
  %z.sroa.0.0 = phi double [ %mul61, %if.then50 ], [ %mul91, %if.then79 ], [ %call13, %land.lhs.true76 ], [ %call13, %land.lhs.true73 ], [ %call13, %if.else68 ], [ %mul34, %if.then32 ], [ %call13, %land.lhs.true ], [ %call13, %if.end ]
  %.fca.0.insert = insertvalue { double, double } poison, double %z.sroa.0.0, 0
  %.fca.1.insert = insertvalue { double, double } %.fca.0.insert, double %z.sroa.8.0, 1
  ret { double, double } %.fca.1.insert
}

; Function Attrs: convergent
declare double @__nv_logb(double noundef) local_unnamed_addr #9

; Function Attrs: convergent
declare double @__nv_fmax(double noundef, double noundef) local_unnamed_addr #9

; Function Attrs: convergent
declare double @__nv_fabs(double noundef) local_unnamed_addr #9

; Function Attrs: convergent
declare i32 @__nv_isfinited(double noundef) local_unnamed_addr #9

; Function Attrs: convergent
declare double @__nv_scalbn(double noundef, i32 noundef) local_unnamed_addr #9

; Function Attrs: cold convergent mustprogress noinline nounwind optsize
define weak protected { float, float } @__divsc3(float noundef %__a, float noundef %__b, float noundef %__c, float noundef %__d) local_unnamed_addr #8 {
entry:
  %call = tail call contract float @__nv_fabsf(float noundef %__c) #10
  %call1 = tail call contract float @__nv_fabsf(float noundef %__d) #10
  %call2 = tail call contract float @__nv_fmaxf(float noundef %call, float noundef %call1) #10
  %call3 = tail call contract float @__nv_logbf(float noundef %call2) #10
  %call4 = tail call i32 @__nv_finitef(float noundef %call3) #10
  %tobool.not = icmp eq i32 %call4, 0
  %conv = fptosi float %call3 to i32
  %sub = sub nsw i32 0, %conv
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call5 = tail call contract float @__nv_scalbnf(float noundef %__c, i32 noundef %sub) #10
  %call7 = tail call contract float @__nv_scalbnf(float noundef %__d, i32 noundef %sub) #10
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %__c.addr.0 = phi float [ %call5, %if.then ], [ %__c, %entry ]
  %__d.addr.0 = phi float [ %call7, %if.then ], [ %__d, %entry ]
  %__ilogbw.0 = phi i32 [ %conv, %if.then ], [ 0, %entry ]
  %mul = fmul contract float %__c.addr.0, %__c.addr.0
  %mul8 = fmul contract float %__d.addr.0, %__d.addr.0
  %add = fadd contract float %mul, %mul8
  %mul9 = fmul contract float %__c.addr.0, %__a
  %mul10 = fmul contract float %__d.addr.0, %__b
  %add11 = fadd contract float %mul9, %mul10
  %div = fdiv contract float %add11, %add
  %sub12 = sub nsw i32 0, %__ilogbw.0
  %call13 = tail call contract float @__nv_scalbnf(float noundef %div, i32 noundef %sub12) #10
  %mul14 = fmul contract float %__c.addr.0, %__b
  %mul15 = fmul contract float %__d.addr.0, %__a
  %sub16 = fsub contract float %mul14, %mul15
  %div17 = fdiv contract float %sub16, %add
  %call19 = tail call contract float @__nv_scalbnf(float noundef %div17, i32 noundef %sub12) #10
  %call21 = tail call i32 @__nv_isnanf(float noundef %call13) #10
  %tobool22.not = icmp eq i32 %call21, 0
  br i1 %tobool22.not, label %if.end105, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end
  %call24 = tail call i32 @__nv_isnanf(float noundef %call19) #10
  %tobool25.not = icmp eq i32 %call24, 0
  br i1 %tobool25.not, label %if.end105, label %if.then26

if.then26:                                        ; preds = %land.lhs.true
  %cmp = fcmp contract oeq float %add, 0.000000e+00
  br i1 %cmp, label %land.lhs.true27, label %if.else

land.lhs.true27:                                  ; preds = %if.then26
  %call28 = tail call i32 @__nv_isnanf(float noundef %__a) #10
  %tobool29.not = icmp eq i32 %call28, 0
  br i1 %tobool29.not, label %if.then32, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true27
  %call30 = tail call i32 @__nv_isnanf(float noundef %__b) #10
  %tobool31.not = icmp eq i32 %call30, 0
  br i1 %tobool31.not, label %if.then32, label %if.else

if.then32:                                        ; preds = %lor.lhs.false, %land.lhs.true27
  %call33 = tail call contract float @__nv_copysignf(float noundef 0x7FF0000000000000, float noundef %__c.addr.0) #10
  %mul34 = fmul contract float %call33, %__a
  %call36 = tail call contract float @__nv_copysignf(float noundef 0x7FF0000000000000, float noundef %__c.addr.0) #10
  %mul37 = fmul contract float %call36, %__b
  br label %if.end105

if.else:                                          ; preds = %lor.lhs.false, %if.then26
  %call39 = tail call i32 @__nv_isinff(float noundef %__a) #10
  %tobool40.not = icmp eq i32 %call39, 0
  br i1 %tobool40.not, label %lor.lhs.false41, label %land.lhs.true44

lor.lhs.false41:                                  ; preds = %if.else
  %call42 = tail call i32 @__nv_isinff(float noundef %__b) #10
  %tobool43.not = icmp eq i32 %call42, 0
  br i1 %tobool43.not, label %if.else70, label %land.lhs.true44

land.lhs.true44:                                  ; preds = %lor.lhs.false41, %if.else
  %call45 = tail call i32 @__nv_finitef(float noundef %__c.addr.0) #10
  %tobool46.not = icmp eq i32 %call45, 0
  br i1 %tobool46.not, label %if.else70, label %land.lhs.true47

land.lhs.true47:                                  ; preds = %land.lhs.true44
  %call48 = tail call i32 @__nv_finitef(float noundef %__d.addr.0) #10
  %tobool49.not = icmp eq i32 %call48, 0
  br i1 %tobool49.not, label %if.else70, label %if.then50

if.then50:                                        ; preds = %land.lhs.true47
  %call51 = tail call i32 @__nv_isinff(float noundef %__a) #10
  %tobool52.not = icmp ne i32 %call51, 0
  %conv53 = uitofp i1 %tobool52.not to float
  %call54 = tail call contract float @__nv_copysignf(float noundef %conv53, float noundef %__a) #10
  %call55 = tail call i32 @__nv_isinff(float noundef %__b) #10
  %tobool56.not = icmp ne i32 %call55, 0
  %conv58 = uitofp i1 %tobool56.not to float
  %call59 = tail call contract float @__nv_copysignf(float noundef %conv58, float noundef %__b) #10
  %mul60 = fmul contract float %__c.addr.0, %call54
  %mul61 = fmul contract float %__d.addr.0, %call59
  %add62 = fadd contract float %mul60, %mul61
  %mul63 = fmul contract float %add62, 0x7FF0000000000000
  %mul65 = fmul contract float %__c.addr.0, %call59
  %mul66 = fmul contract float %__d.addr.0, %call54
  %sub67 = fsub contract float %mul65, %mul66
  %mul68 = fmul contract float %sub67, 0x7FF0000000000000
  br label %if.end105

if.else70:                                        ; preds = %land.lhs.true47, %land.lhs.true44, %lor.lhs.false41
  %call71 = tail call i32 @__nv_isinff(float noundef %call3) #10
  %tobool72 = icmp ne i32 %call71, 0
  %cmp74 = fcmp contract ogt float %call3, 0.000000e+00
  %or.cond = and i1 %cmp74, %tobool72
  br i1 %or.cond, label %land.lhs.true75, label %if.end105

land.lhs.true75:                                  ; preds = %if.else70
  %call76 = tail call i32 @__nv_finitef(float noundef %__a) #10
  %tobool77.not = icmp eq i32 %call76, 0
  br i1 %tobool77.not, label %if.end105, label %land.lhs.true78

land.lhs.true78:                                  ; preds = %land.lhs.true75
  %call79 = tail call i32 @__nv_finitef(float noundef %__b) #10
  %tobool80.not = icmp eq i32 %call79, 0
  br i1 %tobool80.not, label %if.end105, label %if.then81

if.then81:                                        ; preds = %land.lhs.true78
  %call82 = tail call i32 @__nv_isinff(float noundef %__c.addr.0) #10
  %tobool83.not = icmp ne i32 %call82, 0
  %conv85 = uitofp i1 %tobool83.not to float
  %call86 = tail call contract float @__nv_copysignf(float noundef %conv85, float noundef %__c.addr.0) #10
  %call87 = tail call i32 @__nv_isinff(float noundef %__d.addr.0) #10
  %tobool88.not = icmp ne i32 %call87, 0
  %conv90 = uitofp i1 %tobool88.not to float
  %call91 = tail call contract float @__nv_copysignf(float noundef %conv90, float noundef %__d.addr.0) #10
  %mul92 = fmul contract float %call86, %__a
  %mul93 = fmul contract float %call91, %__b
  %add94 = fadd contract float %mul92, %mul93
  %mul95 = fmul contract float %add94, 0.000000e+00
  %mul97 = fmul contract float %call86, %__b
  %mul98 = fmul contract float %call91, %__a
  %sub99 = fsub contract float %mul97, %mul98
  %mul100 = fmul contract float %sub99, 0.000000e+00
  br label %if.end105

if.end105:                                        ; preds = %if.then32, %if.else70, %land.lhs.true75, %land.lhs.true78, %if.then81, %if.then50, %land.lhs.true, %if.end
  %z.sroa.8.0 = phi float [ %mul68, %if.then50 ], [ %mul100, %if.then81 ], [ %call19, %land.lhs.true78 ], [ %call19, %land.lhs.true75 ], [ %call19, %if.else70 ], [ %mul37, %if.then32 ], [ %call19, %land.lhs.true ], [ %call19, %if.end ]
  %z.sroa.0.0 = phi float [ %mul63, %if.then50 ], [ %mul95, %if.then81 ], [ %call13, %land.lhs.true78 ], [ %call13, %land.lhs.true75 ], [ %call13, %if.else70 ], [ %mul34, %if.then32 ], [ %call13, %land.lhs.true ], [ %call13, %if.end ]
  %.fca.0.insert = insertvalue { float, float } poison, float %z.sroa.0.0, 0
  %.fca.1.insert = insertvalue { float, float } %.fca.0.insert, float %z.sroa.8.0, 1
  ret { float, float } %.fca.1.insert
}

; Function Attrs: convergent
declare float @__nv_logbf(float noundef) local_unnamed_addr #9

; Function Attrs: convergent
declare float @__nv_fmaxf(float noundef, float noundef) local_unnamed_addr #9

; Function Attrs: convergent
declare float @__nv_fabsf(float noundef) local_unnamed_addr #9

; Function Attrs: convergent
declare i32 @__nv_finitef(float noundef) local_unnamed_addr #9

; Function Attrs: convergent
declare float @__nv_scalbnf(float noundef, i32 noundef) local_unnamed_addr #9

attributes #0 = { alwaysinline norecurse nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="sm_70" "target-features"="+ptx32,+sm_70" }
attributes #1 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #2 = { nounwind }
attributes #3 = { alwaysinline }
attributes #4 = { norecurse nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="sm_70" "target-features"="+ptx32,+sm_70" }
attributes #5 = { convergent norecurse nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="sm_70" "target-features"="+ptx32,+sm_70" }
attributes #6 = { convergent nounwind }
attributes #7 = { mustprogress nofree norecurse nosync nounwind willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="sm_70" "target-features"="+ptx32,+sm_70" }
attributes #8 = { cold convergent mustprogress noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="sm_70" "target-features"="+ptx32,+sm_70" }
attributes #9 = { convergent "frame-pointer"="all" "llvm.assume"="ompx_spmd_amenable,omp_no_openmp" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="sm_70" "target-features"="+ptx32,+sm_70" }
attributes #10 = { convergent nounwind "llvm.assume"="ompx_spmd_amenable,omp_no_openmp" }

!omp_offload.info = !{!0, !1, !2, !3, !4, !5, !6, !7, !8, !9, !10, !11}
!nvvm.annotations = !{!12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23}
!llvm.module.flags = !{!24, !25, !26, !27, !28}
!llvm.ident = !{!29}

!0 = !{i32 0, i32 49, i32 55958786, !"_ZN6miniFE10matvec_stdINS_9CSRMatrixIdiiEENS_6VectorIdiiEEEclERS2_RS4_S7_", i32 521, i32 11}
!1 = !{i32 0, i32 49, i32 55958795, !"_ZN6miniFE3dotINS_6VectorIdiiEEEENS_10TypeTraitsINT_10ScalarTypeEE14magnitude_typeERKS4_S9_", i32 253, i32 10}
!2 = !{i32 0, i32 49, i32 55958795, !"_ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3_", i32 175, i32 3}
!3 = !{i32 0, i32 49, i32 55958795, !"_ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3_", i32 162, i32 1}
!4 = !{i32 0, i32 49, i32 55958795, !"_ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3_", i32 169, i32 2}
!5 = !{i32 0, i32 49, i32 55958795, !"_ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3_", i32 157, i32 0}
!6 = !{i32 0, i32 49, i32 55958795, !"_ZN6miniFE6dot_r2INS_6VectorIdiiEEEENS_10TypeTraitsINT_10ScalarTypeEE14magnitude_typeERKS4_", i32 289, i32 4}
!7 = !{i32 0, i32 49, i32 55958795, !"_ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3_", i32 220, i32 9}
!8 = !{i32 0, i32 49, i32 55958795, !"_ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3_", i32 215, i32 8}
!9 = !{i32 0, i32 49, i32 55958795, !"_ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3_", i32 210, i32 7}
!10 = !{i32 0, i32 49, i32 55958795, !"_ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3_", i32 205, i32 6}
!11 = !{i32 0, i32 49, i32 55958795, !"_ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3_", i32 200, i32 5}
!12 = !{void (i64, double*, double*)* @__omp_offloading_31_355dd0b__ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3__l157, !"kernel", i32 1}
!13 = !{void (i64, double*, i64, double*)* @__omp_offloading_31_355dd0b__ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3__l162, !"kernel", i32 1}
!14 = !{void (i64, double*, double*, i64, double*)* @__omp_offloading_31_355dd0b__ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3__l169, !"kernel", i32 1}
!15 = !{void (i64, double*, i64, double*, i64, double*)* @__omp_offloading_31_355dd0b__ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3__l175, !"kernel", i32 1}
!16 = !{void (i64, double*, double*)* @__omp_offloading_31_355dd0b__ZN6miniFE6dot_r2INS_6VectorIdiiEEEENS_10TypeTraitsINT_10ScalarTypeEE14magnitude_typeERKS4__l289, !"kernel", i32 1}
!17 = !{void (i64, double*, double*)* @__omp_offloading_31_355dd0b__ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3__l200, !"kernel", i32 1}
!18 = !{void (i64, double*, i64, double*)* @__omp_offloading_31_355dd0b__ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3__l205, !"kernel", i32 1}
!19 = !{void (i64, double*, double*, i64)* @__omp_offloading_31_355dd0b__ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3__l210, !"kernel", i32 1}
!20 = !{void (i64, double*, i64, double*)* @__omp_offloading_31_355dd0b__ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3__l215, !"kernel", i32 1}
!21 = !{void (i64, double*, i64, double*, i64)* @__omp_offloading_31_355dd0b__ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3__l220, !"kernel", i32 1}
!22 = !{void (i64, double*, double*, double*)* @__omp_offloading_31_355dd0b__ZN6miniFE3dotINS_6VectorIdiiEEEENS_10TypeTraitsINT_10ScalarTypeEE14magnitude_typeERKS4_S9__l253, !"kernel", i32 1}
!23 = !{void (i64, i64, i32*, i64, double*, double*, i32*, double*)* @__omp_offloading_31_355dd02__ZN6miniFE10matvec_stdINS_9CSRMatrixIdiiEENS_6VectorIdiiEEEclERS2_RS4_S7__l521, !"kernel", i32 1}
!24 = !{i32 1, !"wchar_size", i32 4}
!25 = !{i32 7, !"openmp", i32 50}
!26 = !{i32 7, !"openmp-device", i32 50}
!27 = !{i32 7, !"PIC Level", i32 2}
!28 = !{i32 7, !"frame-pointer", i32 2}
!29 = !{!"clang version 14.0.0 (git@github.com:koparasy/ML-LLVM.git 57f6b002589ddbfa715ddd9ea752700e004464bf)"}
!30 = !{!31, !31, i64 0}
!31 = !{!"int", !32, i64 0}
!32 = !{!"omnipotent char", !33, i64 0}
!33 = !{!"Simple C++ TBAA"}
!34 = !{!35, !35, i64 0}
!35 = !{!"any pointer", !32, i64 0}
!36 = distinct !{}
!37 = distinct !{!37, !38, !39}
!38 = !{!"llvm.loop.parallel_accesses", !36}
!39 = !{!"llvm.loop.vectorize.enable", i1 true}
!40 = !{!41, !41, i64 0}
!41 = !{!"double", !32, i64 0}
!42 = distinct !{}
!43 = distinct !{!43, !44, !39}
!44 = !{!"llvm.loop.parallel_accesses", !42}
!45 = distinct !{}
!46 = distinct !{!46, !47, !39}
!47 = !{!"llvm.loop.parallel_accesses", !45}
!48 = distinct !{}
!49 = distinct !{!49, !50, !39}
!50 = !{!"llvm.loop.parallel_accesses", !48}
!51 = distinct !{}
!52 = distinct !{!52, !53, !39}
!53 = !{!"llvm.loop.parallel_accesses", !51}
!54 = distinct !{}
!55 = distinct !{!55, !56, !39}
!56 = !{!"llvm.loop.parallel_accesses", !54}
!57 = distinct !{}
!58 = distinct !{!58, !59, !39}
!59 = !{!"llvm.loop.parallel_accesses", !57}
!60 = distinct !{}
!61 = distinct !{!61, !62, !39}
!62 = !{!"llvm.loop.parallel_accesses", !60}
!63 = !{!64, !32, i64 0}
!64 = !{!"_ZTS21_globalized_locals_ty", !32, i64 0}
!65 = distinct !{}
!66 = distinct !{!66, !67, !39}
!67 = !{!"llvm.loop.parallel_accesses", !65}
!68 = distinct !{}
!69 = distinct !{!69, !70, !39}
!70 = !{!"llvm.loop.parallel_accesses", !68}
!71 = distinct !{}
!72 = distinct !{!72, !73, !39}
!73 = !{!"llvm.loop.parallel_accesses", !71}
!74 = distinct !{}
!75 = distinct !{!75, !76, !39}
!76 = !{!"llvm.loop.parallel_accesses", !74}
!77 = distinct !{}
!78 = distinct !{!78, !79, !39}
!79 = !{!"llvm.loop.parallel_accesses", !77}
!80 = distinct !{}
!81 = distinct !{!81, !82, !39}
!82 = !{!"llvm.loop.parallel_accesses", !80}
!83 = distinct !{}
!84 = distinct !{!84, !85, !39}
!85 = !{!"llvm.loop.parallel_accesses", !83}
!86 = distinct !{}
!87 = distinct !{!87, !88, !39}
!88 = !{!"llvm.loop.parallel_accesses", !86}
!89 = distinct !{}
!90 = distinct !{!90, !91, !39}
!91 = !{!"llvm.loop.parallel_accesses", !89}
!92 = distinct !{}
!93 = distinct !{!93, !94, !39}
!94 = !{!"llvm.loop.parallel_accesses", !92}
!95 = distinct !{!95, !96}
!96 = !{!"llvm.loop.unroll.disable"}
!97 = distinct !{!97, !98}
!98 = !{!"llvm.loop.mustprogress"}

; __CLANG_OFFLOAD_BUNDLE____END__ openmp-nvptx64-nvidia-cuda

; __CLANG_OFFLOAD_BUNDLE____START__ host-powerpc64le-unknown-linux-gnu
; ModuleID = '/var/tmp/main-6251ed.bc'
source_filename = "main.cpp"
target datalayout = "e-m:e-i64:64-n32:64-S128-v256:256:256-v512:512:512"
target triple = "powerpc64le-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::__gnu_cxx_ldbl128::num_put"*, %"class.std::__gnu_cxx_ldbl128::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::__gnu_cxx_ldbl128::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::__gnu_cxx_ldbl128::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%struct.ident_t = type { i32, i32, i32, i32, i8* }
%struct.__tgt_offload_entry = type { i8*, i8*, i64, i32, i32 }
%struct.Box = type { [6 x i32] }
%"class.std::allocator" = type { i8 }
%"struct.miniFE::Parameters" = type <{ i32, i32, i32, i32, i32, i32, float, [4 x i8], %"class.std::basic_string", i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.std::basic_string" = type { %"struct.std::basic_string<char>::_Alloc_hider" }
%"struct.std::basic_string<char>::_Alloc_hider" = type { i8* }
%"class.std::basic_ostringstream" = type { %"class.std::basic_ostream.base", %"class.std::basic_stringbuf", %"class.std::basic_ios" }
%"class.std::basic_ostream.base" = type { i32 (...)** }
%"class.std::basic_stringbuf" = type { %"class.std::basic_streambuf", i32, %"class.std::basic_string" }
%class.YAML_Doc = type { %class.YAML_Element, %"class.std::basic_string", %"class.std::basic_string", %"class.std::basic_string", %"class.std::basic_string" }
%class.YAML_Element = type { %"class.std::basic_string", %"class.std::basic_string", %"class.std::vector.3" }
%"class.std::vector.3" = type { %"struct.std::_Vector_base.4" }
%"struct.std::_Vector_base.4" = type { %"struct.std::_Vector_base<YAML_Element *, std::allocator<YAML_Element *>>::_Vector_impl" }
%"struct.std::_Vector_base<YAML_Element *, std::allocator<YAML_Element *>>::_Vector_impl" = type { %class.YAML_Element**, %class.YAML_Element**, %class.YAML_Element** }
%"struct.std::basic_string<char>::_Rep" = type { %"struct.std::basic_string<char>::_Rep_base" }
%"struct.std::basic_string<char>::_Rep_base" = type { i64, i64, i32 }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }
%"class.miniFE::simple_mesh_description" = type { %"class.std::set", %"class.std::set", %"class.std::map", %struct.Box, %struct.Box }
%"class.std::set" = type { %"class.std::_Rb_tree" }
%"class.std::_Rb_tree" = type { %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>>::_Rb_tree_impl" }
%"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>>::_Rb_tree_impl" = type { %"struct.std::_Rb_tree_key_compare", %"struct.std::_Rb_tree_header" }
%"struct.std::_Rb_tree_key_compare" = type { %"struct.std::less" }
%"struct.std::less" = type { i8 }
%"struct.std::_Rb_tree_header" = type { %"struct.std::_Rb_tree_node_base", i64 }
%"struct.std::_Rb_tree_node_base" = type { i32, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }
%"class.std::map" = type { %"class.std::_Rb_tree.11" }
%"class.std::_Rb_tree.11" = type { %"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl" }
%"struct.std::_Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>>::_Rb_tree_impl" = type { %"struct.std::_Rb_tree_key_compare", %"struct.std::_Rb_tree_header" }
%"struct.miniFE::CSRMatrix" = type <{ i8, [7 x i8], %"class.std::vector.15", %"class.std::vector.15", %"class.std::vector.15", %"class.std::vector.15", %"class.std::vector.20", i32, [4 x i8] }>
%"class.std::vector.15" = type { %"struct.std::_Vector_base.16" }
%"struct.std::_Vector_base.16" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" = type { i32*, i32*, i32* }
%"class.std::vector.20" = type { %"struct.std::_Vector_base.21" }
%"struct.std::_Vector_base.21" = type { %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl" }
%"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl" = type { double*, double*, double* }
%"struct.miniFE::Vector" = type { i32, i32, %"class.std::vector.20" }
%"struct.std::_Rb_tree_node" = type { %"struct.std::_Rb_tree_node_base", %"struct.__gnu_cxx::__aligned_membuf" }
%"struct.__gnu_cxx::__aligned_membuf" = type { [8 x i8] }
%"struct.std::_Rb_tree_node.48" = type <{ %"struct.std::_Rb_tree_node_base", %"struct.__gnu_cxx::__aligned_membuf.49", [4 x i8] }>
%"struct.__gnu_cxx::__aligned_membuf.49" = type { [4 x i8] }
%struct.MatrixInitOp = type { i32*, i32*, i32*, i32, i32, i32, i32, i32*, i32*, i32*, double*, i32, %"class.miniFE::simple_mesh_description"* }
%"class.std::exception" = type { i32 (...)** }
%"class.std::runtime_error" = type { %"class.std::exception", %"class.std::basic_string" }
%"struct.miniFE::matvec_std" = type { i8 }
%"struct.std::pair" = type { i32, i32 }
%"struct.std::pair.32" = type { i32, i64 }
%"struct.std::pair.39" = type { i32, i32 }
%"struct.__gnu_cxx::__ops::_Iter_less_iter" = type { i8 }
%"struct.miniFE::ElemData" = type { i64, [8 x i32], [192 x double], [24 x double], [36 x double], [8 x double] }

$_ZN6miniFE6driverIdiiEEiRK3BoxRS1_RNS_10ParametersER8YAML_Doc = comdat any

$_ZN6miniFE10ParametersD2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZN6miniFE17compute_imbalanceIiEEvRK3BoxS3_RfS4_R8YAML_Docb = comdat any

$_ZN6miniFE23simple_mesh_descriptionIiEC2ERK3BoxS4_ = comdat any

$_ZN6miniFE25generate_matrix_structureINS_9CSRMatrixIdiiEEEEiRKNS_23simple_mesh_descriptionINT_17GlobalOrdinalTypeEEERS4_ = comdat any

$_ZN6miniFE16impose_dirichletINS_9CSRMatrixIdiiEENS_6VectorIdiiEEEEvNT_10ScalarTypeERS5_RT0_iiiRKSt3setINS5_17GlobalOrdinalTypeESt4lessISB_ESaISB_EE = comdat any

$_ZN6miniFE20compute_matrix_statsINS_9CSRMatrixIdiiEEEEmRKT_iiR8YAML_Doc = comdat any

$_ZN6miniFE31rearrange_matrix_local_externalINS_9CSRMatrixIdiiEEEEvRT_ = comdat any

$_ZN6miniFE8cg_solveINS_9CSRMatrixIdiiEENS_6VectorIdiiEENS_14matvec_overlapIS2_S4_EEEEvRT_RKT0_RS9_T1_NS7_16LocalOrdinalTypeERNS_10TypeTraitsINS7_10ScalarTypeEE14magnitude_typeERSE_SJ_Pd = comdat any

$_ZN6miniFE8cg_solveINS_9CSRMatrixIdiiEENS_6VectorIdiiEENS_10matvec_stdIS2_S4_EEEEvRT_RKT0_RS9_T1_NS7_16LocalOrdinalTypeERNS_10TypeTraitsINS7_10ScalarTypeEE14magnitude_typeERSE_SJ_Pd = comdat any

$_ZN6miniFE15verify_solutionINS_6VectorIdiiEEEEiRKNS_23simple_mesh_descriptionINT_17GlobalOrdinalTypeEEERKS4_db = comdat any

$_ZN6miniFE9CSRMatrixIdiiED2Ev = comdat any

$_ZN6miniFE23simple_mesh_descriptionIiED2Ev = comdat any

$_ZN6miniFE20create_map_id_to_rowIiEEviiiRK3BoxRSt3mapIT_S5_St4lessIS5_ESaISt4pairIKS5_S5_EEE = comdat any

$_ZNSt3mapIiiSt4lessIiESaISt4pairIKiiEEED2Ev = comdat any

$_ZNSt3setIiSt4lessIiESaIiEED2Ev = comdat any

$_ZN6miniFE7get_idsIiEEviiiRK3BoxRSt6vectorIT_SaIS5_EEb = comdat any

$_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE17_M_emplace_uniqueIJS0_IiiEEEES0_ISt17_Rb_tree_iteratorIS2_EbEDpOT_ = comdat any

$_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE17_M_emplace_uniqueIJS0_IimEEEES0_ISt17_Rb_tree_iteratorIS2_EbEDpOT_ = comdat any

$_ZN6miniFE15find_row_for_idIiEET_S1_RKSt3mapIS1_S1_St4lessIS1_ESaISt4pairIKS1_S1_EEE = comdat any

$_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E = comdat any

$_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiE = comdat any

$_ZN6miniFE9CSRMatrixIdiiE13reserve_spaceEjj = comdat any

$_ZNSt6vectorIiSaIiEE17_M_default_appendEm = comdat any

$_ZN12MatrixInitOpIN6miniFE9CSRMatrixIdiiEEEC2ERKSt6vectorIiSaIiEES8_S8_iiiiRKNS0_23simple_mesh_descriptionIiEERS2_ = comdat any

$_ZN12MatrixInitOpIN6miniFE9CSRMatrixIdiiEEEclEi = comdat any

$_ZNSt6vectorIdSaIdEE17_M_default_appendEm = comdat any

$_ZSt16__introsort_loopIPilN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_ = comdat any

$_ZSt22__final_insertion_sortIPiN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_ = comdat any

$_ZSt11__make_heapIPiN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_RT0_ = comdat any

$_ZN6miniFE20perform_element_loopIiNS_9CSRMatrixIdiiEENS_6VectorIdiiEEEEvRKNS_23simple_mesh_descriptionIT_EERK3BoxRT0_RT1_RNS_10ParametersE = comdat any

$_ZN6miniFE23compute_gradient_valuesIdEEvPT_ = comdat any

$_ZN6miniFE25get_elem_nodes_and_coordsIidEEvRKNS_23simple_mesh_descriptionIT_EES2_PS2_PT0_ = comdat any

$_ZN6miniFE4Hex820diffusionMatrix_symmIdEEvPKT_S4_PS2_ = comdat any

$_ZN6miniFE4Hex812sourceVectorIdEEvPKT_S4_PS2_ = comdat any

$_ZN6miniFE4Hex827gradients_and_invJ_and_detJIdEEvPKT_S4_PS2_RS2_ = comdat any

$_ZN6miniFE4Hex818gradients_and_detJIdEEvPKT_S4_RS2_ = comdat any

$_ZN6miniFE23sum_in_symm_elem_matrixINS_9CSRMatrixIdiiEEEEvmPKNT_17GlobalOrdinalTypeEPKNS3_10ScalarTypeERS3_ = comdat any

$_ZN6miniFE30zero_row_and_put_1_on_diagonalINS_9CSRMatrixIdiiEEEEvRT_NS3_17GlobalOrdinalTypeE = comdat any

$_ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3_ = comdat any

$_ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3_ = comdat any

$_ZN6miniFE3dotINS_6VectorIdiiEEEENS_10TypeTraitsINT_10ScalarTypeEE14magnitude_typeERKS4_S9_ = comdat any

$_ZN6miniFE10matvec_stdINS_9CSRMatrixIdiiEENS_6VectorIdiiEEEclERS2_RS4_S7_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [44 x i8] c"MiniFE Mini-App, OpenMP Peer Implementation\00", align 1
@.str.1 = private unnamed_addr constant [31 x i8] c"Creating OpenMP Thread Pool...\00", align 1
@0 = private unnamed_addr constant [23 x i8] c";unknown;unknown;0;0;;\00", align 1
@1 = private unnamed_addr constant %struct.ident_t { i32 0, i32 514, i32 0, i32 22, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @0, i32 0, i32 0) }, align 8
@.gomp_critical_user_.reduction.var = common global [8 x i32] zeroinitializer
@2 = private unnamed_addr constant %struct.ident_t { i32 0, i32 18, i32 0, i32 22, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @0, i32 0, i32 0) }, align 8
@3 = private unnamed_addr constant %struct.ident_t { i32 0, i32 2, i32 0, i32 22, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @0, i32 0, i32 0) }, align 8
@.str.2 = private unnamed_addr constant [10 x i8] c"Counted: \00", align 1
@.str.3 = private unnamed_addr constant [10 x i8] c" threads.\00", align 1
@.str.4 = private unnamed_addr constant [27 x i8] c"Running MiniFE Mini-App...\00", align 1
@.str.5 = private unnamed_addr constant [75 x i8] c"One or more processors have 0 equations. Not currently supported. Exiting.\00", align 1
@.str.6 = private unnamed_addr constant [8 x i8] c"miniFE.\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@.str.8 = private unnamed_addr constant [3 x i8] c".T\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.10 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.11 = private unnamed_addr constant [7 x i8] c"miniFE\00", align 1
@.str.12 = private unnamed_addr constant [4 x i8] c"2.0\00", align 1
@.str.13 = private unnamed_addr constant [19 x i8] c"Total Program Time\00", align 1
@_ZNSs4_Rep20_S_empty_rep_storageE = external global [0 x i64], align 8
@_ZTTSt19basic_ostringstreamIcSt11char_traitsIcESaIcEE = external unnamed_addr constant [4 x i8*], align 8
@_ZTVSt15basic_stringbufIcSt11char_traitsIcESaIcEE = external unnamed_addr constant { [16 x i8*] }, align 8
@_ZTVSt15basic_streambufIcSt11char_traitsIcEE = external unnamed_addr constant { [16 x i8*] }, align 8
@.str.14 = private unnamed_addr constant [25 x i8] c"creating/filling mesh...\00", align 1
@.str.15 = private unnamed_addr constant [16 x i8] c"s, total time: \00", align 1
@.str.16 = private unnamed_addr constant [31 x i8] c"generating matrix structure...\00", align 1
@.str.17 = private unnamed_addr constant [22 x i8] c"assembling FE data...\00", align 1
@.str.18 = private unnamed_addr constant [28 x i8] c"Matrix structure generation\00", align 1
@.str.19 = private unnamed_addr constant [19 x i8] c"Mat-struc-gen Time\00", align 1
@.str.20 = private unnamed_addr constant [12 x i8] c"FE assembly\00", align 1
@.str.21 = private unnamed_addr constant [17 x i8] c"FE assembly Time\00", align 1
@.str.22 = private unnamed_addr constant [25 x i8] c"imposing Dirichlet BC...\00", align 1
@.str.23 = private unnamed_addr constant [31 x i8] c"making matrix indices local...\00", align 1
@.str.24 = private unnamed_addr constant [24 x i8] c"Starting CG solver ... \00", align 1
@.str.25 = private unnamed_addr constant [19 x i8] c"Final Resid Norm: \00", align 1
@.str.27 = private unnamed_addr constant [44 x i8] c"verifying solution at ~ (0.5, 0.5, 0.5) ...\00", align 1
@.str.28 = private unnamed_addr constant [9 x i8] c"CG solve\00", align 1
@.str.29 = private unnamed_addr constant [22 x i8] c"Global Run Parameters\00", align 1
@.str.30 = private unnamed_addr constant [11 x i8] c"ScalarType\00", align 1
@.str.31 = private unnamed_addr constant [18 x i8] c"GlobalOrdinalType\00", align 1
@.str.32 = private unnamed_addr constant [17 x i8] c"LocalOrdinalType\00", align 1
@.str.33 = private unnamed_addr constant [11 x i8] c"Iterations\00", align 1
@.str.34 = private unnamed_addr constant [17 x i8] c"Final Resid Norm\00", align 1
@.str.35 = private unnamed_addr constant [11 x i8] c"WAXPY Time\00", align 1
@.str.36 = private unnamed_addr constant [12 x i8] c"WAXPY Flops\00", align 1
@.str.37 = private unnamed_addr constant [13 x i8] c"WAXPY Mflops\00", align 1
@.str.38 = private unnamed_addr constant [4 x i8] c"inf\00", align 1
@.str.39 = private unnamed_addr constant [9 x i8] c"DOT Time\00", align 1
@.str.40 = private unnamed_addr constant [10 x i8] c"DOT Flops\00", align 1
@.str.41 = private unnamed_addr constant [11 x i8] c"DOT Mflops\00", align 1
@.str.42 = private unnamed_addr constant [12 x i8] c"MATVEC Time\00", align 1
@.str.43 = private unnamed_addr constant [13 x i8] c"MATVEC Flops\00", align 1
@.str.44 = private unnamed_addr constant [14 x i8] c"MATVEC Mflops\00", align 1
@.str.45 = private unnamed_addr constant [6 x i8] c"Total\00", align 1
@.str.46 = private unnamed_addr constant [14 x i8] c"Total CG Time\00", align 1
@.str.47 = private unnamed_addr constant [15 x i8] c"Total CG Flops\00", align 1
@.str.48 = private unnamed_addr constant [16 x i8] c"Total CG Mflops\00", align 1
@.str.49 = private unnamed_addr constant [19 x i8] c"Time per iteration\00", align 1
@.str.50 = private unnamed_addr constant [29 x i8] c"Rows-per-proc Load Imbalance\00", align 1
@.str.51 = private unnamed_addr constant [22 x i8] c"Largest (from avg, %)\00", align 1
@.str.52 = private unnamed_addr constant [12 x i8] c"Std Dev (%)\00", align 1
@.str.53 = private unnamed_addr constant [22 x i8] c"on the y==0 face (ix=\00", align 1
@.str.54 = private unnamed_addr constant [6 x i8] c", iz=\00", align 1
@.str.55 = private unnamed_addr constant [31 x i8] c"), ERROR: found negative row (\00", align 1
@.str.56 = private unnamed_addr constant [14 x i8] c") for nodeID=\00", align 1
@.str.57 = private unnamed_addr constant [16 x i8] c"vector::reserve\00", align 1
@.str.59 = private unnamed_addr constant [32 x i8] c"ERROR, failed to map id to row.\00", align 1
@.str.60 = private unnamed_addr constant [11 x i8] c"ERROR, id:\00", align 1
@.str.61 = private unnamed_addr constant [24 x i8] c", ids_to_rows.begin(): \00", align 1
@.str.62 = private unnamed_addr constant [50 x i8] c"ERROR, negative offset in find_row_for_id for id=\00", align 1
@_ZTISt9exception = external constant i8*
@.str.63 = private unnamed_addr constant [100 x i8] c"One of A.rows.resize, A.row_offsets.resize, A.packed_cols.reserve or A.packed_coefs.reserve: nrows=\00", align 1
@.str.64 = private unnamed_addr constant [3 x i8] c": \00", align 1
@_ZTISt13runtime_error = external constant i8*
@.str.66 = private unnamed_addr constant [6 x i8] c"proc \00", align 1
@.str.67 = private unnamed_addr constant [89 x i8] c" threw an exception in generate_matrix_structure, probably due to running out of memory.\00", align 1
@.str.70 = private unnamed_addr constant [26 x i8] c"vector::_M_default_append\00", align 1
@.str.71 = private unnamed_addr constant [32 x i8] c"Warning, packed_cols.capacity (\00", align 1
@.str.72 = private unnamed_addr constant [6 x i8] c") != \00", align 1
@.str.73 = private unnamed_addr constant [24 x i8] c"packed_coefs.capacity (\00", align 1
@.str.74 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.75 = private unnamed_addr constant [11 x i8] c") <  nnz (\00", align 1
@.str.78 = private unnamed_addr constant [49 x i8] c"get_elem_nodes_and_coords ERROR, negative elemID\00", align 1
@.str.80 = private unnamed_addr constant [18 x i8] c"Matrix attributes\00", align 1
@.str.81 = private unnamed_addr constant [13 x i8] c"Global Nrows\00", align 1
@.str.82 = private unnamed_addr constant [11 x i8] c"Global NNZ\00", align 1
@.str.83 = private unnamed_addr constant [19 x i8] c"Global Memory (GB)\00", align 1
@.str.84 = private unnamed_addr constant [25 x i8] c"Pll Memory Overhead (MB)\00", align 1
@.str.85 = private unnamed_addr constant [18 x i8] c"Rows per proc MIN\00", align 1
@.str.86 = private unnamed_addr constant [18 x i8] c"Rows per proc MAX\00", align 1
@.str.87 = private unnamed_addr constant [18 x i8] c"Rows per proc AVG\00", align 1
@.str.88 = private unnamed_addr constant [17 x i8] c"NNZ per proc MIN\00", align 1
@.str.89 = private unnamed_addr constant [17 x i8] c"NNZ per proc MAX\00", align 1
@.str.90 = private unnamed_addr constant [17 x i8] c"NNZ per proc AVG\00", align 1
@_ZSt4cerr = external global %"class.std::basic_ostream", align 8
@.str.91 = private unnamed_addr constant [93 x i8] c"miniFE::cg_solve ERROR, A.has_local_indices is false, needs to be true. This probably means \00", align 1
@.str.92 = private unnamed_addr constant [79 x i8] c"miniFE::make_local_matrix(A) was not called prior to calling miniFE::cg_solve.\00", align 1
@__omp_adaptation_miniFE = external local_unnamed_addr global i8*, align 8
@.str.93 = private unnamed_addr constant [20 x i8] c"Initial Residual = \00", align 1
@.str.94 = private unnamed_addr constant [13 x i8] c"Iteration = \00", align 1
@.str.95 = private unnamed_addr constant [15 x i8] c"   Residual = \00", align 1
@.str.96 = private unnamed_addr constant [45 x i8] c"miniFE::cg_solve ERROR, numerical breakdown!\00", align 1
@4 = private unnamed_addr constant %struct.ident_t { i32 0, i32 2050, i32 0, i32 22, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @0, i32 0, i32 0) }, align 8
@.__omp_offloading_31_355dd0b__ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3__l157.region_id = weak constant i8 0
@.__omp_offloading_31_355dd0b__ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3__l162.region_id = weak constant i8 0
@.__omp_offloading_31_355dd0b__ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3__l169.region_id = weak constant i8 0
@.offload_sizes.106 = private unnamed_addr constant [5 x i64] [i64 4, i64 0, i64 0, i64 8, i64 0]
@.offload_maptypes.107 = private unnamed_addr constant [5 x i64] [i64 800, i64 544, i64 544, i64 800, i64 544]
@.__omp_offloading_31_355dd0b__ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3__l175.region_id = weak constant i8 0
@.offload_sizes.110 = private unnamed_addr constant [6 x i64] [i64 4, i64 0, i64 8, i64 0, i64 8, i64 0]
@.offload_maptypes.111 = private unnamed_addr constant [6 x i64] [i64 800, i64 544, i64 800, i64 544, i64 800, i64 544]
@.__omp_offloading_31_355dd0b__ZN6miniFE6dot_r2INS_6VectorIdiiEEEENS_10TypeTraitsINT_10ScalarTypeEE14magnitude_typeERKS4__l289.region_id = weak constant i8 0
@.offload_sizes.116 = private unnamed_addr constant [3 x i64] [i64 4, i64 8, i64 0]
@.offload_maptypes.117 = private unnamed_addr constant [3 x i64] [i64 800, i64 35, i64 544]
@.__omp_offloading_31_355dd0b__ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3__l200.region_id = weak constant i8 0
@.offload_sizes.120 = private unnamed_addr constant [3 x i64] [i64 4, i64 0, i64 0]
@.offload_maptypes.121 = private unnamed_addr constant [3 x i64] [i64 800, i64 544, i64 544]
@.__omp_offloading_31_355dd0b__ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3__l205.region_id = weak constant i8 0
@.__omp_offloading_31_355dd0b__ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3__l210.region_id = weak constant i8 0
@.offload_sizes.128 = private unnamed_addr constant [4 x i64] [i64 4, i64 0, i64 0, i64 8]
@.offload_maptypes.129 = private unnamed_addr constant [4 x i64] [i64 800, i64 544, i64 544, i64 800]
@.__omp_offloading_31_355dd0b__ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3__l215.region_id = weak constant i8 0
@.offload_sizes.132 = private unnamed_addr constant [4 x i64] [i64 4, i64 0, i64 8, i64 0]
@.offload_maptypes.133 = private unnamed_addr constant [4 x i64] [i64 800, i64 544, i64 800, i64 544]
@.__omp_offloading_31_355dd0b__ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3__l220.region_id = weak constant i8 0
@.offload_sizes.136 = private unnamed_addr constant [5 x i64] [i64 4, i64 0, i64 8, i64 0, i64 8]
@.offload_maptypes.137 = private unnamed_addr constant [5 x i64] [i64 800, i64 544, i64 800, i64 544, i64 800]
@.__omp_offloading_31_355dd0b__ZN6miniFE3dotINS_6VectorIdiiEEEENS_10TypeTraitsINT_10ScalarTypeEE14magnitude_typeERKS4_S9__l253.region_id = weak constant i8 0
@.offload_sizes.142 = private unnamed_addr constant [4 x i64] [i64 4, i64 8, i64 0, i64 0]
@.offload_maptypes.143 = private unnamed_addr constant [4 x i64] [i64 800, i64 35, i64 544, i64 544]
@.offload_maptypes.144 = private unnamed_addr constant [8 x i64] [i64 1, i64 1, i64 1, i64 1, i64 1, i64 1, i64 1, i64 3]
@.__omp_offloading_31_355dd02__ZN6miniFE10matvec_stdINS_9CSRMatrixIdiiEENS_6VectorIdiiEEEclERS2_RS4_S7__l521.region_id = weak constant i8 0
@.offload_sizes.147 = private unnamed_addr constant [8 x i64] [i64 4, i64 4, i64 0, i64 4, i64 0, i64 0, i64 0, i64 0]
@.offload_maptypes.148 = private unnamed_addr constant [8 x i64] [i64 800, i64 288, i64 544, i64 288, i64 544, i64 544, i64 544, i64 544]
@.str.149 = private unnamed_addr constant [23 x i8] c"max absolute error is \00", align 1
@.str.150 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.151 = private unnamed_addr constant [17 x i8] c"   at position (\00", align 1
@.str.152 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.153 = private unnamed_addr constant [4 x i8] c"), \00", align 1
@.str.154 = private unnamed_addr constant [23 x i8] c"   computed solution: \00", align 1
@.str.155 = private unnamed_addr constant [23 x i8] c",  analytic solution: \00", align 1
@.str.156 = private unnamed_addr constant [46 x i8] c"solution matches analytic solution to within \00", align 1
@.str.157 = private unnamed_addr constant [12 x i8] c" or better.\00", align 1
@.str.158 = private unnamed_addr constant [7 x i8] c"double\00", align 1
@.str.159 = private unnamed_addr constant [4 x i8] c"int\00", align 1
@.str.160 = private unnamed_addr constant [11 x i8] c"dimensions\00", align 1
@.str.161 = private unnamed_addr constant [3 x i8] c"nx\00", align 1
@.str.162 = private unnamed_addr constant [3 x i8] c"ny\00", align 1
@.str.163 = private unnamed_addr constant [3 x i8] c"nz\00", align 1
@.str.164 = private unnamed_addr constant [15 x i8] c"load_imbalance\00", align 1
@.str.165 = private unnamed_addr constant [8 x i8] c"1 (yes)\00", align 1
@.str.166 = private unnamed_addr constant [21 x i8] c"mv_overlap_comm_comp\00", align 1
@.str.167 = private unnamed_addr constant [7 x i8] c"0 (no)\00", align 1
@.str.168 = private unnamed_addr constant [20 x i8] c"OpenMP Max Threads:\00", align 1
@.str.169 = private unnamed_addr constant [21 x i8] c"number of processors\00", align 1
@.str.170 = private unnamed_addr constant [9 x i8] c"Platform\00", align 1
@.str.171 = private unnamed_addr constant [9 x i8] c"hostname\00", align 1
@.str.172 = private unnamed_addr constant [10 x i8] c"lassen139\00", align 1
@.str.173 = private unnamed_addr constant [12 x i8] c"kernel name\00", align 1
@.str.174 = private unnamed_addr constant [8 x i8] c"'Linux'\00", align 1
@.str.175 = private unnamed_addr constant [15 x i8] c"kernel release\00", align 1
@.str.176 = private unnamed_addr constant [38 x i8] c"'4.14.0-115.21.2.1chaos.ch6a.ppc64le'\00", align 1
@.str.177 = private unnamed_addr constant [10 x i8] c"processor\00", align 1
@.str.178 = private unnamed_addr constant [10 x i8] c"'ppc64le'\00", align 1
@.str.179 = private unnamed_addr constant [6 x i8] c"Build\00", align 1
@.str.180 = private unnamed_addr constant [4 x i8] c"CXX\00", align 1
@.str.181 = private unnamed_addr constant [71 x i8] c"'/usr/workspace/koparasy/PARCO/SC-22/build_lassen/install/bin/clang++'\00", align 1
@.str.182 = private unnamed_addr constant [17 x i8] c"compiler version\00", align 1
@.str.183 = private unnamed_addr constant [102 x i8] c"'clang version 14.0.0 (git github.com:koparasy/ML-LLVM.git 57f6b002589ddbfa715ddd9ea752700e004464bf)'\00", align 1
@.str.184 = private unnamed_addr constant [9 x i8] c"CXXFLAGS\00", align 1
@.str.185 = private unnamed_addr constant [107 x i8] c"'-v -O3 -fopenmp -fopenmp-targets=nvptx64-nvidia-cuda -D__STRICT_ANSI__ -ffp-contract=fast \09-S -emit-llvm'\00", align 1
@.str.186 = private unnamed_addr constant [3 x i8] c"no\00", align 1
@.str.187 = private unnamed_addr constant [10 x i8] c"using MPI\00", align 1
@.str.188 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.189 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.190 = private unnamed_addr constant [14 x i8] c"Run Date/Time\00", align 1
@.omp_offloading.entry_name = internal unnamed_addr constant [102 x i8] c"__omp_offloading_31_355dd0b__ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3__l157\00"
@.omp_offloading.entry.__omp_offloading_31_355dd0b__ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3__l157 = weak local_unnamed_addr constant %struct.__tgt_offload_entry { i8* @.__omp_offloading_31_355dd0b__ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3__l157.region_id, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @.omp_offloading.entry_name, i32 0, i32 0), i64 0, i32 0, i32 0 }, section "omp_offloading_entries", align 1
@.omp_offloading.entry_name.191 = internal unnamed_addr constant [102 x i8] c"__omp_offloading_31_355dd0b__ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3__l162\00"
@.omp_offloading.entry.__omp_offloading_31_355dd0b__ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3__l162 = weak local_unnamed_addr constant %struct.__tgt_offload_entry { i8* @.__omp_offloading_31_355dd0b__ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3__l162.region_id, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @.omp_offloading.entry_name.191, i32 0, i32 0), i64 0, i32 0, i32 0 }, section "omp_offloading_entries", align 1
@.omp_offloading.entry_name.192 = internal unnamed_addr constant [102 x i8] c"__omp_offloading_31_355dd0b__ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3__l169\00"
@.omp_offloading.entry.__omp_offloading_31_355dd0b__ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3__l169 = weak local_unnamed_addr constant %struct.__tgt_offload_entry { i8* @.__omp_offloading_31_355dd0b__ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3__l169.region_id, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @.omp_offloading.entry_name.192, i32 0, i32 0), i64 0, i32 0, i32 0 }, section "omp_offloading_entries", align 1
@.omp_offloading.entry_name.193 = internal unnamed_addr constant [102 x i8] c"__omp_offloading_31_355dd0b__ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3__l175\00"
@.omp_offloading.entry.__omp_offloading_31_355dd0b__ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3__l175 = weak local_unnamed_addr constant %struct.__tgt_offload_entry { i8* @.__omp_offloading_31_355dd0b__ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3__l175.region_id, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @.omp_offloading.entry_name.193, i32 0, i32 0), i64 0, i32 0, i32 0 }, section "omp_offloading_entries", align 1
@.omp_offloading.entry_name.194 = internal unnamed_addr constant [125 x i8] c"__omp_offloading_31_355dd0b__ZN6miniFE6dot_r2INS_6VectorIdiiEEEENS_10TypeTraitsINT_10ScalarTypeEE14magnitude_typeERKS4__l289\00"
@.omp_offloading.entry.__omp_offloading_31_355dd0b__ZN6miniFE6dot_r2INS_6VectorIdiiEEEENS_10TypeTraitsINT_10ScalarTypeEE14magnitude_typeERKS4__l289 = weak local_unnamed_addr constant %struct.__tgt_offload_entry { i8* @.__omp_offloading_31_355dd0b__ZN6miniFE6dot_r2INS_6VectorIdiiEEEENS_10TypeTraitsINT_10ScalarTypeEE14magnitude_typeERKS4__l289.region_id, i8* getelementptr inbounds ([125 x i8], [125 x i8]* @.omp_offloading.entry_name.194, i32 0, i32 0), i64 0, i32 0, i32 0 }, section "omp_offloading_entries", align 1
@.omp_offloading.entry_name.195 = internal unnamed_addr constant [81 x i8] c"__omp_offloading_31_355dd0b__ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3__l200\00"
@.omp_offloading.entry.__omp_offloading_31_355dd0b__ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3__l200 = weak local_unnamed_addr constant %struct.__tgt_offload_entry { i8* @.__omp_offloading_31_355dd0b__ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3__l200.region_id, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.omp_offloading.entry_name.195, i32 0, i32 0), i64 0, i32 0, i32 0 }, section "omp_offloading_entries", align 1
@.omp_offloading.entry_name.196 = internal unnamed_addr constant [81 x i8] c"__omp_offloading_31_355dd0b__ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3__l205\00"
@.omp_offloading.entry.__omp_offloading_31_355dd0b__ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3__l205 = weak local_unnamed_addr constant %struct.__tgt_offload_entry { i8* @.__omp_offloading_31_355dd0b__ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3__l205.region_id, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.omp_offloading.entry_name.196, i32 0, i32 0), i64 0, i32 0, i32 0 }, section "omp_offloading_entries", align 1
@.omp_offloading.entry_name.197 = internal unnamed_addr constant [81 x i8] c"__omp_offloading_31_355dd0b__ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3__l210\00"
@.omp_offloading.entry.__omp_offloading_31_355dd0b__ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3__l210 = weak local_unnamed_addr constant %struct.__tgt_offload_entry { i8* @.__omp_offloading_31_355dd0b__ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3__l210.region_id, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.omp_offloading.entry_name.197, i32 0, i32 0), i64 0, i32 0, i32 0 }, section "omp_offloading_entries", align 1
@.omp_offloading.entry_name.198 = internal unnamed_addr constant [81 x i8] c"__omp_offloading_31_355dd0b__ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3__l215\00"
@.omp_offloading.entry.__omp_offloading_31_355dd0b__ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3__l215 = weak local_unnamed_addr constant %struct.__tgt_offload_entry { i8* @.__omp_offloading_31_355dd0b__ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3__l215.region_id, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.omp_offloading.entry_name.198, i32 0, i32 0), i64 0, i32 0, i32 0 }, section "omp_offloading_entries", align 1
@.omp_offloading.entry_name.199 = internal unnamed_addr constant [81 x i8] c"__omp_offloading_31_355dd0b__ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3__l220\00"
@.omp_offloading.entry.__omp_offloading_31_355dd0b__ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3__l220 = weak local_unnamed_addr constant %struct.__tgt_offload_entry { i8* @.__omp_offloading_31_355dd0b__ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3__l220.region_id, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.omp_offloading.entry_name.199, i32 0, i32 0), i64 0, i32 0, i32 0 }, section "omp_offloading_entries", align 1
@.omp_offloading.entry_name.200 = internal unnamed_addr constant [125 x i8] c"__omp_offloading_31_355dd0b__ZN6miniFE3dotINS_6VectorIdiiEEEENS_10TypeTraitsINT_10ScalarTypeEE14magnitude_typeERKS4_S9__l253\00"
@.omp_offloading.entry.__omp_offloading_31_355dd0b__ZN6miniFE3dotINS_6VectorIdiiEEEENS_10TypeTraitsINT_10ScalarTypeEE14magnitude_typeERKS4_S9__l253 = weak local_unnamed_addr constant %struct.__tgt_offload_entry { i8* @.__omp_offloading_31_355dd0b__ZN6miniFE3dotINS_6VectorIdiiEEEENS_10TypeTraitsINT_10ScalarTypeEE14magnitude_typeERKS4_S9__l253.region_id, i8* getelementptr inbounds ([125 x i8], [125 x i8]* @.omp_offloading.entry_name.200, i32 0, i32 0), i64 0, i32 0, i32 0 }, section "omp_offloading_entries", align 1
@.omp_offloading.entry_name.201 = internal unnamed_addr constant [107 x i8] c"__omp_offloading_31_355dd02__ZN6miniFE10matvec_stdINS_9CSRMatrixIdiiEENS_6VectorIdiiEEEclERS2_RS4_S7__l521\00"
@.omp_offloading.entry.__omp_offloading_31_355dd02__ZN6miniFE10matvec_stdINS_9CSRMatrixIdiiEENS_6VectorIdiiEEEclERS2_RS4_S7__l521 = weak local_unnamed_addr constant %struct.__tgt_offload_entry { i8* @.__omp_offloading_31_355dd02__ZN6miniFE10matvec_stdINS_9CSRMatrixIdiiEENS_6VectorIdiiEEEclERS2_RS4_S7__l521.region_id, i8* getelementptr inbounds ([107 x i8], [107 x i8]* @.omp_offloading.entry_name.201, i32 0, i32 0), i64 0, i32 0, i32 0 }, section "omp_offloading_entries", align 1
@llvm.global_ctors = appending global [2 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_main.cpp, i8* null }, { i32, void ()*, i8* } { i32 0, void ()* @.omp_offloading.requires_reg, i8* null }]

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* noundef nonnull align 1 dereferenceable(1)) unnamed_addr #0

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"* noundef nonnull align 1 dereferenceable(1)) unnamed_addr #1

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: mustprogress nofree norecurse nosync nounwind readonly uwtable willreturn
define dso_local noundef zeroext i1 @_ZN6miniFE11is_neighborERK3BoxS2_(%struct.Box* noundef nonnull readonly align 4 dereferenceable(24) %box1, %struct.Box* noundef nonnull readonly align 4 dereferenceable(24) %box2) local_unnamed_addr #3 {
entry:
  %arrayidx = getelementptr inbounds %struct.Box, %struct.Box* %box1, i64 0, i32 0, i64 1
  %0 = load i32, i32* %arrayidx, align 4, !tbaa !16
  %arrayidx.i86 = getelementptr inbounds %struct.Box, %struct.Box* %box2, i64 0, i32 0, i64 0
  %1 = load i32, i32* %arrayidx.i86, align 4, !tbaa !16
  %cmp = icmp eq i32 %0, %1
  br i1 %cmp, label %if.end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %arrayidx.i = getelementptr inbounds %struct.Box, %struct.Box* %box1, i64 0, i32 0, i64 0
  %2 = load i32, i32* %arrayidx.i, align 4, !tbaa !16
  %arrayidx6 = getelementptr inbounds %struct.Box, %struct.Box* %box2, i64 0, i32 0, i64 1
  %3 = load i32, i32* %arrayidx6, align 4, !tbaa !16
  %cmp7 = icmp eq i32 %2, %3
  %cmp13 = icmp eq i32 %2, %1
  %or.cond = select i1 %cmp7, i1 true, i1 %cmp13
  %cmp19 = icmp eq i32 %0, %3
  %or.cond172 = select i1 %or.cond, i1 true, i1 %cmp19
  br i1 %or.cond172, label %if.end, label %lor.lhs.false20

lor.lhs.false20:                                  ; preds = %lor.lhs.false
  %cmp25 = icmp sgt i32 %2, %1
  %cmp30 = icmp slt i32 %0, %3
  %or.cond173 = select i1 %cmp25, i1 %cmp30, i1 false
  br i1 %or.cond173, label %if.end, label %lor.lhs.false31

lor.lhs.false31:                                  ; preds = %lor.lhs.false20
  %cmp36 = icmp sgt i32 %1, %2
  %cmp42 = icmp slt i32 %3, %0
  %or.cond174 = select i1 %cmp36, i1 %cmp42, i1 false
  br i1 %or.cond174, label %if.end, label %lor.lhs.false43

lor.lhs.false43:                                  ; preds = %lor.lhs.false31
  %cmp54 = icmp slt i32 %2, %3
  %or.cond175 = select i1 %cmp25, i1 %cmp54, i1 false
  br i1 %or.cond175, label %if.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false43
  %cmp64 = icmp slt i32 %1, %0
  %or.cond176 = select i1 %cmp36, i1 %cmp64, i1 false
  %sub = add nsw i32 %1, -1
  %cmp69 = icmp eq i32 %0, %sub
  %or.cond177 = select i1 %or.cond176, i1 true, i1 %cmp69
  br i1 %or.cond177, label %if.end, label %lor.rhs70

lor.rhs70:                                        ; preds = %lor.rhs
  %add = add nsw i32 %3, 1
  %cmp75 = icmp eq i32 %2, %add
  br label %if.end

if.end:                                           ; preds = %lor.rhs, %lor.lhs.false43, %lor.lhs.false31, %lor.lhs.false20, %entry, %lor.lhs.false, %lor.rhs70
  %x_neighbor.0.in = phi i1 [ %cmp75, %lor.rhs70 ], [ true, %lor.lhs.false ], [ true, %entry ], [ true, %lor.lhs.false20 ], [ true, %lor.lhs.false31 ], [ true, %lor.lhs.false43 ], [ true, %lor.rhs ]
  %arrayidx79 = getelementptr inbounds %struct.Box, %struct.Box* %box1, i64 0, i32 0, i64 3
  %4 = load i32, i32* %arrayidx79, align 4, !tbaa !16
  %arrayidx.i114 = getelementptr inbounds %struct.Box, %struct.Box* %box2, i64 0, i32 0, i64 2
  %5 = load i32, i32* %arrayidx.i114, align 4, !tbaa !16
  %cmp82 = icmp eq i32 %4, %5
  br i1 %cmp82, label %if.end169, label %lor.lhs.false83

lor.lhs.false83:                                  ; preds = %if.end
  %arrayidx.i113 = getelementptr inbounds %struct.Box, %struct.Box* %box1, i64 0, i32 0, i64 2
  %6 = load i32, i32* %arrayidx.i113, align 4, !tbaa !16
  %arrayidx87 = getelementptr inbounds %struct.Box, %struct.Box* %box2, i64 0, i32 0, i64 3
  %7 = load i32, i32* %arrayidx87, align 4, !tbaa !16
  %cmp88 = icmp eq i32 %6, %7
  %cmp94 = icmp eq i32 %6, %5
  %or.cond178 = select i1 %cmp88, i1 true, i1 %cmp94
  %cmp100 = icmp eq i32 %4, %7
  %or.cond179 = select i1 %or.cond178, i1 true, i1 %cmp100
  br i1 %or.cond179, label %if.end169, label %lor.lhs.false101

lor.lhs.false101:                                 ; preds = %lor.lhs.false83
  %cmp106 = icmp sgt i32 %6, %5
  %cmp112 = icmp slt i32 %4, %7
  %or.cond180 = select i1 %cmp106, i1 %cmp112, i1 false
  br i1 %or.cond180, label %if.end169, label %lor.lhs.false113

lor.lhs.false113:                                 ; preds = %lor.lhs.false101
  %cmp118 = icmp sgt i32 %5, %6
  %cmp124 = icmp slt i32 %7, %4
  %or.cond181 = select i1 %cmp118, i1 %cmp124, i1 false
  br i1 %or.cond181, label %if.end169, label %lor.lhs.false125

lor.lhs.false125:                                 ; preds = %lor.lhs.false113
  %cmp136 = icmp slt i32 %6, %7
  %or.cond182 = select i1 %cmp106, i1 %cmp136, i1 false
  br i1 %or.cond182, label %if.end169, label %lor.rhs137

lor.rhs137:                                       ; preds = %lor.lhs.false125
  %cmp148 = icmp slt i32 %5, %4
  %or.cond183 = select i1 %cmp118, i1 %cmp148, i1 false
  %sub158 = add nsw i32 %5, -1
  %cmp159 = icmp eq i32 %4, %sub158
  %or.cond184 = select i1 %or.cond183, i1 true, i1 %cmp159
  br i1 %or.cond184, label %if.end169, label %lor.rhs160

lor.rhs160:                                       ; preds = %lor.rhs137
  %add165 = add nsw i32 %7, 1
  %cmp166 = icmp eq i32 %6, %add165
  br label %if.end169

if.end169:                                        ; preds = %lor.rhs137, %lor.lhs.false125, %lor.lhs.false113, %lor.lhs.false101, %if.end, %lor.lhs.false83, %lor.rhs160
  %y_neighbor.0.in = phi i1 [ %cmp166, %lor.rhs160 ], [ true, %lor.lhs.false83 ], [ true, %if.end ], [ true, %lor.lhs.false101 ], [ true, %lor.lhs.false113 ], [ true, %lor.lhs.false125 ], [ true, %lor.rhs137 ]
  %arrayidx171 = getelementptr inbounds %struct.Box, %struct.Box* %box1, i64 0, i32 0, i64 5
  %8 = load i32, i32* %arrayidx171, align 4, !tbaa !16
  %arrayidx.i142 = getelementptr inbounds %struct.Box, %struct.Box* %box2, i64 0, i32 0, i64 4
  %9 = load i32, i32* %arrayidx.i142, align 4, !tbaa !16
  %cmp174 = icmp eq i32 %8, %9
  br i1 %cmp174, label %if.end261, label %lor.lhs.false175

lor.lhs.false175:                                 ; preds = %if.end169
  %arrayidx.i141 = getelementptr inbounds %struct.Box, %struct.Box* %box1, i64 0, i32 0, i64 4
  %10 = load i32, i32* %arrayidx.i141, align 4, !tbaa !16
  %arrayidx179 = getelementptr inbounds %struct.Box, %struct.Box* %box2, i64 0, i32 0, i64 5
  %11 = load i32, i32* %arrayidx179, align 4, !tbaa !16
  %cmp180 = icmp eq i32 %10, %11
  %cmp186 = icmp eq i32 %10, %9
  %or.cond185 = select i1 %cmp180, i1 true, i1 %cmp186
  %cmp192 = icmp eq i32 %8, %11
  %or.cond186 = select i1 %or.cond185, i1 true, i1 %cmp192
  br i1 %or.cond186, label %if.end261, label %lor.lhs.false193

lor.lhs.false193:                                 ; preds = %lor.lhs.false175
  %cmp198 = icmp sgt i32 %10, %9
  %cmp204 = icmp slt i32 %8, %11
  %or.cond187 = select i1 %cmp198, i1 %cmp204, i1 false
  br i1 %or.cond187, label %if.end261, label %lor.lhs.false205

lor.lhs.false205:                                 ; preds = %lor.lhs.false193
  %cmp210 = icmp sgt i32 %9, %10
  %cmp216 = icmp slt i32 %11, %8
  %or.cond188 = select i1 %cmp210, i1 %cmp216, i1 false
  br i1 %or.cond188, label %if.end261, label %lor.lhs.false217

lor.lhs.false217:                                 ; preds = %lor.lhs.false205
  %cmp228 = icmp slt i32 %10, %11
  %or.cond189 = select i1 %cmp198, i1 %cmp228, i1 false
  br i1 %or.cond189, label %if.end261, label %lor.rhs229

lor.rhs229:                                       ; preds = %lor.lhs.false217
  %cmp240 = icmp slt i32 %9, %8
  %or.cond190 = select i1 %cmp210, i1 %cmp240, i1 false
  %sub250 = add nsw i32 %9, -1
  %cmp251 = icmp eq i32 %8, %sub250
  %or.cond191 = select i1 %or.cond190, i1 true, i1 %cmp251
  br i1 %or.cond191, label %if.end261, label %lor.rhs252

lor.rhs252:                                       ; preds = %lor.rhs229
  %add257 = add nsw i32 %11, 1
  %cmp258 = icmp eq i32 %10, %add257
  br label %if.end261

if.end261:                                        ; preds = %lor.rhs229, %lor.lhs.false217, %lor.lhs.false205, %lor.lhs.false193, %if.end169, %lor.lhs.false175, %lor.rhs252
  %z_neighbor.0.in = phi i1 [ %cmp258, %lor.rhs252 ], [ true, %lor.lhs.false175 ], [ true, %if.end169 ], [ true, %lor.lhs.false193 ], [ true, %lor.lhs.false205 ], [ true, %lor.lhs.false217 ], [ true, %lor.rhs229 ]
  br i1 %x_neighbor.0.in, label %land.lhs.true263, label %land.end267

land.lhs.true263:                                 ; preds = %if.end261
  %spec.select = select i1 %y_neighbor.0.in, i1 %z_neighbor.0.in, i1 false
  br label %land.end267

land.end267:                                      ; preds = %land.lhs.true263, %if.end261
  %12 = phi i1 [ false, %if.end261 ], [ %spec.select, %land.lhs.true263 ]
  ret i1 %12
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly mustprogress nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: mustprogress nofree norecurse nosync nounwind readonly uwtable willreturn
define dso_local i64 @_ZN6miniFE18decide_how_to_growERK3BoxS2_(%struct.Box* nocapture noundef nonnull readonly align 4 dereferenceable(24) %global_box, %struct.Box* nocapture noundef nonnull readonly align 4 dereferenceable(24) %local_box) local_unnamed_addr #3 {
entry:
  %arrayidx = getelementptr inbounds %struct.Box, %struct.Box* %local_box, i64 0, i32 0, i64 5
  %0 = load i32, i32* %arrayidx, align 4, !tbaa !16
  %arrayidx2 = getelementptr inbounds %struct.Box, %struct.Box* %global_box, i64 0, i32 0, i64 5
  %1 = load i32, i32* %arrayidx2, align 4, !tbaa !16
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %arrayidx.i11 = getelementptr inbounds %struct.Box, %struct.Box* %global_box, i64 0, i32 0, i64 4
  %arrayidx.i = getelementptr inbounds %struct.Box, %struct.Box* %local_box, i64 0, i32 0, i64 4
  %2 = load i32, i32* %arrayidx.i, align 4, !tbaa !16
  %3 = load i32, i32* %arrayidx.i11, align 4, !tbaa !16
  %cmp7 = icmp sgt i32 %2, %3
  br i1 %cmp7, label %return, label %if.end11

if.end11:                                         ; preds = %if.end
  %arrayidx13 = getelementptr inbounds %struct.Box, %struct.Box* %local_box, i64 0, i32 0, i64 3
  %4 = load i32, i32* %arrayidx13, align 4, !tbaa !16
  %arrayidx15 = getelementptr inbounds %struct.Box, %struct.Box* %global_box, i64 0, i32 0, i64 3
  %5 = load i32, i32* %arrayidx15, align 4, !tbaa !16
  %cmp16 = icmp slt i32 %4, %5
  br i1 %cmp16, label %return, label %if.end20

if.end20:                                         ; preds = %if.end11
  %arrayidx.i15 = getelementptr inbounds %struct.Box, %struct.Box* %global_box, i64 0, i32 0, i64 2
  %arrayidx.i14 = getelementptr inbounds %struct.Box, %struct.Box* %local_box, i64 0, i32 0, i64 2
  %6 = load i32, i32* %arrayidx.i14, align 4, !tbaa !16
  %7 = load i32, i32* %arrayidx.i15, align 4, !tbaa !16
  %cmp25 = icmp sgt i32 %6, %7
  br i1 %cmp25, label %return, label %if.end29

if.end29:                                         ; preds = %if.end20
  %arrayidx31 = getelementptr inbounds %struct.Box, %struct.Box* %local_box, i64 0, i32 0, i64 1
  %8 = load i32, i32* %arrayidx31, align 4, !tbaa !16
  %arrayidx33 = getelementptr inbounds %struct.Box, %struct.Box* %global_box, i64 0, i32 0, i64 1
  %9 = load i32, i32* %arrayidx33, align 4, !tbaa !16
  %cmp34 = icmp slt i32 %8, %9
  br i1 %cmp34, label %return, label %if.end38

if.end38:                                         ; preds = %if.end29
  %arrayidx.i19 = getelementptr inbounds %struct.Box, %struct.Box* %global_box, i64 0, i32 0, i64 0
  %arrayidx.i18 = getelementptr inbounds %struct.Box, %struct.Box* %local_box, i64 0, i32 0, i64 0
  %10 = load i32, i32* %arrayidx.i18, align 4, !tbaa !16
  %11 = load i32, i32* %arrayidx.i19, align 4, !tbaa !16
  %cmp43 = icmp sgt i32 %10, %11
  %spec.select22 = select i1 %cmp43, i64 0, i64 3
  %phi.bo = select i1 %cmp43, i64 0, i64 4294967296
  br label %return

return:                                           ; preds = %if.end38, %if.end29, %if.end20, %if.end11, %if.end, %entry
  %retval.sroa.8.0 = phi i64 [ 4294967296, %entry ], [ 0, %if.end ], [ 4294967296, %if.end11 ], [ 0, %if.end20 ], [ 4294967296, %if.end29 ], [ %phi.bo, %if.end38 ]
  %retval.sroa.0.0 = phi i64 [ 2, %entry ], [ 2, %if.end ], [ 1, %if.end11 ], [ 1, %if.end20 ], [ 0, %if.end29 ], [ %spec.select22, %if.end38 ]
  %retval.sroa.0.0.insert.insert = or i64 %retval.sroa.0.0, %retval.sroa.8.0
  ret i64 %retval.sroa.0.0.insert.insert
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readonly uwtable willreturn
define dso_local i64 @_ZN6miniFE20decide_how_to_shrinkERK3BoxS2_(%struct.Box* nocapture noundef nonnull readonly align 4 dereferenceable(24) %global_box, %struct.Box* nocapture noundef nonnull readonly align 4 dereferenceable(24) %local_box) local_unnamed_addr #3 {
entry:
  %arrayidx.i = getelementptr inbounds %struct.Box, %struct.Box* %local_box, i64 0, i32 0, i64 4
  %arrayidx = getelementptr inbounds %struct.Box, %struct.Box* %local_box, i64 0, i32 0, i64 5
  %0 = load i32, i32* %arrayidx, align 4, !tbaa !16
  %arrayidx2 = getelementptr inbounds %struct.Box, %struct.Box* %global_box, i64 0, i32 0, i64 5
  %1 = load i32, i32* %arrayidx2, align 4, !tbaa !16
  %cmp = icmp slt i32 %0, %1
  %2 = load i32, i32* %arrayidx.i, align 4, !tbaa !16
  %sub = sub nsw i32 %0, %2
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %cmp7 = icmp sgt i32 %sub, 2
  br i1 %cmp7, label %return, label %if.end23

if.end:                                           ; preds = %entry
  %arrayidx.i23 = getelementptr inbounds %struct.Box, %struct.Box* %global_box, i64 0, i32 0, i64 4
  %3 = load i32, i32* %arrayidx.i23, align 4, !tbaa !16
  %cmp12 = icmp sgt i32 %2, %3
  %cmp19 = icmp sgt i32 %sub, 2
  %or.cond = select i1 %cmp12, i1 %cmp19, i1 false
  br i1 %or.cond, label %return, label %if.end23

if.end23:                                         ; preds = %land.lhs.true, %if.end
  %arrayidx.i30 = getelementptr inbounds %struct.Box, %struct.Box* %local_box, i64 0, i32 0, i64 2
  %arrayidx25 = getelementptr inbounds %struct.Box, %struct.Box* %local_box, i64 0, i32 0, i64 3
  %4 = load i32, i32* %arrayidx25, align 4, !tbaa !16
  %arrayidx27 = getelementptr inbounds %struct.Box, %struct.Box* %global_box, i64 0, i32 0, i64 3
  %5 = load i32, i32* %arrayidx27, align 4, !tbaa !16
  %cmp28 = icmp slt i32 %4, %5
  %6 = load i32, i32* %arrayidx.i30, align 4, !tbaa !16
  %sub34 = sub nsw i32 %4, %6
  br i1 %cmp28, label %land.lhs.true29, label %if.end39

land.lhs.true29:                                  ; preds = %if.end23
  %cmp35 = icmp sgt i32 %sub34, 2
  br i1 %cmp35, label %return, label %if.end55

if.end39:                                         ; preds = %if.end23
  %arrayidx.i31 = getelementptr inbounds %struct.Box, %struct.Box* %global_box, i64 0, i32 0, i64 2
  %7 = load i32, i32* %arrayidx.i31, align 4, !tbaa !16
  %cmp44 = icmp sgt i32 %6, %7
  %cmp51 = icmp sgt i32 %sub34, 2
  %or.cond46 = select i1 %cmp44, i1 %cmp51, i1 false
  br i1 %or.cond46, label %return, label %if.end55

if.end55:                                         ; preds = %land.lhs.true29, %if.end39
  %arrayidx.i38 = getelementptr inbounds %struct.Box, %struct.Box* %local_box, i64 0, i32 0, i64 0
  %arrayidx57 = getelementptr inbounds %struct.Box, %struct.Box* %local_box, i64 0, i32 0, i64 1
  %8 = load i32, i32* %arrayidx57, align 4, !tbaa !16
  %arrayidx59 = getelementptr inbounds %struct.Box, %struct.Box* %global_box, i64 0, i32 0, i64 1
  %9 = load i32, i32* %arrayidx59, align 4, !tbaa !16
  %cmp60 = icmp slt i32 %8, %9
  %10 = load i32, i32* %arrayidx.i38, align 4, !tbaa !16
  %sub66 = sub nsw i32 %8, %10
  %cmp67 = icmp sgt i32 %sub66, 2
  %or.cond62 = select i1 %cmp60, i1 %cmp67, i1 false
  br i1 %or.cond62, label %return, label %if.end71

if.end71:                                         ; preds = %if.end55
  %arrayidx.i39 = getelementptr inbounds %struct.Box, %struct.Box* %global_box, i64 0, i32 0, i64 0
  %11 = load i32, i32* %arrayidx.i39, align 4, !tbaa !16
  %cmp76 = icmp sgt i32 %10, %11
  %cmp83 = icmp sgt i32 %sub66, 2
  %or.cond47 = select i1 %cmp76, i1 %cmp83, i1 false
  %phi.bo = select i1 %or.cond47, i64 0, i64 4294967296
  %phi.cast = select i1 %or.cond47, i64 0, i64 3
  br label %return

return:                                           ; preds = %if.end55, %if.end71, %if.end39, %if.end, %land.lhs.true29, %land.lhs.true
  %retval.sroa.8.0 = phi i64 [ 4294967296, %land.lhs.true ], [ 4294967296, %land.lhs.true29 ], [ 0, %if.end ], [ 0, %if.end39 ], [ %phi.bo, %if.end71 ], [ 4294967296, %if.end55 ]
  %retval.sroa.0.0 = phi i64 [ 2, %land.lhs.true ], [ 1, %land.lhs.true29 ], [ 2, %if.end ], [ 1, %if.end39 ], [ %phi.cast, %if.end71 ], [ 0, %if.end55 ]
  %retval.sroa.0.0.insert.insert = or i64 %retval.sroa.0.0, %retval.sroa.8.0
  ret i64 %retval.sroa.0.0.insert.insert
}

; Function Attrs: norecurse uwtable
define dso_local noundef signext i32 @main(i32 noundef signext %argc, i8** noundef %argv) local_unnamed_addr #5 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %ref.tmp.i.i = alloca %"class.std::allocator", align 1
  %ref.tmp.i.i.i.i = alloca %"class.std::allocator", align 1
  %ref.tmp.i149 = alloca %"class.std::allocator", align 1
  %ref.tmp.i135 = alloca %"class.std::allocator", align 1
  %ref.tmp.i121 = alloca %"class.std::allocator", align 1
  %ref.tmp.i107 = alloca %"class.std::allocator", align 1
  %ref.tmp.i93 = alloca %"class.std::allocator", align 1
  %ref.tmp.i = alloca %"class.std::allocator", align 1
  %params = alloca %"struct.miniFE::Parameters", align 16
  %numprocs = alloca i32, align 4
  %myproc = alloca i32, align 4
  %value = alloca i32, align 4
  %thread_count = alloca i32, align 4
  %global_box = alloca %struct.Box, align 4
  %osstr = alloca %"class.std::basic_ostringstream", align 8
  %doc = alloca %class.YAML_Doc, align 8
  %ref.tmp92 = alloca %"class.std::basic_string", align 8
  %ref.tmp93 = alloca %"class.std::allocator", align 1
  %ref.tmp96 = alloca %"class.std::basic_string", align 8
  %ref.tmp97 = alloca %"class.std::allocator", align 1
  %ref.tmp100 = alloca %"class.std::basic_string", align 8
  %ref.tmp101 = alloca %"class.std::allocator", align 1
  %ref.tmp104 = alloca %"class.std::basic_string", align 8
  %ref.tmp136 = alloca %"class.std::basic_string", align 8
  %ref.tmp137 = alloca %"class.std::allocator", align 1
  %agg.tmp.ensured = alloca %"class.std::basic_string", align 8
  %0 = bitcast %"struct.miniFE::Parameters"* %params to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %0) #8
  %nx.i = getelementptr inbounds %"struct.miniFE::Parameters", %"struct.miniFE::Parameters"* %params, i64 0, i32 0
  %ny.i = getelementptr inbounds %"struct.miniFE::Parameters", %"struct.miniFE::Parameters"* %params, i64 0, i32 1
  %nz.i = getelementptr inbounds %"struct.miniFE::Parameters", %"struct.miniFE::Parameters"* %params, i64 0, i32 2
  %1 = bitcast %"struct.miniFE::Parameters"* %params to <4 x i32>*
  store <4 x i32> <i32 5, i32 5, i32 5, i32 1>, <4 x i32>* %1, align 16, !tbaa !16
  %mv_overlap_comm_comp.i = getelementptr inbounds %"struct.miniFE::Parameters", %"struct.miniFE::Parameters"* %params, i64 0, i32 4
  store i32 0, i32* %mv_overlap_comm_comp.i, align 16, !tbaa !20
  %use_locking.i = getelementptr inbounds %"struct.miniFE::Parameters", %"struct.miniFE::Parameters"* %params, i64 0, i32 5
  store i32 0, i32* %use_locking.i, align 4, !tbaa !26
  %load_imbalance.i = getelementptr inbounds %"struct.miniFE::Parameters", %"struct.miniFE::Parameters"* %params, i64 0, i32 6
  store float 0.000000e+00, float* %load_imbalance.i, align 8, !tbaa !27
  %_M_p.i.i.i = getelementptr inbounds %"struct.miniFE::Parameters", %"struct.miniFE::Parameters"* %params, i64 0, i32 8, i32 0, i32 0
  store i8* bitcast (i64* getelementptr inbounds ([0 x i64], [0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE, i64 0, i64 3) to i8*), i8** %_M_p.i.i.i, align 16, !tbaa !28
  %elem_group_size.i = getelementptr inbounds %"struct.miniFE::Parameters", %"struct.miniFE::Parameters"* %params, i64 0, i32 9
  %2 = bitcast i32* %elem_group_size.i to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 0, i32 0>, <4 x i32>* %2, align 8, !tbaa !16
  %num_devices.i = getelementptr inbounds %"struct.miniFE::Parameters", %"struct.miniFE::Parameters"* %params, i64 0, i32 13
  store i32 2, i32* %num_devices.i, align 8, !tbaa !29
  %skip_device.i = getelementptr inbounds %"struct.miniFE::Parameters", %"struct.miniFE::Parameters"* %params, i64 0, i32 14
  store i32 9999, i32* %skip_device.i, align 4, !tbaa !30
  %numa.i = getelementptr inbounds %"struct.miniFE::Parameters", %"struct.miniFE::Parameters"* %params, i64 0, i32 15
  store i32 1, i32* %numa.i, align 16, !tbaa !31
  invoke void @_ZN6miniFE14get_parametersEiPPcRNS_10ParametersE(i32 noundef signext %argc, i8** noundef %argv, %"struct.miniFE::Parameters"* noundef nonnull align 8 dereferenceable(68) %params)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %3 = bitcast i32* %numprocs to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #8
  store i32 1, i32* %numprocs, align 4, !tbaa !16
  %4 = bitcast i32* %myproc to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #8
  store i32 0, i32* %myproc, align 4, !tbaa !16
  invoke void @_ZN6miniFE14initialize_mpiEiPPcRiS2_(i32 noundef signext %argc, i8** noundef %argv, i32* noundef nonnull align 4 dereferenceable(4) %numprocs, i32* noundef nonnull align 4 dereferenceable(4) %myproc)
          to label %invoke.cont2 unwind label %lpad1

invoke.cont2:                                     ; preds = %invoke.cont
  %call = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %invoke.cont4 unwind label %lpad3

invoke.cont4:                                     ; preds = %invoke.cont2
  %5 = load i32, i32* %myproc, align 4, !tbaa !16
  %cmp = icmp eq i32 %5, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %invoke.cont4
  %call1.i41 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i8* noundef nonnull getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i64 noundef 43)
          to label %invoke.cont5 unwind label %lpad3

invoke.cont5:                                     ; preds = %if.then
  %vtable.i = load i8*, i8** bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8**), align 8, !tbaa !32
  %vbase.offset.ptr.i = getelementptr i8, i8* %vtable.i, i64 -24
  %6 = bitcast i8* %vbase.offset.ptr.i to i64*
  %vbase.offset.i = load i64, i64* %6, align 8
  %add.ptr.i171 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8*), i64 %vbase.offset.i
  %_M_ctype.i.i = getelementptr inbounds i8, i8* %add.ptr.i171, i64 240
  %7 = bitcast i8* %_M_ctype.i.i to %"class.std::ctype"**
  %8 = load %"class.std::ctype"*, %"class.std::ctype"** %7, align 8, !tbaa !34
  %tobool.not.i.i.i172 = icmp eq %"class.std::ctype"* %8, null
  br i1 %tobool.not.i.i.i172, label %if.then.i.i.i173, label %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i

if.then.i.i.i173:                                 ; preds = %invoke.cont5
  invoke void @_ZSt16__throw_bad_castv() #29
          to label %.noexc177 unwind label %lpad3

.noexc177:                                        ; preds = %if.then.i.i.i173
  unreachable

_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i: ; preds = %invoke.cont5
  %_M_widen_ok.i.i.i = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %8, i64 0, i32 8
  %9 = load i8, i8* %_M_widen_ok.i.i.i, align 8, !tbaa !37
  %tobool.not.i1.i.i = icmp eq i8 %9, 0
  br i1 %tobool.not.i1.i.i, label %if.end.i.i.i, label %if.then.i2.i.i

if.then.i2.i.i:                                   ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
  %arrayidx.i.i.i174 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %8, i64 0, i32 9, i64 10
  %10 = load i8, i8* %arrayidx.i.i.i174, align 1, !tbaa !39
  br label %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i

if.end.i.i.i:                                     ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %8)
          to label %.noexc178 unwind label %lpad3

.noexc178:                                        ; preds = %if.end.i.i.i
  %11 = bitcast %"class.std::ctype"* %8 to i8 (%"class.std::ctype"*, i8)***
  %vtable.i.i.i = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %11, align 8, !tbaa !32
  %vfn.i.i.i = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vtable.i.i.i, i64 6
  %12 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vfn.i.i.i, align 8
  %call.i.i.i179 = invoke noundef zeroext i8 %12(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %8, i8 noundef zeroext 10)
          to label %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i unwind label %lpad3

_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i: ; preds = %.noexc178, %if.then.i2.i.i
  %retval.0.i.i.i175 = phi i8 [ %10, %if.then.i2.i.i ], [ %call.i.i.i179, %.noexc178 ]
  %call1.i180 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i8 noundef zeroext %retval.0.i.i.i175)
          to label %call1.i.noexc unwind label %lpad3

call1.i.noexc:                                    ; preds = %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i
  %call.i.i176181 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call1.i180)
          to label %invoke.cont7 unwind label %lpad3

invoke.cont7:                                     ; preds = %call1.i.noexc
  %call1.i44 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i8* noundef nonnull getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0), i64 noundef 30)
          to label %invoke.cont9 unwind label %lpad3

invoke.cont9:                                     ; preds = %invoke.cont7
  %vtable.i182 = load i8*, i8** bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8**), align 8, !tbaa !32
  %vbase.offset.ptr.i183 = getelementptr i8, i8* %vtable.i182, i64 -24
  %13 = bitcast i8* %vbase.offset.ptr.i183 to i64*
  %vbase.offset.i184 = load i64, i64* %13, align 8
  %add.ptr.i185 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8*), i64 %vbase.offset.i184
  %_M_ctype.i.i186 = getelementptr inbounds i8, i8* %add.ptr.i185, i64 240
  %14 = bitcast i8* %_M_ctype.i.i186 to %"class.std::ctype"**
  %15 = load %"class.std::ctype"*, %"class.std::ctype"** %14, align 8, !tbaa !34
  %tobool.not.i.i.i187 = icmp eq %"class.std::ctype"* %15, null
  br i1 %tobool.not.i.i.i187, label %if.then.i.i.i188, label %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i191

if.then.i.i.i188:                                 ; preds = %invoke.cont9
  invoke void @_ZSt16__throw_bad_castv() #29
          to label %.noexc200 unwind label %lpad3

.noexc200:                                        ; preds = %if.then.i.i.i188
  unreachable

_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i191: ; preds = %invoke.cont9
  %_M_widen_ok.i.i.i189 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %15, i64 0, i32 8
  %16 = load i8, i8* %_M_widen_ok.i.i.i189, align 8, !tbaa !37
  %tobool.not.i1.i.i190 = icmp eq i8 %16, 0
  br i1 %tobool.not.i1.i.i190, label %if.end.i.i.i196, label %if.then.i2.i.i193

if.then.i2.i.i193:                                ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i191
  %arrayidx.i.i.i192 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %15, i64 0, i32 9, i64 10
  %17 = load i8, i8* %arrayidx.i.i.i192, align 1, !tbaa !39
  br label %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i199

if.end.i.i.i196:                                  ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i191
  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %15)
          to label %.noexc201 unwind label %lpad3

.noexc201:                                        ; preds = %if.end.i.i.i196
  %18 = bitcast %"class.std::ctype"* %15 to i8 (%"class.std::ctype"*, i8)***
  %vtable.i.i.i194 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %18, align 8, !tbaa !32
  %vfn.i.i.i195 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vtable.i.i.i194, i64 6
  %19 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vfn.i.i.i195, align 8
  %call.i.i.i203 = invoke noundef zeroext i8 %19(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %15, i8 noundef zeroext 10)
          to label %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i199 unwind label %lpad3

_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i199: ; preds = %.noexc201, %if.then.i2.i.i193
  %retval.0.i.i.i197 = phi i8 [ %17, %if.then.i2.i.i193 ], [ %call.i.i.i203, %.noexc201 ]
  %call1.i205 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i8 noundef zeroext %retval.0.i.i.i197)
          to label %call1.i.noexc204 unwind label %lpad3

call1.i.noexc204:                                 ; preds = %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i199
  %call.i.i198206 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call1.i205)
          to label %if.end unwind label %lpad3

lpad:                                             ; preds = %entry
  %20 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup182

lpad1:                                            ; preds = %invoke.cont
  %21 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup178

lpad3:                                            ; preds = %call1.i.noexc204, %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i199, %.noexc201, %if.end.i.i.i196, %if.then.i.i.i188, %call1.i.noexc, %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i, %.noexc178, %if.end.i.i.i, %if.then.i.i.i173, %invoke.cont7, %if.then, %invoke.cont2
  %22 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup178

if.end:                                           ; preds = %call1.i.noexc204, %invoke.cont4
  %23 = bitcast i32* %value to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %23) #8
  store i32 0, i32* %value, align 4, !tbaa !16
  %24 = bitcast i32* %thread_count to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24) #8
  %call15 = call signext i32 @omp_get_max_threads()
  store i32 %call15, i32* %thread_count, align 4, !tbaa !16
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull @3, i32 2, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i32*, i32*)* @.omp_outlined. to void (i32*, i32*, ...)*), i32* nonnull %thread_count, i32* nonnull %value)
  %25 = load i32, i32* %value, align 4, !tbaa !16
  %conv = sitofp i32 %25 to double
  %26 = load i32, i32* %myproc, align 4, !tbaa !16
  %cmp16 = icmp eq i32 %26, 0
  br i1 %cmp16, label %if.then17, label %if.end31

if.then17:                                        ; preds = %if.end
  %call1.i49 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i8* noundef nonnull getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), i64 noundef 9)
          to label %invoke.cont19 unwind label %lpad18

invoke.cont19:                                    ; preds = %if.then17
  %call.i51 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIdEERSoT_(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, double noundef %conv)
          to label %invoke.cont21 unwind label %lpad18

invoke.cont21:                                    ; preds = %invoke.cont19
  %call1.i53 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call.i51, i8* noundef nonnull getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 noundef 9)
          to label %invoke.cont23 unwind label %lpad18

invoke.cont23:                                    ; preds = %invoke.cont21
  %27 = bitcast %"class.std::basic_ostream"* %call.i51 to i8**
  %vtable.i208 = load i8*, i8** %27, align 8, !tbaa !32
  %vbase.offset.ptr.i209 = getelementptr i8, i8* %vtable.i208, i64 -24
  %28 = bitcast i8* %vbase.offset.ptr.i209 to i64*
  %vbase.offset.i210 = load i64, i64* %28, align 8
  %29 = bitcast %"class.std::basic_ostream"* %call.i51 to i8*
  %add.ptr.i211 = getelementptr inbounds i8, i8* %29, i64 %vbase.offset.i210
  %_M_ctype.i.i212 = getelementptr inbounds i8, i8* %add.ptr.i211, i64 240
  %30 = bitcast i8* %_M_ctype.i.i212 to %"class.std::ctype"**
  %31 = load %"class.std::ctype"*, %"class.std::ctype"** %30, align 8, !tbaa !34
  %tobool.not.i.i.i213 = icmp eq %"class.std::ctype"* %31, null
  br i1 %tobool.not.i.i.i213, label %if.then.i.i.i214, label %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i217

if.then.i.i.i214:                                 ; preds = %invoke.cont23
  invoke void @_ZSt16__throw_bad_castv() #29
          to label %.noexc226 unwind label %lpad18

.noexc226:                                        ; preds = %if.then.i.i.i214
  unreachable

_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i217: ; preds = %invoke.cont23
  %_M_widen_ok.i.i.i215 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %31, i64 0, i32 8
  %32 = load i8, i8* %_M_widen_ok.i.i.i215, align 8, !tbaa !37
  %tobool.not.i1.i.i216 = icmp eq i8 %32, 0
  br i1 %tobool.not.i1.i.i216, label %if.end.i.i.i222, label %if.then.i2.i.i219

if.then.i2.i.i219:                                ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i217
  %arrayidx.i.i.i218 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %31, i64 0, i32 9, i64 10
  %33 = load i8, i8* %arrayidx.i.i.i218, align 1, !tbaa !39
  br label %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i225

if.end.i.i.i222:                                  ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i217
  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %31)
          to label %.noexc227 unwind label %lpad18

.noexc227:                                        ; preds = %if.end.i.i.i222
  %34 = bitcast %"class.std::ctype"* %31 to i8 (%"class.std::ctype"*, i8)***
  %vtable.i.i.i220 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %34, align 8, !tbaa !32
  %vfn.i.i.i221 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vtable.i.i.i220, i64 6
  %35 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vfn.i.i.i221, align 8
  %call.i.i.i229 = invoke noundef zeroext i8 %35(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %31, i8 noundef zeroext 10)
          to label %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i225 unwind label %lpad18

_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i225: ; preds = %.noexc227, %if.then.i2.i.i219
  %retval.0.i.i.i223 = phi i8 [ %33, %if.then.i2.i.i219 ], [ %call.i.i.i229, %.noexc227 ]
  %call1.i231 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call.i51, i8 noundef zeroext %retval.0.i.i.i223)
          to label %call1.i.noexc230 unwind label %lpad18

call1.i.noexc230:                                 ; preds = %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i225
  %call.i.i224232 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call1.i231)
          to label %invoke.cont25 unwind label %lpad18

invoke.cont25:                                    ; preds = %call1.i.noexc230
  %call1.i58 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i8* noundef nonnull getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0), i64 noundef 26)
          to label %invoke.cont27 unwind label %lpad18

invoke.cont27:                                    ; preds = %invoke.cont25
  %vtable.i234 = load i8*, i8** bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8**), align 8, !tbaa !32
  %vbase.offset.ptr.i235 = getelementptr i8, i8* %vtable.i234, i64 -24
  %36 = bitcast i8* %vbase.offset.ptr.i235 to i64*
  %vbase.offset.i236 = load i64, i64* %36, align 8
  %add.ptr.i237 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8*), i64 %vbase.offset.i236
  %_M_ctype.i.i238 = getelementptr inbounds i8, i8* %add.ptr.i237, i64 240
  %37 = bitcast i8* %_M_ctype.i.i238 to %"class.std::ctype"**
  %38 = load %"class.std::ctype"*, %"class.std::ctype"** %37, align 8, !tbaa !34
  %tobool.not.i.i.i239 = icmp eq %"class.std::ctype"* %38, null
  br i1 %tobool.not.i.i.i239, label %if.then.i.i.i240, label %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i243

if.then.i.i.i240:                                 ; preds = %invoke.cont27
  invoke void @_ZSt16__throw_bad_castv() #29
          to label %.noexc252 unwind label %lpad18

.noexc252:                                        ; preds = %if.then.i.i.i240
  unreachable

_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i243: ; preds = %invoke.cont27
  %_M_widen_ok.i.i.i241 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %38, i64 0, i32 8
  %39 = load i8, i8* %_M_widen_ok.i.i.i241, align 8, !tbaa !37
  %tobool.not.i1.i.i242 = icmp eq i8 %39, 0
  br i1 %tobool.not.i1.i.i242, label %if.end.i.i.i248, label %if.then.i2.i.i245

if.then.i2.i.i245:                                ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i243
  %arrayidx.i.i.i244 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %38, i64 0, i32 9, i64 10
  %40 = load i8, i8* %arrayidx.i.i.i244, align 1, !tbaa !39
  br label %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i251

if.end.i.i.i248:                                  ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i243
  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %38)
          to label %.noexc253 unwind label %lpad18

.noexc253:                                        ; preds = %if.end.i.i.i248
  %41 = bitcast %"class.std::ctype"* %38 to i8 (%"class.std::ctype"*, i8)***
  %vtable.i.i.i246 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %41, align 8, !tbaa !32
  %vfn.i.i.i247 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vtable.i.i.i246, i64 6
  %42 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vfn.i.i.i247, align 8
  %call.i.i.i255 = invoke noundef zeroext i8 %42(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %38, i8 noundef zeroext 10)
          to label %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i251 unwind label %lpad18

_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i251: ; preds = %.noexc253, %if.then.i2.i.i245
  %retval.0.i.i.i249 = phi i8 [ %40, %if.then.i2.i.i245 ], [ %call.i.i.i255, %.noexc253 ]
  %call1.i257 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i8 noundef zeroext %retval.0.i.i.i249)
          to label %call1.i.noexc256 unwind label %lpad18

call1.i.noexc256:                                 ; preds = %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i251
  %call.i.i250258 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call1.i257)
          to label %if.end31 unwind label %lpad18

lpad18:                                           ; preds = %call1.i.noexc256, %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i251, %.noexc253, %if.end.i.i.i248, %if.then.i.i.i240, %call1.i.noexc230, %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i225, %.noexc227, %if.end.i.i.i222, %if.then.i.i.i214, %invoke.cont25, %invoke.cont21, %invoke.cont19, %if.then17, %if.end31
  %43 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup172

if.end31:                                         ; preds = %call1.i.noexc256, %if.end
  invoke void @_ZN6miniFE20broadcast_parametersERNS_10ParametersE(%"struct.miniFE::Parameters"* noundef nonnull align 8 dereferenceable(68) %params)
          to label %invoke.cont32 unwind label %lpad18

invoke.cont32:                                    ; preds = %if.end31
  %44 = bitcast %struct.Box* %global_box to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #8
  %arrayinit.begin = getelementptr inbounds %struct.Box, %struct.Box* %global_box, i64 0, i32 0, i64 0
  store i32 0, i32* %arrayinit.begin, align 4, !tbaa !16
  %arrayinit.element = getelementptr inbounds %struct.Box, %struct.Box* %global_box, i64 0, i32 0, i64 1
  %45 = load i32, i32* %nx.i, align 16, !tbaa !40
  store i32 %45, i32* %arrayinit.element, align 4, !tbaa !16
  %arrayinit.element33 = getelementptr inbounds %struct.Box, %struct.Box* %global_box, i64 0, i32 0, i64 2
  store i32 0, i32* %arrayinit.element33, align 4, !tbaa !16
  %arrayinit.element34 = getelementptr inbounds %struct.Box, %struct.Box* %global_box, i64 0, i32 0, i64 3
  %46 = load i32, i32* %ny.i, align 4, !tbaa !41
  store i32 %46, i32* %arrayinit.element34, align 4, !tbaa !16
  %arrayinit.element35 = getelementptr inbounds %struct.Box, %struct.Box* %global_box, i64 0, i32 0, i64 4
  store i32 0, i32* %arrayinit.element35, align 4, !tbaa !16
  %arrayinit.element36 = getelementptr inbounds %struct.Box, %struct.Box* %global_box, i64 0, i32 0, i64 5
  %47 = load i32, i32* %nz.i, align 8, !tbaa !42
  store i32 %47, i32* %arrayinit.element36, align 4, !tbaa !16
  %48 = load i32, i32* %numprocs, align 4, !tbaa !16
  %conv37 = sext i32 %48 to i64
  %cmp.not.i.i.i.i = icmp eq i32 %48, 0
  br i1 %cmp.not.i.i.i.i, label %invoke.cont39, label %cond.true.i.i.i.i

cond.true.i.i.i.i:                                ; preds = %invoke.cont32
  %cmp.i.i.i.i.i.i = icmp slt i32 %48, 0
  br i1 %cmp.i.i.i.i.i.i, label %if.then.i.i.i.i.i.i, label %for.body.i.i.i.preheader.i.i.i.i

if.then.i.i.i.i.i.i:                              ; preds = %cond.true.i.i.i.i
  invoke void @_ZSt17__throw_bad_allocv() #29
          to label %.noexc unwind label %lpad38

.noexc:                                           ; preds = %if.then.i.i.i.i.i.i
  unreachable

for.body.i.i.i.preheader.i.i.i.i:                 ; preds = %cond.true.i.i.i.i
  %mul.i.i.i.i.i.i = mul nuw nsw i64 %conv37, 24
  %call2.i.i.i.i1.i.i62 = invoke noalias noundef nonnull i8* @_Znwm(i64 noundef %mul.i.i.i.i.i.i) #30
          to label %call2.i.i.i.i1.i.i.noexc unwind label %lpad38

call2.i.i.i.i1.i.i.noexc:                         ; preds = %for.body.i.i.i.preheader.i.i.i.i
  %49 = bitcast i8* %call2.i.i.i.i1.i.i62 to %struct.Box*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %call2.i.i.i.i1.i.i62, i8 0, i64 %mul.i.i.i.i.i.i, i1 false)
  %.pre = load i32, i32* %numprocs, align 4, !tbaa !16
  br label %invoke.cont39

invoke.cont39:                                    ; preds = %call2.i.i.i.i1.i.i.noexc, %invoke.cont32
  %50 = phi i32 [ %.pre, %call2.i.i.i.i1.i.i.noexc ], [ 0, %invoke.cont32 ]
  %local_boxes.sroa.0.0 = phi %struct.Box* [ %49, %call2.i.i.i.i1.i.i.noexc ], [ null, %invoke.cont32 ]
  invoke void @_Z13box_partitioniiiRK3BoxPS_(i32 noundef signext 0, i32 noundef signext %50, i32 noundef signext 2, %struct.Box* noundef nonnull align 4 dereferenceable(24) %global_box, %struct.Box* noundef nonnull %local_boxes.sroa.0.0)
          to label %invoke.cont42 unwind label %ehcleanup162

invoke.cont42:                                    ; preds = %invoke.cont39
  %51 = load i32, i32* %myproc, align 4, !tbaa !16
  %conv43 = sext i32 %51 to i64
  %add.ptr.i = getelementptr inbounds %struct.Box, %struct.Box* %local_boxes.sroa.0.0, i64 %conv43
  %arrayidx.i.i = getelementptr inbounds %struct.Box, %struct.Box* %add.ptr.i, i64 0, i32 0, i64 0
  %arrayidx.i = getelementptr inbounds %struct.Box, %struct.Box* %local_boxes.sroa.0.0, i64 %conv43, i32 0, i64 1
  %52 = load i32, i32* %arrayidx.i, align 4, !tbaa !16
  %53 = load i32, i32* %arrayidx.i.i, align 4, !tbaa !16
  %sub.i = sub nsw i32 %52, %53
  %arrayidx.i12.i = getelementptr inbounds %struct.Box, %struct.Box* %local_boxes.sroa.0.0, i64 %conv43, i32 0, i64 2
  %arrayidx4.i = getelementptr inbounds %struct.Box, %struct.Box* %local_boxes.sroa.0.0, i64 %conv43, i32 0, i64 3
  %54 = load i32, i32* %arrayidx4.i, align 4, !tbaa !16
  %55 = load i32, i32* %arrayidx.i12.i, align 4, !tbaa !16
  %sub7.i = sub nsw i32 %54, %55
  %arrayidx.i14.i = getelementptr inbounds %struct.Box, %struct.Box* %local_boxes.sroa.0.0, i64 %conv43, i32 0, i64 4
  %arrayidx9.i = getelementptr inbounds %struct.Box, %struct.Box* %local_boxes.sroa.0.0, i64 %conv43, i32 0, i64 5
  %56 = load i32, i32* %arrayidx9.i, align 4, !tbaa !16
  %57 = load i32, i32* %arrayidx.i14.i, align 4, !tbaa !16
  %sub12.i = sub nsw i32 %56, %57
  %mul.i = mul nsw i32 %sub7.i, %sub.i
  %mul13.i = mul nsw i32 %mul.i, %sub12.i
  %cmp48 = icmp eq i32 %mul13.i, 0
  br i1 %cmp48, label %if.then49, label %if.end56

if.then49:                                        ; preds = %invoke.cont42
  %call1.i65 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i8* noundef nonnull getelementptr inbounds ([75 x i8], [75 x i8]* @.str.5, i64 0, i64 0), i64 noundef 74)
          to label %invoke.cont51 unwind label %lpad50

invoke.cont51:                                    ; preds = %if.then49
  %vtable.i260 = load i8*, i8** bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8**), align 8, !tbaa !32
  %vbase.offset.ptr.i261 = getelementptr i8, i8* %vtable.i260, i64 -24
  %58 = bitcast i8* %vbase.offset.ptr.i261 to i64*
  %vbase.offset.i262 = load i64, i64* %58, align 8
  %add.ptr.i263 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8*), i64 %vbase.offset.i262
  %_M_ctype.i.i264 = getelementptr inbounds i8, i8* %add.ptr.i263, i64 240
  %59 = bitcast i8* %_M_ctype.i.i264 to %"class.std::ctype"**
  %60 = load %"class.std::ctype"*, %"class.std::ctype"** %59, align 8, !tbaa !34
  %tobool.not.i.i.i265 = icmp eq %"class.std::ctype"* %60, null
  br i1 %tobool.not.i.i.i265, label %if.then.i.i.i266, label %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i269

if.then.i.i.i266:                                 ; preds = %invoke.cont51
  invoke void @_ZSt16__throw_bad_castv() #29
          to label %.noexc278 unwind label %lpad50

.noexc278:                                        ; preds = %if.then.i.i.i266
  unreachable

_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i269: ; preds = %invoke.cont51
  %_M_widen_ok.i.i.i267 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %60, i64 0, i32 8
  %61 = load i8, i8* %_M_widen_ok.i.i.i267, align 8, !tbaa !37
  %tobool.not.i1.i.i268 = icmp eq i8 %61, 0
  br i1 %tobool.not.i1.i.i268, label %if.end.i.i.i274, label %if.then.i2.i.i271

if.then.i2.i.i271:                                ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i269
  %arrayidx.i.i.i270 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %60, i64 0, i32 9, i64 10
  %62 = load i8, i8* %arrayidx.i.i.i270, align 1, !tbaa !39
  br label %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i277

if.end.i.i.i274:                                  ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i269
  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %60)
          to label %.noexc279 unwind label %lpad50

.noexc279:                                        ; preds = %if.end.i.i.i274
  %63 = bitcast %"class.std::ctype"* %60 to i8 (%"class.std::ctype"*, i8)***
  %vtable.i.i.i272 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %63, align 8, !tbaa !32
  %vfn.i.i.i273 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vtable.i.i.i272, i64 6
  %64 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vfn.i.i.i273, align 8
  %call.i.i.i281 = invoke noundef zeroext i8 %64(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %60, i8 noundef zeroext 10)
          to label %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i277 unwind label %lpad50

_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i277: ; preds = %.noexc279, %if.then.i2.i.i271
  %retval.0.i.i.i275 = phi i8 [ %62, %if.then.i2.i.i271 ], [ %call.i.i.i281, %.noexc279 ]
  %call1.i283 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i8 noundef zeroext %retval.0.i.i.i275)
          to label %call1.i.noexc282 unwind label %lpad50

call1.i.noexc282:                                 ; preds = %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i277
  %call.i.i276284 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call1.i283)
          to label %invoke.cont53 unwind label %lpad50

invoke.cont53:                                    ; preds = %call1.i.noexc282
  invoke void @_ZN6miniFE12finalize_mpiEv()
          to label %_ZNSt6vectorI3BoxSaIS0_EED2Ev.exit unwind label %lpad50

lpad38:                                           ; preds = %for.body.i.i.i.preheader.i.i.i.i, %if.then.i.i.i.i.i.i
  %65 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup164

lpad50:                                           ; preds = %call1.i.noexc282, %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i277, %.noexc279, %if.end.i.i.i274, %if.then.i.i.i266, %if.then49, %invoke.cont53
  %66 = landingpad { i8*, i32 }
          cleanup
  br label %if.then.i.i.i169

if.end56:                                         ; preds = %invoke.cont42
  %67 = bitcast %"class.std::basic_ostringstream"* %osstr to i8*
  call void @llvm.lifetime.start.p0i8(i64 352, i8* nonnull %67) #8
  invoke void @_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEEC1ESt13_Ios_Openmode(%"class.std::basic_ostringstream"* noundef nonnull align 8 dereferenceable(88) %osstr, i32 noundef signext 16)
          to label %invoke.cont58 unwind label %lpad57

invoke.cont58:                                    ; preds = %if.end56
  %68 = bitcast %"class.std::basic_ostringstream"* %osstr to %"class.std::basic_ostream"*
  %call1.i70 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %68, i8* noundef nonnull getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0), i64 noundef 7)
          to label %invoke.cont60 unwind label %lpad59

invoke.cont60:                                    ; preds = %invoke.cont58
  %69 = load i32, i32* %nx.i, align 16, !tbaa !40
  %call64 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %68, i32 noundef signext %69)
          to label %invoke.cont63 unwind label %lpad59

invoke.cont63:                                    ; preds = %invoke.cont60
  %call1.i73 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call64, i8* noundef nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i64 noundef 1)
          to label %invoke.cont65 unwind label %lpad59

invoke.cont65:                                    ; preds = %invoke.cont63
  %70 = load i32, i32* %ny.i, align 4, !tbaa !41
  %call69 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call64, i32 noundef signext %70)
          to label %invoke.cont68 unwind label %lpad59

invoke.cont68:                                    ; preds = %invoke.cont65
  %call1.i76 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call69, i8* noundef nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i64 noundef 1)
          to label %invoke.cont70 unwind label %lpad59

invoke.cont70:                                    ; preds = %invoke.cont68
  %71 = load i32, i32* %nz.i, align 8, !tbaa !42
  %call74 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call69, i32 noundef signext %71)
          to label %invoke.cont73 unwind label %lpad59

invoke.cont73:                                    ; preds = %invoke.cont70
  %call1.i79 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %68, i8* noundef nonnull getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i64 noundef 2)
          to label %invoke.cont75 unwind label %lpad59

invoke.cont75:                                    ; preds = %invoke.cont73
  %call78 = call signext i32 @omp_get_max_threads()
  %call80 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %68, i32 noundef signext %call78)
          to label %invoke.cont79 unwind label %lpad59

invoke.cont79:                                    ; preds = %invoke.cont75
  %call1.i82 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %68, i8* noundef nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0), i64 noundef 1)
          to label %invoke.cont83 unwind label %lpad59

invoke.cont83:                                    ; preds = %invoke.cont79
  %name = getelementptr inbounds %"struct.miniFE::Parameters", %"struct.miniFE::Parameters"* %params, i64 0, i32 8
  %call.i.i84 = call noundef signext i32 @_ZNKSs7compareEPKc(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %name, i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0)) #8
  %cmp.i.i.not = icmp eq i32 %call.i.i84, 0
  br i1 %cmp.i.i.not, label %if.end91, label %if.then85

if.then85:                                        ; preds = %invoke.cont83
  %_M_p.i.i.i85 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %name, i64 0, i32 0, i32 0
  %72 = load i8*, i8** %_M_p.i.i.i85, align 16, !tbaa !43
  %arrayidx.i.i.i = getelementptr inbounds i8, i8* %72, i64 -24
  %_M_length.i.i = bitcast i8* %arrayidx.i.i.i to i64*
  %73 = load i64, i64* %_M_length.i.i, align 8, !tbaa !44
  %call2.i86 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %68, i8* noundef nonnull %72, i64 noundef %73)
          to label %invoke.cont87 unwind label %lpad59

invoke.cont87:                                    ; preds = %if.then85
  %call1.i88 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call2.i86, i8* noundef nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0), i64 noundef 1)
          to label %if.end91 unwind label %lpad59

lpad57:                                           ; preds = %if.end56
  %74 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup155

lpad59:                                           ; preds = %invoke.cont87, %if.then85, %invoke.cont79, %invoke.cont73, %invoke.cont68, %invoke.cont63, %invoke.cont58, %invoke.cont75, %invoke.cont70, %invoke.cont65, %invoke.cont60
  %75 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup154

if.end91:                                         ; preds = %invoke.cont87, %invoke.cont83
  %76 = bitcast %class.YAML_Doc* %doc to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %76) #8
  %77 = bitcast %"class.std::basic_string"* %ref.tmp92 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #8
  %78 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp93, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %78) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp92, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp93)
          to label %invoke.cont95 unwind label %lpad94

invoke.cont95:                                    ; preds = %if.end91
  %79 = bitcast %"class.std::basic_string"* %ref.tmp96 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #8
  %80 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp97, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %80) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp96, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp97)
          to label %invoke.cont99 unwind label %lpad98

invoke.cont99:                                    ; preds = %invoke.cont95
  %81 = bitcast %"class.std::basic_string"* %ref.tmp100 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81) #8
  %82 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp101, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %82) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp100, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp101)
          to label %invoke.cont103 unwind label %lpad102

invoke.cont103:                                   ; preds = %invoke.cont99
  %83 = bitcast %"class.std::basic_string"* %ref.tmp104 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #8
  %_M_stringbuf.i = getelementptr inbounds %"class.std::basic_ostringstream", %"class.std::basic_ostringstream"* %osstr, i64 0, i32 1
  invoke void @_ZNKSt15basic_stringbufIcSt11char_traitsIcESaIcEE3strEv(%"class.std::basic_string"* nonnull sret(%"class.std::basic_string") align 8 %ref.tmp104, %"class.std::basic_stringbuf"* noundef nonnull align 8 dereferenceable(80) %_M_stringbuf.i)
          to label %invoke.cont106 unwind label %lpad105

invoke.cont106:                                   ; preds = %invoke.cont103
  invoke void @_ZN8YAML_DocC1ERKSsS1_S1_S1_(%class.YAML_Doc* noundef nonnull align 8 dereferenceable(72) %doc, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp92, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp96, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp100, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp104)
          to label %invoke.cont108 unwind label %lpad107

invoke.cont108:                                   ; preds = %invoke.cont106
  %_M_p.i.i.i91 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp104, i64 0, i32 0, i32 0
  %84 = load i8*, i8** %_M_p.i.i.i91, align 8, !tbaa !43
  %arrayidx.i.i92 = getelementptr inbounds i8, i8* %84, i64 -24
  %85 = bitcast i8* %arrayidx.i.i92 to %"struct.std::basic_string<char>::_Rep"*
  %86 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %86) #8
  %cmp.not.i.i = icmp eq i8* %arrayidx.i.i92, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i, label %_ZNSsD2Ev.exit, label %if.then.i.i, !prof !47

if.then.i.i:                                      ; preds = %invoke.cont108
  %_M_refcount.i.i = getelementptr inbounds i8, i8* %84, i64 -8
  %87 = bitcast i8* %_M_refcount.i.i to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i, label %if.else.i.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i
  %88 = atomicrmw volatile add i32* %87, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i

if.else.i.i.i:                                    ; preds = %if.then.i.i
  %89 = load i32, i32* %87, align 8, !tbaa !16
  %add.i.i.i.i = add nsw i32 %89, -1
  store i32 %add.i.i.i.i, i32* %87, align 8, !tbaa !16
  br label %invoke.cont.i.i

invoke.cont.i.i:                                  ; preds = %if.else.i.i.i, %if.then.i.i.i
  %retval.0.i.i.i = phi i32 [ %88, %if.then.i.i.i ], [ %89, %if.else.i.i.i ]
  %cmp3.i.i = icmp slt i32 %retval.0.i.i.i, 1
  br i1 %cmp3.i.i, label %if.then4.i.i, label %_ZNSsD2Ev.exit

if.then4.i.i:                                     ; preds = %invoke.cont.i.i
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %85, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i) #8
  br label %_ZNSsD2Ev.exit

_ZNSsD2Ev.exit:                                   ; preds = %invoke.cont108, %invoke.cont.i.i, %if.then4.i.i
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %86) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #8
  %_M_p.i.i.i94 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp100, i64 0, i32 0, i32 0
  %90 = load i8*, i8** %_M_p.i.i.i94, align 8, !tbaa !43
  %arrayidx.i.i95 = getelementptr inbounds i8, i8* %90, i64 -24
  %91 = bitcast i8* %arrayidx.i.i95 to %"struct.std::basic_string<char>::_Rep"*
  %92 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i93, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %92) #8
  %cmp.not.i.i96 = icmp eq i8* %arrayidx.i.i95, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i96, label %_ZNSsD2Ev.exit106, label %if.then.i.i98, !prof !47

if.then.i.i98:                                    ; preds = %_ZNSsD2Ev.exit
  %_M_refcount.i.i97 = getelementptr inbounds i8, i8* %90, i64 -8
  %93 = bitcast i8* %_M_refcount.i.i97 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i99, label %if.else.i.i.i101

if.then.i.i.i99:                                  ; preds = %if.then.i.i98
  %94 = atomicrmw volatile add i32* %93, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i104

if.else.i.i.i101:                                 ; preds = %if.then.i.i98
  %95 = load i32, i32* %93, align 8, !tbaa !16
  %add.i.i.i.i100 = add nsw i32 %95, -1
  store i32 %add.i.i.i.i100, i32* %93, align 8, !tbaa !16
  br label %invoke.cont.i.i104

invoke.cont.i.i104:                               ; preds = %if.else.i.i.i101, %if.then.i.i.i99
  %retval.0.i.i.i102 = phi i32 [ %94, %if.then.i.i.i99 ], [ %95, %if.else.i.i.i101 ]
  %cmp3.i.i103 = icmp slt i32 %retval.0.i.i.i102, 1
  br i1 %cmp3.i.i103, label %if.then4.i.i105, label %_ZNSsD2Ev.exit106

if.then4.i.i105:                                  ; preds = %invoke.cont.i.i104
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %91, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i93) #8
  br label %_ZNSsD2Ev.exit106

_ZNSsD2Ev.exit106:                                ; preds = %_ZNSsD2Ev.exit, %invoke.cont.i.i104, %if.then4.i.i105
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %92) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %82) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #8
  %_M_p.i.i.i108 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp96, i64 0, i32 0, i32 0
  %96 = load i8*, i8** %_M_p.i.i.i108, align 8, !tbaa !43
  %arrayidx.i.i109 = getelementptr inbounds i8, i8* %96, i64 -24
  %97 = bitcast i8* %arrayidx.i.i109 to %"struct.std::basic_string<char>::_Rep"*
  %98 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i107, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %98) #8
  %cmp.not.i.i110 = icmp eq i8* %arrayidx.i.i109, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i110, label %_ZNSsD2Ev.exit120, label %if.then.i.i112, !prof !47

if.then.i.i112:                                   ; preds = %_ZNSsD2Ev.exit106
  %_M_refcount.i.i111 = getelementptr inbounds i8, i8* %96, i64 -8
  %99 = bitcast i8* %_M_refcount.i.i111 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i113, label %if.else.i.i.i115

if.then.i.i.i113:                                 ; preds = %if.then.i.i112
  %100 = atomicrmw volatile add i32* %99, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i118

if.else.i.i.i115:                                 ; preds = %if.then.i.i112
  %101 = load i32, i32* %99, align 8, !tbaa !16
  %add.i.i.i.i114 = add nsw i32 %101, -1
  store i32 %add.i.i.i.i114, i32* %99, align 8, !tbaa !16
  br label %invoke.cont.i.i118

invoke.cont.i.i118:                               ; preds = %if.else.i.i.i115, %if.then.i.i.i113
  %retval.0.i.i.i116 = phi i32 [ %100, %if.then.i.i.i113 ], [ %101, %if.else.i.i.i115 ]
  %cmp3.i.i117 = icmp slt i32 %retval.0.i.i.i116, 1
  br i1 %cmp3.i.i117, label %if.then4.i.i119, label %_ZNSsD2Ev.exit120

if.then4.i.i119:                                  ; preds = %invoke.cont.i.i118
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %97, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i107) #8
  br label %_ZNSsD2Ev.exit120

_ZNSsD2Ev.exit120:                                ; preds = %_ZNSsD2Ev.exit106, %invoke.cont.i.i118, %if.then4.i.i119
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %98) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %80) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #8
  %_M_p.i.i.i122 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp92, i64 0, i32 0, i32 0
  %102 = load i8*, i8** %_M_p.i.i.i122, align 8, !tbaa !43
  %arrayidx.i.i123 = getelementptr inbounds i8, i8* %102, i64 -24
  %103 = bitcast i8* %arrayidx.i.i123 to %"struct.std::basic_string<char>::_Rep"*
  %104 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i121, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %104) #8
  %cmp.not.i.i124 = icmp eq i8* %arrayidx.i.i123, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i124, label %_ZNSsD2Ev.exit134, label %if.then.i.i126, !prof !47

if.then.i.i126:                                   ; preds = %_ZNSsD2Ev.exit120
  %_M_refcount.i.i125 = getelementptr inbounds i8, i8* %102, i64 -8
  %105 = bitcast i8* %_M_refcount.i.i125 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i127, label %if.else.i.i.i129

if.then.i.i.i127:                                 ; preds = %if.then.i.i126
  %106 = atomicrmw volatile add i32* %105, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i132

if.else.i.i.i129:                                 ; preds = %if.then.i.i126
  %107 = load i32, i32* %105, align 8, !tbaa !16
  %add.i.i.i.i128 = add nsw i32 %107, -1
  store i32 %add.i.i.i.i128, i32* %105, align 8, !tbaa !16
  br label %invoke.cont.i.i132

invoke.cont.i.i132:                               ; preds = %if.else.i.i.i129, %if.then.i.i.i127
  %retval.0.i.i.i130 = phi i32 [ %106, %if.then.i.i.i127 ], [ %107, %if.else.i.i.i129 ]
  %cmp3.i.i131 = icmp slt i32 %retval.0.i.i.i130, 1
  br i1 %cmp3.i.i131, label %if.then4.i.i133, label %_ZNSsD2Ev.exit134

if.then4.i.i133:                                  ; preds = %invoke.cont.i.i132
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %103, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i121) #8
  br label %_ZNSsD2Ev.exit134

_ZNSsD2Ev.exit134:                                ; preds = %_ZNSsD2Ev.exit120, %invoke.cont.i.i132, %if.then4.i.i133
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %104) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %78) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #8
  %108 = load i32, i32* %myproc, align 4, !tbaa !16
  %cmp121 = icmp eq i32 %108, 0
  br i1 %cmp121, label %if.then122, label %if.end127

if.then122:                                       ; preds = %_ZNSsD2Ev.exit134
  invoke void @_Z18add_params_to_yamlR8YAML_DocRN6miniFE10ParametersE(%class.YAML_Doc* noundef nonnull align 8 dereferenceable(72) %doc, %"struct.miniFE::Parameters"* noundef nonnull align 8 dereferenceable(68) %params)
          to label %invoke.cont124 unwind label %lpad123

invoke.cont124:                                   ; preds = %if.then122
  %109 = load i32, i32* %numprocs, align 4, !tbaa !16
  invoke void @_Z25add_configuration_to_yamlR8YAML_Docii(%class.YAML_Doc* noundef nonnull align 8 dereferenceable(72) %doc, i32 noundef signext %109, i32 signext undef)
          to label %invoke.cont125 unwind label %lpad123

invoke.cont125:                                   ; preds = %invoke.cont124
  invoke void @_Z22add_timestring_to_yamlR8YAML_Doc(%class.YAML_Doc* noundef nonnull align 8 dereferenceable(72) %doc)
          to label %if.end127 unwind label %lpad123

lpad94:                                           ; preds = %if.end91
  %110 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup118

lpad98:                                           ; preds = %invoke.cont95
  %111 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup114

lpad102:                                          ; preds = %invoke.cont99
  %112 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup110

lpad105:                                          ; preds = %invoke.cont103
  %113 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup

lpad107:                                          ; preds = %invoke.cont106
  %114 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp104) #8
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad107, %lpad105
  %.pn = phi { i8*, i32 } [ %114, %lpad107 ], [ %113, %lpad105 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #8
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp100) #8
  br label %ehcleanup110

ehcleanup110:                                     ; preds = %ehcleanup, %lpad102
  %.pn.pn = phi { i8*, i32 } [ %.pn, %ehcleanup ], [ %112, %lpad102 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %82) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #8
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp96) #8
  br label %ehcleanup114

ehcleanup114:                                     ; preds = %ehcleanup110, %lpad98
  %.pn.pn.pn = phi { i8*, i32 } [ %.pn.pn, %ehcleanup110 ], [ %111, %lpad98 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %80) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #8
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp92) #8
  br label %ehcleanup118

ehcleanup118:                                     ; preds = %ehcleanup114, %lpad94
  %.pn.pn.pn.pn = phi { i8*, i32 } [ %.pn.pn.pn, %ehcleanup114 ], [ %110, %lpad94 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %78) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #8
  br label %ehcleanup153

lpad123:                                          ; preds = %invoke.cont125, %invoke.cont124, %if.then122
  %115 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup152

if.end127:                                        ; preds = %invoke.cont125, %_ZNSsD2Ev.exit134
  %call130 = invoke noundef signext i32 @_ZN6miniFE6driverIdiiEEiRK3BoxRS1_RNS_10ParametersER8YAML_Doc(%struct.Box* noundef nonnull align 4 dereferenceable(24) %global_box, %struct.Box* noundef nonnull align 4 dereferenceable(24) %add.ptr.i, %"struct.miniFE::Parameters"* noundef nonnull align 8 dereferenceable(68) %params, %class.YAML_Doc* noundef nonnull align 8 dereferenceable(72) %doc)
          to label %invoke.cont129 unwind label %lpad128

invoke.cont129:                                   ; preds = %if.end127
  %call133 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %invoke.cont132 unwind label %lpad131

invoke.cont132:                                   ; preds = %invoke.cont129
  %sub = fsub contract double %call133, %call
  %116 = load i32, i32* %myproc, align 4, !tbaa !16
  %cmp134 = icmp eq i32 %116, 0
  br i1 %cmp134, label %if.then135, label %if.end148

if.then135:                                       ; preds = %invoke.cont132
  %117 = bitcast %"class.std::basic_string"* %ref.tmp136 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %117) #8
  %118 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp137, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %118) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp136, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.13, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp137)
          to label %invoke.cont139 unwind label %lpad138

invoke.cont139:                                   ; preds = %if.then135
  %119 = getelementptr inbounds %class.YAML_Doc, %class.YAML_Doc* %doc, i64 0, i32 0
  %call142 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsd(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %119, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp136, double noundef %sub)
          to label %invoke.cont141 unwind label %lpad140

invoke.cont141:                                   ; preds = %invoke.cont139
  %_M_p.i.i.i136 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp136, i64 0, i32 0, i32 0
  %120 = load i8*, i8** %_M_p.i.i.i136, align 8, !tbaa !43
  %arrayidx.i.i137 = getelementptr inbounds i8, i8* %120, i64 -24
  %121 = bitcast i8* %arrayidx.i.i137 to %"struct.std::basic_string<char>::_Rep"*
  %122 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i135, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %122) #8
  %cmp.not.i.i138 = icmp eq i8* %arrayidx.i.i137, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i138, label %_ZNSsD2Ev.exit148, label %if.then.i.i140, !prof !47

if.then.i.i140:                                   ; preds = %invoke.cont141
  %_M_refcount.i.i139 = getelementptr inbounds i8, i8* %120, i64 -8
  %123 = bitcast i8* %_M_refcount.i.i139 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i141, label %if.else.i.i.i143

if.then.i.i.i141:                                 ; preds = %if.then.i.i140
  %124 = atomicrmw volatile add i32* %123, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i146

if.else.i.i.i143:                                 ; preds = %if.then.i.i140
  %125 = load i32, i32* %123, align 8, !tbaa !16
  %add.i.i.i.i142 = add nsw i32 %125, -1
  store i32 %add.i.i.i.i142, i32* %123, align 8, !tbaa !16
  br label %invoke.cont.i.i146

invoke.cont.i.i146:                               ; preds = %if.else.i.i.i143, %if.then.i.i.i141
  %retval.0.i.i.i144 = phi i32 [ %124, %if.then.i.i.i141 ], [ %125, %if.else.i.i.i143 ]
  %cmp3.i.i145 = icmp slt i32 %retval.0.i.i.i144, 1
  br i1 %cmp3.i.i145, label %if.then4.i.i147, label %_ZNSsD2Ev.exit148

if.then4.i.i147:                                  ; preds = %invoke.cont.i.i146
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %121, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i135) #8
  br label %_ZNSsD2Ev.exit148

_ZNSsD2Ev.exit148:                                ; preds = %invoke.cont141, %invoke.cont.i.i146, %if.then4.i.i147
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %122) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %118) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %117) #8
  invoke void @_ZN8YAML_Doc12generateYAMLEv(%"class.std::basic_string"* nonnull sret(%"class.std::basic_string") align 8 %agg.tmp.ensured, %class.YAML_Doc* noundef nonnull align 8 dereferenceable(72) %doc)
          to label %invoke.cont147 unwind label %lpad131

invoke.cont147:                                   ; preds = %_ZNSsD2Ev.exit148
  %_M_p.i.i.i150 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %agg.tmp.ensured, i64 0, i32 0, i32 0
  %126 = load i8*, i8** %_M_p.i.i.i150, align 8, !tbaa !43
  %arrayidx.i.i151 = getelementptr inbounds i8, i8* %126, i64 -24
  %127 = bitcast i8* %arrayidx.i.i151 to %"struct.std::basic_string<char>::_Rep"*
  %128 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i149, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %128) #8
  %cmp.not.i.i152 = icmp eq i8* %arrayidx.i.i151, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i152, label %_ZNSsD2Ev.exit162, label %if.then.i.i154, !prof !47

if.then.i.i154:                                   ; preds = %invoke.cont147
  %_M_refcount.i.i153 = getelementptr inbounds i8, i8* %126, i64 -8
  %129 = bitcast i8* %_M_refcount.i.i153 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i155, label %if.else.i.i.i157

if.then.i.i.i155:                                 ; preds = %if.then.i.i154
  %130 = atomicrmw volatile add i32* %129, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i160

if.else.i.i.i157:                                 ; preds = %if.then.i.i154
  %131 = load i32, i32* %129, align 8, !tbaa !16
  %add.i.i.i.i156 = add nsw i32 %131, -1
  store i32 %add.i.i.i.i156, i32* %129, align 8, !tbaa !16
  br label %invoke.cont.i.i160

invoke.cont.i.i160:                               ; preds = %if.else.i.i.i157, %if.then.i.i.i155
  %retval.0.i.i.i158 = phi i32 [ %130, %if.then.i.i.i155 ], [ %131, %if.else.i.i.i157 ]
  %cmp3.i.i159 = icmp slt i32 %retval.0.i.i.i158, 1
  br i1 %cmp3.i.i159, label %if.then4.i.i161, label %_ZNSsD2Ev.exit162

if.then4.i.i161:                                  ; preds = %invoke.cont.i.i160
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %127, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i149) #8
  br label %_ZNSsD2Ev.exit162

_ZNSsD2Ev.exit162:                                ; preds = %invoke.cont147, %invoke.cont.i.i160, %if.then4.i.i161
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %128) #8
  br label %if.end148

lpad128:                                          ; preds = %if.end127
  %132 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup152

lpad131:                                          ; preds = %if.end148, %_ZNSsD2Ev.exit148, %invoke.cont129
  %133 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup152

lpad138:                                          ; preds = %if.then135
  %134 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup144

lpad140:                                          ; preds = %invoke.cont139
  %135 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp136) #8
  br label %ehcleanup144

ehcleanup144:                                     ; preds = %lpad140, %lpad138
  %.pn24 = phi { i8*, i32 } [ %135, %lpad140 ], [ %134, %lpad138 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %118) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %117) #8
  br label %ehcleanup152

if.end148:                                        ; preds = %_ZNSsD2Ev.exit162, %invoke.cont132
  invoke void @_ZN6miniFE12finalize_mpiEv()
          to label %invoke.cont149 unwind label %lpad131

invoke.cont149:                                   ; preds = %if.end148
  call void @_ZN8YAML_DocD1Ev(%class.YAML_Doc* noundef nonnull align 8 dereferenceable(72) %doc) #8
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %76) #8
  %136 = load i32 (...)**, i32 (...)*** bitcast ([4 x i8*]* @_ZTTSt19basic_ostringstreamIcSt11char_traitsIcESaIcEE to i32 (...)***), align 8
  %137 = getelementptr inbounds %"class.std::basic_ostringstream", %"class.std::basic_ostringstream"* %osstr, i64 0, i32 0, i32 0
  store i32 (...)** %136, i32 (...)*** %137, align 8, !tbaa !32
  %138 = load i32 (...)**, i32 (...)*** bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTSt19basic_ostringstreamIcSt11char_traitsIcESaIcEE, i64 0, i64 3) to i32 (...)***), align 8
  %vbase.offset.ptr1.i.i = getelementptr i32 (...)*, i32 (...)** %136, i64 -3
  %139 = bitcast i32 (...)** %vbase.offset.ptr1.i.i to i64*
  %vbase.offset.i.i = load i64, i64* %139, align 8
  %add.ptr.i.i = getelementptr inbounds i8, i8* %67, i64 %vbase.offset.i.i
  %140 = bitcast i8* %add.ptr.i.i to i32 (...)***
  store i32 (...)** %138, i32 (...)*** %140, align 8, !tbaa !32
  %141 = getelementptr inbounds %"class.std::basic_ostringstream", %"class.std::basic_ostringstream"* %osstr, i64 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVSt15basic_stringbufIcSt11char_traitsIcESaIcEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %141, align 8, !tbaa !32
  %_M_p.i.i.i.i.i.i = getelementptr inbounds %"class.std::basic_ostringstream", %"class.std::basic_ostringstream"* %osstr, i64 0, i32 1, i32 2, i32 0, i32 0
  %142 = load i8*, i8** %_M_p.i.i.i.i.i.i, align 8, !tbaa !43
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %142, i64 -24
  %143 = bitcast i8* %arrayidx.i.i.i.i.i to %"struct.std::basic_string<char>::_Rep"*
  %144 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i.i.i.i, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %144) #8
  %cmp.not.i.i.i.i.i = icmp eq i8* %arrayidx.i.i.i.i.i, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i.i.i.i, label %_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev.exit, label %if.then.i.i.i.i.i, !prof !47

if.then.i.i.i.i.i:                                ; preds = %invoke.cont149
  %_M_refcount.i.i.i.i.i = getelementptr inbounds i8, i8* %142, i64 -8
  %145 = bitcast i8* %_M_refcount.i.i.i.i.i to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i.i.i.i163, label %if.else.i.i.i.i.i.i

if.then.i.i.i.i.i.i163:                           ; preds = %if.then.i.i.i.i.i
  %146 = atomicrmw volatile add i32* %145, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i.i.i.i

if.else.i.i.i.i.i.i:                              ; preds = %if.then.i.i.i.i.i
  %147 = load i32, i32* %145, align 8, !tbaa !16
  %add.i.i.i.i.i.i.i = add nsw i32 %147, -1
  store i32 %add.i.i.i.i.i.i.i, i32* %145, align 8, !tbaa !16
  br label %invoke.cont.i.i.i.i.i

invoke.cont.i.i.i.i.i:                            ; preds = %if.else.i.i.i.i.i.i, %if.then.i.i.i.i.i.i163
  %retval.0.i.i.i.i.i.i = phi i32 [ %146, %if.then.i.i.i.i.i.i163 ], [ %147, %if.else.i.i.i.i.i.i ]
  %cmp3.i.i.i.i.i = icmp slt i32 %retval.0.i.i.i.i.i.i, 1
  br i1 %cmp3.i.i.i.i.i, label %if.then4.i.i.i.i.i, label %_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev.exit

if.then4.i.i.i.i.i:                               ; preds = %invoke.cont.i.i.i.i.i
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %143, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i.i.i.i) #8
  br label %_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev.exit

_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev.exit: ; preds = %invoke.cont149, %invoke.cont.i.i.i.i.i, %if.then4.i.i.i.i.i
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %144) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVSt15basic_streambufIcSt11char_traitsIcEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %141, align 8, !tbaa !32
  %_M_buf_locale.i.i.i.i = getelementptr inbounds %"class.std::basic_ostringstream", %"class.std::basic_ostringstream"* %osstr, i64 0, i32 1, i32 0, i32 7
  call void @_ZNSt6localeD1Ev(%"class.std::locale"* noundef nonnull align 8 dereferenceable(8) %_M_buf_locale.i.i.i.i) #8
  %148 = getelementptr inbounds %"class.std::basic_ostringstream", %"class.std::basic_ostringstream"* %osstr, i64 0, i32 2, i32 0
  call void @_ZNSt8ios_baseD2Ev(%"class.std::ios_base"* noundef nonnull align 8 dereferenceable(216) %148) #8
  call void @llvm.lifetime.end.p0i8(i64 352, i8* nonnull %67) #8
  br label %_ZNSt6vectorI3BoxSaIS0_EED2Ev.exit

ehcleanup152:                                     ; preds = %lpad128, %ehcleanup144, %lpad131, %lpad123
  %.pn25.pn.pn = phi { i8*, i32 } [ %115, %lpad123 ], [ %132, %lpad128 ], [ %133, %lpad131 ], [ %.pn24, %ehcleanup144 ]
  call void @_ZN8YAML_DocD1Ev(%class.YAML_Doc* noundef nonnull align 8 dereferenceable(72) %doc) #8
  br label %ehcleanup153

ehcleanup153:                                     ; preds = %ehcleanup152, %ehcleanup118
  %.pn25.pn.pn.pn = phi { i8*, i32 } [ %.pn25.pn.pn, %ehcleanup152 ], [ %.pn.pn.pn.pn, %ehcleanup118 ]
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %76) #8
  br label %ehcleanup154

ehcleanup154:                                     ; preds = %ehcleanup153, %lpad59
  %.pn25.pn.pn.pn.pn = phi { i8*, i32 } [ %.pn25.pn.pn.pn, %ehcleanup153 ], [ %75, %lpad59 ]
  call void @_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev(%"class.std::basic_ostringstream"* noundef nonnull align 8 dereferenceable(88) %osstr) #8
  br label %ehcleanup155

ehcleanup155:                                     ; preds = %ehcleanup154, %lpad57
  %.pn25.pn.pn.pn.pn.pn = phi { i8*, i32 } [ %.pn25.pn.pn.pn.pn, %ehcleanup154 ], [ %74, %lpad57 ]
  call void @llvm.lifetime.end.p0i8(i64 352, i8* nonnull %67) #8
  br label %if.then.i.i.i169

_ZNSt6vectorI3BoxSaIS0_EED2Ev.exit:               ; preds = %invoke.cont53, %_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev.exit
  %retval.0 = phi i32 [ %call130, %_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev.exit ], [ 1, %invoke.cont53 ]
  %149 = bitcast %struct.Box* %local_boxes.sroa.0.0 to i8*
  call void @_ZdlPv(i8* noundef nonnull %149) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #8
  %150 = load i8*, i8** %_M_p.i.i.i, align 16, !tbaa !43
  %arrayidx.i.i.i165 = getelementptr inbounds i8, i8* %150, i64 -24
  %151 = bitcast i8* %arrayidx.i.i.i165 to %"struct.std::basic_string<char>::_Rep"*
  %152 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i.i, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %152) #8
  %cmp.not.i.i.i = icmp eq i8* %arrayidx.i.i.i165, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i.i, label %_ZN6miniFE10ParametersD2Ev.exit, label %if.then.i.i.i166, !prof !47

if.then.i.i.i166:                                 ; preds = %_ZNSt6vectorI3BoxSaIS0_EED2Ev.exit
  %_M_refcount.i.i.i = getelementptr inbounds i8, i8* %150, i64 -8
  %153 = bitcast i8* %_M_refcount.i.i.i to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i.i, label %if.else.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %if.then.i.i.i166
  %154 = atomicrmw volatile add i32* %153, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.then.i.i.i166
  %155 = load i32, i32* %153, align 8, !tbaa !16
  %add.i.i.i.i.i = add nsw i32 %155, -1
  store i32 %add.i.i.i.i.i, i32* %153, align 8, !tbaa !16
  br label %invoke.cont.i.i.i

invoke.cont.i.i.i:                                ; preds = %if.else.i.i.i.i, %if.then.i.i.i.i
  %retval.0.i.i.i.i = phi i32 [ %154, %if.then.i.i.i.i ], [ %155, %if.else.i.i.i.i ]
  %cmp3.i.i.i = icmp slt i32 %retval.0.i.i.i.i, 1
  br i1 %cmp3.i.i.i, label %if.then4.i.i.i, label %_ZN6miniFE10ParametersD2Ev.exit

if.then4.i.i.i:                                   ; preds = %invoke.cont.i.i.i
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %151, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i.i) #8
  br label %_ZN6miniFE10ParametersD2Ev.exit

_ZN6miniFE10ParametersD2Ev.exit:                  ; preds = %_ZNSt6vectorI3BoxSaIS0_EED2Ev.exit, %invoke.cont.i.i.i, %if.then4.i.i.i
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %152) #8
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %0) #8
  ret i32 %retval.0

ehcleanup162:                                     ; preds = %invoke.cont39
  %156 = landingpad { i8*, i32 }
          cleanup
  %tobool.not.i.i.i168 = icmp eq %struct.Box* %local_boxes.sroa.0.0, null
  br i1 %tobool.not.i.i.i168, label %ehcleanup164, label %if.then.i.i.i169

if.then.i.i.i169:                                 ; preds = %ehcleanup155, %lpad50, %ehcleanup162
  %.pn26.pn310 = phi { i8*, i32 } [ %156, %ehcleanup162 ], [ %.pn25.pn.pn.pn.pn.pn, %ehcleanup155 ], [ %66, %lpad50 ]
  %157 = bitcast %struct.Box* %local_boxes.sroa.0.0 to i8*
  call void @_ZdlPv(i8* noundef nonnull %157) #8
  br label %ehcleanup164

ehcleanup164:                                     ; preds = %if.then.i.i.i169, %ehcleanup162, %lpad38
  %.pn26.pn.pn = phi { i8*, i32 } [ %65, %lpad38 ], [ %156, %ehcleanup162 ], [ %.pn26.pn310, %if.then.i.i.i169 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #8
  br label %ehcleanup172

ehcleanup172:                                     ; preds = %lpad18, %ehcleanup164
  %.pn26.pn.pn.pn = phi { i8*, i32 } [ %.pn26.pn.pn, %ehcleanup164 ], [ %43, %lpad18 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23) #8
  br label %ehcleanup178

ehcleanup178:                                     ; preds = %lpad3, %ehcleanup172, %lpad1
  %.pn26.pn.pn.pn.pn.pn = phi { i8*, i32 } [ %21, %lpad1 ], [ %.pn26.pn.pn.pn, %ehcleanup172 ], [ %22, %lpad3 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #8
  br label %ehcleanup182

ehcleanup182:                                     ; preds = %ehcleanup178, %lpad
  %.pn26.pn.pn.pn.pn.pn.pn = phi { i8*, i32 } [ %.pn26.pn.pn.pn.pn.pn, %ehcleanup178 ], [ %20, %lpad ]
  call void @_ZN6miniFE10ParametersD2Ev(%"struct.miniFE::Parameters"* noundef nonnull align 8 dereferenceable(68) %params) #8
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %0) #8
  resume { i8*, i32 } %.pn26.pn.pn.pn.pn.pn.pn
}

declare void @_ZN6miniFE14get_parametersEiPPcRNS_10ParametersE(i32 noundef signext, i8** noundef, %"struct.miniFE::Parameters"* noundef nonnull align 8 dereferenceable(68)) local_unnamed_addr #0

declare i32 @__gxx_personality_v0(...)

declare void @_ZN6miniFE14initialize_mpiEiPPcRiS2_(i32 noundef signext, i8** noundef, i32* noundef nonnull align 4 dereferenceable(4), i32* noundef nonnull align 4 dereferenceable(4)) local_unnamed_addr #0

declare noundef double @_ZN6miniFE7mytimerEv() local_unnamed_addr #0

; Function Attrs: inlinehint mustprogress uwtable
declare noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8), i8* noundef) local_unnamed_addr #6

; Function Attrs: inlinehint mustprogress uwtable
declare noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8)) local_unnamed_addr #6

; Function Attrs: nounwind
declare signext i32 @omp_get_max_threads() local_unnamed_addr #1

; Function Attrs: alwaysinline norecurse nounwind uwtable
define internal void @.omp_outlined.(i32* noalias nocapture noundef readonly %.global_tid., i32* noalias nocapture noundef readnone %.bound_tid., i32* nocapture noundef nonnull readonly align 4 dereferenceable(4) %thread_count, i32* nocapture noundef nonnull align 4 dereferenceable(4) %value) #7 {
entry:
  %.omp.lb = alloca i32, align 4
  %.omp.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %value3 = alloca i32, align 4
  %.omp.reduction.red_list = alloca [1 x i8*], align 8
  %0 = load i32, i32* %thread_count, align 4, !tbaa !16
  %sub2 = add nsw i32 %0, -1
  %cmp = icmp sgt i32 %0, 0
  br i1 %cmp, label %omp.precond.then, label %omp.precond.end

omp.precond.then:                                 ; preds = %entry
  %1 = bitcast i32* %.omp.lb to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8
  store i32 0, i32* %.omp.lb, align 4, !tbaa !16
  %2 = bitcast i32* %.omp.ub to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #8
  store i32 %sub2, i32* %.omp.ub, align 4, !tbaa !16
  %3 = bitcast i32* %.omp.stride to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #8
  store i32 1, i32* %.omp.stride, align 4, !tbaa !16
  %4 = bitcast i32* %.omp.is_last to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #8
  store i32 0, i32* %.omp.is_last, align 4, !tbaa !16
  %5 = bitcast i32* %value3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #8
  %6 = load i32, i32* %.global_tid., align 4, !tbaa !16
  call void @__kmpc_for_static_init_4(%struct.ident_t* nonnull @1, i32 %6, i32 34, i32* nonnull %.omp.is_last, i32* nonnull %.omp.lb, i32* nonnull %.omp.ub, i32* nonnull %.omp.stride, i32 1, i32 1)
  %7 = load i32, i32* %.omp.ub, align 4, !tbaa !16
  %cmp5 = icmp sgt i32 %7, %sub2
  %cond = select i1 %cmp5, i32 %sub2, i32 %7
  store i32 %cond, i32* %.omp.ub, align 4, !tbaa !16
  %8 = load i32, i32* %.omp.lb, align 4, !tbaa !16
  %cmp6.not14 = icmp sgt i32 %8, %cond
  %9 = add nsw i32 %cond, 1
  %10 = sub i32 %9, %8
  %add713.lcssa = select i1 %cmp6.not14, i32 0, i32 %10
  store i32 %add713.lcssa, i32* %value3, align 4, !tbaa !16
  call void @__kmpc_for_static_fini(%struct.ident_t* nonnull @1, i32 %6)
  %11 = bitcast [1 x i8*]* %.omp.reduction.red_list to i32**
  store i32* %value3, i32** %11, align 8
  %12 = bitcast [1 x i8*]* %.omp.reduction.red_list to i8*
  %13 = call i32 @__kmpc_reduce_nowait(%struct.ident_t* nonnull @2, i32 %6, i32 1, i64 8, i8* nonnull %12, void (i8*, i8*)* nonnull @.omp.reduction.reduction_func, [8 x i32]* nonnull @.gomp_critical_user_.reduction.var)
  switch i32 %13, label %.omp.reduction.default [
    i32 1, label %.omp.reduction.case1
    i32 2, label %.omp.reduction.case2
  ]

.omp.reduction.case1:                             ; preds = %omp.precond.then
  %14 = load i32, i32* %value, align 4, !tbaa !16
  %15 = load i32, i32* %value3, align 4, !tbaa !16
  %add9 = add nsw i32 %15, %14
  store i32 %add9, i32* %value, align 4, !tbaa !16
  call void @__kmpc_end_reduce_nowait(%struct.ident_t* nonnull @2, i32 %6, [8 x i32]* nonnull @.gomp_critical_user_.reduction.var)
  br label %.omp.reduction.default

.omp.reduction.case2:                             ; preds = %omp.precond.then
  %16 = load i32, i32* %value3, align 4, !tbaa !16
  %17 = atomicrmw add i32* %value, i32 %16 monotonic, align 4
  br label %.omp.reduction.default

.omp.reduction.default:                           ; preds = %.omp.reduction.case2, %.omp.reduction.case1, %omp.precond.then
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8
  br label %omp.precond.end

omp.precond.end:                                  ; preds = %.omp.reduction.default, %entry
  ret void
}

; Function Attrs: nounwind
declare void @__kmpc_for_static_init_4(%struct.ident_t*, i32, i32, i32*, i32*, i32*, i32*, i32, i32) local_unnamed_addr #8

; Function Attrs: nounwind
declare void @__kmpc_for_static_fini(%struct.ident_t*, i32) local_unnamed_addr #8

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define internal void @.omp.reduction.reduction_func(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) #9 {
entry:
  %2 = bitcast i8* %1 to i32**
  %3 = load i32*, i32** %2, align 8
  %4 = bitcast i8* %0 to i32**
  %5 = load i32*, i32** %4, align 8
  %6 = load i32, i32* %5, align 4, !tbaa !16
  %7 = load i32, i32* %3, align 4, !tbaa !16
  %add = add nsw i32 %7, %6
  store i32 %add, i32* %5, align 4, !tbaa !16
  ret void
}

; Function Attrs: convergent nounwind
declare i32 @__kmpc_reduce_nowait(%struct.ident_t*, i32, i32, i64, i8*, void (i8*, i8*)*, [8 x i32]*) local_unnamed_addr #10

; Function Attrs: convergent nounwind
declare void @__kmpc_end_reduce_nowait(%struct.ident_t*, i32, [8 x i32]*) local_unnamed_addr #10

; Function Attrs: nounwind
declare !callback !48 void @__kmpc_fork_call(%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) local_unnamed_addr #8

declare void @_ZN6miniFE20broadcast_parametersERNS_10ParametersE(%"struct.miniFE::Parameters"* noundef nonnull align 8 dereferenceable(68)) local_unnamed_addr #0

declare void @_Z13box_partitioniiiRK3BoxPS_(i32 noundef signext, i32 noundef signext, i32 noundef signext, %struct.Box* noundef nonnull align 4 dereferenceable(24), %struct.Box* noundef) local_unnamed_addr #0

declare void @_ZN6miniFE12finalize_mpiEv() local_unnamed_addr #0

; Function Attrs: uwtable
declare void @_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEEC1ESt13_Ios_Openmode(%"class.std::basic_ostringstream"* noundef nonnull align 8 dereferenceable(88), i32 noundef signext) unnamed_addr #11 align 2

declare noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8), i32 noundef signext) local_unnamed_addr #0

declare void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8), i8* noundef, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1)) unnamed_addr #0

declare void @_ZN8YAML_DocC1ERKSsS1_S1_S1_(%class.YAML_Doc* noundef nonnull align 8 dereferenceable(72), %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8), %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8), %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8), %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8)) unnamed_addr #0

; Function Attrs: nounwind uwtable
declare void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8)) unnamed_addr #12 align 2

; Function Attrs: uwtable
define dso_local void @_Z18add_params_to_yamlR8YAML_DocRN6miniFE10ParametersE(%class.YAML_Doc* noundef nonnull align 8 dereferenceable(72) %doc, %"struct.miniFE::Parameters"* nocapture noundef nonnull readonly align 8 dereferenceable(68) %params) local_unnamed_addr #11 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %ref.tmp.i365 = alloca %"class.std::allocator", align 1
  %ref.tmp.i351 = alloca %"class.std::allocator", align 1
  %ref.tmp.i337 = alloca %"class.std::allocator", align 1
  %ref.tmp.i323 = alloca %"class.std::allocator", align 1
  %ref.tmp.i309 = alloca %"class.std::allocator", align 1
  %ref.tmp.i295 = alloca %"class.std::allocator", align 1
  %ref.tmp.i281 = alloca %"class.std::allocator", align 1
  %ref.tmp.i267 = alloca %"class.std::allocator", align 1
  %ref.tmp.i253 = alloca %"class.std::allocator", align 1
  %ref.tmp.i239 = alloca %"class.std::allocator", align 1
  %ref.tmp.i225 = alloca %"class.std::allocator", align 1
  %ref.tmp.i211 = alloca %"class.std::allocator", align 1
  %ref.tmp.i197 = alloca %"class.std::allocator", align 1
  %ref.tmp.i183 = alloca %"class.std::allocator", align 1
  %ref.tmp.i169 = alloca %"class.std::allocator", align 1
  %ref.tmp.i155 = alloca %"class.std::allocator", align 1
  %ref.tmp.i141 = alloca %"class.std::allocator", align 1
  %ref.tmp.i127 = alloca %"class.std::allocator", align 1
  %ref.tmp.i113 = alloca %"class.std::allocator", align 1
  %ref.tmp.i99 = alloca %"class.std::allocator", align 1
  %ref.tmp.i85 = alloca %"class.std::allocator", align 1
  %ref.tmp.i71 = alloca %"class.std::allocator", align 1
  %ref.tmp.i57 = alloca %"class.std::allocator", align 1
  %ref.tmp.i = alloca %"class.std::allocator", align 1
  %ref.tmp = alloca %"class.std::basic_string", align 8
  %ref.tmp1 = alloca %"class.std::allocator", align 1
  %ref.tmp2 = alloca %"class.std::basic_string", align 8
  %ref.tmp3 = alloca %"class.std::allocator", align 1
  %ref.tmp14 = alloca %"class.std::basic_string", align 8
  %ref.tmp15 = alloca %"class.std::allocator", align 1
  %ref.tmp21 = alloca %"class.std::basic_string", align 8
  %ref.tmp22 = alloca %"class.std::allocator", align 1
  %ref.tmp25 = alloca %"class.std::basic_string", align 8
  %ref.tmp26 = alloca %"class.std::allocator", align 1
  %ref.tmp44 = alloca %"class.std::basic_string", align 8
  %ref.tmp45 = alloca %"class.std::allocator", align 1
  %ref.tmp51 = alloca %"class.std::basic_string", align 8
  %ref.tmp52 = alloca %"class.std::allocator", align 1
  %ref.tmp58 = alloca %"class.std::basic_string", align 8
  %ref.tmp59 = alloca %"class.std::allocator", align 1
  %ref.tmp77 = alloca %"class.std::basic_string", align 8
  %ref.tmp78 = alloca %"class.std::allocator", align 1
  %ref.tmp84 = alloca %"class.std::basic_string", align 8
  %ref.tmp85 = alloca %"class.std::allocator", align 1
  %ref.tmp91 = alloca %"class.std::basic_string", align 8
  %ref.tmp92 = alloca %"class.std::allocator", align 1
  %ref.tmp110 = alloca %"class.std::basic_string", align 8
  %ref.tmp111 = alloca %"class.std::allocator", align 1
  %ref.tmp117 = alloca %"class.std::basic_string", align 8
  %ref.tmp118 = alloca %"class.std::allocator", align 1
  %ref.tmp124 = alloca %"class.std::basic_string", align 8
  %ref.tmp125 = alloca %"class.std::allocator", align 1
  %ref.tmp143 = alloca %"class.std::basic_string", align 8
  %ref.tmp144 = alloca %"class.std::allocator", align 1
  %ref.tmp150 = alloca %"class.std::basic_string", align 8
  %ref.tmp151 = alloca %"class.std::allocator", align 1
  %val = alloca %"class.std::basic_string", align 8
  %ref.tmp165 = alloca %"class.std::allocator", align 1
  %ref.tmp170 = alloca %"class.std::basic_string", align 8
  %ref.tmp171 = alloca %"class.std::allocator", align 1
  %ref.tmp177 = alloca %"class.std::basic_string", align 8
  %ref.tmp178 = alloca %"class.std::allocator", align 1
  %val194 = alloca %"class.std::basic_string", align 8
  %ref.tmp195 = alloca %"class.std::allocator", align 1
  %ref.tmp200 = alloca %"class.std::basic_string", align 8
  %ref.tmp201 = alloca %"class.std::allocator", align 1
  %ref.tmp207 = alloca %"class.std::basic_string", align 8
  %ref.tmp208 = alloca %"class.std::allocator", align 1
  %ref.tmp224 = alloca %"class.std::basic_string", align 8
  %ref.tmp225 = alloca %"class.std::allocator", align 1
  %ref.tmp231 = alloca %"class.std::basic_string", align 8
  %ref.tmp232 = alloca %"class.std::allocator", align 1
  %0 = getelementptr inbounds %class.YAML_Doc, %class.YAML_Doc* %doc, i64 0, i32 0
  %1 = bitcast %"class.std::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8
  %2 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp1, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.29, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp1)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %3 = bitcast %"class.std::basic_string"* %ref.tmp2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #8
  %4 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp2, i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp3)
          to label %invoke.cont5 unwind label %lpad4

invoke.cont5:                                     ; preds = %invoke.cont
  %call = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsS1_(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %0, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp2)
          to label %invoke.cont7 unwind label %lpad6

invoke.cont7:                                     ; preds = %invoke.cont5
  %_M_p.i.i.i = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp2, i64 0, i32 0, i32 0
  %5 = load i8*, i8** %_M_p.i.i.i, align 8, !tbaa !43
  %arrayidx.i.i = getelementptr inbounds i8, i8* %5, i64 -24
  %6 = bitcast i8* %arrayidx.i.i to %"struct.std::basic_string<char>::_Rep"*
  %7 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #8
  %cmp.not.i.i = icmp eq i8* %arrayidx.i.i, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i, label %_ZNSsD2Ev.exit, label %if.then.i.i, !prof !47

if.then.i.i:                                      ; preds = %invoke.cont7
  %_M_refcount.i.i = getelementptr inbounds i8, i8* %5, i64 -8
  %8 = bitcast i8* %_M_refcount.i.i to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i, label %if.else.i.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i
  %9 = atomicrmw volatile add i32* %8, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i

if.else.i.i.i:                                    ; preds = %if.then.i.i
  %10 = load i32, i32* %8, align 8, !tbaa !16
  %add.i.i.i.i = add nsw i32 %10, -1
  store i32 %add.i.i.i.i, i32* %8, align 8, !tbaa !16
  br label %invoke.cont.i.i

invoke.cont.i.i:                                  ; preds = %if.else.i.i.i, %if.then.i.i.i
  %retval.0.i.i.i = phi i32 [ %9, %if.then.i.i.i ], [ %10, %if.else.i.i.i ]
  %cmp3.i.i = icmp slt i32 %retval.0.i.i.i, 1
  br i1 %cmp3.i.i, label %if.then4.i.i, label %_ZNSsD2Ev.exit

if.then4.i.i:                                     ; preds = %invoke.cont.i.i
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %6, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i) #8
  br label %_ZNSsD2Ev.exit

_ZNSsD2Ev.exit:                                   ; preds = %invoke.cont7, %invoke.cont.i.i, %if.then4.i.i
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #8
  %_M_p.i.i.i58 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  %11 = load i8*, i8** %_M_p.i.i.i58, align 8, !tbaa !43
  %arrayidx.i.i59 = getelementptr inbounds i8, i8* %11, i64 -24
  %12 = bitcast i8* %arrayidx.i.i59 to %"struct.std::basic_string<char>::_Rep"*
  %13 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i57, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13) #8
  %cmp.not.i.i60 = icmp eq i8* %arrayidx.i.i59, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i60, label %_ZNSsD2Ev.exit70, label %if.then.i.i62, !prof !47

if.then.i.i62:                                    ; preds = %_ZNSsD2Ev.exit
  %_M_refcount.i.i61 = getelementptr inbounds i8, i8* %11, i64 -8
  %14 = bitcast i8* %_M_refcount.i.i61 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i63, label %if.else.i.i.i65

if.then.i.i.i63:                                  ; preds = %if.then.i.i62
  %15 = atomicrmw volatile add i32* %14, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i68

if.else.i.i.i65:                                  ; preds = %if.then.i.i62
  %16 = load i32, i32* %14, align 8, !tbaa !16
  %add.i.i.i.i64 = add nsw i32 %16, -1
  store i32 %add.i.i.i.i64, i32* %14, align 8, !tbaa !16
  br label %invoke.cont.i.i68

invoke.cont.i.i68:                                ; preds = %if.else.i.i.i65, %if.then.i.i.i63
  %retval.0.i.i.i66 = phi i32 [ %15, %if.then.i.i.i63 ], [ %16, %if.else.i.i.i65 ]
  %cmp3.i.i67 = icmp slt i32 %retval.0.i.i.i66, 1
  br i1 %cmp3.i.i67, label %if.then4.i.i69, label %_ZNSsD2Ev.exit70

if.then4.i.i69:                                   ; preds = %invoke.cont.i.i68
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %12, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i57) #8
  br label %_ZNSsD2Ev.exit70

_ZNSsD2Ev.exit70:                                 ; preds = %_ZNSsD2Ev.exit, %invoke.cont.i.i68, %if.then4.i.i69
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8
  %17 = bitcast %"class.std::basic_string"* %ref.tmp14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  %18 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp15, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %18) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp14, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.29, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp15)
          to label %invoke.cont17 unwind label %lpad16

invoke.cont17:                                    ; preds = %_ZNSsD2Ev.exit70
  %call20 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %0, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp14)
          to label %invoke.cont19 unwind label %lpad18

invoke.cont19:                                    ; preds = %invoke.cont17
  %19 = bitcast %"class.std::basic_string"* %ref.tmp21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #8
  %20 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp22, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %20) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp21, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.160, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp22)
          to label %invoke.cont24 unwind label %lpad23

invoke.cont24:                                    ; preds = %invoke.cont19
  %21 = bitcast %"class.std::basic_string"* %ref.tmp25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #8
  %22 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp26, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %22) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp25, i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp26)
          to label %invoke.cont28 unwind label %lpad27

invoke.cont28:                                    ; preds = %invoke.cont24
  %call31 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsS1_(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call20, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp21, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp25)
          to label %invoke.cont30 unwind label %lpad29

invoke.cont30:                                    ; preds = %invoke.cont28
  %_M_p.i.i.i72 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp25, i64 0, i32 0, i32 0
  %23 = load i8*, i8** %_M_p.i.i.i72, align 8, !tbaa !43
  %arrayidx.i.i73 = getelementptr inbounds i8, i8* %23, i64 -24
  %24 = bitcast i8* %arrayidx.i.i73 to %"struct.std::basic_string<char>::_Rep"*
  %25 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i71, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %25) #8
  %cmp.not.i.i74 = icmp eq i8* %arrayidx.i.i73, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i74, label %_ZNSsD2Ev.exit84, label %if.then.i.i76, !prof !47

if.then.i.i76:                                    ; preds = %invoke.cont30
  %_M_refcount.i.i75 = getelementptr inbounds i8, i8* %23, i64 -8
  %26 = bitcast i8* %_M_refcount.i.i75 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i77, label %if.else.i.i.i79

if.then.i.i.i77:                                  ; preds = %if.then.i.i76
  %27 = atomicrmw volatile add i32* %26, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i82

if.else.i.i.i79:                                  ; preds = %if.then.i.i76
  %28 = load i32, i32* %26, align 8, !tbaa !16
  %add.i.i.i.i78 = add nsw i32 %28, -1
  store i32 %add.i.i.i.i78, i32* %26, align 8, !tbaa !16
  br label %invoke.cont.i.i82

invoke.cont.i.i82:                                ; preds = %if.else.i.i.i79, %if.then.i.i.i77
  %retval.0.i.i.i80 = phi i32 [ %27, %if.then.i.i.i77 ], [ %28, %if.else.i.i.i79 ]
  %cmp3.i.i81 = icmp slt i32 %retval.0.i.i.i80, 1
  br i1 %cmp3.i.i81, label %if.then4.i.i83, label %_ZNSsD2Ev.exit84

if.then4.i.i83:                                   ; preds = %invoke.cont.i.i82
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %24, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i71) #8
  br label %_ZNSsD2Ev.exit84

_ZNSsD2Ev.exit84:                                 ; preds = %invoke.cont30, %invoke.cont.i.i82, %if.then4.i.i83
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %25) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %22) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #8
  %_M_p.i.i.i86 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp21, i64 0, i32 0, i32 0
  %29 = load i8*, i8** %_M_p.i.i.i86, align 8, !tbaa !43
  %arrayidx.i.i87 = getelementptr inbounds i8, i8* %29, i64 -24
  %30 = bitcast i8* %arrayidx.i.i87 to %"struct.std::basic_string<char>::_Rep"*
  %31 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i85, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %31) #8
  %cmp.not.i.i88 = icmp eq i8* %arrayidx.i.i87, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i88, label %_ZNSsD2Ev.exit98, label %if.then.i.i90, !prof !47

if.then.i.i90:                                    ; preds = %_ZNSsD2Ev.exit84
  %_M_refcount.i.i89 = getelementptr inbounds i8, i8* %29, i64 -8
  %32 = bitcast i8* %_M_refcount.i.i89 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i91, label %if.else.i.i.i93

if.then.i.i.i91:                                  ; preds = %if.then.i.i90
  %33 = atomicrmw volatile add i32* %32, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i96

if.else.i.i.i93:                                  ; preds = %if.then.i.i90
  %34 = load i32, i32* %32, align 8, !tbaa !16
  %add.i.i.i.i92 = add nsw i32 %34, -1
  store i32 %add.i.i.i.i92, i32* %32, align 8, !tbaa !16
  br label %invoke.cont.i.i96

invoke.cont.i.i96:                                ; preds = %if.else.i.i.i93, %if.then.i.i.i91
  %retval.0.i.i.i94 = phi i32 [ %33, %if.then.i.i.i91 ], [ %34, %if.else.i.i.i93 ]
  %cmp3.i.i95 = icmp slt i32 %retval.0.i.i.i94, 1
  br i1 %cmp3.i.i95, label %if.then4.i.i97, label %_ZNSsD2Ev.exit98

if.then4.i.i97:                                   ; preds = %invoke.cont.i.i96
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %30, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i85) #8
  br label %_ZNSsD2Ev.exit98

_ZNSsD2Ev.exit98:                                 ; preds = %_ZNSsD2Ev.exit84, %invoke.cont.i.i96, %if.then4.i.i97
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %31) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %20) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #8
  %_M_p.i.i.i100 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp14, i64 0, i32 0, i32 0
  %35 = load i8*, i8** %_M_p.i.i.i100, align 8, !tbaa !43
  %arrayidx.i.i101 = getelementptr inbounds i8, i8* %35, i64 -24
  %36 = bitcast i8* %arrayidx.i.i101 to %"struct.std::basic_string<char>::_Rep"*
  %37 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i99, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %37) #8
  %cmp.not.i.i102 = icmp eq i8* %arrayidx.i.i101, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i102, label %_ZNSsD2Ev.exit112, label %if.then.i.i104, !prof !47

if.then.i.i104:                                   ; preds = %_ZNSsD2Ev.exit98
  %_M_refcount.i.i103 = getelementptr inbounds i8, i8* %35, i64 -8
  %38 = bitcast i8* %_M_refcount.i.i103 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i105, label %if.else.i.i.i107

if.then.i.i.i105:                                 ; preds = %if.then.i.i104
  %39 = atomicrmw volatile add i32* %38, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i110

if.else.i.i.i107:                                 ; preds = %if.then.i.i104
  %40 = load i32, i32* %38, align 8, !tbaa !16
  %add.i.i.i.i106 = add nsw i32 %40, -1
  store i32 %add.i.i.i.i106, i32* %38, align 8, !tbaa !16
  br label %invoke.cont.i.i110

invoke.cont.i.i110:                               ; preds = %if.else.i.i.i107, %if.then.i.i.i105
  %retval.0.i.i.i108 = phi i32 [ %39, %if.then.i.i.i105 ], [ %40, %if.else.i.i.i107 ]
  %cmp3.i.i109 = icmp slt i32 %retval.0.i.i.i108, 1
  br i1 %cmp3.i.i109, label %if.then4.i.i111, label %_ZNSsD2Ev.exit112

if.then4.i.i111:                                  ; preds = %invoke.cont.i.i110
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %36, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i99) #8
  br label %_ZNSsD2Ev.exit112

_ZNSsD2Ev.exit112:                                ; preds = %_ZNSsD2Ev.exit98, %invoke.cont.i.i110, %if.then4.i.i111
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %37) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %18) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  %41 = bitcast %"class.std::basic_string"* %ref.tmp44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #8
  %42 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp45, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %42) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp44, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.29, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp45)
          to label %invoke.cont47 unwind label %lpad46

invoke.cont47:                                    ; preds = %_ZNSsD2Ev.exit112
  %call50 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %0, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp44)
          to label %invoke.cont49 unwind label %lpad48

invoke.cont49:                                    ; preds = %invoke.cont47
  %43 = bitcast %"class.std::basic_string"* %ref.tmp51 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #8
  %44 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp52, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %44) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp51, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.160, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp52)
          to label %invoke.cont54 unwind label %lpad53

invoke.cont54:                                    ; preds = %invoke.cont49
  %call57 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call50, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp51)
          to label %invoke.cont56 unwind label %lpad55

invoke.cont56:                                    ; preds = %invoke.cont54
  %45 = bitcast %"class.std::basic_string"* %ref.tmp58 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #8
  %46 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp59, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %46) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp58, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.161, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp59)
          to label %invoke.cont61 unwind label %lpad60

invoke.cont61:                                    ; preds = %invoke.cont56
  %nx = getelementptr inbounds %"struct.miniFE::Parameters", %"struct.miniFE::Parameters"* %params, i64 0, i32 0
  %47 = load i32, i32* %nx, align 8, !tbaa !40
  %call64 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsi(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call57, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp58, i32 noundef signext %47)
          to label %invoke.cont63 unwind label %lpad62

invoke.cont63:                                    ; preds = %invoke.cont61
  %_M_p.i.i.i114 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp58, i64 0, i32 0, i32 0
  %48 = load i8*, i8** %_M_p.i.i.i114, align 8, !tbaa !43
  %arrayidx.i.i115 = getelementptr inbounds i8, i8* %48, i64 -24
  %49 = bitcast i8* %arrayidx.i.i115 to %"struct.std::basic_string<char>::_Rep"*
  %50 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i113, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %50) #8
  %cmp.not.i.i116 = icmp eq i8* %arrayidx.i.i115, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i116, label %_ZNSsD2Ev.exit126, label %if.then.i.i118, !prof !47

if.then.i.i118:                                   ; preds = %invoke.cont63
  %_M_refcount.i.i117 = getelementptr inbounds i8, i8* %48, i64 -8
  %51 = bitcast i8* %_M_refcount.i.i117 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i119, label %if.else.i.i.i121

if.then.i.i.i119:                                 ; preds = %if.then.i.i118
  %52 = atomicrmw volatile add i32* %51, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i124

if.else.i.i.i121:                                 ; preds = %if.then.i.i118
  %53 = load i32, i32* %51, align 8, !tbaa !16
  %add.i.i.i.i120 = add nsw i32 %53, -1
  store i32 %add.i.i.i.i120, i32* %51, align 8, !tbaa !16
  br label %invoke.cont.i.i124

invoke.cont.i.i124:                               ; preds = %if.else.i.i.i121, %if.then.i.i.i119
  %retval.0.i.i.i122 = phi i32 [ %52, %if.then.i.i.i119 ], [ %53, %if.else.i.i.i121 ]
  %cmp3.i.i123 = icmp slt i32 %retval.0.i.i.i122, 1
  br i1 %cmp3.i.i123, label %if.then4.i.i125, label %_ZNSsD2Ev.exit126

if.then4.i.i125:                                  ; preds = %invoke.cont.i.i124
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %49, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i113) #8
  br label %_ZNSsD2Ev.exit126

_ZNSsD2Ev.exit126:                                ; preds = %invoke.cont63, %invoke.cont.i.i124, %if.then4.i.i125
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %50) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %46) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #8
  %_M_p.i.i.i128 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp51, i64 0, i32 0, i32 0
  %54 = load i8*, i8** %_M_p.i.i.i128, align 8, !tbaa !43
  %arrayidx.i.i129 = getelementptr inbounds i8, i8* %54, i64 -24
  %55 = bitcast i8* %arrayidx.i.i129 to %"struct.std::basic_string<char>::_Rep"*
  %56 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i127, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %56) #8
  %cmp.not.i.i130 = icmp eq i8* %arrayidx.i.i129, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i130, label %_ZNSsD2Ev.exit140, label %if.then.i.i132, !prof !47

if.then.i.i132:                                   ; preds = %_ZNSsD2Ev.exit126
  %_M_refcount.i.i131 = getelementptr inbounds i8, i8* %54, i64 -8
  %57 = bitcast i8* %_M_refcount.i.i131 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i133, label %if.else.i.i.i135

if.then.i.i.i133:                                 ; preds = %if.then.i.i132
  %58 = atomicrmw volatile add i32* %57, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i138

if.else.i.i.i135:                                 ; preds = %if.then.i.i132
  %59 = load i32, i32* %57, align 8, !tbaa !16
  %add.i.i.i.i134 = add nsw i32 %59, -1
  store i32 %add.i.i.i.i134, i32* %57, align 8, !tbaa !16
  br label %invoke.cont.i.i138

invoke.cont.i.i138:                               ; preds = %if.else.i.i.i135, %if.then.i.i.i133
  %retval.0.i.i.i136 = phi i32 [ %58, %if.then.i.i.i133 ], [ %59, %if.else.i.i.i135 ]
  %cmp3.i.i137 = icmp slt i32 %retval.0.i.i.i136, 1
  br i1 %cmp3.i.i137, label %if.then4.i.i139, label %_ZNSsD2Ev.exit140

if.then4.i.i139:                                  ; preds = %invoke.cont.i.i138
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %55, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i127) #8
  br label %_ZNSsD2Ev.exit140

_ZNSsD2Ev.exit140:                                ; preds = %_ZNSsD2Ev.exit126, %invoke.cont.i.i138, %if.then4.i.i139
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %56) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %44) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #8
  %_M_p.i.i.i142 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp44, i64 0, i32 0, i32 0
  %60 = load i8*, i8** %_M_p.i.i.i142, align 8, !tbaa !43
  %arrayidx.i.i143 = getelementptr inbounds i8, i8* %60, i64 -24
  %61 = bitcast i8* %arrayidx.i.i143 to %"struct.std::basic_string<char>::_Rep"*
  %62 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i141, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %62) #8
  %cmp.not.i.i144 = icmp eq i8* %arrayidx.i.i143, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i144, label %_ZNSsD2Ev.exit154, label %if.then.i.i146, !prof !47

if.then.i.i146:                                   ; preds = %_ZNSsD2Ev.exit140
  %_M_refcount.i.i145 = getelementptr inbounds i8, i8* %60, i64 -8
  %63 = bitcast i8* %_M_refcount.i.i145 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i147, label %if.else.i.i.i149

if.then.i.i.i147:                                 ; preds = %if.then.i.i146
  %64 = atomicrmw volatile add i32* %63, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i152

if.else.i.i.i149:                                 ; preds = %if.then.i.i146
  %65 = load i32, i32* %63, align 8, !tbaa !16
  %add.i.i.i.i148 = add nsw i32 %65, -1
  store i32 %add.i.i.i.i148, i32* %63, align 8, !tbaa !16
  br label %invoke.cont.i.i152

invoke.cont.i.i152:                               ; preds = %if.else.i.i.i149, %if.then.i.i.i147
  %retval.0.i.i.i150 = phi i32 [ %64, %if.then.i.i.i147 ], [ %65, %if.else.i.i.i149 ]
  %cmp3.i.i151 = icmp slt i32 %retval.0.i.i.i150, 1
  br i1 %cmp3.i.i151, label %if.then4.i.i153, label %_ZNSsD2Ev.exit154

if.then4.i.i153:                                  ; preds = %invoke.cont.i.i152
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %61, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i141) #8
  br label %_ZNSsD2Ev.exit154

_ZNSsD2Ev.exit154:                                ; preds = %_ZNSsD2Ev.exit140, %invoke.cont.i.i152, %if.then4.i.i153
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %62) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %42) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #8
  %66 = bitcast %"class.std::basic_string"* %ref.tmp77 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #8
  %67 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp78, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %67) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp77, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.29, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp78)
          to label %invoke.cont80 unwind label %lpad79

invoke.cont80:                                    ; preds = %_ZNSsD2Ev.exit154
  %call83 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %0, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp77)
          to label %invoke.cont82 unwind label %lpad81

invoke.cont82:                                    ; preds = %invoke.cont80
  %68 = bitcast %"class.std::basic_string"* %ref.tmp84 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #8
  %69 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp85, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %69) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp84, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.160, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp85)
          to label %invoke.cont87 unwind label %lpad86

invoke.cont87:                                    ; preds = %invoke.cont82
  %call90 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call83, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp84)
          to label %invoke.cont89 unwind label %lpad88

invoke.cont89:                                    ; preds = %invoke.cont87
  %70 = bitcast %"class.std::basic_string"* %ref.tmp91 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #8
  %71 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp92, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %71) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp91, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.162, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp92)
          to label %invoke.cont94 unwind label %lpad93

invoke.cont94:                                    ; preds = %invoke.cont89
  %ny = getelementptr inbounds %"struct.miniFE::Parameters", %"struct.miniFE::Parameters"* %params, i64 0, i32 1
  %72 = load i32, i32* %ny, align 4, !tbaa !41
  %call97 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsi(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call90, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp91, i32 noundef signext %72)
          to label %invoke.cont96 unwind label %lpad95

invoke.cont96:                                    ; preds = %invoke.cont94
  %_M_p.i.i.i156 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp91, i64 0, i32 0, i32 0
  %73 = load i8*, i8** %_M_p.i.i.i156, align 8, !tbaa !43
  %arrayidx.i.i157 = getelementptr inbounds i8, i8* %73, i64 -24
  %74 = bitcast i8* %arrayidx.i.i157 to %"struct.std::basic_string<char>::_Rep"*
  %75 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i155, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %75) #8
  %cmp.not.i.i158 = icmp eq i8* %arrayidx.i.i157, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i158, label %_ZNSsD2Ev.exit168, label %if.then.i.i160, !prof !47

if.then.i.i160:                                   ; preds = %invoke.cont96
  %_M_refcount.i.i159 = getelementptr inbounds i8, i8* %73, i64 -8
  %76 = bitcast i8* %_M_refcount.i.i159 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i161, label %if.else.i.i.i163

if.then.i.i.i161:                                 ; preds = %if.then.i.i160
  %77 = atomicrmw volatile add i32* %76, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i166

if.else.i.i.i163:                                 ; preds = %if.then.i.i160
  %78 = load i32, i32* %76, align 8, !tbaa !16
  %add.i.i.i.i162 = add nsw i32 %78, -1
  store i32 %add.i.i.i.i162, i32* %76, align 8, !tbaa !16
  br label %invoke.cont.i.i166

invoke.cont.i.i166:                               ; preds = %if.else.i.i.i163, %if.then.i.i.i161
  %retval.0.i.i.i164 = phi i32 [ %77, %if.then.i.i.i161 ], [ %78, %if.else.i.i.i163 ]
  %cmp3.i.i165 = icmp slt i32 %retval.0.i.i.i164, 1
  br i1 %cmp3.i.i165, label %if.then4.i.i167, label %_ZNSsD2Ev.exit168

if.then4.i.i167:                                  ; preds = %invoke.cont.i.i166
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %74, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i155) #8
  br label %_ZNSsD2Ev.exit168

_ZNSsD2Ev.exit168:                                ; preds = %invoke.cont96, %invoke.cont.i.i166, %if.then4.i.i167
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %75) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %71) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #8
  %_M_p.i.i.i170 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp84, i64 0, i32 0, i32 0
  %79 = load i8*, i8** %_M_p.i.i.i170, align 8, !tbaa !43
  %arrayidx.i.i171 = getelementptr inbounds i8, i8* %79, i64 -24
  %80 = bitcast i8* %arrayidx.i.i171 to %"struct.std::basic_string<char>::_Rep"*
  %81 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i169, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %81) #8
  %cmp.not.i.i172 = icmp eq i8* %arrayidx.i.i171, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i172, label %_ZNSsD2Ev.exit182, label %if.then.i.i174, !prof !47

if.then.i.i174:                                   ; preds = %_ZNSsD2Ev.exit168
  %_M_refcount.i.i173 = getelementptr inbounds i8, i8* %79, i64 -8
  %82 = bitcast i8* %_M_refcount.i.i173 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i175, label %if.else.i.i.i177

if.then.i.i.i175:                                 ; preds = %if.then.i.i174
  %83 = atomicrmw volatile add i32* %82, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i180

if.else.i.i.i177:                                 ; preds = %if.then.i.i174
  %84 = load i32, i32* %82, align 8, !tbaa !16
  %add.i.i.i.i176 = add nsw i32 %84, -1
  store i32 %add.i.i.i.i176, i32* %82, align 8, !tbaa !16
  br label %invoke.cont.i.i180

invoke.cont.i.i180:                               ; preds = %if.else.i.i.i177, %if.then.i.i.i175
  %retval.0.i.i.i178 = phi i32 [ %83, %if.then.i.i.i175 ], [ %84, %if.else.i.i.i177 ]
  %cmp3.i.i179 = icmp slt i32 %retval.0.i.i.i178, 1
  br i1 %cmp3.i.i179, label %if.then4.i.i181, label %_ZNSsD2Ev.exit182

if.then4.i.i181:                                  ; preds = %invoke.cont.i.i180
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %80, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i169) #8
  br label %_ZNSsD2Ev.exit182

_ZNSsD2Ev.exit182:                                ; preds = %_ZNSsD2Ev.exit168, %invoke.cont.i.i180, %if.then4.i.i181
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %81) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %69) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #8
  %_M_p.i.i.i184 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp77, i64 0, i32 0, i32 0
  %85 = load i8*, i8** %_M_p.i.i.i184, align 8, !tbaa !43
  %arrayidx.i.i185 = getelementptr inbounds i8, i8* %85, i64 -24
  %86 = bitcast i8* %arrayidx.i.i185 to %"struct.std::basic_string<char>::_Rep"*
  %87 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i183, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %87) #8
  %cmp.not.i.i186 = icmp eq i8* %arrayidx.i.i185, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i186, label %_ZNSsD2Ev.exit196, label %if.then.i.i188, !prof !47

if.then.i.i188:                                   ; preds = %_ZNSsD2Ev.exit182
  %_M_refcount.i.i187 = getelementptr inbounds i8, i8* %85, i64 -8
  %88 = bitcast i8* %_M_refcount.i.i187 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i189, label %if.else.i.i.i191

if.then.i.i.i189:                                 ; preds = %if.then.i.i188
  %89 = atomicrmw volatile add i32* %88, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i194

if.else.i.i.i191:                                 ; preds = %if.then.i.i188
  %90 = load i32, i32* %88, align 8, !tbaa !16
  %add.i.i.i.i190 = add nsw i32 %90, -1
  store i32 %add.i.i.i.i190, i32* %88, align 8, !tbaa !16
  br label %invoke.cont.i.i194

invoke.cont.i.i194:                               ; preds = %if.else.i.i.i191, %if.then.i.i.i189
  %retval.0.i.i.i192 = phi i32 [ %89, %if.then.i.i.i189 ], [ %90, %if.else.i.i.i191 ]
  %cmp3.i.i193 = icmp slt i32 %retval.0.i.i.i192, 1
  br i1 %cmp3.i.i193, label %if.then4.i.i195, label %_ZNSsD2Ev.exit196

if.then4.i.i195:                                  ; preds = %invoke.cont.i.i194
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %86, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i183) #8
  br label %_ZNSsD2Ev.exit196

_ZNSsD2Ev.exit196:                                ; preds = %_ZNSsD2Ev.exit182, %invoke.cont.i.i194, %if.then4.i.i195
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %87) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %67) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #8
  %91 = bitcast %"class.std::basic_string"* %ref.tmp110 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91) #8
  %92 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp111, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %92) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp110, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.29, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp111)
          to label %invoke.cont113 unwind label %lpad112

invoke.cont113:                                   ; preds = %_ZNSsD2Ev.exit196
  %call116 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %0, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp110)
          to label %invoke.cont115 unwind label %lpad114

invoke.cont115:                                   ; preds = %invoke.cont113
  %93 = bitcast %"class.std::basic_string"* %ref.tmp117 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #8
  %94 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp118, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %94) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp117, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.160, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp118)
          to label %invoke.cont120 unwind label %lpad119

invoke.cont120:                                   ; preds = %invoke.cont115
  %call123 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call116, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp117)
          to label %invoke.cont122 unwind label %lpad121

invoke.cont122:                                   ; preds = %invoke.cont120
  %95 = bitcast %"class.std::basic_string"* %ref.tmp124 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #8
  %96 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp125, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %96) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp124, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.163, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp125)
          to label %invoke.cont127 unwind label %lpad126

invoke.cont127:                                   ; preds = %invoke.cont122
  %nz = getelementptr inbounds %"struct.miniFE::Parameters", %"struct.miniFE::Parameters"* %params, i64 0, i32 2
  %97 = load i32, i32* %nz, align 8, !tbaa !42
  %call130 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsi(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call123, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp124, i32 noundef signext %97)
          to label %invoke.cont129 unwind label %lpad128

invoke.cont129:                                   ; preds = %invoke.cont127
  %_M_p.i.i.i198 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp124, i64 0, i32 0, i32 0
  %98 = load i8*, i8** %_M_p.i.i.i198, align 8, !tbaa !43
  %arrayidx.i.i199 = getelementptr inbounds i8, i8* %98, i64 -24
  %99 = bitcast i8* %arrayidx.i.i199 to %"struct.std::basic_string<char>::_Rep"*
  %100 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i197, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %100) #8
  %cmp.not.i.i200 = icmp eq i8* %arrayidx.i.i199, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i200, label %_ZNSsD2Ev.exit210, label %if.then.i.i202, !prof !47

if.then.i.i202:                                   ; preds = %invoke.cont129
  %_M_refcount.i.i201 = getelementptr inbounds i8, i8* %98, i64 -8
  %101 = bitcast i8* %_M_refcount.i.i201 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i203, label %if.else.i.i.i205

if.then.i.i.i203:                                 ; preds = %if.then.i.i202
  %102 = atomicrmw volatile add i32* %101, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i208

if.else.i.i.i205:                                 ; preds = %if.then.i.i202
  %103 = load i32, i32* %101, align 8, !tbaa !16
  %add.i.i.i.i204 = add nsw i32 %103, -1
  store i32 %add.i.i.i.i204, i32* %101, align 8, !tbaa !16
  br label %invoke.cont.i.i208

invoke.cont.i.i208:                               ; preds = %if.else.i.i.i205, %if.then.i.i.i203
  %retval.0.i.i.i206 = phi i32 [ %102, %if.then.i.i.i203 ], [ %103, %if.else.i.i.i205 ]
  %cmp3.i.i207 = icmp slt i32 %retval.0.i.i.i206, 1
  br i1 %cmp3.i.i207, label %if.then4.i.i209, label %_ZNSsD2Ev.exit210

if.then4.i.i209:                                  ; preds = %invoke.cont.i.i208
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %99, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i197) #8
  br label %_ZNSsD2Ev.exit210

_ZNSsD2Ev.exit210:                                ; preds = %invoke.cont129, %invoke.cont.i.i208, %if.then4.i.i209
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %100) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %96) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #8
  %_M_p.i.i.i212 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp117, i64 0, i32 0, i32 0
  %104 = load i8*, i8** %_M_p.i.i.i212, align 8, !tbaa !43
  %arrayidx.i.i213 = getelementptr inbounds i8, i8* %104, i64 -24
  %105 = bitcast i8* %arrayidx.i.i213 to %"struct.std::basic_string<char>::_Rep"*
  %106 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i211, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %106) #8
  %cmp.not.i.i214 = icmp eq i8* %arrayidx.i.i213, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i214, label %_ZNSsD2Ev.exit224, label %if.then.i.i216, !prof !47

if.then.i.i216:                                   ; preds = %_ZNSsD2Ev.exit210
  %_M_refcount.i.i215 = getelementptr inbounds i8, i8* %104, i64 -8
  %107 = bitcast i8* %_M_refcount.i.i215 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i217, label %if.else.i.i.i219

if.then.i.i.i217:                                 ; preds = %if.then.i.i216
  %108 = atomicrmw volatile add i32* %107, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i222

if.else.i.i.i219:                                 ; preds = %if.then.i.i216
  %109 = load i32, i32* %107, align 8, !tbaa !16
  %add.i.i.i.i218 = add nsw i32 %109, -1
  store i32 %add.i.i.i.i218, i32* %107, align 8, !tbaa !16
  br label %invoke.cont.i.i222

invoke.cont.i.i222:                               ; preds = %if.else.i.i.i219, %if.then.i.i.i217
  %retval.0.i.i.i220 = phi i32 [ %108, %if.then.i.i.i217 ], [ %109, %if.else.i.i.i219 ]
  %cmp3.i.i221 = icmp slt i32 %retval.0.i.i.i220, 1
  br i1 %cmp3.i.i221, label %if.then4.i.i223, label %_ZNSsD2Ev.exit224

if.then4.i.i223:                                  ; preds = %invoke.cont.i.i222
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %105, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i211) #8
  br label %_ZNSsD2Ev.exit224

_ZNSsD2Ev.exit224:                                ; preds = %_ZNSsD2Ev.exit210, %invoke.cont.i.i222, %if.then4.i.i223
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %106) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %94) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93) #8
  %_M_p.i.i.i226 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp110, i64 0, i32 0, i32 0
  %110 = load i8*, i8** %_M_p.i.i.i226, align 8, !tbaa !43
  %arrayidx.i.i227 = getelementptr inbounds i8, i8* %110, i64 -24
  %111 = bitcast i8* %arrayidx.i.i227 to %"struct.std::basic_string<char>::_Rep"*
  %112 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i225, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %112) #8
  %cmp.not.i.i228 = icmp eq i8* %arrayidx.i.i227, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i228, label %_ZNSsD2Ev.exit238, label %if.then.i.i230, !prof !47

if.then.i.i230:                                   ; preds = %_ZNSsD2Ev.exit224
  %_M_refcount.i.i229 = getelementptr inbounds i8, i8* %110, i64 -8
  %113 = bitcast i8* %_M_refcount.i.i229 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i231, label %if.else.i.i.i233

if.then.i.i.i231:                                 ; preds = %if.then.i.i230
  %114 = atomicrmw volatile add i32* %113, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i236

if.else.i.i.i233:                                 ; preds = %if.then.i.i230
  %115 = load i32, i32* %113, align 8, !tbaa !16
  %add.i.i.i.i232 = add nsw i32 %115, -1
  store i32 %add.i.i.i.i232, i32* %113, align 8, !tbaa !16
  br label %invoke.cont.i.i236

invoke.cont.i.i236:                               ; preds = %if.else.i.i.i233, %if.then.i.i.i231
  %retval.0.i.i.i234 = phi i32 [ %114, %if.then.i.i.i231 ], [ %115, %if.else.i.i.i233 ]
  %cmp3.i.i235 = icmp slt i32 %retval.0.i.i.i234, 1
  br i1 %cmp3.i.i235, label %if.then4.i.i237, label %_ZNSsD2Ev.exit238

if.then4.i.i237:                                  ; preds = %invoke.cont.i.i236
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %111, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i225) #8
  br label %_ZNSsD2Ev.exit238

_ZNSsD2Ev.exit238:                                ; preds = %_ZNSsD2Ev.exit224, %invoke.cont.i.i236, %if.then4.i.i237
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %112) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %92) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91) #8
  %116 = bitcast %"class.std::basic_string"* %ref.tmp143 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %116) #8
  %117 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp144, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %117) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp143, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.29, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp144)
          to label %invoke.cont146 unwind label %lpad145

invoke.cont146:                                   ; preds = %_ZNSsD2Ev.exit238
  %call149 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %0, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp143)
          to label %invoke.cont148 unwind label %lpad147

invoke.cont148:                                   ; preds = %invoke.cont146
  %118 = bitcast %"class.std::basic_string"* %ref.tmp150 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %118) #8
  %119 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp151, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %119) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp150, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.164, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp151)
          to label %invoke.cont153 unwind label %lpad152

invoke.cont153:                                   ; preds = %invoke.cont148
  %load_imbalance = getelementptr inbounds %"struct.miniFE::Parameters", %"struct.miniFE::Parameters"* %params, i64 0, i32 6
  %120 = load float, float* %load_imbalance, align 8, !tbaa !27
  %conv = fpext float %120 to double
  %call156 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsd(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call149, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp150, double noundef %conv)
          to label %invoke.cont155 unwind label %lpad154

invoke.cont155:                                   ; preds = %invoke.cont153
  %_M_p.i.i.i240 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp150, i64 0, i32 0, i32 0
  %121 = load i8*, i8** %_M_p.i.i.i240, align 8, !tbaa !43
  %arrayidx.i.i241 = getelementptr inbounds i8, i8* %121, i64 -24
  %122 = bitcast i8* %arrayidx.i.i241 to %"struct.std::basic_string<char>::_Rep"*
  %123 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i239, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %123) #8
  %cmp.not.i.i242 = icmp eq i8* %arrayidx.i.i241, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i242, label %_ZNSsD2Ev.exit252, label %if.then.i.i244, !prof !47

if.then.i.i244:                                   ; preds = %invoke.cont155
  %_M_refcount.i.i243 = getelementptr inbounds i8, i8* %121, i64 -8
  %124 = bitcast i8* %_M_refcount.i.i243 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i245, label %if.else.i.i.i247

if.then.i.i.i245:                                 ; preds = %if.then.i.i244
  %125 = atomicrmw volatile add i32* %124, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i250

if.else.i.i.i247:                                 ; preds = %if.then.i.i244
  %126 = load i32, i32* %124, align 8, !tbaa !16
  %add.i.i.i.i246 = add nsw i32 %126, -1
  store i32 %add.i.i.i.i246, i32* %124, align 8, !tbaa !16
  br label %invoke.cont.i.i250

invoke.cont.i.i250:                               ; preds = %if.else.i.i.i247, %if.then.i.i.i245
  %retval.0.i.i.i248 = phi i32 [ %125, %if.then.i.i.i245 ], [ %126, %if.else.i.i.i247 ]
  %cmp3.i.i249 = icmp slt i32 %retval.0.i.i.i248, 1
  br i1 %cmp3.i.i249, label %if.then4.i.i251, label %_ZNSsD2Ev.exit252

if.then4.i.i251:                                  ; preds = %invoke.cont.i.i250
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %122, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i239) #8
  br label %_ZNSsD2Ev.exit252

_ZNSsD2Ev.exit252:                                ; preds = %invoke.cont155, %invoke.cont.i.i250, %if.then4.i.i251
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %123) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %119) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #8
  %_M_p.i.i.i254 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp143, i64 0, i32 0, i32 0
  %127 = load i8*, i8** %_M_p.i.i.i254, align 8, !tbaa !43
  %arrayidx.i.i255 = getelementptr inbounds i8, i8* %127, i64 -24
  %128 = bitcast i8* %arrayidx.i.i255 to %"struct.std::basic_string<char>::_Rep"*
  %129 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i253, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %129) #8
  %cmp.not.i.i256 = icmp eq i8* %arrayidx.i.i255, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i256, label %_ZNSsD2Ev.exit266, label %if.then.i.i258, !prof !47

if.then.i.i258:                                   ; preds = %_ZNSsD2Ev.exit252
  %_M_refcount.i.i257 = getelementptr inbounds i8, i8* %127, i64 -8
  %130 = bitcast i8* %_M_refcount.i.i257 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i259, label %if.else.i.i.i261

if.then.i.i.i259:                                 ; preds = %if.then.i.i258
  %131 = atomicrmw volatile add i32* %130, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i264

if.else.i.i.i261:                                 ; preds = %if.then.i.i258
  %132 = load i32, i32* %130, align 8, !tbaa !16
  %add.i.i.i.i260 = add nsw i32 %132, -1
  store i32 %add.i.i.i.i260, i32* %130, align 8, !tbaa !16
  br label %invoke.cont.i.i264

invoke.cont.i.i264:                               ; preds = %if.else.i.i.i261, %if.then.i.i.i259
  %retval.0.i.i.i262 = phi i32 [ %131, %if.then.i.i.i259 ], [ %132, %if.else.i.i.i261 ]
  %cmp3.i.i263 = icmp slt i32 %retval.0.i.i.i262, 1
  br i1 %cmp3.i.i263, label %if.then4.i.i265, label %_ZNSsD2Ev.exit266

if.then4.i.i265:                                  ; preds = %invoke.cont.i.i264
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %128, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i253) #8
  br label %_ZNSsD2Ev.exit266

_ZNSsD2Ev.exit266:                                ; preds = %_ZNSsD2Ev.exit252, %invoke.cont.i.i264, %if.then4.i.i265
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %129) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %117) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #8
  %mv_overlap_comm_comp = getelementptr inbounds %"struct.miniFE::Parameters", %"struct.miniFE::Parameters"* %params, i64 0, i32 4
  %133 = load i32, i32* %mv_overlap_comm_comp, align 8, !tbaa !20
  %cmp = icmp eq i32 %133, 1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %_ZNSsD2Ev.exit266
  %134 = bitcast %"class.std::basic_string"* %val to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %134) #8
  %135 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp165, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %135) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %val, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.165, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp165)
          to label %invoke.cont167 unwind label %lpad166

invoke.cont167:                                   ; preds = %if.then
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %135) #8
  %136 = bitcast %"class.std::basic_string"* %ref.tmp170 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %136) #8
  %137 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp171, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %137) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp170, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.29, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp171)
          to label %invoke.cont173 unwind label %lpad172

invoke.cont173:                                   ; preds = %invoke.cont167
  %call176 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %0, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp170)
          to label %invoke.cont175 unwind label %lpad174

invoke.cont175:                                   ; preds = %invoke.cont173
  %138 = bitcast %"class.std::basic_string"* %ref.tmp177 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %138) #8
  %139 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp178, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %139) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp177, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.166, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp178)
          to label %invoke.cont180 unwind label %lpad179

invoke.cont180:                                   ; preds = %invoke.cont175
  %call183 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsS1_(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call176, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp177, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %val)
          to label %invoke.cont182 unwind label %lpad181

invoke.cont182:                                   ; preds = %invoke.cont180
  %_M_p.i.i.i268 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp177, i64 0, i32 0, i32 0
  %140 = load i8*, i8** %_M_p.i.i.i268, align 8, !tbaa !43
  %arrayidx.i.i269 = getelementptr inbounds i8, i8* %140, i64 -24
  %141 = bitcast i8* %arrayidx.i.i269 to %"struct.std::basic_string<char>::_Rep"*
  %142 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i267, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %142) #8
  %cmp.not.i.i270 = icmp eq i8* %arrayidx.i.i269, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i270, label %_ZNSsD2Ev.exit280, label %if.then.i.i272, !prof !47

if.then.i.i272:                                   ; preds = %invoke.cont182
  %_M_refcount.i.i271 = getelementptr inbounds i8, i8* %140, i64 -8
  %143 = bitcast i8* %_M_refcount.i.i271 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i273, label %if.else.i.i.i275

if.then.i.i.i273:                                 ; preds = %if.then.i.i272
  %144 = atomicrmw volatile add i32* %143, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i278

if.else.i.i.i275:                                 ; preds = %if.then.i.i272
  %145 = load i32, i32* %143, align 8, !tbaa !16
  %add.i.i.i.i274 = add nsw i32 %145, -1
  store i32 %add.i.i.i.i274, i32* %143, align 8, !tbaa !16
  br label %invoke.cont.i.i278

invoke.cont.i.i278:                               ; preds = %if.else.i.i.i275, %if.then.i.i.i273
  %retval.0.i.i.i276 = phi i32 [ %144, %if.then.i.i.i273 ], [ %145, %if.else.i.i.i275 ]
  %cmp3.i.i277 = icmp slt i32 %retval.0.i.i.i276, 1
  br i1 %cmp3.i.i277, label %if.then4.i.i279, label %_ZNSsD2Ev.exit280

if.then4.i.i279:                                  ; preds = %invoke.cont.i.i278
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %141, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i267) #8
  br label %_ZNSsD2Ev.exit280

_ZNSsD2Ev.exit280:                                ; preds = %invoke.cont182, %invoke.cont.i.i278, %if.then4.i.i279
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %142) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %139) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %138) #8
  %_M_p.i.i.i282 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp170, i64 0, i32 0, i32 0
  %146 = load i8*, i8** %_M_p.i.i.i282, align 8, !tbaa !43
  %arrayidx.i.i283 = getelementptr inbounds i8, i8* %146, i64 -24
  %147 = bitcast i8* %arrayidx.i.i283 to %"struct.std::basic_string<char>::_Rep"*
  %148 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i281, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %148) #8
  %cmp.not.i.i284 = icmp eq i8* %arrayidx.i.i283, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i284, label %_ZNSsD2Ev.exit294, label %if.then.i.i286, !prof !47

if.then.i.i286:                                   ; preds = %_ZNSsD2Ev.exit280
  %_M_refcount.i.i285 = getelementptr inbounds i8, i8* %146, i64 -8
  %149 = bitcast i8* %_M_refcount.i.i285 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i287, label %if.else.i.i.i289

if.then.i.i.i287:                                 ; preds = %if.then.i.i286
  %150 = atomicrmw volatile add i32* %149, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i292

if.else.i.i.i289:                                 ; preds = %if.then.i.i286
  %151 = load i32, i32* %149, align 8, !tbaa !16
  %add.i.i.i.i288 = add nsw i32 %151, -1
  store i32 %add.i.i.i.i288, i32* %149, align 8, !tbaa !16
  br label %invoke.cont.i.i292

invoke.cont.i.i292:                               ; preds = %if.else.i.i.i289, %if.then.i.i.i287
  %retval.0.i.i.i290 = phi i32 [ %150, %if.then.i.i.i287 ], [ %151, %if.else.i.i.i289 ]
  %cmp3.i.i291 = icmp slt i32 %retval.0.i.i.i290, 1
  br i1 %cmp3.i.i291, label %if.then4.i.i293, label %_ZNSsD2Ev.exit294

if.then4.i.i293:                                  ; preds = %invoke.cont.i.i292
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %147, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i281) #8
  br label %_ZNSsD2Ev.exit294

_ZNSsD2Ev.exit294:                                ; preds = %_ZNSsD2Ev.exit280, %invoke.cont.i.i292, %if.then4.i.i293
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %148) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %137) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %136) #8
  %_M_p.i.i.i296 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %val, i64 0, i32 0, i32 0
  %152 = load i8*, i8** %_M_p.i.i.i296, align 8, !tbaa !43
  %arrayidx.i.i297 = getelementptr inbounds i8, i8* %152, i64 -24
  %153 = bitcast i8* %arrayidx.i.i297 to %"struct.std::basic_string<char>::_Rep"*
  %154 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i295, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %154) #8
  %cmp.not.i.i298 = icmp eq i8* %arrayidx.i.i297, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i298, label %_ZNSsD2Ev.exit308, label %if.then.i.i300, !prof !47

if.then.i.i300:                                   ; preds = %_ZNSsD2Ev.exit294
  %_M_refcount.i.i299 = getelementptr inbounds i8, i8* %152, i64 -8
  %155 = bitcast i8* %_M_refcount.i.i299 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i301, label %if.else.i.i.i303

if.then.i.i.i301:                                 ; preds = %if.then.i.i300
  %156 = atomicrmw volatile add i32* %155, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i306

if.else.i.i.i303:                                 ; preds = %if.then.i.i300
  %157 = load i32, i32* %155, align 8, !tbaa !16
  %add.i.i.i.i302 = add nsw i32 %157, -1
  store i32 %add.i.i.i.i302, i32* %155, align 8, !tbaa !16
  br label %invoke.cont.i.i306

invoke.cont.i.i306:                               ; preds = %if.else.i.i.i303, %if.then.i.i.i301
  %retval.0.i.i.i304 = phi i32 [ %156, %if.then.i.i.i301 ], [ %157, %if.else.i.i.i303 ]
  %cmp3.i.i305 = icmp slt i32 %retval.0.i.i.i304, 1
  br i1 %cmp3.i.i305, label %if.then4.i.i307, label %_ZNSsD2Ev.exit308

if.then4.i.i307:                                  ; preds = %invoke.cont.i.i306
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %153, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i295) #8
  br label %_ZNSsD2Ev.exit308

_ZNSsD2Ev.exit308:                                ; preds = %_ZNSsD2Ev.exit294, %invoke.cont.i.i306, %if.then4.i.i307
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %154) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %134) #8
  br label %if.end

lpad:                                             ; preds = %entry
  %158 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup11

lpad4:                                            ; preds = %invoke.cont
  %159 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup

lpad6:                                            ; preds = %invoke.cont5
  %160 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp2) #8
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad6, %lpad4
  %.pn = phi { i8*, i32 } [ %160, %lpad6 ], [ %159, %lpad4 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #8
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp) #8
  br label %ehcleanup11

ehcleanup11:                                      ; preds = %ehcleanup, %lpad
  %.pn.pn = phi { i8*, i32 } [ %.pn, %ehcleanup ], [ %158, %lpad ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8
  br label %eh.resume

lpad16:                                           ; preds = %_ZNSsD2Ev.exit70
  %161 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup41

lpad18:                                           ; preds = %invoke.cont17
  %162 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup40

lpad23:                                           ; preds = %invoke.cont19
  %163 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup37

lpad27:                                           ; preds = %invoke.cont24
  %164 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup33

lpad29:                                           ; preds = %invoke.cont28
  %165 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp25) #8
  br label %ehcleanup33

ehcleanup33:                                      ; preds = %lpad29, %lpad27
  %.pn15 = phi { i8*, i32 } [ %165, %lpad29 ], [ %164, %lpad27 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %22) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #8
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp21) #8
  br label %ehcleanup37

ehcleanup37:                                      ; preds = %ehcleanup33, %lpad23
  %.pn15.pn = phi { i8*, i32 } [ %.pn15, %ehcleanup33 ], [ %163, %lpad23 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %20) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #8
  br label %ehcleanup40

ehcleanup40:                                      ; preds = %ehcleanup37, %lpad18
  %.pn15.pn.pn = phi { i8*, i32 } [ %.pn15.pn, %ehcleanup37 ], [ %162, %lpad18 ]
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp14) #8
  br label %ehcleanup41

ehcleanup41:                                      ; preds = %ehcleanup40, %lpad16
  %.pn15.pn.pn.pn = phi { i8*, i32 } [ %.pn15.pn.pn, %ehcleanup40 ], [ %161, %lpad16 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %18) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %eh.resume

lpad46:                                           ; preds = %_ZNSsD2Ev.exit112
  %166 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup74

lpad48:                                           ; preds = %invoke.cont47
  %167 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup73

lpad53:                                           ; preds = %invoke.cont49
  %168 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup70

lpad55:                                           ; preds = %invoke.cont54
  %169 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup69

lpad60:                                           ; preds = %invoke.cont56
  %170 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup66

lpad62:                                           ; preds = %invoke.cont61
  %171 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp58) #8
  br label %ehcleanup66

ehcleanup66:                                      ; preds = %lpad62, %lpad60
  %.pn20 = phi { i8*, i32 } [ %171, %lpad62 ], [ %170, %lpad60 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %46) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #8
  br label %ehcleanup69

ehcleanup69:                                      ; preds = %ehcleanup66, %lpad55
  %.pn20.pn = phi { i8*, i32 } [ %.pn20, %ehcleanup66 ], [ %169, %lpad55 ]
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp51) #8
  br label %ehcleanup70

ehcleanup70:                                      ; preds = %ehcleanup69, %lpad53
  %.pn20.pn.pn = phi { i8*, i32 } [ %.pn20.pn, %ehcleanup69 ], [ %168, %lpad53 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %44) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #8
  br label %ehcleanup73

ehcleanup73:                                      ; preds = %ehcleanup70, %lpad48
  %.pn20.pn.pn.pn = phi { i8*, i32 } [ %.pn20.pn.pn, %ehcleanup70 ], [ %167, %lpad48 ]
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp44) #8
  br label %ehcleanup74

ehcleanup74:                                      ; preds = %ehcleanup73, %lpad46
  %.pn20.pn.pn.pn.pn = phi { i8*, i32 } [ %.pn20.pn.pn.pn, %ehcleanup73 ], [ %166, %lpad46 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %42) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #8
  br label %eh.resume

lpad79:                                           ; preds = %_ZNSsD2Ev.exit154
  %172 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup107

lpad81:                                           ; preds = %invoke.cont80
  %173 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup106

lpad86:                                           ; preds = %invoke.cont82
  %174 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup103

lpad88:                                           ; preds = %invoke.cont87
  %175 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup102

lpad93:                                           ; preds = %invoke.cont89
  %176 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup99

lpad95:                                           ; preds = %invoke.cont94
  %177 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp91) #8
  br label %ehcleanup99

ehcleanup99:                                      ; preds = %lpad95, %lpad93
  %.pn26 = phi { i8*, i32 } [ %177, %lpad95 ], [ %176, %lpad93 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %71) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #8
  br label %ehcleanup102

ehcleanup102:                                     ; preds = %ehcleanup99, %lpad88
  %.pn26.pn = phi { i8*, i32 } [ %.pn26, %ehcleanup99 ], [ %175, %lpad88 ]
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp84) #8
  br label %ehcleanup103

ehcleanup103:                                     ; preds = %ehcleanup102, %lpad86
  %.pn26.pn.pn = phi { i8*, i32 } [ %.pn26.pn, %ehcleanup102 ], [ %174, %lpad86 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %69) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #8
  br label %ehcleanup106

ehcleanup106:                                     ; preds = %ehcleanup103, %lpad81
  %.pn26.pn.pn.pn = phi { i8*, i32 } [ %.pn26.pn.pn, %ehcleanup103 ], [ %173, %lpad81 ]
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp77) #8
  br label %ehcleanup107

ehcleanup107:                                     ; preds = %ehcleanup106, %lpad79
  %.pn26.pn.pn.pn.pn = phi { i8*, i32 } [ %.pn26.pn.pn.pn, %ehcleanup106 ], [ %172, %lpad79 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %67) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #8
  br label %eh.resume

lpad112:                                          ; preds = %_ZNSsD2Ev.exit196
  %178 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup140

lpad114:                                          ; preds = %invoke.cont113
  %179 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup139

lpad119:                                          ; preds = %invoke.cont115
  %180 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup136

lpad121:                                          ; preds = %invoke.cont120
  %181 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup135

lpad126:                                          ; preds = %invoke.cont122
  %182 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup132

lpad128:                                          ; preds = %invoke.cont127
  %183 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp124) #8
  br label %ehcleanup132

ehcleanup132:                                     ; preds = %lpad128, %lpad126
  %.pn32 = phi { i8*, i32 } [ %183, %lpad128 ], [ %182, %lpad126 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %96) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #8
  br label %ehcleanup135

ehcleanup135:                                     ; preds = %ehcleanup132, %lpad121
  %.pn32.pn = phi { i8*, i32 } [ %.pn32, %ehcleanup132 ], [ %181, %lpad121 ]
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp117) #8
  br label %ehcleanup136

ehcleanup136:                                     ; preds = %ehcleanup135, %lpad119
  %.pn32.pn.pn = phi { i8*, i32 } [ %.pn32.pn, %ehcleanup135 ], [ %180, %lpad119 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %94) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93) #8
  br label %ehcleanup139

ehcleanup139:                                     ; preds = %ehcleanup136, %lpad114
  %.pn32.pn.pn.pn = phi { i8*, i32 } [ %.pn32.pn.pn, %ehcleanup136 ], [ %179, %lpad114 ]
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp110) #8
  br label %ehcleanup140

ehcleanup140:                                     ; preds = %ehcleanup139, %lpad112
  %.pn32.pn.pn.pn.pn = phi { i8*, i32 } [ %.pn32.pn.pn.pn, %ehcleanup139 ], [ %178, %lpad112 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %92) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91) #8
  br label %eh.resume

lpad145:                                          ; preds = %_ZNSsD2Ev.exit238
  %184 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup162

lpad147:                                          ; preds = %invoke.cont146
  %185 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup161

lpad152:                                          ; preds = %invoke.cont148
  %186 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup158

lpad154:                                          ; preds = %invoke.cont153
  %187 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp150) #8
  br label %ehcleanup158

ehcleanup158:                                     ; preds = %lpad154, %lpad152
  %.pn38 = phi { i8*, i32 } [ %187, %lpad154 ], [ %186, %lpad152 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %119) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #8
  br label %ehcleanup161

ehcleanup161:                                     ; preds = %ehcleanup158, %lpad147
  %.pn38.pn = phi { i8*, i32 } [ %.pn38, %ehcleanup158 ], [ %185, %lpad147 ]
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp143) #8
  br label %ehcleanup162

ehcleanup162:                                     ; preds = %ehcleanup161, %lpad145
  %.pn38.pn.pn = phi { i8*, i32 } [ %.pn38.pn, %ehcleanup161 ], [ %184, %lpad145 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %117) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #8
  br label %eh.resume

lpad166:                                          ; preds = %if.then
  %188 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %135) #8
  br label %ehcleanup193

lpad172:                                          ; preds = %invoke.cont167
  %189 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup189

lpad174:                                          ; preds = %invoke.cont173
  %190 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup188

lpad179:                                          ; preds = %invoke.cont175
  %191 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup185

lpad181:                                          ; preds = %invoke.cont180
  %192 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp177) #8
  br label %ehcleanup185

ehcleanup185:                                     ; preds = %lpad181, %lpad179
  %.pn51 = phi { i8*, i32 } [ %192, %lpad181 ], [ %191, %lpad179 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %139) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %138) #8
  br label %ehcleanup188

ehcleanup188:                                     ; preds = %ehcleanup185, %lpad174
  %.pn51.pn = phi { i8*, i32 } [ %.pn51, %ehcleanup185 ], [ %190, %lpad174 ]
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp170) #8
  br label %ehcleanup189

ehcleanup189:                                     ; preds = %ehcleanup188, %lpad172
  %.pn51.pn.pn = phi { i8*, i32 } [ %.pn51.pn, %ehcleanup188 ], [ %189, %lpad172 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %137) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %136) #8
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %val) #8
  br label %ehcleanup193

ehcleanup193:                                     ; preds = %ehcleanup189, %lpad166
  %.pn51.pn.pn.pn = phi { i8*, i32 } [ %.pn51.pn.pn, %ehcleanup189 ], [ %188, %lpad166 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %134) #8
  br label %eh.resume

if.else:                                          ; preds = %_ZNSsD2Ev.exit266
  %193 = bitcast %"class.std::basic_string"* %val194 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %193) #8
  %194 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp195, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %194) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %val194, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.167, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp195)
          to label %invoke.cont197 unwind label %lpad196

invoke.cont197:                                   ; preds = %if.else
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %194) #8
  %195 = bitcast %"class.std::basic_string"* %ref.tmp200 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %195) #8
  %196 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp201, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %196) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp200, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.29, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp201)
          to label %invoke.cont203 unwind label %lpad202

invoke.cont203:                                   ; preds = %invoke.cont197
  %call206 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %0, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp200)
          to label %invoke.cont205 unwind label %lpad204

invoke.cont205:                                   ; preds = %invoke.cont203
  %197 = bitcast %"class.std::basic_string"* %ref.tmp207 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %197) #8
  %198 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp208, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %198) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp207, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.166, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp208)
          to label %invoke.cont210 unwind label %lpad209

invoke.cont210:                                   ; preds = %invoke.cont205
  %call213 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsS1_(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call206, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp207, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %val194)
          to label %invoke.cont212 unwind label %lpad211

invoke.cont212:                                   ; preds = %invoke.cont210
  %_M_p.i.i.i310 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp207, i64 0, i32 0, i32 0
  %199 = load i8*, i8** %_M_p.i.i.i310, align 8, !tbaa !43
  %arrayidx.i.i311 = getelementptr inbounds i8, i8* %199, i64 -24
  %200 = bitcast i8* %arrayidx.i.i311 to %"struct.std::basic_string<char>::_Rep"*
  %201 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i309, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %201) #8
  %cmp.not.i.i312 = icmp eq i8* %arrayidx.i.i311, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i312, label %_ZNSsD2Ev.exit322, label %if.then.i.i314, !prof !47

if.then.i.i314:                                   ; preds = %invoke.cont212
  %_M_refcount.i.i313 = getelementptr inbounds i8, i8* %199, i64 -8
  %202 = bitcast i8* %_M_refcount.i.i313 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i315, label %if.else.i.i.i317

if.then.i.i.i315:                                 ; preds = %if.then.i.i314
  %203 = atomicrmw volatile add i32* %202, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i320

if.else.i.i.i317:                                 ; preds = %if.then.i.i314
  %204 = load i32, i32* %202, align 8, !tbaa !16
  %add.i.i.i.i316 = add nsw i32 %204, -1
  store i32 %add.i.i.i.i316, i32* %202, align 8, !tbaa !16
  br label %invoke.cont.i.i320

invoke.cont.i.i320:                               ; preds = %if.else.i.i.i317, %if.then.i.i.i315
  %retval.0.i.i.i318 = phi i32 [ %203, %if.then.i.i.i315 ], [ %204, %if.else.i.i.i317 ]
  %cmp3.i.i319 = icmp slt i32 %retval.0.i.i.i318, 1
  br i1 %cmp3.i.i319, label %if.then4.i.i321, label %_ZNSsD2Ev.exit322

if.then4.i.i321:                                  ; preds = %invoke.cont.i.i320
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %200, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i309) #8
  br label %_ZNSsD2Ev.exit322

_ZNSsD2Ev.exit322:                                ; preds = %invoke.cont212, %invoke.cont.i.i320, %if.then4.i.i321
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %201) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %198) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %197) #8
  %_M_p.i.i.i324 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp200, i64 0, i32 0, i32 0
  %205 = load i8*, i8** %_M_p.i.i.i324, align 8, !tbaa !43
  %arrayidx.i.i325 = getelementptr inbounds i8, i8* %205, i64 -24
  %206 = bitcast i8* %arrayidx.i.i325 to %"struct.std::basic_string<char>::_Rep"*
  %207 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i323, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %207) #8
  %cmp.not.i.i326 = icmp eq i8* %arrayidx.i.i325, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i326, label %_ZNSsD2Ev.exit336, label %if.then.i.i328, !prof !47

if.then.i.i328:                                   ; preds = %_ZNSsD2Ev.exit322
  %_M_refcount.i.i327 = getelementptr inbounds i8, i8* %205, i64 -8
  %208 = bitcast i8* %_M_refcount.i.i327 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i329, label %if.else.i.i.i331

if.then.i.i.i329:                                 ; preds = %if.then.i.i328
  %209 = atomicrmw volatile add i32* %208, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i334

if.else.i.i.i331:                                 ; preds = %if.then.i.i328
  %210 = load i32, i32* %208, align 8, !tbaa !16
  %add.i.i.i.i330 = add nsw i32 %210, -1
  store i32 %add.i.i.i.i330, i32* %208, align 8, !tbaa !16
  br label %invoke.cont.i.i334

invoke.cont.i.i334:                               ; preds = %if.else.i.i.i331, %if.then.i.i.i329
  %retval.0.i.i.i332 = phi i32 [ %209, %if.then.i.i.i329 ], [ %210, %if.else.i.i.i331 ]
  %cmp3.i.i333 = icmp slt i32 %retval.0.i.i.i332, 1
  br i1 %cmp3.i.i333, label %if.then4.i.i335, label %_ZNSsD2Ev.exit336

if.then4.i.i335:                                  ; preds = %invoke.cont.i.i334
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %206, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i323) #8
  br label %_ZNSsD2Ev.exit336

_ZNSsD2Ev.exit336:                                ; preds = %_ZNSsD2Ev.exit322, %invoke.cont.i.i334, %if.then4.i.i335
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %207) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %196) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %195) #8
  %_M_p.i.i.i338 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %val194, i64 0, i32 0, i32 0
  %211 = load i8*, i8** %_M_p.i.i.i338, align 8, !tbaa !43
  %arrayidx.i.i339 = getelementptr inbounds i8, i8* %211, i64 -24
  %212 = bitcast i8* %arrayidx.i.i339 to %"struct.std::basic_string<char>::_Rep"*
  %213 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i337, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %213) #8
  %cmp.not.i.i340 = icmp eq i8* %arrayidx.i.i339, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i340, label %_ZNSsD2Ev.exit350, label %if.then.i.i342, !prof !47

if.then.i.i342:                                   ; preds = %_ZNSsD2Ev.exit336
  %_M_refcount.i.i341 = getelementptr inbounds i8, i8* %211, i64 -8
  %214 = bitcast i8* %_M_refcount.i.i341 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i343, label %if.else.i.i.i345

if.then.i.i.i343:                                 ; preds = %if.then.i.i342
  %215 = atomicrmw volatile add i32* %214, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i348

if.else.i.i.i345:                                 ; preds = %if.then.i.i342
  %216 = load i32, i32* %214, align 8, !tbaa !16
  %add.i.i.i.i344 = add nsw i32 %216, -1
  store i32 %add.i.i.i.i344, i32* %214, align 8, !tbaa !16
  br label %invoke.cont.i.i348

invoke.cont.i.i348:                               ; preds = %if.else.i.i.i345, %if.then.i.i.i343
  %retval.0.i.i.i346 = phi i32 [ %215, %if.then.i.i.i343 ], [ %216, %if.else.i.i.i345 ]
  %cmp3.i.i347 = icmp slt i32 %retval.0.i.i.i346, 1
  br i1 %cmp3.i.i347, label %if.then4.i.i349, label %_ZNSsD2Ev.exit350

if.then4.i.i349:                                  ; preds = %invoke.cont.i.i348
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %212, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i337) #8
  br label %_ZNSsD2Ev.exit350

_ZNSsD2Ev.exit350:                                ; preds = %_ZNSsD2Ev.exit336, %invoke.cont.i.i348, %if.then4.i.i349
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %213) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %193) #8
  br label %if.end

lpad196:                                          ; preds = %if.else
  %217 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %194) #8
  br label %ehcleanup223

lpad202:                                          ; preds = %invoke.cont197
  %218 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup219

lpad204:                                          ; preds = %invoke.cont203
  %219 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup218

lpad209:                                          ; preds = %invoke.cont205
  %220 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup215

lpad211:                                          ; preds = %invoke.cont210
  %221 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp207) #8
  br label %ehcleanup215

ehcleanup215:                                     ; preds = %lpad211, %lpad209
  %.pn42 = phi { i8*, i32 } [ %221, %lpad211 ], [ %220, %lpad209 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %198) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %197) #8
  br label %ehcleanup218

ehcleanup218:                                     ; preds = %ehcleanup215, %lpad204
  %.pn42.pn = phi { i8*, i32 } [ %.pn42, %ehcleanup215 ], [ %219, %lpad204 ]
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp200) #8
  br label %ehcleanup219

ehcleanup219:                                     ; preds = %ehcleanup218, %lpad202
  %.pn42.pn.pn = phi { i8*, i32 } [ %.pn42.pn, %ehcleanup218 ], [ %218, %lpad202 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %196) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %195) #8
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %val194) #8
  br label %ehcleanup223

ehcleanup223:                                     ; preds = %ehcleanup219, %lpad196
  %.pn42.pn.pn.pn = phi { i8*, i32 } [ %.pn42.pn.pn, %ehcleanup219 ], [ %217, %lpad196 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %193) #8
  br label %eh.resume

if.end:                                           ; preds = %_ZNSsD2Ev.exit350, %_ZNSsD2Ev.exit308
  %222 = bitcast %"class.std::basic_string"* %ref.tmp224 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %222) #8
  %223 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp225, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %223) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp224, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.29, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp225)
          to label %invoke.cont227 unwind label %lpad226

invoke.cont227:                                   ; preds = %if.end
  %call230 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %0, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp224)
          to label %invoke.cont229 unwind label %lpad228

invoke.cont229:                                   ; preds = %invoke.cont227
  %224 = bitcast %"class.std::basic_string"* %ref.tmp231 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %224) #8
  %225 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp232, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %225) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp231, i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.168, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp232)
          to label %invoke.cont234 unwind label %lpad233

invoke.cont234:                                   ; preds = %invoke.cont229
  %call237 = call signext i32 @omp_get_max_threads()
  %call239 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsi(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call230, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp231, i32 noundef signext %call237)
          to label %invoke.cont238 unwind label %lpad235

invoke.cont238:                                   ; preds = %invoke.cont234
  %_M_p.i.i.i352 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp231, i64 0, i32 0, i32 0
  %226 = load i8*, i8** %_M_p.i.i.i352, align 8, !tbaa !43
  %arrayidx.i.i353 = getelementptr inbounds i8, i8* %226, i64 -24
  %227 = bitcast i8* %arrayidx.i.i353 to %"struct.std::basic_string<char>::_Rep"*
  %228 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i351, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %228) #8
  %cmp.not.i.i354 = icmp eq i8* %arrayidx.i.i353, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i354, label %_ZNSsD2Ev.exit364, label %if.then.i.i356, !prof !47

if.then.i.i356:                                   ; preds = %invoke.cont238
  %_M_refcount.i.i355 = getelementptr inbounds i8, i8* %226, i64 -8
  %229 = bitcast i8* %_M_refcount.i.i355 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i357, label %if.else.i.i.i359

if.then.i.i.i357:                                 ; preds = %if.then.i.i356
  %230 = atomicrmw volatile add i32* %229, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i362

if.else.i.i.i359:                                 ; preds = %if.then.i.i356
  %231 = load i32, i32* %229, align 8, !tbaa !16
  %add.i.i.i.i358 = add nsw i32 %231, -1
  store i32 %add.i.i.i.i358, i32* %229, align 8, !tbaa !16
  br label %invoke.cont.i.i362

invoke.cont.i.i362:                               ; preds = %if.else.i.i.i359, %if.then.i.i.i357
  %retval.0.i.i.i360 = phi i32 [ %230, %if.then.i.i.i357 ], [ %231, %if.else.i.i.i359 ]
  %cmp3.i.i361 = icmp slt i32 %retval.0.i.i.i360, 1
  br i1 %cmp3.i.i361, label %if.then4.i.i363, label %_ZNSsD2Ev.exit364

if.then4.i.i363:                                  ; preds = %invoke.cont.i.i362
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %227, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i351) #8
  br label %_ZNSsD2Ev.exit364

_ZNSsD2Ev.exit364:                                ; preds = %invoke.cont238, %invoke.cont.i.i362, %if.then4.i.i363
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %228) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %225) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %224) #8
  %_M_p.i.i.i366 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp224, i64 0, i32 0, i32 0
  %232 = load i8*, i8** %_M_p.i.i.i366, align 8, !tbaa !43
  %arrayidx.i.i367 = getelementptr inbounds i8, i8* %232, i64 -24
  %233 = bitcast i8* %arrayidx.i.i367 to %"struct.std::basic_string<char>::_Rep"*
  %234 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i365, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %234) #8
  %cmp.not.i.i368 = icmp eq i8* %arrayidx.i.i367, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i368, label %_ZNSsD2Ev.exit378, label %if.then.i.i370, !prof !47

if.then.i.i370:                                   ; preds = %_ZNSsD2Ev.exit364
  %_M_refcount.i.i369 = getelementptr inbounds i8, i8* %232, i64 -8
  %235 = bitcast i8* %_M_refcount.i.i369 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i371, label %if.else.i.i.i373

if.then.i.i.i371:                                 ; preds = %if.then.i.i370
  %236 = atomicrmw volatile add i32* %235, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i376

if.else.i.i.i373:                                 ; preds = %if.then.i.i370
  %237 = load i32, i32* %235, align 8, !tbaa !16
  %add.i.i.i.i372 = add nsw i32 %237, -1
  store i32 %add.i.i.i.i372, i32* %235, align 8, !tbaa !16
  br label %invoke.cont.i.i376

invoke.cont.i.i376:                               ; preds = %if.else.i.i.i373, %if.then.i.i.i371
  %retval.0.i.i.i374 = phi i32 [ %236, %if.then.i.i.i371 ], [ %237, %if.else.i.i.i373 ]
  %cmp3.i.i375 = icmp slt i32 %retval.0.i.i.i374, 1
  br i1 %cmp3.i.i375, label %if.then4.i.i377, label %_ZNSsD2Ev.exit378

if.then4.i.i377:                                  ; preds = %invoke.cont.i.i376
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %233, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i365) #8
  br label %_ZNSsD2Ev.exit378

_ZNSsD2Ev.exit378:                                ; preds = %_ZNSsD2Ev.exit364, %invoke.cont.i.i376, %if.then4.i.i377
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %234) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %223) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %222) #8
  ret void

lpad226:                                          ; preds = %if.end
  %238 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup245

lpad228:                                          ; preds = %invoke.cont227
  %239 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup244

lpad233:                                          ; preds = %invoke.cont229
  %240 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup241

lpad235:                                          ; preds = %invoke.cont234
  %241 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp231) #8
  br label %ehcleanup241

ehcleanup241:                                     ; preds = %lpad235, %lpad233
  %.pn47 = phi { i8*, i32 } [ %241, %lpad235 ], [ %240, %lpad233 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %225) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %224) #8
  br label %ehcleanup244

ehcleanup244:                                     ; preds = %ehcleanup241, %lpad228
  %.pn47.pn = phi { i8*, i32 } [ %.pn47, %ehcleanup241 ], [ %239, %lpad228 ]
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp224) #8
  br label %ehcleanup245

ehcleanup245:                                     ; preds = %ehcleanup244, %lpad226
  %.pn47.pn.pn = phi { i8*, i32 } [ %.pn47.pn, %ehcleanup244 ], [ %238, %lpad226 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %223) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %222) #8
  br label %eh.resume

eh.resume:                                        ; preds = %ehcleanup245, %ehcleanup223, %ehcleanup193, %ehcleanup162, %ehcleanup140, %ehcleanup107, %ehcleanup74, %ehcleanup41, %ehcleanup11
  %.pn47.pn.pn.pn = phi { i8*, i32 } [ %.pn47.pn.pn, %ehcleanup245 ], [ %.pn51.pn.pn.pn, %ehcleanup193 ], [ %.pn42.pn.pn.pn, %ehcleanup223 ], [ %.pn38.pn.pn, %ehcleanup162 ], [ %.pn32.pn.pn.pn.pn, %ehcleanup140 ], [ %.pn26.pn.pn.pn.pn, %ehcleanup107 ], [ %.pn20.pn.pn.pn.pn, %ehcleanup74 ], [ %.pn15.pn.pn.pn, %ehcleanup41 ], [ %.pn.pn, %ehcleanup11 ]
  resume { i8*, i32 } %.pn47.pn.pn.pn
}

; Function Attrs: uwtable
define dso_local void @_Z25add_configuration_to_yamlR8YAML_Docii(%class.YAML_Doc* noundef nonnull align 8 dereferenceable(72) %doc, i32 noundef signext %numprocs, i32 signext %numthreads) local_unnamed_addr #11 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %ref.tmp.i453 = alloca %"class.std::allocator", align 1
  %ref.tmp.i439 = alloca %"class.std::allocator", align 1
  %ref.tmp.i425 = alloca %"class.std::allocator", align 1
  %ref.tmp.i411 = alloca %"class.std::allocator", align 1
  %ref.tmp.i397 = alloca %"class.std::allocator", align 1
  %ref.tmp.i383 = alloca %"class.std::allocator", align 1
  %ref.tmp.i369 = alloca %"class.std::allocator", align 1
  %ref.tmp.i355 = alloca %"class.std::allocator", align 1
  %ref.tmp.i341 = alloca %"class.std::allocator", align 1
  %ref.tmp.i327 = alloca %"class.std::allocator", align 1
  %ref.tmp.i313 = alloca %"class.std::allocator", align 1
  %ref.tmp.i299 = alloca %"class.std::allocator", align 1
  %ref.tmp.i285 = alloca %"class.std::allocator", align 1
  %ref.tmp.i271 = alloca %"class.std::allocator", align 1
  %ref.tmp.i257 = alloca %"class.std::allocator", align 1
  %ref.tmp.i243 = alloca %"class.std::allocator", align 1
  %ref.tmp.i229 = alloca %"class.std::allocator", align 1
  %ref.tmp.i215 = alloca %"class.std::allocator", align 1
  %ref.tmp.i201 = alloca %"class.std::allocator", align 1
  %ref.tmp.i187 = alloca %"class.std::allocator", align 1
  %ref.tmp.i173 = alloca %"class.std::allocator", align 1
  %ref.tmp.i159 = alloca %"class.std::allocator", align 1
  %ref.tmp.i145 = alloca %"class.std::allocator", align 1
  %ref.tmp.i131 = alloca %"class.std::allocator", align 1
  %ref.tmp.i117 = alloca %"class.std::allocator", align 1
  %ref.tmp.i103 = alloca %"class.std::allocator", align 1
  %ref.tmp.i89 = alloca %"class.std::allocator", align 1
  %ref.tmp.i75 = alloca %"class.std::allocator", align 1
  %ref.tmp.i61 = alloca %"class.std::allocator", align 1
  %ref.tmp.i = alloca %"class.std::allocator", align 1
  %ref.tmp = alloca %"class.std::basic_string", align 8
  %ref.tmp1 = alloca %"class.std::allocator", align 1
  %ref.tmp4 = alloca %"class.std::basic_string", align 8
  %ref.tmp5 = alloca %"class.std::allocator", align 1
  %ref.tmp17 = alloca %"class.std::basic_string", align 8
  %ref.tmp18 = alloca %"class.std::allocator", align 1
  %ref.tmp21 = alloca %"class.std::basic_string", align 8
  %ref.tmp22 = alloca %"class.std::allocator", align 1
  %ref.tmp36 = alloca %"class.std::basic_string", align 8
  %ref.tmp37 = alloca %"class.std::allocator", align 1
  %ref.tmp43 = alloca %"class.std::basic_string", align 8
  %ref.tmp44 = alloca %"class.std::allocator", align 1
  %ref.tmp47 = alloca %"class.std::basic_string", align 8
  %ref.tmp48 = alloca %"class.std::allocator", align 1
  %ref.tmp66 = alloca %"class.std::basic_string", align 8
  %ref.tmp67 = alloca %"class.std::allocator", align 1
  %ref.tmp73 = alloca %"class.std::basic_string", align 8
  %ref.tmp74 = alloca %"class.std::allocator", align 1
  %ref.tmp77 = alloca %"class.std::basic_string", align 8
  %ref.tmp78 = alloca %"class.std::allocator", align 1
  %ref.tmp96 = alloca %"class.std::basic_string", align 8
  %ref.tmp97 = alloca %"class.std::allocator", align 1
  %ref.tmp103 = alloca %"class.std::basic_string", align 8
  %ref.tmp104 = alloca %"class.std::allocator", align 1
  %ref.tmp107 = alloca %"class.std::basic_string", align 8
  %ref.tmp108 = alloca %"class.std::allocator", align 1
  %ref.tmp126 = alloca %"class.std::basic_string", align 8
  %ref.tmp127 = alloca %"class.std::allocator", align 1
  %ref.tmp133 = alloca %"class.std::basic_string", align 8
  %ref.tmp134 = alloca %"class.std::allocator", align 1
  %ref.tmp137 = alloca %"class.std::basic_string", align 8
  %ref.tmp138 = alloca %"class.std::allocator", align 1
  %ref.tmp156 = alloca %"class.std::basic_string", align 8
  %ref.tmp157 = alloca %"class.std::allocator", align 1
  %ref.tmp160 = alloca %"class.std::basic_string", align 8
  %ref.tmp161 = alloca %"class.std::allocator", align 1
  %ref.tmp175 = alloca %"class.std::basic_string", align 8
  %ref.tmp176 = alloca %"class.std::allocator", align 1
  %ref.tmp182 = alloca %"class.std::basic_string", align 8
  %ref.tmp183 = alloca %"class.std::allocator", align 1
  %ref.tmp186 = alloca %"class.std::basic_string", align 8
  %ref.tmp187 = alloca %"class.std::allocator", align 1
  %ref.tmp205 = alloca %"class.std::basic_string", align 8
  %ref.tmp206 = alloca %"class.std::allocator", align 1
  %ref.tmp212 = alloca %"class.std::basic_string", align 8
  %ref.tmp213 = alloca %"class.std::allocator", align 1
  %ref.tmp216 = alloca %"class.std::basic_string", align 8
  %ref.tmp217 = alloca %"class.std::allocator", align 1
  %ref.tmp235 = alloca %"class.std::basic_string", align 8
  %ref.tmp236 = alloca %"class.std::allocator", align 1
  %ref.tmp242 = alloca %"class.std::basic_string", align 8
  %ref.tmp243 = alloca %"class.std::allocator", align 1
  %ref.tmp246 = alloca %"class.std::basic_string", align 8
  %ref.tmp247 = alloca %"class.std::allocator", align 1
  %using_mpi = alloca %"class.std::basic_string", align 8
  %ref.tmp265 = alloca %"class.std::allocator", align 1
  %ref.tmp270 = alloca %"class.std::basic_string", align 8
  %ref.tmp271 = alloca %"class.std::allocator", align 1
  %ref.tmp277 = alloca %"class.std::basic_string", align 8
  %ref.tmp278 = alloca %"class.std::allocator", align 1
  %0 = getelementptr inbounds %class.YAML_Doc, %class.YAML_Doc* %doc, i64 0, i32 0
  %1 = bitcast %"class.std::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8
  %2 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp1, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.29, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp1)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %call = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %0, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad2

invoke.cont3:                                     ; preds = %invoke.cont
  %3 = bitcast %"class.std::basic_string"* %ref.tmp4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #8
  %4 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp4, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.169, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp5)
          to label %invoke.cont7 unwind label %lpad6

invoke.cont7:                                     ; preds = %invoke.cont3
  %call10 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsi(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp4, i32 noundef signext %numprocs)
          to label %invoke.cont9 unwind label %lpad8

invoke.cont9:                                     ; preds = %invoke.cont7
  %_M_p.i.i.i = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp4, i64 0, i32 0, i32 0
  %5 = load i8*, i8** %_M_p.i.i.i, align 8, !tbaa !43
  %arrayidx.i.i = getelementptr inbounds i8, i8* %5, i64 -24
  %6 = bitcast i8* %arrayidx.i.i to %"struct.std::basic_string<char>::_Rep"*
  %7 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #8
  %cmp.not.i.i = icmp eq i8* %arrayidx.i.i, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i, label %_ZNSsD2Ev.exit, label %if.then.i.i, !prof !47

if.then.i.i:                                      ; preds = %invoke.cont9
  %_M_refcount.i.i = getelementptr inbounds i8, i8* %5, i64 -8
  %8 = bitcast i8* %_M_refcount.i.i to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i, label %if.else.i.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i
  %9 = atomicrmw volatile add i32* %8, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i

if.else.i.i.i:                                    ; preds = %if.then.i.i
  %10 = load i32, i32* %8, align 8, !tbaa !16
  %add.i.i.i.i = add nsw i32 %10, -1
  store i32 %add.i.i.i.i, i32* %8, align 8, !tbaa !16
  br label %invoke.cont.i.i

invoke.cont.i.i:                                  ; preds = %if.else.i.i.i, %if.then.i.i.i
  %retval.0.i.i.i = phi i32 [ %9, %if.then.i.i.i ], [ %10, %if.else.i.i.i ]
  %cmp3.i.i = icmp slt i32 %retval.0.i.i.i, 1
  br i1 %cmp3.i.i, label %if.then4.i.i, label %_ZNSsD2Ev.exit

if.then4.i.i:                                     ; preds = %invoke.cont.i.i
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %6, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i) #8
  br label %_ZNSsD2Ev.exit

_ZNSsD2Ev.exit:                                   ; preds = %invoke.cont9, %invoke.cont.i.i, %if.then4.i.i
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #8
  %_M_p.i.i.i62 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  %11 = load i8*, i8** %_M_p.i.i.i62, align 8, !tbaa !43
  %arrayidx.i.i63 = getelementptr inbounds i8, i8* %11, i64 -24
  %12 = bitcast i8* %arrayidx.i.i63 to %"struct.std::basic_string<char>::_Rep"*
  %13 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i61, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13) #8
  %cmp.not.i.i64 = icmp eq i8* %arrayidx.i.i63, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i64, label %_ZNSsD2Ev.exit74, label %if.then.i.i66, !prof !47

if.then.i.i66:                                    ; preds = %_ZNSsD2Ev.exit
  %_M_refcount.i.i65 = getelementptr inbounds i8, i8* %11, i64 -8
  %14 = bitcast i8* %_M_refcount.i.i65 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i67, label %if.else.i.i.i69

if.then.i.i.i67:                                  ; preds = %if.then.i.i66
  %15 = atomicrmw volatile add i32* %14, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i72

if.else.i.i.i69:                                  ; preds = %if.then.i.i66
  %16 = load i32, i32* %14, align 8, !tbaa !16
  %add.i.i.i.i68 = add nsw i32 %16, -1
  store i32 %add.i.i.i.i68, i32* %14, align 8, !tbaa !16
  br label %invoke.cont.i.i72

invoke.cont.i.i72:                                ; preds = %if.else.i.i.i69, %if.then.i.i.i67
  %retval.0.i.i.i70 = phi i32 [ %15, %if.then.i.i.i67 ], [ %16, %if.else.i.i.i69 ]
  %cmp3.i.i71 = icmp slt i32 %retval.0.i.i.i70, 1
  br i1 %cmp3.i.i71, label %if.then4.i.i73, label %_ZNSsD2Ev.exit74

if.then4.i.i73:                                   ; preds = %invoke.cont.i.i72
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %12, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i61) #8
  br label %_ZNSsD2Ev.exit74

_ZNSsD2Ev.exit74:                                 ; preds = %_ZNSsD2Ev.exit, %invoke.cont.i.i72, %if.then4.i.i73
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8
  %17 = bitcast %"class.std::basic_string"* %ref.tmp17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  %18 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp18, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %18) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp17, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.170, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp18)
          to label %invoke.cont20 unwind label %lpad19

invoke.cont20:                                    ; preds = %_ZNSsD2Ev.exit74
  %19 = bitcast %"class.std::basic_string"* %ref.tmp21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #8
  %20 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp22, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %20) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp21, i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp22)
          to label %invoke.cont24 unwind label %lpad23

invoke.cont24:                                    ; preds = %invoke.cont20
  %call27 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsS1_(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %0, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp17, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp21)
          to label %invoke.cont26 unwind label %lpad25

invoke.cont26:                                    ; preds = %invoke.cont24
  %_M_p.i.i.i76 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp21, i64 0, i32 0, i32 0
  %21 = load i8*, i8** %_M_p.i.i.i76, align 8, !tbaa !43
  %arrayidx.i.i77 = getelementptr inbounds i8, i8* %21, i64 -24
  %22 = bitcast i8* %arrayidx.i.i77 to %"struct.std::basic_string<char>::_Rep"*
  %23 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i75, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %23) #8
  %cmp.not.i.i78 = icmp eq i8* %arrayidx.i.i77, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i78, label %_ZNSsD2Ev.exit88, label %if.then.i.i80, !prof !47

if.then.i.i80:                                    ; preds = %invoke.cont26
  %_M_refcount.i.i79 = getelementptr inbounds i8, i8* %21, i64 -8
  %24 = bitcast i8* %_M_refcount.i.i79 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i81, label %if.else.i.i.i83

if.then.i.i.i81:                                  ; preds = %if.then.i.i80
  %25 = atomicrmw volatile add i32* %24, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i86

if.else.i.i.i83:                                  ; preds = %if.then.i.i80
  %26 = load i32, i32* %24, align 8, !tbaa !16
  %add.i.i.i.i82 = add nsw i32 %26, -1
  store i32 %add.i.i.i.i82, i32* %24, align 8, !tbaa !16
  br label %invoke.cont.i.i86

invoke.cont.i.i86:                                ; preds = %if.else.i.i.i83, %if.then.i.i.i81
  %retval.0.i.i.i84 = phi i32 [ %25, %if.then.i.i.i81 ], [ %26, %if.else.i.i.i83 ]
  %cmp3.i.i85 = icmp slt i32 %retval.0.i.i.i84, 1
  br i1 %cmp3.i.i85, label %if.then4.i.i87, label %_ZNSsD2Ev.exit88

if.then4.i.i87:                                   ; preds = %invoke.cont.i.i86
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %22, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i75) #8
  br label %_ZNSsD2Ev.exit88

_ZNSsD2Ev.exit88:                                 ; preds = %invoke.cont26, %invoke.cont.i.i86, %if.then4.i.i87
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %23) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %20) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #8
  %_M_p.i.i.i90 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp17, i64 0, i32 0, i32 0
  %27 = load i8*, i8** %_M_p.i.i.i90, align 8, !tbaa !43
  %arrayidx.i.i91 = getelementptr inbounds i8, i8* %27, i64 -24
  %28 = bitcast i8* %arrayidx.i.i91 to %"struct.std::basic_string<char>::_Rep"*
  %29 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i89, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %29) #8
  %cmp.not.i.i92 = icmp eq i8* %arrayidx.i.i91, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i92, label %_ZNSsD2Ev.exit102, label %if.then.i.i94, !prof !47

if.then.i.i94:                                    ; preds = %_ZNSsD2Ev.exit88
  %_M_refcount.i.i93 = getelementptr inbounds i8, i8* %27, i64 -8
  %30 = bitcast i8* %_M_refcount.i.i93 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i95, label %if.else.i.i.i97

if.then.i.i.i95:                                  ; preds = %if.then.i.i94
  %31 = atomicrmw volatile add i32* %30, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i100

if.else.i.i.i97:                                  ; preds = %if.then.i.i94
  %32 = load i32, i32* %30, align 8, !tbaa !16
  %add.i.i.i.i96 = add nsw i32 %32, -1
  store i32 %add.i.i.i.i96, i32* %30, align 8, !tbaa !16
  br label %invoke.cont.i.i100

invoke.cont.i.i100:                               ; preds = %if.else.i.i.i97, %if.then.i.i.i95
  %retval.0.i.i.i98 = phi i32 [ %31, %if.then.i.i.i95 ], [ %32, %if.else.i.i.i97 ]
  %cmp3.i.i99 = icmp slt i32 %retval.0.i.i.i98, 1
  br i1 %cmp3.i.i99, label %if.then4.i.i101, label %_ZNSsD2Ev.exit102

if.then4.i.i101:                                  ; preds = %invoke.cont.i.i100
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %28, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i89) #8
  br label %_ZNSsD2Ev.exit102

_ZNSsD2Ev.exit102:                                ; preds = %_ZNSsD2Ev.exit88, %invoke.cont.i.i100, %if.then4.i.i101
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %29) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %18) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  %33 = bitcast %"class.std::basic_string"* %ref.tmp36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #8
  %34 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp37, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %34) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp36, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.170, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp37)
          to label %invoke.cont39 unwind label %lpad38

invoke.cont39:                                    ; preds = %_ZNSsD2Ev.exit102
  %call42 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %0, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp36)
          to label %invoke.cont41 unwind label %lpad40

invoke.cont41:                                    ; preds = %invoke.cont39
  %35 = bitcast %"class.std::basic_string"* %ref.tmp43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #8
  %36 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp44, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %36) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp43, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.171, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp44)
          to label %invoke.cont46 unwind label %lpad45

invoke.cont46:                                    ; preds = %invoke.cont41
  %37 = bitcast %"class.std::basic_string"* %ref.tmp47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #8
  %38 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp48, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %38) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp47, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.172, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp48)
          to label %invoke.cont50 unwind label %lpad49

invoke.cont50:                                    ; preds = %invoke.cont46
  %call53 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsS1_(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call42, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp43, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp47)
          to label %invoke.cont52 unwind label %lpad51

invoke.cont52:                                    ; preds = %invoke.cont50
  %_M_p.i.i.i104 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp47, i64 0, i32 0, i32 0
  %39 = load i8*, i8** %_M_p.i.i.i104, align 8, !tbaa !43
  %arrayidx.i.i105 = getelementptr inbounds i8, i8* %39, i64 -24
  %40 = bitcast i8* %arrayidx.i.i105 to %"struct.std::basic_string<char>::_Rep"*
  %41 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i103, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %41) #8
  %cmp.not.i.i106 = icmp eq i8* %arrayidx.i.i105, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i106, label %_ZNSsD2Ev.exit116, label %if.then.i.i108, !prof !47

if.then.i.i108:                                   ; preds = %invoke.cont52
  %_M_refcount.i.i107 = getelementptr inbounds i8, i8* %39, i64 -8
  %42 = bitcast i8* %_M_refcount.i.i107 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i109, label %if.else.i.i.i111

if.then.i.i.i109:                                 ; preds = %if.then.i.i108
  %43 = atomicrmw volatile add i32* %42, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i114

if.else.i.i.i111:                                 ; preds = %if.then.i.i108
  %44 = load i32, i32* %42, align 8, !tbaa !16
  %add.i.i.i.i110 = add nsw i32 %44, -1
  store i32 %add.i.i.i.i110, i32* %42, align 8, !tbaa !16
  br label %invoke.cont.i.i114

invoke.cont.i.i114:                               ; preds = %if.else.i.i.i111, %if.then.i.i.i109
  %retval.0.i.i.i112 = phi i32 [ %43, %if.then.i.i.i109 ], [ %44, %if.else.i.i.i111 ]
  %cmp3.i.i113 = icmp slt i32 %retval.0.i.i.i112, 1
  br i1 %cmp3.i.i113, label %if.then4.i.i115, label %_ZNSsD2Ev.exit116

if.then4.i.i115:                                  ; preds = %invoke.cont.i.i114
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %40, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i103) #8
  br label %_ZNSsD2Ev.exit116

_ZNSsD2Ev.exit116:                                ; preds = %invoke.cont52, %invoke.cont.i.i114, %if.then4.i.i115
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %41) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %38) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #8
  %_M_p.i.i.i118 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp43, i64 0, i32 0, i32 0
  %45 = load i8*, i8** %_M_p.i.i.i118, align 8, !tbaa !43
  %arrayidx.i.i119 = getelementptr inbounds i8, i8* %45, i64 -24
  %46 = bitcast i8* %arrayidx.i.i119 to %"struct.std::basic_string<char>::_Rep"*
  %47 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i117, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %47) #8
  %cmp.not.i.i120 = icmp eq i8* %arrayidx.i.i119, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i120, label %_ZNSsD2Ev.exit130, label %if.then.i.i122, !prof !47

if.then.i.i122:                                   ; preds = %_ZNSsD2Ev.exit116
  %_M_refcount.i.i121 = getelementptr inbounds i8, i8* %45, i64 -8
  %48 = bitcast i8* %_M_refcount.i.i121 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i123, label %if.else.i.i.i125

if.then.i.i.i123:                                 ; preds = %if.then.i.i122
  %49 = atomicrmw volatile add i32* %48, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i128

if.else.i.i.i125:                                 ; preds = %if.then.i.i122
  %50 = load i32, i32* %48, align 8, !tbaa !16
  %add.i.i.i.i124 = add nsw i32 %50, -1
  store i32 %add.i.i.i.i124, i32* %48, align 8, !tbaa !16
  br label %invoke.cont.i.i128

invoke.cont.i.i128:                               ; preds = %if.else.i.i.i125, %if.then.i.i.i123
  %retval.0.i.i.i126 = phi i32 [ %49, %if.then.i.i.i123 ], [ %50, %if.else.i.i.i125 ]
  %cmp3.i.i127 = icmp slt i32 %retval.0.i.i.i126, 1
  br i1 %cmp3.i.i127, label %if.then4.i.i129, label %_ZNSsD2Ev.exit130

if.then4.i.i129:                                  ; preds = %invoke.cont.i.i128
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %46, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i117) #8
  br label %_ZNSsD2Ev.exit130

_ZNSsD2Ev.exit130:                                ; preds = %_ZNSsD2Ev.exit116, %invoke.cont.i.i128, %if.then4.i.i129
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %47) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %36) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8
  %_M_p.i.i.i132 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp36, i64 0, i32 0, i32 0
  %51 = load i8*, i8** %_M_p.i.i.i132, align 8, !tbaa !43
  %arrayidx.i.i133 = getelementptr inbounds i8, i8* %51, i64 -24
  %52 = bitcast i8* %arrayidx.i.i133 to %"struct.std::basic_string<char>::_Rep"*
  %53 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i131, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %53) #8
  %cmp.not.i.i134 = icmp eq i8* %arrayidx.i.i133, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i134, label %_ZNSsD2Ev.exit144, label %if.then.i.i136, !prof !47

if.then.i.i136:                                   ; preds = %_ZNSsD2Ev.exit130
  %_M_refcount.i.i135 = getelementptr inbounds i8, i8* %51, i64 -8
  %54 = bitcast i8* %_M_refcount.i.i135 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i137, label %if.else.i.i.i139

if.then.i.i.i137:                                 ; preds = %if.then.i.i136
  %55 = atomicrmw volatile add i32* %54, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i142

if.else.i.i.i139:                                 ; preds = %if.then.i.i136
  %56 = load i32, i32* %54, align 8, !tbaa !16
  %add.i.i.i.i138 = add nsw i32 %56, -1
  store i32 %add.i.i.i.i138, i32* %54, align 8, !tbaa !16
  br label %invoke.cont.i.i142

invoke.cont.i.i142:                               ; preds = %if.else.i.i.i139, %if.then.i.i.i137
  %retval.0.i.i.i140 = phi i32 [ %55, %if.then.i.i.i137 ], [ %56, %if.else.i.i.i139 ]
  %cmp3.i.i141 = icmp slt i32 %retval.0.i.i.i140, 1
  br i1 %cmp3.i.i141, label %if.then4.i.i143, label %_ZNSsD2Ev.exit144

if.then4.i.i143:                                  ; preds = %invoke.cont.i.i142
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %52, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i131) #8
  br label %_ZNSsD2Ev.exit144

_ZNSsD2Ev.exit144:                                ; preds = %_ZNSsD2Ev.exit130, %invoke.cont.i.i142, %if.then4.i.i143
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %53) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %34) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #8
  %57 = bitcast %"class.std::basic_string"* %ref.tmp66 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #8
  %58 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp67, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %58) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp66, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.170, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp67)
          to label %invoke.cont69 unwind label %lpad68

invoke.cont69:                                    ; preds = %_ZNSsD2Ev.exit144
  %call72 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %0, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp66)
          to label %invoke.cont71 unwind label %lpad70

invoke.cont71:                                    ; preds = %invoke.cont69
  %59 = bitcast %"class.std::basic_string"* %ref.tmp73 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #8
  %60 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp74, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %60) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp73, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.173, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp74)
          to label %invoke.cont76 unwind label %lpad75

invoke.cont76:                                    ; preds = %invoke.cont71
  %61 = bitcast %"class.std::basic_string"* %ref.tmp77 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #8
  %62 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp78, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %62) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp77, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.174, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp78)
          to label %invoke.cont80 unwind label %lpad79

invoke.cont80:                                    ; preds = %invoke.cont76
  %call83 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsS1_(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call72, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp73, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp77)
          to label %invoke.cont82 unwind label %lpad81

invoke.cont82:                                    ; preds = %invoke.cont80
  %_M_p.i.i.i146 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp77, i64 0, i32 0, i32 0
  %63 = load i8*, i8** %_M_p.i.i.i146, align 8, !tbaa !43
  %arrayidx.i.i147 = getelementptr inbounds i8, i8* %63, i64 -24
  %64 = bitcast i8* %arrayidx.i.i147 to %"struct.std::basic_string<char>::_Rep"*
  %65 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i145, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %65) #8
  %cmp.not.i.i148 = icmp eq i8* %arrayidx.i.i147, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i148, label %_ZNSsD2Ev.exit158, label %if.then.i.i150, !prof !47

if.then.i.i150:                                   ; preds = %invoke.cont82
  %_M_refcount.i.i149 = getelementptr inbounds i8, i8* %63, i64 -8
  %66 = bitcast i8* %_M_refcount.i.i149 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i151, label %if.else.i.i.i153

if.then.i.i.i151:                                 ; preds = %if.then.i.i150
  %67 = atomicrmw volatile add i32* %66, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i156

if.else.i.i.i153:                                 ; preds = %if.then.i.i150
  %68 = load i32, i32* %66, align 8, !tbaa !16
  %add.i.i.i.i152 = add nsw i32 %68, -1
  store i32 %add.i.i.i.i152, i32* %66, align 8, !tbaa !16
  br label %invoke.cont.i.i156

invoke.cont.i.i156:                               ; preds = %if.else.i.i.i153, %if.then.i.i.i151
  %retval.0.i.i.i154 = phi i32 [ %67, %if.then.i.i.i151 ], [ %68, %if.else.i.i.i153 ]
  %cmp3.i.i155 = icmp slt i32 %retval.0.i.i.i154, 1
  br i1 %cmp3.i.i155, label %if.then4.i.i157, label %_ZNSsD2Ev.exit158

if.then4.i.i157:                                  ; preds = %invoke.cont.i.i156
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %64, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i145) #8
  br label %_ZNSsD2Ev.exit158

_ZNSsD2Ev.exit158:                                ; preds = %invoke.cont82, %invoke.cont.i.i156, %if.then4.i.i157
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %65) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %62) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #8
  %_M_p.i.i.i160 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp73, i64 0, i32 0, i32 0
  %69 = load i8*, i8** %_M_p.i.i.i160, align 8, !tbaa !43
  %arrayidx.i.i161 = getelementptr inbounds i8, i8* %69, i64 -24
  %70 = bitcast i8* %arrayidx.i.i161 to %"struct.std::basic_string<char>::_Rep"*
  %71 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i159, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %71) #8
  %cmp.not.i.i162 = icmp eq i8* %arrayidx.i.i161, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i162, label %_ZNSsD2Ev.exit172, label %if.then.i.i164, !prof !47

if.then.i.i164:                                   ; preds = %_ZNSsD2Ev.exit158
  %_M_refcount.i.i163 = getelementptr inbounds i8, i8* %69, i64 -8
  %72 = bitcast i8* %_M_refcount.i.i163 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i165, label %if.else.i.i.i167

if.then.i.i.i165:                                 ; preds = %if.then.i.i164
  %73 = atomicrmw volatile add i32* %72, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i170

if.else.i.i.i167:                                 ; preds = %if.then.i.i164
  %74 = load i32, i32* %72, align 8, !tbaa !16
  %add.i.i.i.i166 = add nsw i32 %74, -1
  store i32 %add.i.i.i.i166, i32* %72, align 8, !tbaa !16
  br label %invoke.cont.i.i170

invoke.cont.i.i170:                               ; preds = %if.else.i.i.i167, %if.then.i.i.i165
  %retval.0.i.i.i168 = phi i32 [ %73, %if.then.i.i.i165 ], [ %74, %if.else.i.i.i167 ]
  %cmp3.i.i169 = icmp slt i32 %retval.0.i.i.i168, 1
  br i1 %cmp3.i.i169, label %if.then4.i.i171, label %_ZNSsD2Ev.exit172

if.then4.i.i171:                                  ; preds = %invoke.cont.i.i170
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %70, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i159) #8
  br label %_ZNSsD2Ev.exit172

_ZNSsD2Ev.exit172:                                ; preds = %_ZNSsD2Ev.exit158, %invoke.cont.i.i170, %if.then4.i.i171
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %71) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %60) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #8
  %_M_p.i.i.i174 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp66, i64 0, i32 0, i32 0
  %75 = load i8*, i8** %_M_p.i.i.i174, align 8, !tbaa !43
  %arrayidx.i.i175 = getelementptr inbounds i8, i8* %75, i64 -24
  %76 = bitcast i8* %arrayidx.i.i175 to %"struct.std::basic_string<char>::_Rep"*
  %77 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i173, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %77) #8
  %cmp.not.i.i176 = icmp eq i8* %arrayidx.i.i175, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i176, label %_ZNSsD2Ev.exit186, label %if.then.i.i178, !prof !47

if.then.i.i178:                                   ; preds = %_ZNSsD2Ev.exit172
  %_M_refcount.i.i177 = getelementptr inbounds i8, i8* %75, i64 -8
  %78 = bitcast i8* %_M_refcount.i.i177 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i179, label %if.else.i.i.i181

if.then.i.i.i179:                                 ; preds = %if.then.i.i178
  %79 = atomicrmw volatile add i32* %78, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i184

if.else.i.i.i181:                                 ; preds = %if.then.i.i178
  %80 = load i32, i32* %78, align 8, !tbaa !16
  %add.i.i.i.i180 = add nsw i32 %80, -1
  store i32 %add.i.i.i.i180, i32* %78, align 8, !tbaa !16
  br label %invoke.cont.i.i184

invoke.cont.i.i184:                               ; preds = %if.else.i.i.i181, %if.then.i.i.i179
  %retval.0.i.i.i182 = phi i32 [ %79, %if.then.i.i.i179 ], [ %80, %if.else.i.i.i181 ]
  %cmp3.i.i183 = icmp slt i32 %retval.0.i.i.i182, 1
  br i1 %cmp3.i.i183, label %if.then4.i.i185, label %_ZNSsD2Ev.exit186

if.then4.i.i185:                                  ; preds = %invoke.cont.i.i184
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %76, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i173) #8
  br label %_ZNSsD2Ev.exit186

_ZNSsD2Ev.exit186:                                ; preds = %_ZNSsD2Ev.exit172, %invoke.cont.i.i184, %if.then4.i.i185
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %77) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %58) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #8
  %81 = bitcast %"class.std::basic_string"* %ref.tmp96 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81) #8
  %82 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp97, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %82) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp96, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.170, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp97)
          to label %invoke.cont99 unwind label %lpad98

invoke.cont99:                                    ; preds = %_ZNSsD2Ev.exit186
  %call102 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %0, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp96)
          to label %invoke.cont101 unwind label %lpad100

invoke.cont101:                                   ; preds = %invoke.cont99
  %83 = bitcast %"class.std::basic_string"* %ref.tmp103 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #8
  %84 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp104, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %84) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp103, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.175, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp104)
          to label %invoke.cont106 unwind label %lpad105

invoke.cont106:                                   ; preds = %invoke.cont101
  %85 = bitcast %"class.std::basic_string"* %ref.tmp107 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85) #8
  %86 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp108, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %86) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp107, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.176, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp108)
          to label %invoke.cont110 unwind label %lpad109

invoke.cont110:                                   ; preds = %invoke.cont106
  %call113 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsS1_(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call102, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp103, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp107)
          to label %invoke.cont112 unwind label %lpad111

invoke.cont112:                                   ; preds = %invoke.cont110
  %_M_p.i.i.i188 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp107, i64 0, i32 0, i32 0
  %87 = load i8*, i8** %_M_p.i.i.i188, align 8, !tbaa !43
  %arrayidx.i.i189 = getelementptr inbounds i8, i8* %87, i64 -24
  %88 = bitcast i8* %arrayidx.i.i189 to %"struct.std::basic_string<char>::_Rep"*
  %89 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i187, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %89) #8
  %cmp.not.i.i190 = icmp eq i8* %arrayidx.i.i189, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i190, label %_ZNSsD2Ev.exit200, label %if.then.i.i192, !prof !47

if.then.i.i192:                                   ; preds = %invoke.cont112
  %_M_refcount.i.i191 = getelementptr inbounds i8, i8* %87, i64 -8
  %90 = bitcast i8* %_M_refcount.i.i191 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i193, label %if.else.i.i.i195

if.then.i.i.i193:                                 ; preds = %if.then.i.i192
  %91 = atomicrmw volatile add i32* %90, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i198

if.else.i.i.i195:                                 ; preds = %if.then.i.i192
  %92 = load i32, i32* %90, align 8, !tbaa !16
  %add.i.i.i.i194 = add nsw i32 %92, -1
  store i32 %add.i.i.i.i194, i32* %90, align 8, !tbaa !16
  br label %invoke.cont.i.i198

invoke.cont.i.i198:                               ; preds = %if.else.i.i.i195, %if.then.i.i.i193
  %retval.0.i.i.i196 = phi i32 [ %91, %if.then.i.i.i193 ], [ %92, %if.else.i.i.i195 ]
  %cmp3.i.i197 = icmp slt i32 %retval.0.i.i.i196, 1
  br i1 %cmp3.i.i197, label %if.then4.i.i199, label %_ZNSsD2Ev.exit200

if.then4.i.i199:                                  ; preds = %invoke.cont.i.i198
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %88, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i187) #8
  br label %_ZNSsD2Ev.exit200

_ZNSsD2Ev.exit200:                                ; preds = %invoke.cont112, %invoke.cont.i.i198, %if.then4.i.i199
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %89) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %86) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85) #8
  %_M_p.i.i.i202 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp103, i64 0, i32 0, i32 0
  %93 = load i8*, i8** %_M_p.i.i.i202, align 8, !tbaa !43
  %arrayidx.i.i203 = getelementptr inbounds i8, i8* %93, i64 -24
  %94 = bitcast i8* %arrayidx.i.i203 to %"struct.std::basic_string<char>::_Rep"*
  %95 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i201, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %95) #8
  %cmp.not.i.i204 = icmp eq i8* %arrayidx.i.i203, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i204, label %_ZNSsD2Ev.exit214, label %if.then.i.i206, !prof !47

if.then.i.i206:                                   ; preds = %_ZNSsD2Ev.exit200
  %_M_refcount.i.i205 = getelementptr inbounds i8, i8* %93, i64 -8
  %96 = bitcast i8* %_M_refcount.i.i205 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i207, label %if.else.i.i.i209

if.then.i.i.i207:                                 ; preds = %if.then.i.i206
  %97 = atomicrmw volatile add i32* %96, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i212

if.else.i.i.i209:                                 ; preds = %if.then.i.i206
  %98 = load i32, i32* %96, align 8, !tbaa !16
  %add.i.i.i.i208 = add nsw i32 %98, -1
  store i32 %add.i.i.i.i208, i32* %96, align 8, !tbaa !16
  br label %invoke.cont.i.i212

invoke.cont.i.i212:                               ; preds = %if.else.i.i.i209, %if.then.i.i.i207
  %retval.0.i.i.i210 = phi i32 [ %97, %if.then.i.i.i207 ], [ %98, %if.else.i.i.i209 ]
  %cmp3.i.i211 = icmp slt i32 %retval.0.i.i.i210, 1
  br i1 %cmp3.i.i211, label %if.then4.i.i213, label %_ZNSsD2Ev.exit214

if.then4.i.i213:                                  ; preds = %invoke.cont.i.i212
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %94, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i201) #8
  br label %_ZNSsD2Ev.exit214

_ZNSsD2Ev.exit214:                                ; preds = %_ZNSsD2Ev.exit200, %invoke.cont.i.i212, %if.then4.i.i213
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %95) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %84) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #8
  %_M_p.i.i.i216 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp96, i64 0, i32 0, i32 0
  %99 = load i8*, i8** %_M_p.i.i.i216, align 8, !tbaa !43
  %arrayidx.i.i217 = getelementptr inbounds i8, i8* %99, i64 -24
  %100 = bitcast i8* %arrayidx.i.i217 to %"struct.std::basic_string<char>::_Rep"*
  %101 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i215, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %101) #8
  %cmp.not.i.i218 = icmp eq i8* %arrayidx.i.i217, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i218, label %_ZNSsD2Ev.exit228, label %if.then.i.i220, !prof !47

if.then.i.i220:                                   ; preds = %_ZNSsD2Ev.exit214
  %_M_refcount.i.i219 = getelementptr inbounds i8, i8* %99, i64 -8
  %102 = bitcast i8* %_M_refcount.i.i219 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i221, label %if.else.i.i.i223

if.then.i.i.i221:                                 ; preds = %if.then.i.i220
  %103 = atomicrmw volatile add i32* %102, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i226

if.else.i.i.i223:                                 ; preds = %if.then.i.i220
  %104 = load i32, i32* %102, align 8, !tbaa !16
  %add.i.i.i.i222 = add nsw i32 %104, -1
  store i32 %add.i.i.i.i222, i32* %102, align 8, !tbaa !16
  br label %invoke.cont.i.i226

invoke.cont.i.i226:                               ; preds = %if.else.i.i.i223, %if.then.i.i.i221
  %retval.0.i.i.i224 = phi i32 [ %103, %if.then.i.i.i221 ], [ %104, %if.else.i.i.i223 ]
  %cmp3.i.i225 = icmp slt i32 %retval.0.i.i.i224, 1
  br i1 %cmp3.i.i225, label %if.then4.i.i227, label %_ZNSsD2Ev.exit228

if.then4.i.i227:                                  ; preds = %invoke.cont.i.i226
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %100, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i215) #8
  br label %_ZNSsD2Ev.exit228

_ZNSsD2Ev.exit228:                                ; preds = %_ZNSsD2Ev.exit214, %invoke.cont.i.i226, %if.then4.i.i227
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %101) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %82) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #8
  %105 = bitcast %"class.std::basic_string"* %ref.tmp126 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #8
  %106 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp127, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %106) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp126, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.170, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp127)
          to label %invoke.cont129 unwind label %lpad128

invoke.cont129:                                   ; preds = %_ZNSsD2Ev.exit228
  %call132 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %0, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp126)
          to label %invoke.cont131 unwind label %lpad130

invoke.cont131:                                   ; preds = %invoke.cont129
  %107 = bitcast %"class.std::basic_string"* %ref.tmp133 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %107) #8
  %108 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp134, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %108) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp133, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.177, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp134)
          to label %invoke.cont136 unwind label %lpad135

invoke.cont136:                                   ; preds = %invoke.cont131
  %109 = bitcast %"class.std::basic_string"* %ref.tmp137 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %109) #8
  %110 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp138, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %110) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp137, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.178, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp138)
          to label %invoke.cont140 unwind label %lpad139

invoke.cont140:                                   ; preds = %invoke.cont136
  %call143 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsS1_(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call132, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp133, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp137)
          to label %invoke.cont142 unwind label %lpad141

invoke.cont142:                                   ; preds = %invoke.cont140
  %_M_p.i.i.i230 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp137, i64 0, i32 0, i32 0
  %111 = load i8*, i8** %_M_p.i.i.i230, align 8, !tbaa !43
  %arrayidx.i.i231 = getelementptr inbounds i8, i8* %111, i64 -24
  %112 = bitcast i8* %arrayidx.i.i231 to %"struct.std::basic_string<char>::_Rep"*
  %113 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i229, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %113) #8
  %cmp.not.i.i232 = icmp eq i8* %arrayidx.i.i231, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i232, label %_ZNSsD2Ev.exit242, label %if.then.i.i234, !prof !47

if.then.i.i234:                                   ; preds = %invoke.cont142
  %_M_refcount.i.i233 = getelementptr inbounds i8, i8* %111, i64 -8
  %114 = bitcast i8* %_M_refcount.i.i233 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i235, label %if.else.i.i.i237

if.then.i.i.i235:                                 ; preds = %if.then.i.i234
  %115 = atomicrmw volatile add i32* %114, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i240

if.else.i.i.i237:                                 ; preds = %if.then.i.i234
  %116 = load i32, i32* %114, align 8, !tbaa !16
  %add.i.i.i.i236 = add nsw i32 %116, -1
  store i32 %add.i.i.i.i236, i32* %114, align 8, !tbaa !16
  br label %invoke.cont.i.i240

invoke.cont.i.i240:                               ; preds = %if.else.i.i.i237, %if.then.i.i.i235
  %retval.0.i.i.i238 = phi i32 [ %115, %if.then.i.i.i235 ], [ %116, %if.else.i.i.i237 ]
  %cmp3.i.i239 = icmp slt i32 %retval.0.i.i.i238, 1
  br i1 %cmp3.i.i239, label %if.then4.i.i241, label %_ZNSsD2Ev.exit242

if.then4.i.i241:                                  ; preds = %invoke.cont.i.i240
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %112, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i229) #8
  br label %_ZNSsD2Ev.exit242

_ZNSsD2Ev.exit242:                                ; preds = %invoke.cont142, %invoke.cont.i.i240, %if.then4.i.i241
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %113) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %110) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109) #8
  %_M_p.i.i.i244 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp133, i64 0, i32 0, i32 0
  %117 = load i8*, i8** %_M_p.i.i.i244, align 8, !tbaa !43
  %arrayidx.i.i245 = getelementptr inbounds i8, i8* %117, i64 -24
  %118 = bitcast i8* %arrayidx.i.i245 to %"struct.std::basic_string<char>::_Rep"*
  %119 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i243, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %119) #8
  %cmp.not.i.i246 = icmp eq i8* %arrayidx.i.i245, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i246, label %_ZNSsD2Ev.exit256, label %if.then.i.i248, !prof !47

if.then.i.i248:                                   ; preds = %_ZNSsD2Ev.exit242
  %_M_refcount.i.i247 = getelementptr inbounds i8, i8* %117, i64 -8
  %120 = bitcast i8* %_M_refcount.i.i247 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i249, label %if.else.i.i.i251

if.then.i.i.i249:                                 ; preds = %if.then.i.i248
  %121 = atomicrmw volatile add i32* %120, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i254

if.else.i.i.i251:                                 ; preds = %if.then.i.i248
  %122 = load i32, i32* %120, align 8, !tbaa !16
  %add.i.i.i.i250 = add nsw i32 %122, -1
  store i32 %add.i.i.i.i250, i32* %120, align 8, !tbaa !16
  br label %invoke.cont.i.i254

invoke.cont.i.i254:                               ; preds = %if.else.i.i.i251, %if.then.i.i.i249
  %retval.0.i.i.i252 = phi i32 [ %121, %if.then.i.i.i249 ], [ %122, %if.else.i.i.i251 ]
  %cmp3.i.i253 = icmp slt i32 %retval.0.i.i.i252, 1
  br i1 %cmp3.i.i253, label %if.then4.i.i255, label %_ZNSsD2Ev.exit256

if.then4.i.i255:                                  ; preds = %invoke.cont.i.i254
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %118, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i243) #8
  br label %_ZNSsD2Ev.exit256

_ZNSsD2Ev.exit256:                                ; preds = %_ZNSsD2Ev.exit242, %invoke.cont.i.i254, %if.then4.i.i255
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %119) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %108) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %107) #8
  %_M_p.i.i.i258 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp126, i64 0, i32 0, i32 0
  %123 = load i8*, i8** %_M_p.i.i.i258, align 8, !tbaa !43
  %arrayidx.i.i259 = getelementptr inbounds i8, i8* %123, i64 -24
  %124 = bitcast i8* %arrayidx.i.i259 to %"struct.std::basic_string<char>::_Rep"*
  %125 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i257, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %125) #8
  %cmp.not.i.i260 = icmp eq i8* %arrayidx.i.i259, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i260, label %_ZNSsD2Ev.exit270, label %if.then.i.i262, !prof !47

if.then.i.i262:                                   ; preds = %_ZNSsD2Ev.exit256
  %_M_refcount.i.i261 = getelementptr inbounds i8, i8* %123, i64 -8
  %126 = bitcast i8* %_M_refcount.i.i261 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i263, label %if.else.i.i.i265

if.then.i.i.i263:                                 ; preds = %if.then.i.i262
  %127 = atomicrmw volatile add i32* %126, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i268

if.else.i.i.i265:                                 ; preds = %if.then.i.i262
  %128 = load i32, i32* %126, align 8, !tbaa !16
  %add.i.i.i.i264 = add nsw i32 %128, -1
  store i32 %add.i.i.i.i264, i32* %126, align 8, !tbaa !16
  br label %invoke.cont.i.i268

invoke.cont.i.i268:                               ; preds = %if.else.i.i.i265, %if.then.i.i.i263
  %retval.0.i.i.i266 = phi i32 [ %127, %if.then.i.i.i263 ], [ %128, %if.else.i.i.i265 ]
  %cmp3.i.i267 = icmp slt i32 %retval.0.i.i.i266, 1
  br i1 %cmp3.i.i267, label %if.then4.i.i269, label %_ZNSsD2Ev.exit270

if.then4.i.i269:                                  ; preds = %invoke.cont.i.i268
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %124, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i257) #8
  br label %_ZNSsD2Ev.exit270

_ZNSsD2Ev.exit270:                                ; preds = %_ZNSsD2Ev.exit256, %invoke.cont.i.i268, %if.then4.i.i269
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %125) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %106) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #8
  %129 = bitcast %"class.std::basic_string"* %ref.tmp156 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %129) #8
  %130 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp157, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %130) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp156, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.179, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp157)
          to label %invoke.cont159 unwind label %lpad158

invoke.cont159:                                   ; preds = %_ZNSsD2Ev.exit270
  %131 = bitcast %"class.std::basic_string"* %ref.tmp160 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %131) #8
  %132 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp161, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %132) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp160, i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp161)
          to label %invoke.cont163 unwind label %lpad162

invoke.cont163:                                   ; preds = %invoke.cont159
  %call166 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsS1_(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %0, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp156, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp160)
          to label %invoke.cont165 unwind label %lpad164

invoke.cont165:                                   ; preds = %invoke.cont163
  %_M_p.i.i.i272 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp160, i64 0, i32 0, i32 0
  %133 = load i8*, i8** %_M_p.i.i.i272, align 8, !tbaa !43
  %arrayidx.i.i273 = getelementptr inbounds i8, i8* %133, i64 -24
  %134 = bitcast i8* %arrayidx.i.i273 to %"struct.std::basic_string<char>::_Rep"*
  %135 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i271, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %135) #8
  %cmp.not.i.i274 = icmp eq i8* %arrayidx.i.i273, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i274, label %_ZNSsD2Ev.exit284, label %if.then.i.i276, !prof !47

if.then.i.i276:                                   ; preds = %invoke.cont165
  %_M_refcount.i.i275 = getelementptr inbounds i8, i8* %133, i64 -8
  %136 = bitcast i8* %_M_refcount.i.i275 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i277, label %if.else.i.i.i279

if.then.i.i.i277:                                 ; preds = %if.then.i.i276
  %137 = atomicrmw volatile add i32* %136, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i282

if.else.i.i.i279:                                 ; preds = %if.then.i.i276
  %138 = load i32, i32* %136, align 8, !tbaa !16
  %add.i.i.i.i278 = add nsw i32 %138, -1
  store i32 %add.i.i.i.i278, i32* %136, align 8, !tbaa !16
  br label %invoke.cont.i.i282

invoke.cont.i.i282:                               ; preds = %if.else.i.i.i279, %if.then.i.i.i277
  %retval.0.i.i.i280 = phi i32 [ %137, %if.then.i.i.i277 ], [ %138, %if.else.i.i.i279 ]
  %cmp3.i.i281 = icmp slt i32 %retval.0.i.i.i280, 1
  br i1 %cmp3.i.i281, label %if.then4.i.i283, label %_ZNSsD2Ev.exit284

if.then4.i.i283:                                  ; preds = %invoke.cont.i.i282
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %134, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i271) #8
  br label %_ZNSsD2Ev.exit284

_ZNSsD2Ev.exit284:                                ; preds = %invoke.cont165, %invoke.cont.i.i282, %if.then4.i.i283
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %135) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %132) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %131) #8
  %_M_p.i.i.i286 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp156, i64 0, i32 0, i32 0
  %139 = load i8*, i8** %_M_p.i.i.i286, align 8, !tbaa !43
  %arrayidx.i.i287 = getelementptr inbounds i8, i8* %139, i64 -24
  %140 = bitcast i8* %arrayidx.i.i287 to %"struct.std::basic_string<char>::_Rep"*
  %141 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i285, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %141) #8
  %cmp.not.i.i288 = icmp eq i8* %arrayidx.i.i287, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i288, label %_ZNSsD2Ev.exit298, label %if.then.i.i290, !prof !47

if.then.i.i290:                                   ; preds = %_ZNSsD2Ev.exit284
  %_M_refcount.i.i289 = getelementptr inbounds i8, i8* %139, i64 -8
  %142 = bitcast i8* %_M_refcount.i.i289 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i291, label %if.else.i.i.i293

if.then.i.i.i291:                                 ; preds = %if.then.i.i290
  %143 = atomicrmw volatile add i32* %142, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i296

if.else.i.i.i293:                                 ; preds = %if.then.i.i290
  %144 = load i32, i32* %142, align 8, !tbaa !16
  %add.i.i.i.i292 = add nsw i32 %144, -1
  store i32 %add.i.i.i.i292, i32* %142, align 8, !tbaa !16
  br label %invoke.cont.i.i296

invoke.cont.i.i296:                               ; preds = %if.else.i.i.i293, %if.then.i.i.i291
  %retval.0.i.i.i294 = phi i32 [ %143, %if.then.i.i.i291 ], [ %144, %if.else.i.i.i293 ]
  %cmp3.i.i295 = icmp slt i32 %retval.0.i.i.i294, 1
  br i1 %cmp3.i.i295, label %if.then4.i.i297, label %_ZNSsD2Ev.exit298

if.then4.i.i297:                                  ; preds = %invoke.cont.i.i296
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %140, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i285) #8
  br label %_ZNSsD2Ev.exit298

_ZNSsD2Ev.exit298:                                ; preds = %_ZNSsD2Ev.exit284, %invoke.cont.i.i296, %if.then4.i.i297
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %141) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %130) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %129) #8
  %145 = bitcast %"class.std::basic_string"* %ref.tmp175 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %145) #8
  %146 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp176, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %146) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp175, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.179, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp176)
          to label %invoke.cont178 unwind label %lpad177

invoke.cont178:                                   ; preds = %_ZNSsD2Ev.exit298
  %call181 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %0, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp175)
          to label %invoke.cont180 unwind label %lpad179

invoke.cont180:                                   ; preds = %invoke.cont178
  %147 = bitcast %"class.std::basic_string"* %ref.tmp182 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %147) #8
  %148 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp183, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %148) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp182, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.180, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp183)
          to label %invoke.cont185 unwind label %lpad184

invoke.cont185:                                   ; preds = %invoke.cont180
  %149 = bitcast %"class.std::basic_string"* %ref.tmp186 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %149) #8
  %150 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp187, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %150) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp186, i8* noundef getelementptr inbounds ([71 x i8], [71 x i8]* @.str.181, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp187)
          to label %invoke.cont189 unwind label %lpad188

invoke.cont189:                                   ; preds = %invoke.cont185
  %call192 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsS1_(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call181, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp182, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp186)
          to label %invoke.cont191 unwind label %lpad190

invoke.cont191:                                   ; preds = %invoke.cont189
  %_M_p.i.i.i300 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp186, i64 0, i32 0, i32 0
  %151 = load i8*, i8** %_M_p.i.i.i300, align 8, !tbaa !43
  %arrayidx.i.i301 = getelementptr inbounds i8, i8* %151, i64 -24
  %152 = bitcast i8* %arrayidx.i.i301 to %"struct.std::basic_string<char>::_Rep"*
  %153 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i299, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %153) #8
  %cmp.not.i.i302 = icmp eq i8* %arrayidx.i.i301, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i302, label %_ZNSsD2Ev.exit312, label %if.then.i.i304, !prof !47

if.then.i.i304:                                   ; preds = %invoke.cont191
  %_M_refcount.i.i303 = getelementptr inbounds i8, i8* %151, i64 -8
  %154 = bitcast i8* %_M_refcount.i.i303 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i305, label %if.else.i.i.i307

if.then.i.i.i305:                                 ; preds = %if.then.i.i304
  %155 = atomicrmw volatile add i32* %154, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i310

if.else.i.i.i307:                                 ; preds = %if.then.i.i304
  %156 = load i32, i32* %154, align 8, !tbaa !16
  %add.i.i.i.i306 = add nsw i32 %156, -1
  store i32 %add.i.i.i.i306, i32* %154, align 8, !tbaa !16
  br label %invoke.cont.i.i310

invoke.cont.i.i310:                               ; preds = %if.else.i.i.i307, %if.then.i.i.i305
  %retval.0.i.i.i308 = phi i32 [ %155, %if.then.i.i.i305 ], [ %156, %if.else.i.i.i307 ]
  %cmp3.i.i309 = icmp slt i32 %retval.0.i.i.i308, 1
  br i1 %cmp3.i.i309, label %if.then4.i.i311, label %_ZNSsD2Ev.exit312

if.then4.i.i311:                                  ; preds = %invoke.cont.i.i310
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %152, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i299) #8
  br label %_ZNSsD2Ev.exit312

_ZNSsD2Ev.exit312:                                ; preds = %invoke.cont191, %invoke.cont.i.i310, %if.then4.i.i311
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %153) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %150) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %149) #8
  %_M_p.i.i.i314 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp182, i64 0, i32 0, i32 0
  %157 = load i8*, i8** %_M_p.i.i.i314, align 8, !tbaa !43
  %arrayidx.i.i315 = getelementptr inbounds i8, i8* %157, i64 -24
  %158 = bitcast i8* %arrayidx.i.i315 to %"struct.std::basic_string<char>::_Rep"*
  %159 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i313, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %159) #8
  %cmp.not.i.i316 = icmp eq i8* %arrayidx.i.i315, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i316, label %_ZNSsD2Ev.exit326, label %if.then.i.i318, !prof !47

if.then.i.i318:                                   ; preds = %_ZNSsD2Ev.exit312
  %_M_refcount.i.i317 = getelementptr inbounds i8, i8* %157, i64 -8
  %160 = bitcast i8* %_M_refcount.i.i317 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i319, label %if.else.i.i.i321

if.then.i.i.i319:                                 ; preds = %if.then.i.i318
  %161 = atomicrmw volatile add i32* %160, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i324

if.else.i.i.i321:                                 ; preds = %if.then.i.i318
  %162 = load i32, i32* %160, align 8, !tbaa !16
  %add.i.i.i.i320 = add nsw i32 %162, -1
  store i32 %add.i.i.i.i320, i32* %160, align 8, !tbaa !16
  br label %invoke.cont.i.i324

invoke.cont.i.i324:                               ; preds = %if.else.i.i.i321, %if.then.i.i.i319
  %retval.0.i.i.i322 = phi i32 [ %161, %if.then.i.i.i319 ], [ %162, %if.else.i.i.i321 ]
  %cmp3.i.i323 = icmp slt i32 %retval.0.i.i.i322, 1
  br i1 %cmp3.i.i323, label %if.then4.i.i325, label %_ZNSsD2Ev.exit326

if.then4.i.i325:                                  ; preds = %invoke.cont.i.i324
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %158, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i313) #8
  br label %_ZNSsD2Ev.exit326

_ZNSsD2Ev.exit326:                                ; preds = %_ZNSsD2Ev.exit312, %invoke.cont.i.i324, %if.then4.i.i325
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %159) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %148) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %147) #8
  %_M_p.i.i.i328 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp175, i64 0, i32 0, i32 0
  %163 = load i8*, i8** %_M_p.i.i.i328, align 8, !tbaa !43
  %arrayidx.i.i329 = getelementptr inbounds i8, i8* %163, i64 -24
  %164 = bitcast i8* %arrayidx.i.i329 to %"struct.std::basic_string<char>::_Rep"*
  %165 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i327, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %165) #8
  %cmp.not.i.i330 = icmp eq i8* %arrayidx.i.i329, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i330, label %_ZNSsD2Ev.exit340, label %if.then.i.i332, !prof !47

if.then.i.i332:                                   ; preds = %_ZNSsD2Ev.exit326
  %_M_refcount.i.i331 = getelementptr inbounds i8, i8* %163, i64 -8
  %166 = bitcast i8* %_M_refcount.i.i331 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i333, label %if.else.i.i.i335

if.then.i.i.i333:                                 ; preds = %if.then.i.i332
  %167 = atomicrmw volatile add i32* %166, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i338

if.else.i.i.i335:                                 ; preds = %if.then.i.i332
  %168 = load i32, i32* %166, align 8, !tbaa !16
  %add.i.i.i.i334 = add nsw i32 %168, -1
  store i32 %add.i.i.i.i334, i32* %166, align 8, !tbaa !16
  br label %invoke.cont.i.i338

invoke.cont.i.i338:                               ; preds = %if.else.i.i.i335, %if.then.i.i.i333
  %retval.0.i.i.i336 = phi i32 [ %167, %if.then.i.i.i333 ], [ %168, %if.else.i.i.i335 ]
  %cmp3.i.i337 = icmp slt i32 %retval.0.i.i.i336, 1
  br i1 %cmp3.i.i337, label %if.then4.i.i339, label %_ZNSsD2Ev.exit340

if.then4.i.i339:                                  ; preds = %invoke.cont.i.i338
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %164, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i327) #8
  br label %_ZNSsD2Ev.exit340

_ZNSsD2Ev.exit340:                                ; preds = %_ZNSsD2Ev.exit326, %invoke.cont.i.i338, %if.then4.i.i339
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %165) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %146) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %145) #8
  %169 = bitcast %"class.std::basic_string"* %ref.tmp205 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %169) #8
  %170 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp206, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %170) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp205, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.179, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp206)
          to label %invoke.cont208 unwind label %lpad207

invoke.cont208:                                   ; preds = %_ZNSsD2Ev.exit340
  %call211 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %0, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp205)
          to label %invoke.cont210 unwind label %lpad209

invoke.cont210:                                   ; preds = %invoke.cont208
  %171 = bitcast %"class.std::basic_string"* %ref.tmp212 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %171) #8
  %172 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp213, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %172) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp212, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.182, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp213)
          to label %invoke.cont215 unwind label %lpad214

invoke.cont215:                                   ; preds = %invoke.cont210
  %173 = bitcast %"class.std::basic_string"* %ref.tmp216 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %173) #8
  %174 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp217, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %174) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp216, i8* noundef getelementptr inbounds ([102 x i8], [102 x i8]* @.str.183, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp217)
          to label %invoke.cont219 unwind label %lpad218

invoke.cont219:                                   ; preds = %invoke.cont215
  %call222 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsS1_(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call211, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp212, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp216)
          to label %invoke.cont221 unwind label %lpad220

invoke.cont221:                                   ; preds = %invoke.cont219
  %_M_p.i.i.i342 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp216, i64 0, i32 0, i32 0
  %175 = load i8*, i8** %_M_p.i.i.i342, align 8, !tbaa !43
  %arrayidx.i.i343 = getelementptr inbounds i8, i8* %175, i64 -24
  %176 = bitcast i8* %arrayidx.i.i343 to %"struct.std::basic_string<char>::_Rep"*
  %177 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i341, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %177) #8
  %cmp.not.i.i344 = icmp eq i8* %arrayidx.i.i343, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i344, label %_ZNSsD2Ev.exit354, label %if.then.i.i346, !prof !47

if.then.i.i346:                                   ; preds = %invoke.cont221
  %_M_refcount.i.i345 = getelementptr inbounds i8, i8* %175, i64 -8
  %178 = bitcast i8* %_M_refcount.i.i345 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i347, label %if.else.i.i.i349

if.then.i.i.i347:                                 ; preds = %if.then.i.i346
  %179 = atomicrmw volatile add i32* %178, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i352

if.else.i.i.i349:                                 ; preds = %if.then.i.i346
  %180 = load i32, i32* %178, align 8, !tbaa !16
  %add.i.i.i.i348 = add nsw i32 %180, -1
  store i32 %add.i.i.i.i348, i32* %178, align 8, !tbaa !16
  br label %invoke.cont.i.i352

invoke.cont.i.i352:                               ; preds = %if.else.i.i.i349, %if.then.i.i.i347
  %retval.0.i.i.i350 = phi i32 [ %179, %if.then.i.i.i347 ], [ %180, %if.else.i.i.i349 ]
  %cmp3.i.i351 = icmp slt i32 %retval.0.i.i.i350, 1
  br i1 %cmp3.i.i351, label %if.then4.i.i353, label %_ZNSsD2Ev.exit354

if.then4.i.i353:                                  ; preds = %invoke.cont.i.i352
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %176, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i341) #8
  br label %_ZNSsD2Ev.exit354

_ZNSsD2Ev.exit354:                                ; preds = %invoke.cont221, %invoke.cont.i.i352, %if.then4.i.i353
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %177) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %174) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %173) #8
  %_M_p.i.i.i356 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp212, i64 0, i32 0, i32 0
  %181 = load i8*, i8** %_M_p.i.i.i356, align 8, !tbaa !43
  %arrayidx.i.i357 = getelementptr inbounds i8, i8* %181, i64 -24
  %182 = bitcast i8* %arrayidx.i.i357 to %"struct.std::basic_string<char>::_Rep"*
  %183 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i355, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %183) #8
  %cmp.not.i.i358 = icmp eq i8* %arrayidx.i.i357, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i358, label %_ZNSsD2Ev.exit368, label %if.then.i.i360, !prof !47

if.then.i.i360:                                   ; preds = %_ZNSsD2Ev.exit354
  %_M_refcount.i.i359 = getelementptr inbounds i8, i8* %181, i64 -8
  %184 = bitcast i8* %_M_refcount.i.i359 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i361, label %if.else.i.i.i363

if.then.i.i.i361:                                 ; preds = %if.then.i.i360
  %185 = atomicrmw volatile add i32* %184, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i366

if.else.i.i.i363:                                 ; preds = %if.then.i.i360
  %186 = load i32, i32* %184, align 8, !tbaa !16
  %add.i.i.i.i362 = add nsw i32 %186, -1
  store i32 %add.i.i.i.i362, i32* %184, align 8, !tbaa !16
  br label %invoke.cont.i.i366

invoke.cont.i.i366:                               ; preds = %if.else.i.i.i363, %if.then.i.i.i361
  %retval.0.i.i.i364 = phi i32 [ %185, %if.then.i.i.i361 ], [ %186, %if.else.i.i.i363 ]
  %cmp3.i.i365 = icmp slt i32 %retval.0.i.i.i364, 1
  br i1 %cmp3.i.i365, label %if.then4.i.i367, label %_ZNSsD2Ev.exit368

if.then4.i.i367:                                  ; preds = %invoke.cont.i.i366
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %182, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i355) #8
  br label %_ZNSsD2Ev.exit368

_ZNSsD2Ev.exit368:                                ; preds = %_ZNSsD2Ev.exit354, %invoke.cont.i.i366, %if.then4.i.i367
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %183) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %172) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %171) #8
  %_M_p.i.i.i370 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp205, i64 0, i32 0, i32 0
  %187 = load i8*, i8** %_M_p.i.i.i370, align 8, !tbaa !43
  %arrayidx.i.i371 = getelementptr inbounds i8, i8* %187, i64 -24
  %188 = bitcast i8* %arrayidx.i.i371 to %"struct.std::basic_string<char>::_Rep"*
  %189 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i369, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %189) #8
  %cmp.not.i.i372 = icmp eq i8* %arrayidx.i.i371, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i372, label %_ZNSsD2Ev.exit382, label %if.then.i.i374, !prof !47

if.then.i.i374:                                   ; preds = %_ZNSsD2Ev.exit368
  %_M_refcount.i.i373 = getelementptr inbounds i8, i8* %187, i64 -8
  %190 = bitcast i8* %_M_refcount.i.i373 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i375, label %if.else.i.i.i377

if.then.i.i.i375:                                 ; preds = %if.then.i.i374
  %191 = atomicrmw volatile add i32* %190, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i380

if.else.i.i.i377:                                 ; preds = %if.then.i.i374
  %192 = load i32, i32* %190, align 8, !tbaa !16
  %add.i.i.i.i376 = add nsw i32 %192, -1
  store i32 %add.i.i.i.i376, i32* %190, align 8, !tbaa !16
  br label %invoke.cont.i.i380

invoke.cont.i.i380:                               ; preds = %if.else.i.i.i377, %if.then.i.i.i375
  %retval.0.i.i.i378 = phi i32 [ %191, %if.then.i.i.i375 ], [ %192, %if.else.i.i.i377 ]
  %cmp3.i.i379 = icmp slt i32 %retval.0.i.i.i378, 1
  br i1 %cmp3.i.i379, label %if.then4.i.i381, label %_ZNSsD2Ev.exit382

if.then4.i.i381:                                  ; preds = %invoke.cont.i.i380
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %188, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i369) #8
  br label %_ZNSsD2Ev.exit382

_ZNSsD2Ev.exit382:                                ; preds = %_ZNSsD2Ev.exit368, %invoke.cont.i.i380, %if.then4.i.i381
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %189) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %170) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %169) #8
  %193 = bitcast %"class.std::basic_string"* %ref.tmp235 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %193) #8
  %194 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp236, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %194) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp235, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.179, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp236)
          to label %invoke.cont238 unwind label %lpad237

invoke.cont238:                                   ; preds = %_ZNSsD2Ev.exit382
  %call241 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %0, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp235)
          to label %invoke.cont240 unwind label %lpad239

invoke.cont240:                                   ; preds = %invoke.cont238
  %195 = bitcast %"class.std::basic_string"* %ref.tmp242 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %195) #8
  %196 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp243, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %196) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp242, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.184, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp243)
          to label %invoke.cont245 unwind label %lpad244

invoke.cont245:                                   ; preds = %invoke.cont240
  %197 = bitcast %"class.std::basic_string"* %ref.tmp246 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %197) #8
  %198 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp247, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %198) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp246, i8* noundef getelementptr inbounds ([107 x i8], [107 x i8]* @.str.185, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp247)
          to label %invoke.cont249 unwind label %lpad248

invoke.cont249:                                   ; preds = %invoke.cont245
  %call252 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsS1_(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call241, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp242, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp246)
          to label %invoke.cont251 unwind label %lpad250

invoke.cont251:                                   ; preds = %invoke.cont249
  %_M_p.i.i.i384 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp246, i64 0, i32 0, i32 0
  %199 = load i8*, i8** %_M_p.i.i.i384, align 8, !tbaa !43
  %arrayidx.i.i385 = getelementptr inbounds i8, i8* %199, i64 -24
  %200 = bitcast i8* %arrayidx.i.i385 to %"struct.std::basic_string<char>::_Rep"*
  %201 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i383, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %201) #8
  %cmp.not.i.i386 = icmp eq i8* %arrayidx.i.i385, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i386, label %_ZNSsD2Ev.exit396, label %if.then.i.i388, !prof !47

if.then.i.i388:                                   ; preds = %invoke.cont251
  %_M_refcount.i.i387 = getelementptr inbounds i8, i8* %199, i64 -8
  %202 = bitcast i8* %_M_refcount.i.i387 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i389, label %if.else.i.i.i391

if.then.i.i.i389:                                 ; preds = %if.then.i.i388
  %203 = atomicrmw volatile add i32* %202, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i394

if.else.i.i.i391:                                 ; preds = %if.then.i.i388
  %204 = load i32, i32* %202, align 8, !tbaa !16
  %add.i.i.i.i390 = add nsw i32 %204, -1
  store i32 %add.i.i.i.i390, i32* %202, align 8, !tbaa !16
  br label %invoke.cont.i.i394

invoke.cont.i.i394:                               ; preds = %if.else.i.i.i391, %if.then.i.i.i389
  %retval.0.i.i.i392 = phi i32 [ %203, %if.then.i.i.i389 ], [ %204, %if.else.i.i.i391 ]
  %cmp3.i.i393 = icmp slt i32 %retval.0.i.i.i392, 1
  br i1 %cmp3.i.i393, label %if.then4.i.i395, label %_ZNSsD2Ev.exit396

if.then4.i.i395:                                  ; preds = %invoke.cont.i.i394
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %200, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i383) #8
  br label %_ZNSsD2Ev.exit396

_ZNSsD2Ev.exit396:                                ; preds = %invoke.cont251, %invoke.cont.i.i394, %if.then4.i.i395
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %201) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %198) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %197) #8
  %_M_p.i.i.i398 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp242, i64 0, i32 0, i32 0
  %205 = load i8*, i8** %_M_p.i.i.i398, align 8, !tbaa !43
  %arrayidx.i.i399 = getelementptr inbounds i8, i8* %205, i64 -24
  %206 = bitcast i8* %arrayidx.i.i399 to %"struct.std::basic_string<char>::_Rep"*
  %207 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i397, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %207) #8
  %cmp.not.i.i400 = icmp eq i8* %arrayidx.i.i399, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i400, label %_ZNSsD2Ev.exit410, label %if.then.i.i402, !prof !47

if.then.i.i402:                                   ; preds = %_ZNSsD2Ev.exit396
  %_M_refcount.i.i401 = getelementptr inbounds i8, i8* %205, i64 -8
  %208 = bitcast i8* %_M_refcount.i.i401 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i403, label %if.else.i.i.i405

if.then.i.i.i403:                                 ; preds = %if.then.i.i402
  %209 = atomicrmw volatile add i32* %208, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i408

if.else.i.i.i405:                                 ; preds = %if.then.i.i402
  %210 = load i32, i32* %208, align 8, !tbaa !16
  %add.i.i.i.i404 = add nsw i32 %210, -1
  store i32 %add.i.i.i.i404, i32* %208, align 8, !tbaa !16
  br label %invoke.cont.i.i408

invoke.cont.i.i408:                               ; preds = %if.else.i.i.i405, %if.then.i.i.i403
  %retval.0.i.i.i406 = phi i32 [ %209, %if.then.i.i.i403 ], [ %210, %if.else.i.i.i405 ]
  %cmp3.i.i407 = icmp slt i32 %retval.0.i.i.i406, 1
  br i1 %cmp3.i.i407, label %if.then4.i.i409, label %_ZNSsD2Ev.exit410

if.then4.i.i409:                                  ; preds = %invoke.cont.i.i408
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %206, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i397) #8
  br label %_ZNSsD2Ev.exit410

_ZNSsD2Ev.exit410:                                ; preds = %_ZNSsD2Ev.exit396, %invoke.cont.i.i408, %if.then4.i.i409
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %207) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %196) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %195) #8
  %_M_p.i.i.i412 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp235, i64 0, i32 0, i32 0
  %211 = load i8*, i8** %_M_p.i.i.i412, align 8, !tbaa !43
  %arrayidx.i.i413 = getelementptr inbounds i8, i8* %211, i64 -24
  %212 = bitcast i8* %arrayidx.i.i413 to %"struct.std::basic_string<char>::_Rep"*
  %213 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i411, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %213) #8
  %cmp.not.i.i414 = icmp eq i8* %arrayidx.i.i413, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i414, label %_ZNSsD2Ev.exit424, label %if.then.i.i416, !prof !47

if.then.i.i416:                                   ; preds = %_ZNSsD2Ev.exit410
  %_M_refcount.i.i415 = getelementptr inbounds i8, i8* %211, i64 -8
  %214 = bitcast i8* %_M_refcount.i.i415 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i417, label %if.else.i.i.i419

if.then.i.i.i417:                                 ; preds = %if.then.i.i416
  %215 = atomicrmw volatile add i32* %214, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i422

if.else.i.i.i419:                                 ; preds = %if.then.i.i416
  %216 = load i32, i32* %214, align 8, !tbaa !16
  %add.i.i.i.i418 = add nsw i32 %216, -1
  store i32 %add.i.i.i.i418, i32* %214, align 8, !tbaa !16
  br label %invoke.cont.i.i422

invoke.cont.i.i422:                               ; preds = %if.else.i.i.i419, %if.then.i.i.i417
  %retval.0.i.i.i420 = phi i32 [ %215, %if.then.i.i.i417 ], [ %216, %if.else.i.i.i419 ]
  %cmp3.i.i421 = icmp slt i32 %retval.0.i.i.i420, 1
  br i1 %cmp3.i.i421, label %if.then4.i.i423, label %_ZNSsD2Ev.exit424

if.then4.i.i423:                                  ; preds = %invoke.cont.i.i422
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %212, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i411) #8
  br label %_ZNSsD2Ev.exit424

_ZNSsD2Ev.exit424:                                ; preds = %_ZNSsD2Ev.exit410, %invoke.cont.i.i422, %if.then4.i.i423
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %213) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %194) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %193) #8
  %217 = bitcast %"class.std::basic_string"* %using_mpi to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %217) #8
  %218 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp265, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %218) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %using_mpi, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.186, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp265)
          to label %invoke.cont267 unwind label %lpad266

invoke.cont267:                                   ; preds = %_ZNSsD2Ev.exit424
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %218) #8
  %219 = bitcast %"class.std::basic_string"* %ref.tmp270 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %219) #8
  %220 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp271, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %220) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp270, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.179, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp271)
          to label %invoke.cont273 unwind label %lpad272

invoke.cont273:                                   ; preds = %invoke.cont267
  %call276 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %0, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp270)
          to label %invoke.cont275 unwind label %lpad274

invoke.cont275:                                   ; preds = %invoke.cont273
  %221 = bitcast %"class.std::basic_string"* %ref.tmp277 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %221) #8
  %222 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp278, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %222) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp277, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.187, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp278)
          to label %invoke.cont280 unwind label %lpad279

invoke.cont280:                                   ; preds = %invoke.cont275
  %call283 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsS1_(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call276, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp277, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %using_mpi)
          to label %invoke.cont282 unwind label %lpad281

invoke.cont282:                                   ; preds = %invoke.cont280
  %_M_p.i.i.i426 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp277, i64 0, i32 0, i32 0
  %223 = load i8*, i8** %_M_p.i.i.i426, align 8, !tbaa !43
  %arrayidx.i.i427 = getelementptr inbounds i8, i8* %223, i64 -24
  %224 = bitcast i8* %arrayidx.i.i427 to %"struct.std::basic_string<char>::_Rep"*
  %225 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i425, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %225) #8
  %cmp.not.i.i428 = icmp eq i8* %arrayidx.i.i427, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i428, label %_ZNSsD2Ev.exit438, label %if.then.i.i430, !prof !47

if.then.i.i430:                                   ; preds = %invoke.cont282
  %_M_refcount.i.i429 = getelementptr inbounds i8, i8* %223, i64 -8
  %226 = bitcast i8* %_M_refcount.i.i429 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i431, label %if.else.i.i.i433

if.then.i.i.i431:                                 ; preds = %if.then.i.i430
  %227 = atomicrmw volatile add i32* %226, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i436

if.else.i.i.i433:                                 ; preds = %if.then.i.i430
  %228 = load i32, i32* %226, align 8, !tbaa !16
  %add.i.i.i.i432 = add nsw i32 %228, -1
  store i32 %add.i.i.i.i432, i32* %226, align 8, !tbaa !16
  br label %invoke.cont.i.i436

invoke.cont.i.i436:                               ; preds = %if.else.i.i.i433, %if.then.i.i.i431
  %retval.0.i.i.i434 = phi i32 [ %227, %if.then.i.i.i431 ], [ %228, %if.else.i.i.i433 ]
  %cmp3.i.i435 = icmp slt i32 %retval.0.i.i.i434, 1
  br i1 %cmp3.i.i435, label %if.then4.i.i437, label %_ZNSsD2Ev.exit438

if.then4.i.i437:                                  ; preds = %invoke.cont.i.i436
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %224, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i425) #8
  br label %_ZNSsD2Ev.exit438

_ZNSsD2Ev.exit438:                                ; preds = %invoke.cont282, %invoke.cont.i.i436, %if.then4.i.i437
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %225) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %222) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %221) #8
  %_M_p.i.i.i440 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp270, i64 0, i32 0, i32 0
  %229 = load i8*, i8** %_M_p.i.i.i440, align 8, !tbaa !43
  %arrayidx.i.i441 = getelementptr inbounds i8, i8* %229, i64 -24
  %230 = bitcast i8* %arrayidx.i.i441 to %"struct.std::basic_string<char>::_Rep"*
  %231 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i439, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %231) #8
  %cmp.not.i.i442 = icmp eq i8* %arrayidx.i.i441, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i442, label %_ZNSsD2Ev.exit452, label %if.then.i.i444, !prof !47

if.then.i.i444:                                   ; preds = %_ZNSsD2Ev.exit438
  %_M_refcount.i.i443 = getelementptr inbounds i8, i8* %229, i64 -8
  %232 = bitcast i8* %_M_refcount.i.i443 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i445, label %if.else.i.i.i447

if.then.i.i.i445:                                 ; preds = %if.then.i.i444
  %233 = atomicrmw volatile add i32* %232, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i450

if.else.i.i.i447:                                 ; preds = %if.then.i.i444
  %234 = load i32, i32* %232, align 8, !tbaa !16
  %add.i.i.i.i446 = add nsw i32 %234, -1
  store i32 %add.i.i.i.i446, i32* %232, align 8, !tbaa !16
  br label %invoke.cont.i.i450

invoke.cont.i.i450:                               ; preds = %if.else.i.i.i447, %if.then.i.i.i445
  %retval.0.i.i.i448 = phi i32 [ %233, %if.then.i.i.i445 ], [ %234, %if.else.i.i.i447 ]
  %cmp3.i.i449 = icmp slt i32 %retval.0.i.i.i448, 1
  br i1 %cmp3.i.i449, label %if.then4.i.i451, label %_ZNSsD2Ev.exit452

if.then4.i.i451:                                  ; preds = %invoke.cont.i.i450
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %230, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i439) #8
  br label %_ZNSsD2Ev.exit452

_ZNSsD2Ev.exit452:                                ; preds = %_ZNSsD2Ev.exit438, %invoke.cont.i.i450, %if.then4.i.i451
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %231) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %220) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %219) #8
  %_M_p.i.i.i454 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %using_mpi, i64 0, i32 0, i32 0
  %235 = load i8*, i8** %_M_p.i.i.i454, align 8, !tbaa !43
  %arrayidx.i.i455 = getelementptr inbounds i8, i8* %235, i64 -24
  %236 = bitcast i8* %arrayidx.i.i455 to %"struct.std::basic_string<char>::_Rep"*
  %237 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i453, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %237) #8
  %cmp.not.i.i456 = icmp eq i8* %arrayidx.i.i455, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i456, label %_ZNSsD2Ev.exit466, label %if.then.i.i458, !prof !47

if.then.i.i458:                                   ; preds = %_ZNSsD2Ev.exit452
  %_M_refcount.i.i457 = getelementptr inbounds i8, i8* %235, i64 -8
  %238 = bitcast i8* %_M_refcount.i.i457 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i459, label %if.else.i.i.i461

if.then.i.i.i459:                                 ; preds = %if.then.i.i458
  %239 = atomicrmw volatile add i32* %238, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i464

if.else.i.i.i461:                                 ; preds = %if.then.i.i458
  %240 = load i32, i32* %238, align 8, !tbaa !16
  %add.i.i.i.i460 = add nsw i32 %240, -1
  store i32 %add.i.i.i.i460, i32* %238, align 8, !tbaa !16
  br label %invoke.cont.i.i464

invoke.cont.i.i464:                               ; preds = %if.else.i.i.i461, %if.then.i.i.i459
  %retval.0.i.i.i462 = phi i32 [ %239, %if.then.i.i.i459 ], [ %240, %if.else.i.i.i461 ]
  %cmp3.i.i463 = icmp slt i32 %retval.0.i.i.i462, 1
  br i1 %cmp3.i.i463, label %if.then4.i.i465, label %_ZNSsD2Ev.exit466

if.then4.i.i465:                                  ; preds = %invoke.cont.i.i464
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %236, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i453) #8
  br label %_ZNSsD2Ev.exit466

_ZNSsD2Ev.exit466:                                ; preds = %_ZNSsD2Ev.exit452, %invoke.cont.i.i464, %if.then4.i.i465
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %237) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %217) #8
  ret void

lpad:                                             ; preds = %entry
  %241 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup14

lpad2:                                            ; preds = %invoke.cont
  %242 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup13

lpad6:                                            ; preds = %invoke.cont3
  %243 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup

lpad8:                                            ; preds = %invoke.cont7
  %244 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp4) #8
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad8, %lpad6
  %.pn = phi { i8*, i32 } [ %244, %lpad8 ], [ %243, %lpad6 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #8
  br label %ehcleanup13

ehcleanup13:                                      ; preds = %ehcleanup, %lpad2
  %.pn.pn = phi { i8*, i32 } [ %.pn, %ehcleanup ], [ %242, %lpad2 ]
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp) #8
  br label %ehcleanup14

ehcleanup14:                                      ; preds = %ehcleanup13, %lpad
  %.pn.pn.pn = phi { i8*, i32 } [ %.pn.pn, %ehcleanup13 ], [ %241, %lpad ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8
  br label %eh.resume

lpad19:                                           ; preds = %_ZNSsD2Ev.exit74
  %245 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup33

lpad23:                                           ; preds = %invoke.cont20
  %246 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup29

lpad25:                                           ; preds = %invoke.cont24
  %247 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp21) #8
  br label %ehcleanup29

ehcleanup29:                                      ; preds = %lpad25, %lpad23
  %.pn14 = phi { i8*, i32 } [ %247, %lpad25 ], [ %246, %lpad23 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %20) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #8
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp17) #8
  br label %ehcleanup33

ehcleanup33:                                      ; preds = %ehcleanup29, %lpad19
  %.pn14.pn = phi { i8*, i32 } [ %.pn14, %ehcleanup29 ], [ %245, %lpad19 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %18) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %eh.resume

lpad38:                                           ; preds = %_ZNSsD2Ev.exit102
  %248 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup63

lpad40:                                           ; preds = %invoke.cont39
  %249 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup62

lpad45:                                           ; preds = %invoke.cont41
  %250 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup59

lpad49:                                           ; preds = %invoke.cont46
  %251 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup55

lpad51:                                           ; preds = %invoke.cont50
  %252 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp47) #8
  br label %ehcleanup55

ehcleanup55:                                      ; preds = %lpad51, %lpad49
  %.pn17 = phi { i8*, i32 } [ %252, %lpad51 ], [ %251, %lpad49 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %38) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #8
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp43) #8
  br label %ehcleanup59

ehcleanup59:                                      ; preds = %ehcleanup55, %lpad45
  %.pn17.pn = phi { i8*, i32 } [ %.pn17, %ehcleanup55 ], [ %250, %lpad45 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %36) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8
  br label %ehcleanup62

ehcleanup62:                                      ; preds = %ehcleanup59, %lpad40
  %.pn17.pn.pn = phi { i8*, i32 } [ %.pn17.pn, %ehcleanup59 ], [ %249, %lpad40 ]
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp36) #8
  br label %ehcleanup63

ehcleanup63:                                      ; preds = %ehcleanup62, %lpad38
  %.pn17.pn.pn.pn = phi { i8*, i32 } [ %.pn17.pn.pn, %ehcleanup62 ], [ %248, %lpad38 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %34) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #8
  br label %eh.resume

lpad68:                                           ; preds = %_ZNSsD2Ev.exit144
  %253 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup93

lpad70:                                           ; preds = %invoke.cont69
  %254 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup92

lpad75:                                           ; preds = %invoke.cont71
  %255 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup89

lpad79:                                           ; preds = %invoke.cont76
  %256 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup85

lpad81:                                           ; preds = %invoke.cont80
  %257 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp77) #8
  br label %ehcleanup85

ehcleanup85:                                      ; preds = %lpad81, %lpad79
  %.pn22 = phi { i8*, i32 } [ %257, %lpad81 ], [ %256, %lpad79 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %62) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #8
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp73) #8
  br label %ehcleanup89

ehcleanup89:                                      ; preds = %ehcleanup85, %lpad75
  %.pn22.pn = phi { i8*, i32 } [ %.pn22, %ehcleanup85 ], [ %255, %lpad75 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %60) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #8
  br label %ehcleanup92

ehcleanup92:                                      ; preds = %ehcleanup89, %lpad70
  %.pn22.pn.pn = phi { i8*, i32 } [ %.pn22.pn, %ehcleanup89 ], [ %254, %lpad70 ]
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp66) #8
  br label %ehcleanup93

ehcleanup93:                                      ; preds = %ehcleanup92, %lpad68
  %.pn22.pn.pn.pn = phi { i8*, i32 } [ %.pn22.pn.pn, %ehcleanup92 ], [ %253, %lpad68 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %58) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #8
  br label %eh.resume

lpad98:                                           ; preds = %_ZNSsD2Ev.exit186
  %258 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup123

lpad100:                                          ; preds = %invoke.cont99
  %259 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup122

lpad105:                                          ; preds = %invoke.cont101
  %260 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup119

lpad109:                                          ; preds = %invoke.cont106
  %261 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup115

lpad111:                                          ; preds = %invoke.cont110
  %262 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp107) #8
  br label %ehcleanup115

ehcleanup115:                                     ; preds = %lpad111, %lpad109
  %.pn27 = phi { i8*, i32 } [ %262, %lpad111 ], [ %261, %lpad109 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %86) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85) #8
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp103) #8
  br label %ehcleanup119

ehcleanup119:                                     ; preds = %ehcleanup115, %lpad105
  %.pn27.pn = phi { i8*, i32 } [ %.pn27, %ehcleanup115 ], [ %260, %lpad105 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %84) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #8
  br label %ehcleanup122

ehcleanup122:                                     ; preds = %ehcleanup119, %lpad100
  %.pn27.pn.pn = phi { i8*, i32 } [ %.pn27.pn, %ehcleanup119 ], [ %259, %lpad100 ]
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp96) #8
  br label %ehcleanup123

ehcleanup123:                                     ; preds = %ehcleanup122, %lpad98
  %.pn27.pn.pn.pn = phi { i8*, i32 } [ %.pn27.pn.pn, %ehcleanup122 ], [ %258, %lpad98 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %82) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #8
  br label %eh.resume

lpad128:                                          ; preds = %_ZNSsD2Ev.exit228
  %263 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup153

lpad130:                                          ; preds = %invoke.cont129
  %264 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup152

lpad135:                                          ; preds = %invoke.cont131
  %265 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup149

lpad139:                                          ; preds = %invoke.cont136
  %266 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup145

lpad141:                                          ; preds = %invoke.cont140
  %267 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp137) #8
  br label %ehcleanup145

ehcleanup145:                                     ; preds = %lpad141, %lpad139
  %.pn32 = phi { i8*, i32 } [ %267, %lpad141 ], [ %266, %lpad139 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %110) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109) #8
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp133) #8
  br label %ehcleanup149

ehcleanup149:                                     ; preds = %ehcleanup145, %lpad135
  %.pn32.pn = phi { i8*, i32 } [ %.pn32, %ehcleanup145 ], [ %265, %lpad135 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %108) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %107) #8
  br label %ehcleanup152

ehcleanup152:                                     ; preds = %ehcleanup149, %lpad130
  %.pn32.pn.pn = phi { i8*, i32 } [ %.pn32.pn, %ehcleanup149 ], [ %264, %lpad130 ]
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp126) #8
  br label %ehcleanup153

ehcleanup153:                                     ; preds = %ehcleanup152, %lpad128
  %.pn32.pn.pn.pn = phi { i8*, i32 } [ %.pn32.pn.pn, %ehcleanup152 ], [ %263, %lpad128 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %106) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #8
  br label %eh.resume

lpad158:                                          ; preds = %_ZNSsD2Ev.exit270
  %268 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup172

lpad162:                                          ; preds = %invoke.cont159
  %269 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup168

lpad164:                                          ; preds = %invoke.cont163
  %270 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp160) #8
  br label %ehcleanup168

ehcleanup168:                                     ; preds = %lpad164, %lpad162
  %.pn37 = phi { i8*, i32 } [ %270, %lpad164 ], [ %269, %lpad162 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %132) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %131) #8
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp156) #8
  br label %ehcleanup172

ehcleanup172:                                     ; preds = %ehcleanup168, %lpad158
  %.pn37.pn = phi { i8*, i32 } [ %.pn37, %ehcleanup168 ], [ %268, %lpad158 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %130) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %129) #8
  br label %eh.resume

lpad177:                                          ; preds = %_ZNSsD2Ev.exit298
  %271 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup202

lpad179:                                          ; preds = %invoke.cont178
  %272 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup201

lpad184:                                          ; preds = %invoke.cont180
  %273 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup198

lpad188:                                          ; preds = %invoke.cont185
  %274 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup194

lpad190:                                          ; preds = %invoke.cont189
  %275 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp186) #8
  br label %ehcleanup194

ehcleanup194:                                     ; preds = %lpad190, %lpad188
  %.pn40 = phi { i8*, i32 } [ %275, %lpad190 ], [ %274, %lpad188 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %150) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %149) #8
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp182) #8
  br label %ehcleanup198

ehcleanup198:                                     ; preds = %ehcleanup194, %lpad184
  %.pn40.pn = phi { i8*, i32 } [ %.pn40, %ehcleanup194 ], [ %273, %lpad184 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %148) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %147) #8
  br label %ehcleanup201

ehcleanup201:                                     ; preds = %ehcleanup198, %lpad179
  %.pn40.pn.pn = phi { i8*, i32 } [ %.pn40.pn, %ehcleanup198 ], [ %272, %lpad179 ]
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp175) #8
  br label %ehcleanup202

ehcleanup202:                                     ; preds = %ehcleanup201, %lpad177
  %.pn40.pn.pn.pn = phi { i8*, i32 } [ %.pn40.pn.pn, %ehcleanup201 ], [ %271, %lpad177 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %146) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %145) #8
  br label %eh.resume

lpad207:                                          ; preds = %_ZNSsD2Ev.exit340
  %276 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup232

lpad209:                                          ; preds = %invoke.cont208
  %277 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup231

lpad214:                                          ; preds = %invoke.cont210
  %278 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup228

lpad218:                                          ; preds = %invoke.cont215
  %279 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup224

lpad220:                                          ; preds = %invoke.cont219
  %280 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp216) #8
  br label %ehcleanup224

ehcleanup224:                                     ; preds = %lpad220, %lpad218
  %.pn45 = phi { i8*, i32 } [ %280, %lpad220 ], [ %279, %lpad218 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %174) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %173) #8
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp212) #8
  br label %ehcleanup228

ehcleanup228:                                     ; preds = %ehcleanup224, %lpad214
  %.pn45.pn = phi { i8*, i32 } [ %.pn45, %ehcleanup224 ], [ %278, %lpad214 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %172) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %171) #8
  br label %ehcleanup231

ehcleanup231:                                     ; preds = %ehcleanup228, %lpad209
  %.pn45.pn.pn = phi { i8*, i32 } [ %.pn45.pn, %ehcleanup228 ], [ %277, %lpad209 ]
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp205) #8
  br label %ehcleanup232

ehcleanup232:                                     ; preds = %ehcleanup231, %lpad207
  %.pn45.pn.pn.pn = phi { i8*, i32 } [ %.pn45.pn.pn, %ehcleanup231 ], [ %276, %lpad207 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %170) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %169) #8
  br label %eh.resume

lpad237:                                          ; preds = %_ZNSsD2Ev.exit382
  %281 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup262

lpad239:                                          ; preds = %invoke.cont238
  %282 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup261

lpad244:                                          ; preds = %invoke.cont240
  %283 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup258

lpad248:                                          ; preds = %invoke.cont245
  %284 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup254

lpad250:                                          ; preds = %invoke.cont249
  %285 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp246) #8
  br label %ehcleanup254

ehcleanup254:                                     ; preds = %lpad250, %lpad248
  %.pn50 = phi { i8*, i32 } [ %285, %lpad250 ], [ %284, %lpad248 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %198) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %197) #8
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp242) #8
  br label %ehcleanup258

ehcleanup258:                                     ; preds = %ehcleanup254, %lpad244
  %.pn50.pn = phi { i8*, i32 } [ %.pn50, %ehcleanup254 ], [ %283, %lpad244 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %196) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %195) #8
  br label %ehcleanup261

ehcleanup261:                                     ; preds = %ehcleanup258, %lpad239
  %.pn50.pn.pn = phi { i8*, i32 } [ %.pn50.pn, %ehcleanup258 ], [ %282, %lpad239 ]
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp235) #8
  br label %ehcleanup262

ehcleanup262:                                     ; preds = %ehcleanup261, %lpad237
  %.pn50.pn.pn.pn = phi { i8*, i32 } [ %.pn50.pn.pn, %ehcleanup261 ], [ %281, %lpad237 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %194) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %193) #8
  br label %eh.resume

lpad266:                                          ; preds = %_ZNSsD2Ev.exit424
  %286 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %218) #8
  br label %ehcleanup293

lpad272:                                          ; preds = %invoke.cont267
  %287 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup289

lpad274:                                          ; preds = %invoke.cont273
  %288 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup288

lpad279:                                          ; preds = %invoke.cont275
  %289 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup285

lpad281:                                          ; preds = %invoke.cont280
  %290 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp277) #8
  br label %ehcleanup285

ehcleanup285:                                     ; preds = %lpad281, %lpad279
  %.pn55 = phi { i8*, i32 } [ %290, %lpad281 ], [ %289, %lpad279 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %222) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %221) #8
  br label %ehcleanup288

ehcleanup288:                                     ; preds = %ehcleanup285, %lpad274
  %.pn55.pn = phi { i8*, i32 } [ %.pn55, %ehcleanup285 ], [ %288, %lpad274 ]
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp270) #8
  br label %ehcleanup289

ehcleanup289:                                     ; preds = %ehcleanup288, %lpad272
  %.pn55.pn.pn = phi { i8*, i32 } [ %.pn55.pn, %ehcleanup288 ], [ %287, %lpad272 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %220) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %219) #8
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %using_mpi) #8
  br label %ehcleanup293

ehcleanup293:                                     ; preds = %ehcleanup289, %lpad266
  %.pn55.pn.pn.pn = phi { i8*, i32 } [ %.pn55.pn.pn, %ehcleanup289 ], [ %286, %lpad266 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %217) #8
  br label %eh.resume

eh.resume:                                        ; preds = %ehcleanup293, %ehcleanup262, %ehcleanup232, %ehcleanup202, %ehcleanup172, %ehcleanup153, %ehcleanup123, %ehcleanup93, %ehcleanup63, %ehcleanup33, %ehcleanup14
  %.pn55.pn.pn.pn.pn = phi { i8*, i32 } [ %.pn55.pn.pn.pn, %ehcleanup293 ], [ %.pn50.pn.pn.pn, %ehcleanup262 ], [ %.pn45.pn.pn.pn, %ehcleanup232 ], [ %.pn40.pn.pn.pn, %ehcleanup202 ], [ %.pn37.pn, %ehcleanup172 ], [ %.pn32.pn.pn.pn, %ehcleanup153 ], [ %.pn27.pn.pn.pn, %ehcleanup123 ], [ %.pn22.pn.pn.pn, %ehcleanup93 ], [ %.pn17.pn.pn.pn, %ehcleanup63 ], [ %.pn14.pn, %ehcleanup33 ], [ %.pn.pn.pn, %ehcleanup14 ]
  resume { i8*, i32 } %.pn55.pn.pn.pn.pn
}

; Function Attrs: uwtable
define dso_local void @_Z22add_timestring_to_yamlR8YAML_Doc(%class.YAML_Doc* noundef nonnull align 8 dereferenceable(72) %doc) local_unnamed_addr #11 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %ref.tmp.i.i.i.i = alloca %"class.std::allocator", align 1
  %ref.tmp.i32 = alloca %"class.std::allocator", align 1
  %ref.tmp.i = alloca %"class.std::allocator", align 1
  %rawtime = alloca i64, align 8
  %osstr = alloca %"class.std::basic_ostringstream", align 8
  %timestring = alloca %"class.std::basic_string", align 8
  %ref.tmp = alloca %"class.std::basic_string", align 8
  %ref.tmp53 = alloca %"class.std::allocator", align 1
  %0 = bitcast i64* %rawtime to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8
  %call = call i64 @time(i64* noundef nonnull %rawtime) #8
  %call1 = call %struct.tm* @localtime(i64* noundef nonnull %rawtime) #8
  %1 = bitcast %"class.std::basic_ostringstream"* %osstr to i8*
  call void @llvm.lifetime.start.p0i8(i64 352, i8* nonnull %1) #8
  call void @_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEEC1ESt13_Ios_Openmode(%"class.std::basic_ostringstream"* noundef nonnull align 8 dereferenceable(88) %osstr, i32 noundef signext 16)
  %2 = bitcast %"class.std::basic_ostringstream"* %osstr to i8**
  %vtable = load i8*, i8** %2, align 8, !tbaa !32
  %vbase.offset.ptr = getelementptr i8, i8* %vtable, i64 -24
  %3 = bitcast i8* %vbase.offset.ptr to i64*
  %vbase.offset = load i64, i64* %3, align 8
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %vbase.offset
  %4 = getelementptr inbounds i8, i8* %add.ptr, i64 225
  %5 = load i8, i8* %4, align 1, !tbaa !50, !range !51
  %tobool.not.i.i = icmp eq i8 %5, 0
  br i1 %tobool.not.i.i, label %if.then.i.i, label %invoke.cont

if.then.i.i:                                      ; preds = %entry
  %_M_ctype.i.i.i = getelementptr inbounds i8, i8* %add.ptr, i64 240
  %6 = bitcast i8* %_M_ctype.i.i.i to %"class.std::ctype"**
  %7 = load %"class.std::ctype"*, %"class.std::ctype"** %6, align 8, !tbaa !34
  %tobool.not.i.i.i.i = icmp eq %"class.std::ctype"* %7, null
  br i1 %tobool.not.i.i.i.i, label %if.then.i.i.i.i, label %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i.i

if.then.i.i.i.i:                                  ; preds = %if.then.i.i
  invoke void @_ZSt16__throw_bad_castv() #29
          to label %.noexc unwind label %lpad

.noexc:                                           ; preds = %if.then.i.i.i.i
  unreachable

_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i.i: ; preds = %if.then.i.i
  %_M_widen_ok.i.i.i.i = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %7, i64 0, i32 8
  %8 = load i8, i8* %_M_widen_ok.i.i.i.i, align 8, !tbaa !37
  %tobool.not.i1.i.i.i = icmp eq i8 %8, 0
  br i1 %tobool.not.i1.i.i.i, label %if.end.i.i.i.i, label %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i.i

if.end.i.i.i.i:                                   ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i.i
  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %7)
          to label %.noexc11 unwind label %lpad

.noexc11:                                         ; preds = %if.end.i.i.i.i
  %9 = bitcast %"class.std::ctype"* %7 to i8 (%"class.std::ctype"*, i8)***
  %vtable.i.i.i.i = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %9, align 8, !tbaa !32
  %vfn.i.i.i.i = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vtable.i.i.i.i, i64 6
  %10 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vfn.i.i.i.i, align 8
  %call.i.i.i.i12 = invoke noundef zeroext i8 %10(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %7, i8 noundef zeroext 32)
          to label %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i.i unwind label %lpad

_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i.i: ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i.i, %.noexc11
  store i8 1, i8* %4, align 1, !tbaa !50
  br label %invoke.cont

invoke.cont:                                      ; preds = %entry, %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i.i
  %11 = getelementptr inbounds i8, i8* %add.ptr, i64 224
  store i8 48, i8* %11, align 8, !tbaa !52
  %12 = bitcast %"class.std::basic_ostringstream"* %osstr to %"class.std::basic_ostream"*
  %tm_year = getelementptr inbounds %struct.tm, %struct.tm* %call1, i64 0, i32 5
  %13 = load i32, i32* %tm_year, align 4, !tbaa !53
  %add = add nsw i32 %13, 1900
  %call4 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %12, i32 noundef signext %add)
          to label %invoke.cont3 unwind label %lpad

invoke.cont3:                                     ; preds = %invoke.cont
  %call1.i13 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call4, i8* noundef nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.188, i64 0, i64 0), i64 noundef 1)
          to label %invoke.cont5 unwind label %lpad

invoke.cont5:                                     ; preds = %invoke.cont3
  %vtable7 = load i8*, i8** %2, align 8, !tbaa !32
  %vbase.offset.ptr8 = getelementptr i8, i8* %vtable7, i64 -24
  %14 = bitcast i8* %vbase.offset.ptr8 to i64*
  %vbase.offset9 = load i64, i64* %14, align 8
  %add.ptr10 = getelementptr inbounds i8, i8* %1, i64 %vbase.offset9
  %_M_width.i = getelementptr inbounds i8, i8* %add.ptr10, i64 16
  %15 = bitcast i8* %_M_width.i to i64*
  store i64 2, i64* %15, align 8, !tbaa !55
  %tm_mon = getelementptr inbounds %struct.tm, %struct.tm* %call1, i64 0, i32 4
  %16 = load i32, i32* %tm_mon, align 8, !tbaa !61
  %add12 = add nsw i32 %16, 1
  %call14 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %12, i32 noundef signext %add12)
          to label %invoke.cont13 unwind label %lpad

invoke.cont13:                                    ; preds = %invoke.cont5
  %call1.i15 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call14, i8* noundef nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.188, i64 0, i64 0), i64 noundef 1)
          to label %invoke.cont15 unwind label %lpad

invoke.cont15:                                    ; preds = %invoke.cont13
  %vtable17 = load i8*, i8** %2, align 8, !tbaa !32
  %vbase.offset.ptr18 = getelementptr i8, i8* %vtable17, i64 -24
  %17 = bitcast i8* %vbase.offset.ptr18 to i64*
  %vbase.offset19 = load i64, i64* %17, align 8
  %add.ptr20 = getelementptr inbounds i8, i8* %1, i64 %vbase.offset19
  %_M_width.i17 = getelementptr inbounds i8, i8* %add.ptr20, i64 16
  %18 = bitcast i8* %_M_width.i17 to i64*
  store i64 2, i64* %18, align 8, !tbaa !55
  %tm_mday = getelementptr inbounds %struct.tm, %struct.tm* %call1, i64 0, i32 3
  %19 = load i32, i32* %tm_mday, align 4, !tbaa !62
  %call23 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %12, i32 noundef signext %19)
          to label %invoke.cont22 unwind label %lpad

invoke.cont22:                                    ; preds = %invoke.cont15
  %call1.i19 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call23, i8* noundef nonnull getelementptr inbounds ([3 x i8], [3 x i8]* @.str.189, i64 0, i64 0), i64 noundef 2)
          to label %invoke.cont24 unwind label %lpad

invoke.cont24:                                    ; preds = %invoke.cont22
  %vtable26 = load i8*, i8** %2, align 8, !tbaa !32
  %vbase.offset.ptr27 = getelementptr i8, i8* %vtable26, i64 -24
  %20 = bitcast i8* %vbase.offset.ptr27 to i64*
  %vbase.offset28 = load i64, i64* %20, align 8
  %add.ptr29 = getelementptr inbounds i8, i8* %1, i64 %vbase.offset28
  %_M_width.i21 = getelementptr inbounds i8, i8* %add.ptr29, i64 16
  %21 = bitcast i8* %_M_width.i21 to i64*
  store i64 2, i64* %21, align 8, !tbaa !55
  %tm_hour = getelementptr inbounds %struct.tm, %struct.tm* %call1, i64 0, i32 2
  %22 = load i32, i32* %tm_hour, align 8, !tbaa !63
  %call32 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %12, i32 noundef signext %22)
          to label %invoke.cont31 unwind label %lpad

invoke.cont31:                                    ; preds = %invoke.cont24
  %call1.i23 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call32, i8* noundef nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.188, i64 0, i64 0), i64 noundef 1)
          to label %invoke.cont33 unwind label %lpad

invoke.cont33:                                    ; preds = %invoke.cont31
  %vtable35 = load i8*, i8** %2, align 8, !tbaa !32
  %vbase.offset.ptr36 = getelementptr i8, i8* %vtable35, i64 -24
  %23 = bitcast i8* %vbase.offset.ptr36 to i64*
  %vbase.offset37 = load i64, i64* %23, align 8
  %add.ptr38 = getelementptr inbounds i8, i8* %1, i64 %vbase.offset37
  %_M_width.i25 = getelementptr inbounds i8, i8* %add.ptr38, i64 16
  %24 = bitcast i8* %_M_width.i25 to i64*
  store i64 2, i64* %24, align 8, !tbaa !55
  %tm_min = getelementptr inbounds %struct.tm, %struct.tm* %call1, i64 0, i32 1
  %25 = load i32, i32* %tm_min, align 4, !tbaa !64
  %call41 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %12, i32 noundef signext %25)
          to label %invoke.cont40 unwind label %lpad

invoke.cont40:                                    ; preds = %invoke.cont33
  %call1.i27 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call41, i8* noundef nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.188, i64 0, i64 0), i64 noundef 1)
          to label %invoke.cont42 unwind label %lpad

invoke.cont42:                                    ; preds = %invoke.cont40
  %vtable44 = load i8*, i8** %2, align 8, !tbaa !32
  %vbase.offset.ptr45 = getelementptr i8, i8* %vtable44, i64 -24
  %26 = bitcast i8* %vbase.offset.ptr45 to i64*
  %vbase.offset46 = load i64, i64* %26, align 8
  %add.ptr47 = getelementptr inbounds i8, i8* %1, i64 %vbase.offset46
  %_M_width.i29 = getelementptr inbounds i8, i8* %add.ptr47, i64 16
  %27 = bitcast i8* %_M_width.i29 to i64*
  store i64 2, i64* %27, align 8, !tbaa !55
  %tm_sec = getelementptr inbounds %struct.tm, %struct.tm* %call1, i64 0, i32 0
  %28 = load i32, i32* %tm_sec, align 8, !tbaa !65
  %call50 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %12, i32 noundef signext %28)
          to label %invoke.cont49 unwind label %lpad

invoke.cont49:                                    ; preds = %invoke.cont42
  %29 = bitcast %"class.std::basic_string"* %timestring to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #8
  %_M_stringbuf.i = getelementptr inbounds %"class.std::basic_ostringstream", %"class.std::basic_ostringstream"* %osstr, i64 0, i32 1
  invoke void @_ZNKSt15basic_stringbufIcSt11char_traitsIcESaIcEE3strEv(%"class.std::basic_string"* nonnull sret(%"class.std::basic_string") align 8 %timestring, %"class.std::basic_stringbuf"* noundef nonnull align 8 dereferenceable(80) %_M_stringbuf.i)
          to label %invoke.cont52 unwind label %lpad51

invoke.cont52:                                    ; preds = %invoke.cont49
  %30 = bitcast %"class.std::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #8
  %31 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp53, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %31) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.190, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp53)
          to label %invoke.cont55 unwind label %lpad54

invoke.cont55:                                    ; preds = %invoke.cont52
  %32 = getelementptr inbounds %class.YAML_Doc, %class.YAML_Doc* %doc, i64 0, i32 0
  %call58 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsS1_(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %32, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %timestring)
          to label %invoke.cont57 unwind label %lpad56

invoke.cont57:                                    ; preds = %invoke.cont55
  %_M_p.i.i.i = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  %33 = load i8*, i8** %_M_p.i.i.i, align 8, !tbaa !43
  %arrayidx.i.i = getelementptr inbounds i8, i8* %33, i64 -24
  %34 = bitcast i8* %arrayidx.i.i to %"struct.std::basic_string<char>::_Rep"*
  %35 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %35) #8
  %cmp.not.i.i = icmp eq i8* %arrayidx.i.i, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i, label %_ZNSsD2Ev.exit, label %if.then.i.i31, !prof !47

if.then.i.i31:                                    ; preds = %invoke.cont57
  %_M_refcount.i.i = getelementptr inbounds i8, i8* %33, i64 -8
  %36 = bitcast i8* %_M_refcount.i.i to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i, label %if.else.i.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i31
  %37 = atomicrmw volatile add i32* %36, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i

if.else.i.i.i:                                    ; preds = %if.then.i.i31
  %38 = load i32, i32* %36, align 8, !tbaa !16
  %add.i.i.i.i = add nsw i32 %38, -1
  store i32 %add.i.i.i.i, i32* %36, align 8, !tbaa !16
  br label %invoke.cont.i.i

invoke.cont.i.i:                                  ; preds = %if.else.i.i.i, %if.then.i.i.i
  %retval.0.i.i.i = phi i32 [ %37, %if.then.i.i.i ], [ %38, %if.else.i.i.i ]
  %cmp3.i.i = icmp slt i32 %retval.0.i.i.i, 1
  br i1 %cmp3.i.i, label %if.then4.i.i, label %_ZNSsD2Ev.exit

if.then4.i.i:                                     ; preds = %invoke.cont.i.i
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %34, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i) #8
  br label %_ZNSsD2Ev.exit

_ZNSsD2Ev.exit:                                   ; preds = %invoke.cont57, %invoke.cont.i.i, %if.then4.i.i
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %35) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %31) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #8
  %_M_p.i.i.i33 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %timestring, i64 0, i32 0, i32 0
  %39 = load i8*, i8** %_M_p.i.i.i33, align 8, !tbaa !43
  %arrayidx.i.i34 = getelementptr inbounds i8, i8* %39, i64 -24
  %40 = bitcast i8* %arrayidx.i.i34 to %"struct.std::basic_string<char>::_Rep"*
  %41 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i32, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %41) #8
  %cmp.not.i.i35 = icmp eq i8* %arrayidx.i.i34, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i35, label %_ZNSsD2Ev.exit45, label %if.then.i.i37, !prof !47

if.then.i.i37:                                    ; preds = %_ZNSsD2Ev.exit
  %_M_refcount.i.i36 = getelementptr inbounds i8, i8* %39, i64 -8
  %42 = bitcast i8* %_M_refcount.i.i36 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i38, label %if.else.i.i.i40

if.then.i.i.i38:                                  ; preds = %if.then.i.i37
  %43 = atomicrmw volatile add i32* %42, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i43

if.else.i.i.i40:                                  ; preds = %if.then.i.i37
  %44 = load i32, i32* %42, align 8, !tbaa !16
  %add.i.i.i.i39 = add nsw i32 %44, -1
  store i32 %add.i.i.i.i39, i32* %42, align 8, !tbaa !16
  br label %invoke.cont.i.i43

invoke.cont.i.i43:                                ; preds = %if.else.i.i.i40, %if.then.i.i.i38
  %retval.0.i.i.i41 = phi i32 [ %43, %if.then.i.i.i38 ], [ %44, %if.else.i.i.i40 ]
  %cmp3.i.i42 = icmp slt i32 %retval.0.i.i.i41, 1
  br i1 %cmp3.i.i42, label %if.then4.i.i44, label %_ZNSsD2Ev.exit45

if.then4.i.i44:                                   ; preds = %invoke.cont.i.i43
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %40, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i32) #8
  br label %_ZNSsD2Ev.exit45

_ZNSsD2Ev.exit45:                                 ; preds = %_ZNSsD2Ev.exit, %invoke.cont.i.i43, %if.then4.i.i44
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %41) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #8
  %45 = load i32 (...)**, i32 (...)*** bitcast ([4 x i8*]* @_ZTTSt19basic_ostringstreamIcSt11char_traitsIcESaIcEE to i32 (...)***), align 8
  %46 = getelementptr inbounds %"class.std::basic_ostringstream", %"class.std::basic_ostringstream"* %osstr, i64 0, i32 0, i32 0
  store i32 (...)** %45, i32 (...)*** %46, align 8, !tbaa !32
  %47 = load i32 (...)**, i32 (...)*** bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTSt19basic_ostringstreamIcSt11char_traitsIcESaIcEE, i64 0, i64 3) to i32 (...)***), align 8
  %vbase.offset.ptr1.i.i = getelementptr i32 (...)*, i32 (...)** %45, i64 -3
  %48 = bitcast i32 (...)** %vbase.offset.ptr1.i.i to i64*
  %vbase.offset.i.i = load i64, i64* %48, align 8
  %add.ptr.i.i = getelementptr inbounds i8, i8* %1, i64 %vbase.offset.i.i
  %49 = bitcast i8* %add.ptr.i.i to i32 (...)***
  store i32 (...)** %47, i32 (...)*** %49, align 8, !tbaa !32
  %50 = getelementptr inbounds %"class.std::basic_ostringstream", %"class.std::basic_ostringstream"* %osstr, i64 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVSt15basic_stringbufIcSt11char_traitsIcESaIcEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %50, align 8, !tbaa !32
  %_M_p.i.i.i.i.i.i = getelementptr inbounds %"class.std::basic_ostringstream", %"class.std::basic_ostringstream"* %osstr, i64 0, i32 1, i32 2, i32 0, i32 0
  %51 = load i8*, i8** %_M_p.i.i.i.i.i.i, align 8, !tbaa !43
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %51, i64 -24
  %52 = bitcast i8* %arrayidx.i.i.i.i.i to %"struct.std::basic_string<char>::_Rep"*
  %53 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i.i.i.i, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %53) #8
  %cmp.not.i.i.i.i.i = icmp eq i8* %arrayidx.i.i.i.i.i, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i.i.i.i, label %_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev.exit, label %if.then.i.i.i.i.i, !prof !47

if.then.i.i.i.i.i:                                ; preds = %_ZNSsD2Ev.exit45
  %_M_refcount.i.i.i.i.i = getelementptr inbounds i8, i8* %51, i64 -8
  %54 = bitcast i8* %_M_refcount.i.i.i.i.i to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i.i.i.i, label %if.else.i.i.i.i.i.i

if.then.i.i.i.i.i.i:                              ; preds = %if.then.i.i.i.i.i
  %55 = atomicrmw volatile add i32* %54, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i.i.i.i

if.else.i.i.i.i.i.i:                              ; preds = %if.then.i.i.i.i.i
  %56 = load i32, i32* %54, align 8, !tbaa !16
  %add.i.i.i.i.i.i.i = add nsw i32 %56, -1
  store i32 %add.i.i.i.i.i.i.i, i32* %54, align 8, !tbaa !16
  br label %invoke.cont.i.i.i.i.i

invoke.cont.i.i.i.i.i:                            ; preds = %if.else.i.i.i.i.i.i, %if.then.i.i.i.i.i.i
  %retval.0.i.i.i.i.i.i = phi i32 [ %55, %if.then.i.i.i.i.i.i ], [ %56, %if.else.i.i.i.i.i.i ]
  %cmp3.i.i.i.i.i = icmp slt i32 %retval.0.i.i.i.i.i.i, 1
  br i1 %cmp3.i.i.i.i.i, label %if.then4.i.i.i.i.i, label %_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev.exit

if.then4.i.i.i.i.i:                               ; preds = %invoke.cont.i.i.i.i.i
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %52, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i.i.i.i) #8
  br label %_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev.exit

_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev.exit: ; preds = %_ZNSsD2Ev.exit45, %invoke.cont.i.i.i.i.i, %if.then4.i.i.i.i.i
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %53) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVSt15basic_streambufIcSt11char_traitsIcEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %50, align 8, !tbaa !32
  %_M_buf_locale.i.i.i.i = getelementptr inbounds %"class.std::basic_ostringstream", %"class.std::basic_ostringstream"* %osstr, i64 0, i32 1, i32 0, i32 7
  call void @_ZNSt6localeD1Ev(%"class.std::locale"* noundef nonnull align 8 dereferenceable(8) %_M_buf_locale.i.i.i.i) #8
  %57 = getelementptr inbounds %"class.std::basic_ostringstream", %"class.std::basic_ostringstream"* %osstr, i64 0, i32 2, i32 0
  call void @_ZNSt8ios_baseD2Ev(%"class.std::ios_base"* noundef nonnull align 8 dereferenceable(216) %57) #8
  call void @llvm.lifetime.end.p0i8(i64 352, i8* nonnull %1) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8
  ret void

lpad:                                             ; preds = %invoke.cont40, %invoke.cont31, %invoke.cont22, %invoke.cont13, %invoke.cont3, %.noexc11, %if.end.i.i.i.i, %if.then.i.i.i.i, %invoke.cont42, %invoke.cont33, %invoke.cont24, %invoke.cont15, %invoke.cont5, %invoke.cont
  %58 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup63

lpad51:                                           ; preds = %invoke.cont49
  %59 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup62

lpad54:                                           ; preds = %invoke.cont52
  %60 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup

lpad56:                                           ; preds = %invoke.cont55
  %61 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp) #8
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad56, %lpad54
  %.pn = phi { i8*, i32 } [ %61, %lpad56 ], [ %60, %lpad54 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %31) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #8
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %timestring) #8
  br label %ehcleanup62

ehcleanup62:                                      ; preds = %ehcleanup, %lpad51
  %.pn.pn = phi { i8*, i32 } [ %.pn, %ehcleanup ], [ %59, %lpad51 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #8
  br label %ehcleanup63

ehcleanup63:                                      ; preds = %ehcleanup62, %lpad
  %.pn.pn.pn = phi { i8*, i32 } [ %.pn.pn, %ehcleanup62 ], [ %58, %lpad ]
  call void @_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev(%"class.std::basic_ostringstream"* noundef nonnull align 8 dereferenceable(88) %osstr) #8
  call void @llvm.lifetime.end.p0i8(i64 352, i8* nonnull %1) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8
  resume { i8*, i32 } %.pn.pn.pn
}

; Function Attrs: uwtable
define linkonce_odr dso_local noundef signext i32 @_ZN6miniFE6driverIdiiEEiRK3BoxRS1_RNS_10ParametersER8YAML_Doc(%struct.Box* noundef nonnull align 4 dereferenceable(24) %global_box, %struct.Box* noundef nonnull align 4 dereferenceable(24) %my_box, %"struct.miniFE::Parameters"* noundef nonnull align 8 dereferenceable(68) %params, %class.YAML_Doc* noundef nonnull align 8 dereferenceable(72) %ydoc) local_unnamed_addr #11 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %ref.tmp.i1054 = alloca %"class.std::allocator", align 1
  %ref.tmp.i1040 = alloca %"class.std::allocator", align 1
  %ref.tmp.i1026 = alloca %"class.std::allocator", align 1
  %ref.tmp.i1012 = alloca %"class.std::allocator", align 1
  %ref.tmp.i998 = alloca %"class.std::allocator", align 1
  %ref.tmp.i984 = alloca %"class.std::allocator", align 1
  %ref.tmp.i970 = alloca %"class.std::allocator", align 1
  %ref.tmp.i956 = alloca %"class.std::allocator", align 1
  %ref.tmp.i942 = alloca %"class.std::allocator", align 1
  %ref.tmp.i928 = alloca %"class.std::allocator", align 1
  %ref.tmp.i914 = alloca %"class.std::allocator", align 1
  %ref.tmp.i900 = alloca %"class.std::allocator", align 1
  %ref.tmp.i886 = alloca %"class.std::allocator", align 1
  %ref.tmp.i872 = alloca %"class.std::allocator", align 1
  %ref.tmp.i858 = alloca %"class.std::allocator", align 1
  %ref.tmp.i844 = alloca %"class.std::allocator", align 1
  %ref.tmp.i830 = alloca %"class.std::allocator", align 1
  %ref.tmp.i816 = alloca %"class.std::allocator", align 1
  %ref.tmp.i802 = alloca %"class.std::allocator", align 1
  %ref.tmp.i788 = alloca %"class.std::allocator", align 1
  %ref.tmp.i774 = alloca %"class.std::allocator", align 1
  %ref.tmp.i760 = alloca %"class.std::allocator", align 1
  %ref.tmp.i746 = alloca %"class.std::allocator", align 1
  %ref.tmp.i732 = alloca %"class.std::allocator", align 1
  %ref.tmp.i718 = alloca %"class.std::allocator", align 1
  %ref.tmp.i704 = alloca %"class.std::allocator", align 1
  %ref.tmp.i690 = alloca %"class.std::allocator", align 1
  %ref.tmp.i676 = alloca %"class.std::allocator", align 1
  %ref.tmp.i662 = alloca %"class.std::allocator", align 1
  %ref.tmp.i648 = alloca %"class.std::allocator", align 1
  %ref.tmp.i634 = alloca %"class.std::allocator", align 1
  %ref.tmp.i620 = alloca %"class.std::allocator", align 1
  %ref.tmp.i606 = alloca %"class.std::allocator", align 1
  %ref.tmp.i592 = alloca %"class.std::allocator", align 1
  %ref.tmp.i578 = alloca %"class.std::allocator", align 1
  %ref.tmp.i564 = alloca %"class.std::allocator", align 1
  %ref.tmp.i550 = alloca %"class.std::allocator", align 1
  %ref.tmp.i536 = alloca %"class.std::allocator", align 1
  %ref.tmp.i522 = alloca %"class.std::allocator", align 1
  %ref.tmp.i508 = alloca %"class.std::allocator", align 1
  %ref.tmp.i418 = alloca %"class.std::allocator", align 1
  %ref.tmp.i404 = alloca %"class.std::allocator", align 1
  %ref.tmp.i390 = alloca %"class.std::allocator", align 1
  %ref.tmp.i376 = alloca %"class.std::allocator", align 1
  %ref.tmp.i362 = alloca %"class.std::allocator", align 1
  %ref.tmp.i348 = alloca %"class.std::allocator", align 1
  %ref.tmp.i334 = alloca %"class.std::allocator", align 1
  %ref.tmp.i = alloca %"class.std::allocator", align 1
  %local_elem_box.i = alloca %struct.Box, align 4
  %largest_imbalance = alloca float, align 4
  %std_dev = alloca float, align 4
  %mesh = alloca %"class.miniFE::simple_mesh_description", align 8
  %A = alloca %"struct.miniFE::CSRMatrix", align 8
  %b = alloca %"struct.miniFE::Vector", align 8
  %x = alloca %"struct.miniFE::Vector", align 8
  %ref.tmp = alloca %"class.std::basic_string", align 8
  %ref.tmp109 = alloca %"class.std::allocator", align 1
  %ref.tmp112 = alloca %"class.std::basic_string", align 8
  %ref.tmp113 = alloca %"class.std::allocator", align 1
  %ref.tmp125 = alloca %"class.std::basic_string", align 8
  %ref.tmp126 = alloca %"class.std::allocator", align 1
  %ref.tmp132 = alloca %"class.std::basic_string", align 8
  %ref.tmp133 = alloca %"class.std::allocator", align 1
  %ref.tmp147 = alloca %"class.std::basic_string", align 8
  %ref.tmp148 = alloca %"class.std::allocator", align 1
  %ref.tmp151 = alloca %"class.std::basic_string", align 8
  %ref.tmp152 = alloca %"class.std::allocator", align 1
  %ref.tmp166 = alloca %"class.std::basic_string", align 8
  %ref.tmp167 = alloca %"class.std::allocator", align 1
  %ref.tmp173 = alloca %"class.std::basic_string", align 8
  %ref.tmp174 = alloca %"class.std::allocator", align 1
  %num_iters = alloca i32, align 4
  %rnorm = alloca double, align 8
  %tol = alloca double, align 8
  %cg_times = alloca [5 x double], align 8
  %title = alloca %"class.std::basic_string", align 8
  %ref.tmp354 = alloca %"class.std::allocator", align 1
  %ref.tmp361 = alloca %"class.std::basic_string", align 8
  %ref.tmp362 = alloca %"class.std::allocator", align 1
  %ref.tmp368 = alloca %"class.std::basic_string", align 8
  %ref.tmp369 = alloca %"class.std::allocator", align 1
  %ref.tmp372 = alloca %"class.std::basic_string", align 8
  %ref.tmp376 = alloca %"class.std::allocator", align 1
  %ref.tmp394 = alloca %"class.std::basic_string", align 8
  %ref.tmp395 = alloca %"class.std::allocator", align 1
  %ref.tmp401 = alloca %"class.std::basic_string", align 8
  %ref.tmp402 = alloca %"class.std::allocator", align 1
  %ref.tmp405 = alloca %"class.std::basic_string", align 8
  %ref.tmp409 = alloca %"class.std::allocator", align 1
  %ref.tmp427 = alloca %"class.std::basic_string", align 8
  %ref.tmp428 = alloca %"class.std::allocator", align 1
  %ref.tmp434 = alloca %"class.std::basic_string", align 8
  %ref.tmp435 = alloca %"class.std::allocator", align 1
  %ref.tmp438 = alloca %"class.std::basic_string", align 8
  %ref.tmp442 = alloca %"class.std::allocator", align 1
  %ref.tmp460 = alloca %"class.std::basic_string", align 8
  %ref.tmp461 = alloca %"class.std::allocator", align 1
  %ref.tmp474 = alloca %"class.std::basic_string", align 8
  %ref.tmp475 = alloca %"class.std::allocator", align 1
  %ref.tmp487 = alloca %"class.std::basic_string", align 8
  %ref.tmp488 = alloca %"class.std::allocator", align 1
  %ref.tmp547 = alloca %"class.std::basic_string", align 8
  %ref.tmp548 = alloca %"class.std::allocator", align 1
  %ref.tmp561 = alloca %"class.std::basic_string", align 8
  %ref.tmp562 = alloca %"class.std::allocator", align 1
  %ref.tmp576 = alloca %"class.std::basic_string", align 8
  %ref.tmp577 = alloca %"class.std::allocator", align 1
  %ref.tmp590 = alloca %"class.std::basic_string", align 8
  %ref.tmp591 = alloca %"class.std::allocator", align 1
  %ref.tmp594 = alloca %"class.std::basic_string", align 8
  %ref.tmp595 = alloca %"class.std::allocator", align 1
  %ref.tmp612 = alloca %"class.std::basic_string", align 8
  %ref.tmp613 = alloca %"class.std::allocator", align 1
  %ref.tmp626 = alloca %"class.std::basic_string", align 8
  %ref.tmp627 = alloca %"class.std::allocator", align 1
  %ref.tmp641 = alloca %"class.std::basic_string", align 8
  %ref.tmp642 = alloca %"class.std::allocator", align 1
  %ref.tmp655 = alloca %"class.std::basic_string", align 8
  %ref.tmp656 = alloca %"class.std::allocator", align 1
  %ref.tmp659 = alloca %"class.std::basic_string", align 8
  %ref.tmp660 = alloca %"class.std::allocator", align 1
  %ref.tmp677 = alloca %"class.std::basic_string", align 8
  %ref.tmp678 = alloca %"class.std::allocator", align 1
  %ref.tmp691 = alloca %"class.std::basic_string", align 8
  %ref.tmp692 = alloca %"class.std::allocator", align 1
  %ref.tmp706 = alloca %"class.std::basic_string", align 8
  %ref.tmp707 = alloca %"class.std::allocator", align 1
  %ref.tmp720 = alloca %"class.std::basic_string", align 8
  %ref.tmp721 = alloca %"class.std::allocator", align 1
  %ref.tmp724 = alloca %"class.std::basic_string", align 8
  %ref.tmp725 = alloca %"class.std::allocator", align 1
  %ref.tmp742 = alloca %"class.std::basic_string", align 8
  %ref.tmp743 = alloca %"class.std::allocator", align 1
  %ref.tmp746 = alloca %"class.std::basic_string", align 8
  %ref.tmp747 = alloca %"class.std::allocator", align 1
  %ref.tmp763 = alloca %"class.std::basic_string", align 8
  %ref.tmp764 = alloca %"class.std::allocator", align 1
  %ref.tmp770 = alloca %"class.std::basic_string", align 8
  %ref.tmp771 = alloca %"class.std::allocator", align 1
  %ref.tmp788 = alloca %"class.std::basic_string", align 8
  %ref.tmp789 = alloca %"class.std::allocator", align 1
  %ref.tmp795 = alloca %"class.std::basic_string", align 8
  %ref.tmp796 = alloca %"class.std::allocator", align 1
  %ref.tmp814 = alloca %"class.std::basic_string", align 8
  %ref.tmp815 = alloca %"class.std::allocator", align 1
  %ref.tmp821 = alloca %"class.std::basic_string", align 8
  %ref.tmp822 = alloca %"class.std::allocator", align 1
  %ref.tmp839 = alloca %"class.std::basic_string", align 8
  %ref.tmp840 = alloca %"class.std::allocator", align 1
  %ref.tmp846 = alloca %"class.std::basic_string", align 8
  %ref.tmp847 = alloca %"class.std::allocator", align 1
  %ref.tmp850 = alloca %"class.std::basic_string", align 8
  %ref.tmp851 = alloca %"class.std::allocator", align 1
  %ref.tmp872 = alloca %"class.std::basic_string", align 8
  %ref.tmp873 = alloca %"class.std::allocator", align 1
  %arrayidx = getelementptr inbounds %struct.Box, %struct.Box* %global_box, i64 0, i32 0, i64 1
  %0 = load i32, i32* %arrayidx, align 4, !tbaa !16
  %arrayidx2 = getelementptr inbounds %struct.Box, %struct.Box* %global_box, i64 0, i32 0, i64 3
  %1 = load i32, i32* %arrayidx2, align 4, !tbaa !16
  %arrayidx4 = getelementptr inbounds %struct.Box, %struct.Box* %global_box, i64 0, i32 0, i64 5
  %2 = load i32, i32* %arrayidx4, align 4, !tbaa !16
  %3 = bitcast float* %largest_imbalance to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #8
  store float 0.000000e+00, float* %largest_imbalance, align 4, !tbaa !66
  %4 = bitcast float* %std_dev to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #8
  store float 0.000000e+00, float* %std_dev, align 4, !tbaa !66
  call void @_ZN6miniFE17compute_imbalanceIiEEvRK3BoxS3_RfS4_R8YAML_Docb(%struct.Box* noundef nonnull align 4 dereferenceable(24) %global_box, %struct.Box* noundef nonnull align 4 dereferenceable(24) %my_box, float* noundef nonnull align 4 dereferenceable(4) %largest_imbalance, float* noundef nonnull align 4 dereferenceable(4) %std_dev, %class.YAML_Doc* noundef nonnull align 8 dereferenceable(72) %ydoc, i1 noundef zeroext true)
  %vtable = load i8*, i8** bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8**), align 8, !tbaa !32
  %vbase.offset.ptr = getelementptr i8, i8* %vtable, i64 -24
  %5 = bitcast i8* %vbase.offset.ptr to i64*
  %vbase.offset = load i64, i64* %5, align 8
  %add.ptr = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8*), i64 %vbase.offset
  %_M_width.i = getelementptr inbounds i8, i8* %add.ptr, i64 16
  %6 = bitcast i8* %_M_width.i to i64*
  store i64 30, i64* %6, align 8, !tbaa !55
  %call1.i = call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i8* noundef nonnull getelementptr inbounds ([25 x i8], [25 x i8]* @.str.14, i64 0, i64 0), i64 noundef 24)
  %call10 = call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout)
  %call12 = call contract noundef double @_ZN6miniFE7mytimerEv()
  %call13 = call contract noundef double @_ZN6miniFE7mytimerEv()
  %7 = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %mesh, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 192, i8* nonnull %7) #8
  call void @_ZN6miniFE23simple_mesh_descriptionIiEC2ERK3BoxS4_(%"class.miniFE::simple_mesh_description"* noundef nonnull align 8 dereferenceable(192) %mesh, %struct.Box* noundef nonnull align 4 dereferenceable(24) %global_box, %struct.Box* noundef nonnull align 4 dereferenceable(24) %my_box)
  %call14 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %call17 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %invoke.cont16 unwind label %lpad15

invoke.cont16:                                    ; preds = %invoke.cont
  %sub = fsub contract double %call14, %call13
  %sub18 = fsub contract double %call17, %call12
  %call.i273 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIdEERSoT_(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, double noundef %sub)
          to label %invoke.cont21 unwind label %lpad15

invoke.cont21:                                    ; preds = %invoke.cont16
  %call1.i275276 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call.i273, i8* noundef nonnull getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0), i64 noundef 15)
          to label %invoke.cont23 unwind label %lpad15

invoke.cont23:                                    ; preds = %invoke.cont21
  %call.i277 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIdEERSoT_(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call.i273, double noundef %sub18)
          to label %invoke.cont25 unwind label %lpad15

invoke.cont25:                                    ; preds = %invoke.cont23
  %8 = bitcast %"class.std::basic_ostream"* %call.i277 to i8**
  %vtable.i = load i8*, i8** %8, align 8, !tbaa !32
  %vbase.offset.ptr.i = getelementptr i8, i8* %vtable.i, i64 -24
  %9 = bitcast i8* %vbase.offset.ptr.i to i64*
  %vbase.offset.i = load i64, i64* %9, align 8
  %10 = bitcast %"class.std::basic_ostream"* %call.i277 to i8*
  %add.ptr.i = getelementptr inbounds i8, i8* %10, i64 %vbase.offset.i
  %_M_ctype.i.i = getelementptr inbounds i8, i8* %add.ptr.i, i64 240
  %11 = bitcast i8* %_M_ctype.i.i to %"class.std::ctype"**
  %12 = load %"class.std::ctype"*, %"class.std::ctype"** %11, align 8, !tbaa !34
  %tobool.not.i.i.i = icmp eq %"class.std::ctype"* %12, null
  br i1 %tobool.not.i.i.i, label %if.then.i.i.i1085, label %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i

if.then.i.i.i1085:                                ; preds = %invoke.cont25
  invoke void @_ZSt16__throw_bad_castv() #29
          to label %.noexc1090 unwind label %lpad15

.noexc1090:                                       ; preds = %if.then.i.i.i1085
  unreachable

_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i: ; preds = %invoke.cont25
  %_M_widen_ok.i.i.i = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %12, i64 0, i32 8
  %13 = load i8, i8* %_M_widen_ok.i.i.i, align 8, !tbaa !37
  %tobool.not.i1.i.i = icmp eq i8 %13, 0
  br i1 %tobool.not.i1.i.i, label %if.end.i.i.i, label %if.then.i2.i.i

if.then.i2.i.i:                                   ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
  %arrayidx.i.i.i1086 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %12, i64 0, i32 9, i64 10
  %14 = load i8, i8* %arrayidx.i.i.i1086, align 1, !tbaa !39
  br label %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i

if.end.i.i.i:                                     ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %12)
          to label %.noexc1091 unwind label %lpad15

.noexc1091:                                       ; preds = %if.end.i.i.i
  %15 = bitcast %"class.std::ctype"* %12 to i8 (%"class.std::ctype"*, i8)***
  %vtable.i.i.i = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %15, align 8, !tbaa !32
  %vfn.i.i.i = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vtable.i.i.i, i64 6
  %16 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vfn.i.i.i, align 8
  %call.i.i.i1092 = invoke noundef zeroext i8 %16(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %12, i8 noundef zeroext 10)
          to label %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i unwind label %lpad15

_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i: ; preds = %.noexc1091, %if.then.i2.i.i
  %retval.0.i.i.i1087 = phi i8 [ %14, %if.then.i2.i.i ], [ %call.i.i.i1092, %.noexc1091 ]
  %call1.i10881093 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call.i277, i8 noundef zeroext %retval.0.i.i.i1087)
          to label %call1.i1088.noexc unwind label %lpad15

call1.i1088.noexc:                                ; preds = %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i
  %call.i.i10891094 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call1.i10881093)
          to label %if.end29 unwind label %lpad15

lpad:                                             ; preds = %entry
  %17 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup919

lpad15:                                           ; preds = %call1.i1088.noexc, %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i, %.noexc1091, %if.end.i.i.i, %if.then.i.i.i1085, %invoke.cont23, %invoke.cont21, %invoke.cont16, %invoke.cont
  %18 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup919

if.end29:                                         ; preds = %call1.i1088.noexc
  %19 = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %19) #8
  store i8 0, i8* %19, align 8, !tbaa !67
  %rows.i = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 2
  %20 = bitcast %"class.std::vector.15"* %rows.i to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(124) %20, i8 0, i64 124, i1 false) #8
  %vtable34 = load i8*, i8** bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8**), align 8, !tbaa !32
  %vbase.offset.ptr35 = getelementptr i8, i8* %vtable34, i64 -24
  %21 = bitcast i8* %vbase.offset.ptr35 to i64*
  %vbase.offset36 = load i64, i64* %21, align 8
  %add.ptr37 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8*), i64 %vbase.offset36
  %_M_width.i280 = getelementptr inbounds i8, i8* %add.ptr37, i64 16
  %22 = bitcast i8* %_M_width.i280 to i64*
  store i64 30, i64* %22, align 8, !tbaa !55
  %call1.i282283 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i8* noundef nonnull getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16, i64 0, i64 0), i64 noundef 30)
          to label %invoke.cont41 unwind label %lpad38

invoke.cont41:                                    ; preds = %if.end29
  %call44 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout)
          to label %if.end45 unwind label %lpad38

lpad38:                                           ; preds = %if.end29, %invoke.cont41
  %23 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup915

if.end45:                                         ; preds = %invoke.cont41
  %call48 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %invoke.cont47 unwind label %lpad46

invoke.cont47:                                    ; preds = %if.end45
  %call50 = invoke noundef signext i32 @_ZN6miniFE25generate_matrix_structureINS_9CSRMatrixIdiiEEEEiRKNS_23simple_mesh_descriptionINT_17GlobalOrdinalTypeEEERS4_(%"class.miniFE::simple_mesh_description"* noundef nonnull align 8 dereferenceable(192) %mesh, %"struct.miniFE::CSRMatrix"* noundef nonnull align 8 dereferenceable(132) %A)
          to label %invoke.cont49 unwind label %lpad46

invoke.cont49:                                    ; preds = %invoke.cont47
  %call52 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %invoke.cont51 unwind label %lpad46

invoke.cont51:                                    ; preds = %invoke.cont49
  %sub53 = fsub contract double %call52, %call48
  %add = fadd contract double %sub18, %sub53
  %call.i285 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIdEERSoT_(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, double noundef %sub53)
          to label %invoke.cont56 unwind label %lpad46

invoke.cont56:                                    ; preds = %invoke.cont51
  %call1.i288289 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call.i285, i8* noundef nonnull getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0), i64 noundef 15)
          to label %invoke.cont58 unwind label %lpad46

invoke.cont58:                                    ; preds = %invoke.cont56
  %call.i291 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIdEERSoT_(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call.i285, double noundef %add)
          to label %invoke.cont60 unwind label %lpad46

invoke.cont60:                                    ; preds = %invoke.cont58
  %24 = bitcast %"class.std::basic_ostream"* %call.i291 to i8**
  %vtable.i1095 = load i8*, i8** %24, align 8, !tbaa !32
  %vbase.offset.ptr.i1096 = getelementptr i8, i8* %vtable.i1095, i64 -24
  %25 = bitcast i8* %vbase.offset.ptr.i1096 to i64*
  %vbase.offset.i1097 = load i64, i64* %25, align 8
  %26 = bitcast %"class.std::basic_ostream"* %call.i291 to i8*
  %add.ptr.i1098 = getelementptr inbounds i8, i8* %26, i64 %vbase.offset.i1097
  %_M_ctype.i.i1099 = getelementptr inbounds i8, i8* %add.ptr.i1098, i64 240
  %27 = bitcast i8* %_M_ctype.i.i1099 to %"class.std::ctype"**
  %28 = load %"class.std::ctype"*, %"class.std::ctype"** %27, align 8, !tbaa !34
  %tobool.not.i.i.i1100 = icmp eq %"class.std::ctype"* %28, null
  br i1 %tobool.not.i.i.i1100, label %if.then.i.i.i1101, label %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i1104

if.then.i.i.i1101:                                ; preds = %invoke.cont60
  invoke void @_ZSt16__throw_bad_castv() #29
          to label %.noexc1114 unwind label %lpad46

.noexc1114:                                       ; preds = %if.then.i.i.i1101
  unreachable

_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i1104: ; preds = %invoke.cont60
  %_M_widen_ok.i.i.i1102 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %28, i64 0, i32 8
  %29 = load i8, i8* %_M_widen_ok.i.i.i1102, align 8, !tbaa !37
  %tobool.not.i1.i.i1103 = icmp eq i8 %29, 0
  br i1 %tobool.not.i1.i.i1103, label %if.end.i.i.i1109, label %if.then.i2.i.i1106

if.then.i2.i.i1106:                               ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i1104
  %arrayidx.i.i.i1105 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %28, i64 0, i32 9, i64 10
  %30 = load i8, i8* %arrayidx.i.i.i1105, align 1, !tbaa !39
  br label %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i1113

if.end.i.i.i1109:                                 ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i1104
  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %28)
          to label %.noexc1115 unwind label %lpad46

.noexc1115:                                       ; preds = %if.end.i.i.i1109
  %31 = bitcast %"class.std::ctype"* %28 to i8 (%"class.std::ctype"*, i8)***
  %vtable.i.i.i1107 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %31, align 8, !tbaa !32
  %vfn.i.i.i1108 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vtable.i.i.i1107, i64 6
  %32 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vfn.i.i.i1108, align 8
  %call.i.i.i1117 = invoke noundef zeroext i8 %32(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %28, i8 noundef zeroext 10)
          to label %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i1113 unwind label %lpad46

_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i1113: ; preds = %.noexc1115, %if.then.i2.i.i1106
  %retval.0.i.i.i1110 = phi i8 [ %30, %if.then.i2.i.i1106 ], [ %call.i.i.i1117, %.noexc1115 ]
  %call1.i11111118 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call.i291, i8 noundef zeroext %retval.0.i.i.i1110)
          to label %call1.i1111.noexc unwind label %lpad46

call1.i1111.noexc:                                ; preds = %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i1113
  %call.i.i11121119 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call1.i11111118)
          to label %if.end64 unwind label %lpad46

lpad46:                                           ; preds = %call1.i1111.noexc, %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i1113, %.noexc1115, %if.end.i.i.i1109, %if.then.i.i.i1101, %invoke.cont58, %invoke.cont56, %invoke.cont51, %invoke.cont49, %invoke.cont47, %if.end45
  %33 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup915

if.end64:                                         ; preds = %call1.i1111.noexc
  %_M_finish.i = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 2, i32 0, i32 0, i32 1
  %34 = load i32*, i32** %_M_finish.i, align 8, !tbaa !71
  %_M_start.i = getelementptr inbounds %"class.std::vector.15", %"class.std::vector.15"* %rows.i, i64 0, i32 0, i32 0, i32 0
  %35 = load i32*, i32** %_M_start.i, align 8, !tbaa !74
  %sub.ptr.lhs.cast.i = ptrtoint i32* %34 to i64
  %sub.ptr.rhs.cast.i = ptrtoint i32* %35 to i64
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %36 = lshr exact i64 %sub.ptr.sub.i, 2
  %conv = trunc i64 %36 to i32
  %cmp66 = icmp sgt i32 %conv, 0
  br i1 %cmp66, label %for.body.i.i.preheader.i.i.i.i.i.i, label %cond.end

cond.end:                                         ; preds = %if.end64
  %37 = bitcast %"struct.miniFE::Vector"* %b to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %37) #8
  %startIndex.i = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %b, i64 0, i32 0
  store i32 -1, i32* %startIndex.i, align 8, !tbaa !75
  %local_size.i = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %b, i64 0, i32 1
  store i32 %conv, i32* %local_size.i, align 4, !tbaa !77
  %coefs.i = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %b, i64 0, i32 2
  %38 = bitcast %"class.std::vector.20"* %coefs.i to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %38, i8 0, i64 24, i1 false) #8
  %cmp.not.i.i.i.i.i = icmp eq i32 %conv, 0
  br i1 %cmp.not.i.i.i.i.i, label %_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_.exit.thread.i.i, label %if.then.i.i.i.i.i.i.i

_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_.exit.thread.i.i: ; preds = %cond.end
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %38, i8 0, i64 24, i1 false)
  br label %invoke.cont70

if.then.i.i.i.i.i.i.i:                            ; preds = %cond.end
  invoke void @_ZSt17__throw_bad_allocv() #29
          to label %.noexc unwind label %lpad69

.noexc:                                           ; preds = %if.then.i.i.i.i.i.i.i
  unreachable

for.body.i.i.preheader.i.i.i.i.i.i:               ; preds = %if.end64
  %39 = load i32, i32* %35, align 4, !tbaa !16
  %40 = bitcast %"struct.miniFE::Vector"* %b to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %40) #8
  %startIndex.i1304 = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %b, i64 0, i32 0
  store i32 %39, i32* %startIndex.i1304, align 8, !tbaa !75
  %local_size.i1305 = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %b, i64 0, i32 1
  store i32 %conv, i32* %local_size.i1305, align 4, !tbaa !77
  %coefs.i1306 = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %b, i64 0, i32 2
  %conv.i13071321 = and i64 %36, 4294967295
  %41 = bitcast %"class.std::vector.20"* %coefs.i1306 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %41, i8 0, i64 24, i1 false) #8
  %mul.i.i.i.i.i.i.i = shl nuw nsw i64 %conv.i13071321, 3
  %call2.i.i.i.i1.i.i1.i296 = invoke noalias noundef nonnull i8* @_Znwm(i64 noundef %mul.i.i.i.i.i.i.i) #30
          to label %call2.i.i.i.i1.i.i1.i.noexc unwind label %lpad69

call2.i.i.i.i1.i.i1.i.noexc:                      ; preds = %for.body.i.i.preheader.i.i.i.i.i.i
  %42 = bitcast i8* %call2.i.i.i.i1.i.i1.i296 to double*
  %43 = bitcast %"class.std::vector.20"* %coefs.i1306 to i8**
  store i8* %call2.i.i.i.i1.i.i1.i296, i8** %43, align 8, !tbaa !78
  %add.ptr.i.i.i.i = getelementptr double, double* %42, i64 %conv.i13071321
  %_M_end_of_storage.i.i.i.i = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %b, i64 0, i32 2, i32 0, i32 0, i32 2
  store double* %add.ptr.i.i.i.i, double** %_M_end_of_storage.i.i.i.i, align 8, !tbaa !81
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %call2.i.i.i.i1.i.i1.i296, i8 0, i64 %mul.i.i.i.i.i.i.i, i1 false)
  br label %invoke.cont70

invoke.cont70:                                    ; preds = %call2.i.i.i.i1.i.i1.i.noexc, %_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_.exit.thread.i.i
  %conv.i1313 = phi i64 [ %conv.i13071321, %call2.i.i.i.i1.i.i1.i.noexc ], [ 0, %_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_.exit.thread.i.i ]
  %cond1309 = phi i32 [ %39, %call2.i.i.i.i1.i.i1.i.noexc ], [ -1, %_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_.exit.thread.i.i ]
  %__first.addr.0.lcssa.i.i.i.i.i.i.i.i = phi double* [ %add.ptr.i.i.i.i, %call2.i.i.i.i1.i.i1.i.noexc ], [ null, %_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_.exit.thread.i.i ]
  %.pre-phi = bitcast %"struct.miniFE::Vector"* %b to i8*
  %_M_finish.i.i.i = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %b, i64 0, i32 2, i32 0, i32 0, i32 1
  store double* %__first.addr.0.lcssa.i.i.i.i.i.i.i.i, double** %_M_finish.i.i.i, align 8, !tbaa !82
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull @3, i32 1, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, %"struct.miniFE::Vector"*)* @.omp_outlined..76 to void (i32*, i32*, ...)*), %"struct.miniFE::Vector"* nonnull %b)
  %44 = bitcast %"struct.miniFE::Vector"* %x to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %44) #8
  %startIndex.i297 = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %x, i64 0, i32 0
  store i32 %cond1309, i32* %startIndex.i297, align 8, !tbaa !75
  %local_size.i298 = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %x, i64 0, i32 1
  store i32 %conv, i32* %local_size.i298, align 4, !tbaa !77
  %coefs.i299 = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %x, i64 0, i32 2
  %45 = bitcast %"class.std::vector.20"* %coefs.i299 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %45, i8 0, i64 24, i1 false) #8
  br i1 %cmp66, label %for.body.i.i.preheader.i.i.i.i.i.i309, label %_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_.exit.thread.i.i302

_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_.exit.thread.i.i302: ; preds = %invoke.cont70
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %45, i8 0, i64 24, i1 false)
  br label %if.then74

for.body.i.i.preheader.i.i.i.i.i.i309:            ; preds = %invoke.cont70
  %mul.i.i.i.i.i.i.i306 = shl nuw nsw i64 %conv.i1313, 3
  %call2.i.i.i.i1.i.i1.i314 = invoke noalias noundef nonnull i8* @_Znwm(i64 noundef %mul.i.i.i.i.i.i.i306) #30
          to label %call2.i.i.i.i1.i.i1.i.noexc313 unwind label %lpad71

call2.i.i.i.i1.i.i1.i.noexc313:                   ; preds = %for.body.i.i.preheader.i.i.i.i.i.i309
  %46 = bitcast i8* %call2.i.i.i.i1.i.i1.i314 to double*
  %47 = bitcast %"class.std::vector.20"* %coefs.i299 to i8**
  store i8* %call2.i.i.i.i1.i.i1.i314, i8** %47, align 8, !tbaa !78
  %add.ptr.i.i.i.i307 = getelementptr double, double* %46, i64 %conv.i1313
  %_M_end_of_storage.i.i.i.i308 = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %x, i64 0, i32 2, i32 0, i32 0, i32 2
  store double* %add.ptr.i.i.i.i307, double** %_M_end_of_storage.i.i.i.i308, align 8, !tbaa !81
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %call2.i.i.i.i1.i.i1.i314, i8 0, i64 %mul.i.i.i.i.i.i.i306, i1 false)
  br label %if.then74

if.then74:                                        ; preds = %call2.i.i.i.i1.i.i1.i.noexc313, %_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_.exit.thread.i.i302
  %__first.addr.0.lcssa.i.i.i.i.i.i.i.i310 = phi double* [ %add.ptr.i.i.i.i307, %call2.i.i.i.i1.i.i1.i.noexc313 ], [ null, %_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_.exit.thread.i.i302 ]
  %_M_finish.i.i.i311 = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %x, i64 0, i32 2, i32 0, i32 0, i32 1
  store double* %__first.addr.0.lcssa.i.i.i.i.i.i.i.i310, double** %_M_finish.i.i.i311, align 8, !tbaa !82
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull @3, i32 1, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, %"struct.miniFE::Vector"*)* @.omp_outlined..76 to void (i32*, i32*, ...)*), %"struct.miniFE::Vector"* nonnull %x)
  %vtable75 = load i8*, i8** bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8**), align 8, !tbaa !32
  %vbase.offset.ptr76 = getelementptr i8, i8* %vtable75, i64 -24
  %48 = bitcast i8* %vbase.offset.ptr76 to i64*
  %vbase.offset77 = load i64, i64* %48, align 8
  %add.ptr78 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8*), i64 %vbase.offset77
  %_M_width.i316 = getelementptr inbounds i8, i8* %add.ptr78, i64 16
  %49 = bitcast i8* %_M_width.i316 to i64*
  store i64 30, i64* %49, align 8, !tbaa !55
  %call1.i318319 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i8* noundef nonnull getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17, i64 0, i64 0), i64 noundef 21)
          to label %invoke.cont82 unwind label %lpad79

invoke.cont82:                                    ; preds = %if.then74
  %call85 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout)
          to label %if.end86 unwind label %lpad79

lpad69:                                           ; preds = %for.body.i.i.preheader.i.i.i.i.i.i, %if.then.i.i.i.i.i.i.i
  %50 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup912

lpad71:                                           ; preds = %for.body.i.i.preheader.i.i.i.i.i.i309
  %51 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup910

lpad79:                                           ; preds = %if.then74, %invoke.cont82
  %52 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup908

if.end86:                                         ; preds = %invoke.cont82
  %call90 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %invoke.cont89 unwind label %lpad88

invoke.cont89:                                    ; preds = %if.end86
  %arrayidx.i321 = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %mesh, i64 0, i32 3, i32 0, i64 1
  %53 = load i32, i32* %arrayidx.i321, align 4, !tbaa !16
  %arrayidx3.i = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %mesh, i64 0, i32 3, i32 0, i64 3
  %54 = load i32, i32* %arrayidx3.i, align 4, !tbaa !16
  %arrayidx6.i = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %mesh, i64 0, i32 3, i32 0, i64 5
  %55 = load i32, i32* %arrayidx6.i, align 4, !tbaa !16
  %56 = bitcast %struct.Box* %local_elem_box.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #8
  %arrayidx.i.i.i = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %mesh, i64 0, i32 4, i32 0, i64 0
  %57 = load i32, i32* %arrayidx.i.i.i, align 8, !tbaa !16
  %arrayidx.i11.i.i = getelementptr inbounds %struct.Box, %struct.Box* %local_elem_box.i, i64 0, i32 0, i64 0
  store i32 %57, i32* %arrayidx.i11.i.i, align 4, !tbaa !16
  %arrayidx4.i.i = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %mesh, i64 0, i32 4, i32 0, i64 1
  %58 = load i32, i32* %arrayidx4.i.i, align 4, !tbaa !16
  %arrayidx6.i.i = getelementptr inbounds %struct.Box, %struct.Box* %local_elem_box.i, i64 0, i32 0, i64 1
  store i32 %58, i32* %arrayidx6.i.i, align 4, !tbaa !16
  %arrayidx.i.1.i.i = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %mesh, i64 0, i32 4, i32 0, i64 2
  %59 = load i32, i32* %arrayidx.i.1.i.i, align 8, !tbaa !16
  %arrayidx.i11.1.i.i = getelementptr inbounds %struct.Box, %struct.Box* %local_elem_box.i, i64 0, i32 0, i64 2
  store i32 %59, i32* %arrayidx.i11.1.i.i, align 4, !tbaa !16
  %arrayidx4.1.i.i = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %mesh, i64 0, i32 4, i32 0, i64 3
  %60 = load i32, i32* %arrayidx4.1.i.i, align 4, !tbaa !16
  %arrayidx6.1.i.i = getelementptr inbounds %struct.Box, %struct.Box* %local_elem_box.i, i64 0, i32 0, i64 3
  store i32 %60, i32* %arrayidx6.1.i.i, align 4, !tbaa !16
  %arrayidx.i.2.i.i = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %mesh, i64 0, i32 4, i32 0, i64 4
  %61 = load i32, i32* %arrayidx.i.2.i.i, align 8, !tbaa !16
  %arrayidx.i11.2.i.i = getelementptr inbounds %struct.Box, %struct.Box* %local_elem_box.i, i64 0, i32 0, i64 4
  store i32 %61, i32* %arrayidx.i11.2.i.i, align 4, !tbaa !16
  %arrayidx4.2.i.i = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %mesh, i64 0, i32 4, i32 0, i64 5
  %62 = load i32, i32* %arrayidx4.2.i.i, align 4, !tbaa !16
  %arrayidx6.2.i.i = getelementptr inbounds %struct.Box, %struct.Box* %local_elem_box.i, i64 0, i32 0, i64 5
  store i32 %62, i32* %arrayidx6.2.i.i, align 4, !tbaa !16
  %sub.i.i = sub nsw i32 %58, %57
  %sub7.i.i = sub nsw i32 %60, %59
  %sub12.i.i = sub nsw i32 %62, %61
  %mul.i.i = mul nsw i32 %sub7.i.i, %sub.i.i
  %mul13.i.i = mul nsw i32 %mul.i.i, %sub12.i.i
  %cmp.i = icmp slt i32 %mul13.i.i, 1
  br i1 %cmp.i, label %invoke.cont91, label %if.end.i

if.end.i:                                         ; preds = %invoke.cont89
  %cmp10.i = icmp sgt i32 %57, 0
  br i1 %cmp10.i, label %if.then11.i, label %if.end14.i

if.then11.i:                                      ; preds = %if.end.i
  %sub.i = add nsw i32 %57, -1
  store i32 %sub.i, i32* %arrayidx.i11.i.i, align 4, !tbaa !16
  br label %if.end14.i

if.end14.i:                                       ; preds = %if.then11.i, %if.end.i
  %cmp17.i = icmp sgt i32 %59, 0
  br i1 %cmp17.i, label %if.then18.i, label %if.end22.i

if.then18.i:                                      ; preds = %if.end14.i
  %sub21.i = add nsw i32 %59, -1
  store i32 %sub21.i, i32* %arrayidx.i11.1.i.i, align 4, !tbaa !16
  br label %if.end22.i

if.end22.i:                                       ; preds = %if.then18.i, %if.end14.i
  %cmp25.i = icmp sgt i32 %61, 0
  br i1 %cmp25.i, label %if.then26.i, label %if.end30.i

if.then26.i:                                      ; preds = %if.end22.i
  %sub29.i = add nsw i32 %61, -1
  store i32 %sub29.i, i32* %arrayidx.i11.2.i.i, align 4, !tbaa !16
  br label %if.end30.i

if.end30.i:                                       ; preds = %if.then26.i, %if.end22.i
  %cmp33.i = icmp slt i32 %58, %53
  br i1 %cmp33.i, label %if.then34.i, label %if.end37.i

if.then34.i:                                      ; preds = %if.end30.i
  %add.i = add nsw i32 %58, 1
  store i32 %add.i, i32* %arrayidx6.i.i, align 4, !tbaa !16
  br label %if.end37.i

if.end37.i:                                       ; preds = %if.then34.i, %if.end30.i
  %cmp40.i = icmp slt i32 %60, %54
  br i1 %cmp40.i, label %if.then41.i, label %if.end45.i

if.then41.i:                                      ; preds = %if.end37.i
  %add44.i = add nsw i32 %60, 1
  store i32 %add44.i, i32* %arrayidx6.1.i.i, align 4, !tbaa !16
  br label %if.end45.i

if.end45.i:                                       ; preds = %if.then41.i, %if.end37.i
  %cmp48.i = icmp slt i32 %62, %55
  br i1 %cmp48.i, label %if.then49.i, label %if.end53.i

if.then49.i:                                      ; preds = %if.end45.i
  %add52.i = add nsw i32 %62, 1
  store i32 %add52.i, i32* %arrayidx6.2.i.i, align 4, !tbaa !16
  br label %if.end53.i

if.end53.i:                                       ; preds = %if.then49.i, %if.end45.i
  invoke void @_ZN6miniFE20perform_element_loopIiNS_9CSRMatrixIdiiEENS_6VectorIdiiEEEEvRKNS_23simple_mesh_descriptionIT_EERK3BoxRT0_RT1_RNS_10ParametersE(%"class.miniFE::simple_mesh_description"* noundef nonnull align 8 dereferenceable(192) %mesh, %struct.Box* noundef nonnull align 4 dereferenceable(24) %local_elem_box.i, %"struct.miniFE::CSRMatrix"* noundef nonnull align 8 dereferenceable(132) %A, %"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %b, %"struct.miniFE::Parameters"* noundef nonnull align 8 dereferenceable(68) %params)
          to label %invoke.cont91 unwind label %lpad88

invoke.cont91:                                    ; preds = %invoke.cont89, %if.end53.i
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #8
  %call93 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %invoke.cont92 unwind label %lpad88

invoke.cont92:                                    ; preds = %invoke.cont91
  %sub94 = fsub contract double %call93, %call90
  %add95 = fadd contract double %add, %sub94
  %call.i323 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIdEERSoT_(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, double noundef %sub94)
          to label %invoke.cont98 unwind label %lpad88

invoke.cont98:                                    ; preds = %invoke.cont92
  %call1.i326328 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call.i323, i8* noundef nonnull getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0), i64 noundef 15)
          to label %invoke.cont100 unwind label %lpad88

invoke.cont100:                                   ; preds = %invoke.cont98
  %call.i330 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIdEERSoT_(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call.i323, double noundef %add95)
          to label %invoke.cont102 unwind label %lpad88

invoke.cont102:                                   ; preds = %invoke.cont100
  %63 = bitcast %"class.std::basic_ostream"* %call.i330 to i8**
  %vtable.i1121 = load i8*, i8** %63, align 8, !tbaa !32
  %vbase.offset.ptr.i1122 = getelementptr i8, i8* %vtable.i1121, i64 -24
  %64 = bitcast i8* %vbase.offset.ptr.i1122 to i64*
  %vbase.offset.i1123 = load i64, i64* %64, align 8
  %65 = bitcast %"class.std::basic_ostream"* %call.i330 to i8*
  %add.ptr.i1124 = getelementptr inbounds i8, i8* %65, i64 %vbase.offset.i1123
  %_M_ctype.i.i1125 = getelementptr inbounds i8, i8* %add.ptr.i1124, i64 240
  %66 = bitcast i8* %_M_ctype.i.i1125 to %"class.std::ctype"**
  %67 = load %"class.std::ctype"*, %"class.std::ctype"** %66, align 8, !tbaa !34
  %tobool.not.i.i.i1126 = icmp eq %"class.std::ctype"* %67, null
  br i1 %tobool.not.i.i.i1126, label %if.then.i.i.i1127, label %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i1130

if.then.i.i.i1127:                                ; preds = %invoke.cont102
  invoke void @_ZSt16__throw_bad_castv() #29
          to label %.noexc1140 unwind label %lpad88

.noexc1140:                                       ; preds = %if.then.i.i.i1127
  unreachable

_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i1130: ; preds = %invoke.cont102
  %_M_widen_ok.i.i.i1128 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %67, i64 0, i32 8
  %68 = load i8, i8* %_M_widen_ok.i.i.i1128, align 8, !tbaa !37
  %tobool.not.i1.i.i1129 = icmp eq i8 %68, 0
  br i1 %tobool.not.i1.i.i1129, label %if.end.i.i.i1135, label %if.then.i2.i.i1132

if.then.i2.i.i1132:                               ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i1130
  %arrayidx.i.i.i1131 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %67, i64 0, i32 9, i64 10
  %69 = load i8, i8* %arrayidx.i.i.i1131, align 1, !tbaa !39
  br label %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i1139

if.end.i.i.i1135:                                 ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i1130
  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %67)
          to label %.noexc1141 unwind label %lpad88

.noexc1141:                                       ; preds = %if.end.i.i.i1135
  %70 = bitcast %"class.std::ctype"* %67 to i8 (%"class.std::ctype"*, i8)***
  %vtable.i.i.i1133 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %70, align 8, !tbaa !32
  %vfn.i.i.i1134 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vtable.i.i.i1133, i64 6
  %71 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vfn.i.i.i1134, align 8
  %call.i.i.i1143 = invoke noundef zeroext i8 %71(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %67, i8 noundef zeroext 10)
          to label %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i1139 unwind label %lpad88

_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i1139: ; preds = %.noexc1141, %if.then.i2.i.i1132
  %retval.0.i.i.i1136 = phi i8 [ %69, %if.then.i2.i.i1132 ], [ %call.i.i.i1143, %.noexc1141 ]
  %call1.i11371144 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call.i330, i8 noundef zeroext %retval.0.i.i.i1136)
          to label %call1.i1137.noexc unwind label %lpad88

call1.i1137.noexc:                                ; preds = %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i1139
  %call.i.i11381145 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call1.i11371144)
          to label %if.then108 unwind label %lpad88

lpad88:                                           ; preds = %call1.i1137.noexc, %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i1139, %.noexc1141, %if.end.i.i.i1135, %if.then.i.i.i1127, %invoke.cont100, %invoke.cont98, %invoke.cont92, %if.end53.i, %invoke.cont91, %if.end86
  %72 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup908

if.then108:                                       ; preds = %call1.i1137.noexc
  %73 = getelementptr inbounds %class.YAML_Doc, %class.YAML_Doc* %ydoc, i64 0, i32 0
  %74 = bitcast %"class.std::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #8
  %75 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp109, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %75) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.18, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp109)
          to label %invoke.cont111 unwind label %lpad110

invoke.cont111:                                   ; preds = %if.then108
  %76 = bitcast %"class.std::basic_string"* %ref.tmp112 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #8
  %77 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp113, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %77) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp112, i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp113)
          to label %invoke.cont115 unwind label %lpad114

invoke.cont115:                                   ; preds = %invoke.cont111
  %call118 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsS1_(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %73, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp112)
          to label %invoke.cont117 unwind label %lpad116

invoke.cont117:                                   ; preds = %invoke.cont115
  %_M_p.i.i.i = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp112, i64 0, i32 0, i32 0
  %78 = load i8*, i8** %_M_p.i.i.i, align 8, !tbaa !43
  %arrayidx.i.i = getelementptr inbounds i8, i8* %78, i64 -24
  %79 = bitcast i8* %arrayidx.i.i to %"struct.std::basic_string<char>::_Rep"*
  %80 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %80) #8
  %cmp.not.i.i = icmp eq i8* %arrayidx.i.i, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i, label %_ZNSsD2Ev.exit, label %if.then.i.i, !prof !47

if.then.i.i:                                      ; preds = %invoke.cont117
  %_M_refcount.i.i = getelementptr inbounds i8, i8* %78, i64 -8
  %81 = bitcast i8* %_M_refcount.i.i to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i, label %if.else.i.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i
  %82 = atomicrmw volatile add i32* %81, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i

if.else.i.i.i:                                    ; preds = %if.then.i.i
  %83 = load i32, i32* %81, align 8, !tbaa !16
  %add.i.i.i.i = add nsw i32 %83, -1
  store i32 %add.i.i.i.i, i32* %81, align 8, !tbaa !16
  br label %invoke.cont.i.i

invoke.cont.i.i:                                  ; preds = %if.else.i.i.i, %if.then.i.i.i
  %retval.0.i.i.i = phi i32 [ %82, %if.then.i.i.i ], [ %83, %if.else.i.i.i ]
  %cmp3.i.i = icmp slt i32 %retval.0.i.i.i, 1
  br i1 %cmp3.i.i, label %if.then4.i.i, label %_ZNSsD2Ev.exit

if.then4.i.i:                                     ; preds = %invoke.cont.i.i
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %79, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i) #8
  br label %_ZNSsD2Ev.exit

_ZNSsD2Ev.exit:                                   ; preds = %invoke.cont117, %invoke.cont.i.i, %if.then4.i.i
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %80) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %77) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #8
  %_M_p.i.i.i335 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  %84 = load i8*, i8** %_M_p.i.i.i335, align 8, !tbaa !43
  %arrayidx.i.i336 = getelementptr inbounds i8, i8* %84, i64 -24
  %85 = bitcast i8* %arrayidx.i.i336 to %"struct.std::basic_string<char>::_Rep"*
  %86 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i334, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %86) #8
  %cmp.not.i.i337 = icmp eq i8* %arrayidx.i.i336, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i337, label %_ZNSsD2Ev.exit347, label %if.then.i.i339, !prof !47

if.then.i.i339:                                   ; preds = %_ZNSsD2Ev.exit
  %_M_refcount.i.i338 = getelementptr inbounds i8, i8* %84, i64 -8
  %87 = bitcast i8* %_M_refcount.i.i338 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i340, label %if.else.i.i.i342

if.then.i.i.i340:                                 ; preds = %if.then.i.i339
  %88 = atomicrmw volatile add i32* %87, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i345

if.else.i.i.i342:                                 ; preds = %if.then.i.i339
  %89 = load i32, i32* %87, align 8, !tbaa !16
  %add.i.i.i.i341 = add nsw i32 %89, -1
  store i32 %add.i.i.i.i341, i32* %87, align 8, !tbaa !16
  br label %invoke.cont.i.i345

invoke.cont.i.i345:                               ; preds = %if.else.i.i.i342, %if.then.i.i.i340
  %retval.0.i.i.i343 = phi i32 [ %88, %if.then.i.i.i340 ], [ %89, %if.else.i.i.i342 ]
  %cmp3.i.i344 = icmp slt i32 %retval.0.i.i.i343, 1
  br i1 %cmp3.i.i344, label %if.then4.i.i346, label %_ZNSsD2Ev.exit347

if.then4.i.i346:                                  ; preds = %invoke.cont.i.i345
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %85, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i334) #8
  br label %_ZNSsD2Ev.exit347

_ZNSsD2Ev.exit347:                                ; preds = %_ZNSsD2Ev.exit, %invoke.cont.i.i345, %if.then4.i.i346
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %86) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %75) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #8
  %90 = bitcast %"class.std::basic_string"* %ref.tmp125 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %90) #8
  %91 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp126, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %91) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp125, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.18, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp126)
          to label %invoke.cont128 unwind label %lpad127

invoke.cont128:                                   ; preds = %_ZNSsD2Ev.exit347
  %call131 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %73, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp125)
          to label %invoke.cont130 unwind label %lpad129

invoke.cont130:                                   ; preds = %invoke.cont128
  %92 = bitcast %"class.std::basic_string"* %ref.tmp132 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #8
  %93 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp133, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %93) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp132, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.19, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp133)
          to label %invoke.cont135 unwind label %lpad134

invoke.cont135:                                   ; preds = %invoke.cont130
  %call138 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsd(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call131, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp132, double noundef %sub53)
          to label %invoke.cont137 unwind label %lpad136

invoke.cont137:                                   ; preds = %invoke.cont135
  %_M_p.i.i.i349 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp132, i64 0, i32 0, i32 0
  %94 = load i8*, i8** %_M_p.i.i.i349, align 8, !tbaa !43
  %arrayidx.i.i350 = getelementptr inbounds i8, i8* %94, i64 -24
  %95 = bitcast i8* %arrayidx.i.i350 to %"struct.std::basic_string<char>::_Rep"*
  %96 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i348, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %96) #8
  %cmp.not.i.i351 = icmp eq i8* %arrayidx.i.i350, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i351, label %_ZNSsD2Ev.exit361, label %if.then.i.i353, !prof !47

if.then.i.i353:                                   ; preds = %invoke.cont137
  %_M_refcount.i.i352 = getelementptr inbounds i8, i8* %94, i64 -8
  %97 = bitcast i8* %_M_refcount.i.i352 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i354, label %if.else.i.i.i356

if.then.i.i.i354:                                 ; preds = %if.then.i.i353
  %98 = atomicrmw volatile add i32* %97, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i359

if.else.i.i.i356:                                 ; preds = %if.then.i.i353
  %99 = load i32, i32* %97, align 8, !tbaa !16
  %add.i.i.i.i355 = add nsw i32 %99, -1
  store i32 %add.i.i.i.i355, i32* %97, align 8, !tbaa !16
  br label %invoke.cont.i.i359

invoke.cont.i.i359:                               ; preds = %if.else.i.i.i356, %if.then.i.i.i354
  %retval.0.i.i.i357 = phi i32 [ %98, %if.then.i.i.i354 ], [ %99, %if.else.i.i.i356 ]
  %cmp3.i.i358 = icmp slt i32 %retval.0.i.i.i357, 1
  br i1 %cmp3.i.i358, label %if.then4.i.i360, label %_ZNSsD2Ev.exit361

if.then4.i.i360:                                  ; preds = %invoke.cont.i.i359
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %95, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i348) #8
  br label %_ZNSsD2Ev.exit361

_ZNSsD2Ev.exit361:                                ; preds = %invoke.cont137, %invoke.cont.i.i359, %if.then4.i.i360
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %96) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %93) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #8
  %_M_p.i.i.i363 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp125, i64 0, i32 0, i32 0
  %100 = load i8*, i8** %_M_p.i.i.i363, align 8, !tbaa !43
  %arrayidx.i.i364 = getelementptr inbounds i8, i8* %100, i64 -24
  %101 = bitcast i8* %arrayidx.i.i364 to %"struct.std::basic_string<char>::_Rep"*
  %102 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i362, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %102) #8
  %cmp.not.i.i365 = icmp eq i8* %arrayidx.i.i364, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i365, label %_ZNSsD2Ev.exit375, label %if.then.i.i367, !prof !47

if.then.i.i367:                                   ; preds = %_ZNSsD2Ev.exit361
  %_M_refcount.i.i366 = getelementptr inbounds i8, i8* %100, i64 -8
  %103 = bitcast i8* %_M_refcount.i.i366 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i368, label %if.else.i.i.i370

if.then.i.i.i368:                                 ; preds = %if.then.i.i367
  %104 = atomicrmw volatile add i32* %103, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i373

if.else.i.i.i370:                                 ; preds = %if.then.i.i367
  %105 = load i32, i32* %103, align 8, !tbaa !16
  %add.i.i.i.i369 = add nsw i32 %105, -1
  store i32 %add.i.i.i.i369, i32* %103, align 8, !tbaa !16
  br label %invoke.cont.i.i373

invoke.cont.i.i373:                               ; preds = %if.else.i.i.i370, %if.then.i.i.i368
  %retval.0.i.i.i371 = phi i32 [ %104, %if.then.i.i.i368 ], [ %105, %if.else.i.i.i370 ]
  %cmp3.i.i372 = icmp slt i32 %retval.0.i.i.i371, 1
  br i1 %cmp3.i.i372, label %if.then4.i.i374, label %_ZNSsD2Ev.exit375

if.then4.i.i374:                                  ; preds = %invoke.cont.i.i373
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %101, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i362) #8
  br label %_ZNSsD2Ev.exit375

_ZNSsD2Ev.exit375:                                ; preds = %_ZNSsD2Ev.exit361, %invoke.cont.i.i373, %if.then4.i.i374
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %102) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %91) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %90) #8
  %106 = bitcast %"class.std::basic_string"* %ref.tmp147 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #8
  %107 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp148, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %107) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp147, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.20, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp148)
          to label %invoke.cont150 unwind label %lpad149

invoke.cont150:                                   ; preds = %_ZNSsD2Ev.exit375
  %108 = bitcast %"class.std::basic_string"* %ref.tmp151 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %108) #8
  %109 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp152, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %109) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp151, i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp152)
          to label %invoke.cont154 unwind label %lpad153

invoke.cont154:                                   ; preds = %invoke.cont150
  %call157 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsS1_(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %73, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp147, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp151)
          to label %invoke.cont156 unwind label %lpad155

invoke.cont156:                                   ; preds = %invoke.cont154
  %_M_p.i.i.i377 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp151, i64 0, i32 0, i32 0
  %110 = load i8*, i8** %_M_p.i.i.i377, align 8, !tbaa !43
  %arrayidx.i.i378 = getelementptr inbounds i8, i8* %110, i64 -24
  %111 = bitcast i8* %arrayidx.i.i378 to %"struct.std::basic_string<char>::_Rep"*
  %112 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i376, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %112) #8
  %cmp.not.i.i379 = icmp eq i8* %arrayidx.i.i378, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i379, label %_ZNSsD2Ev.exit389, label %if.then.i.i381, !prof !47

if.then.i.i381:                                   ; preds = %invoke.cont156
  %_M_refcount.i.i380 = getelementptr inbounds i8, i8* %110, i64 -8
  %113 = bitcast i8* %_M_refcount.i.i380 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i382, label %if.else.i.i.i384

if.then.i.i.i382:                                 ; preds = %if.then.i.i381
  %114 = atomicrmw volatile add i32* %113, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i387

if.else.i.i.i384:                                 ; preds = %if.then.i.i381
  %115 = load i32, i32* %113, align 8, !tbaa !16
  %add.i.i.i.i383 = add nsw i32 %115, -1
  store i32 %add.i.i.i.i383, i32* %113, align 8, !tbaa !16
  br label %invoke.cont.i.i387

invoke.cont.i.i387:                               ; preds = %if.else.i.i.i384, %if.then.i.i.i382
  %retval.0.i.i.i385 = phi i32 [ %114, %if.then.i.i.i382 ], [ %115, %if.else.i.i.i384 ]
  %cmp3.i.i386 = icmp slt i32 %retval.0.i.i.i385, 1
  br i1 %cmp3.i.i386, label %if.then4.i.i388, label %_ZNSsD2Ev.exit389

if.then4.i.i388:                                  ; preds = %invoke.cont.i.i387
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %111, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i376) #8
  br label %_ZNSsD2Ev.exit389

_ZNSsD2Ev.exit389:                                ; preds = %invoke.cont156, %invoke.cont.i.i387, %if.then4.i.i388
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %112) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %109) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %108) #8
  %_M_p.i.i.i391 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp147, i64 0, i32 0, i32 0
  %116 = load i8*, i8** %_M_p.i.i.i391, align 8, !tbaa !43
  %arrayidx.i.i392 = getelementptr inbounds i8, i8* %116, i64 -24
  %117 = bitcast i8* %arrayidx.i.i392 to %"struct.std::basic_string<char>::_Rep"*
  %118 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i390, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %118) #8
  %cmp.not.i.i393 = icmp eq i8* %arrayidx.i.i392, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i393, label %_ZNSsD2Ev.exit403, label %if.then.i.i395, !prof !47

if.then.i.i395:                                   ; preds = %_ZNSsD2Ev.exit389
  %_M_refcount.i.i394 = getelementptr inbounds i8, i8* %116, i64 -8
  %119 = bitcast i8* %_M_refcount.i.i394 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i396, label %if.else.i.i.i398

if.then.i.i.i396:                                 ; preds = %if.then.i.i395
  %120 = atomicrmw volatile add i32* %119, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i401

if.else.i.i.i398:                                 ; preds = %if.then.i.i395
  %121 = load i32, i32* %119, align 8, !tbaa !16
  %add.i.i.i.i397 = add nsw i32 %121, -1
  store i32 %add.i.i.i.i397, i32* %119, align 8, !tbaa !16
  br label %invoke.cont.i.i401

invoke.cont.i.i401:                               ; preds = %if.else.i.i.i398, %if.then.i.i.i396
  %retval.0.i.i.i399 = phi i32 [ %120, %if.then.i.i.i396 ], [ %121, %if.else.i.i.i398 ]
  %cmp3.i.i400 = icmp slt i32 %retval.0.i.i.i399, 1
  br i1 %cmp3.i.i400, label %if.then4.i.i402, label %_ZNSsD2Ev.exit403

if.then4.i.i402:                                  ; preds = %invoke.cont.i.i401
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %117, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i390) #8
  br label %_ZNSsD2Ev.exit403

_ZNSsD2Ev.exit403:                                ; preds = %_ZNSsD2Ev.exit389, %invoke.cont.i.i401, %if.then4.i.i402
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %118) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %107) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #8
  %122 = bitcast %"class.std::basic_string"* %ref.tmp166 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %122) #8
  %123 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp167, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %123) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp166, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.20, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp167)
          to label %invoke.cont169 unwind label %lpad168

invoke.cont169:                                   ; preds = %_ZNSsD2Ev.exit403
  %call172 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %73, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp166)
          to label %invoke.cont171 unwind label %lpad170

invoke.cont171:                                   ; preds = %invoke.cont169
  %124 = bitcast %"class.std::basic_string"* %ref.tmp173 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %124) #8
  %125 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp174, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %125) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp173, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.21, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp174)
          to label %invoke.cont176 unwind label %lpad175

invoke.cont176:                                   ; preds = %invoke.cont171
  %call179 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsd(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call172, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp173, double noundef %sub94)
          to label %invoke.cont178 unwind label %lpad177

invoke.cont178:                                   ; preds = %invoke.cont176
  %_M_p.i.i.i405 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp173, i64 0, i32 0, i32 0
  %126 = load i8*, i8** %_M_p.i.i.i405, align 8, !tbaa !43
  %arrayidx.i.i406 = getelementptr inbounds i8, i8* %126, i64 -24
  %127 = bitcast i8* %arrayidx.i.i406 to %"struct.std::basic_string<char>::_Rep"*
  %128 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i404, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %128) #8
  %cmp.not.i.i407 = icmp eq i8* %arrayidx.i.i406, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i407, label %_ZNSsD2Ev.exit417, label %if.then.i.i409, !prof !47

if.then.i.i409:                                   ; preds = %invoke.cont178
  %_M_refcount.i.i408 = getelementptr inbounds i8, i8* %126, i64 -8
  %129 = bitcast i8* %_M_refcount.i.i408 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i410, label %if.else.i.i.i412

if.then.i.i.i410:                                 ; preds = %if.then.i.i409
  %130 = atomicrmw volatile add i32* %129, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i415

if.else.i.i.i412:                                 ; preds = %if.then.i.i409
  %131 = load i32, i32* %129, align 8, !tbaa !16
  %add.i.i.i.i411 = add nsw i32 %131, -1
  store i32 %add.i.i.i.i411, i32* %129, align 8, !tbaa !16
  br label %invoke.cont.i.i415

invoke.cont.i.i415:                               ; preds = %if.else.i.i.i412, %if.then.i.i.i410
  %retval.0.i.i.i413 = phi i32 [ %130, %if.then.i.i.i410 ], [ %131, %if.else.i.i.i412 ]
  %cmp3.i.i414 = icmp slt i32 %retval.0.i.i.i413, 1
  br i1 %cmp3.i.i414, label %if.then4.i.i416, label %_ZNSsD2Ev.exit417

if.then4.i.i416:                                  ; preds = %invoke.cont.i.i415
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %127, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i404) #8
  br label %_ZNSsD2Ev.exit417

_ZNSsD2Ev.exit417:                                ; preds = %invoke.cont178, %invoke.cont.i.i415, %if.then4.i.i416
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %128) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %125) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %124) #8
  %_M_p.i.i.i419 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp166, i64 0, i32 0, i32 0
  %132 = load i8*, i8** %_M_p.i.i.i419, align 8, !tbaa !43
  %arrayidx.i.i420 = getelementptr inbounds i8, i8* %132, i64 -24
  %133 = bitcast i8* %arrayidx.i.i420 to %"struct.std::basic_string<char>::_Rep"*
  %134 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i418, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %134) #8
  %cmp.not.i.i421 = icmp eq i8* %arrayidx.i.i420, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i421, label %_ZNSsD2Ev.exit431, label %if.then.i.i423, !prof !47

if.then.i.i423:                                   ; preds = %_ZNSsD2Ev.exit417
  %_M_refcount.i.i422 = getelementptr inbounds i8, i8* %132, i64 -8
  %135 = bitcast i8* %_M_refcount.i.i422 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i424, label %if.else.i.i.i426

if.then.i.i.i424:                                 ; preds = %if.then.i.i423
  %136 = atomicrmw volatile add i32* %135, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i429

if.else.i.i.i426:                                 ; preds = %if.then.i.i423
  %137 = load i32, i32* %135, align 8, !tbaa !16
  %add.i.i.i.i425 = add nsw i32 %137, -1
  store i32 %add.i.i.i.i425, i32* %135, align 8, !tbaa !16
  br label %invoke.cont.i.i429

invoke.cont.i.i429:                               ; preds = %if.else.i.i.i426, %if.then.i.i.i424
  %retval.0.i.i.i427 = phi i32 [ %136, %if.then.i.i.i424 ], [ %137, %if.else.i.i.i426 ]
  %cmp3.i.i428 = icmp slt i32 %retval.0.i.i.i427, 1
  br i1 %cmp3.i.i428, label %if.then4.i.i430, label %_ZNSsD2Ev.exit431

if.then4.i.i430:                                  ; preds = %invoke.cont.i.i429
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %133, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i418) #8
  br label %_ZNSsD2Ev.exit431

_ZNSsD2Ev.exit431:                                ; preds = %_ZNSsD2Ev.exit417, %invoke.cont.i.i429, %if.then4.i.i430
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %134) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %123) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %122) #8
  %vtable191 = load i8*, i8** bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8**), align 8, !tbaa !32
  %vbase.offset.ptr192 = getelementptr i8, i8* %vtable191, i64 -24
  %138 = bitcast i8* %vbase.offset.ptr192 to i64*
  %vbase.offset193 = load i64, i64* %138, align 8
  %add.ptr194 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8*), i64 %vbase.offset193
  %_M_width.i432 = getelementptr inbounds i8, i8* %add.ptr194, i64 16
  %139 = bitcast i8* %_M_width.i432 to i64*
  store i64 30, i64* %139, align 8, !tbaa !55
  %call1.i434436 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i8* noundef nonnull getelementptr inbounds ([25 x i8], [25 x i8]* @.str.22, i64 0, i64 0), i64 noundef 24)
          to label %invoke.cont198 unwind label %lpad195

lpad110:                                          ; preds = %if.then108
  %140 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup122

lpad114:                                          ; preds = %invoke.cont111
  %141 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup

lpad116:                                          ; preds = %invoke.cont115
  %142 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp112) #8
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad116, %lpad114
  %.pn = phi { i8*, i32 } [ %142, %lpad116 ], [ %141, %lpad114 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %77) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #8
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp) #8
  br label %ehcleanup122

ehcleanup122:                                     ; preds = %ehcleanup, %lpad110
  %.pn.pn = phi { i8*, i32 } [ %.pn, %ehcleanup ], [ %140, %lpad110 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %75) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #8
  br label %ehcleanup908

lpad127:                                          ; preds = %_ZNSsD2Ev.exit347
  %143 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup144

lpad129:                                          ; preds = %invoke.cont128
  %144 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup143

lpad134:                                          ; preds = %invoke.cont130
  %145 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup140

lpad136:                                          ; preds = %invoke.cont135
  %146 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp132) #8
  br label %ehcleanup140

ehcleanup140:                                     ; preds = %lpad136, %lpad134
  %.pn176 = phi { i8*, i32 } [ %146, %lpad136 ], [ %145, %lpad134 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %93) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #8
  br label %ehcleanup143

ehcleanup143:                                     ; preds = %ehcleanup140, %lpad129
  %.pn176.pn = phi { i8*, i32 } [ %.pn176, %ehcleanup140 ], [ %144, %lpad129 ]
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp125) #8
  br label %ehcleanup144

ehcleanup144:                                     ; preds = %ehcleanup143, %lpad127
  %.pn176.pn.pn = phi { i8*, i32 } [ %.pn176.pn, %ehcleanup143 ], [ %143, %lpad127 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %91) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %90) #8
  br label %ehcleanup908

lpad149:                                          ; preds = %_ZNSsD2Ev.exit375
  %147 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup163

lpad153:                                          ; preds = %invoke.cont150
  %148 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup159

lpad155:                                          ; preds = %invoke.cont154
  %149 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp151) #8
  br label %ehcleanup159

ehcleanup159:                                     ; preds = %lpad155, %lpad153
  %.pn180 = phi { i8*, i32 } [ %149, %lpad155 ], [ %148, %lpad153 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %109) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %108) #8
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp147) #8
  br label %ehcleanup163

ehcleanup163:                                     ; preds = %ehcleanup159, %lpad149
  %.pn180.pn = phi { i8*, i32 } [ %.pn180, %ehcleanup159 ], [ %147, %lpad149 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %107) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #8
  br label %ehcleanup908

lpad168:                                          ; preds = %_ZNSsD2Ev.exit403
  %150 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup185

lpad170:                                          ; preds = %invoke.cont169
  %151 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup184

lpad175:                                          ; preds = %invoke.cont171
  %152 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup181

lpad177:                                          ; preds = %invoke.cont176
  %153 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp173) #8
  br label %ehcleanup181

ehcleanup181:                                     ; preds = %lpad177, %lpad175
  %.pn183 = phi { i8*, i32 } [ %153, %lpad177 ], [ %152, %lpad175 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %125) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %124) #8
  br label %ehcleanup184

ehcleanup184:                                     ; preds = %ehcleanup181, %lpad170
  %.pn183.pn = phi { i8*, i32 } [ %.pn183, %ehcleanup181 ], [ %151, %lpad170 ]
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp166) #8
  br label %ehcleanup185

ehcleanup185:                                     ; preds = %ehcleanup184, %lpad168
  %.pn183.pn.pn = phi { i8*, i32 } [ %.pn183.pn, %ehcleanup184 ], [ %150, %lpad168 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %123) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %122) #8
  br label %ehcleanup908

invoke.cont198:                                   ; preds = %_ZNSsD2Ev.exit431
  %call201 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout)
          to label %if.end202 unwind label %lpad195

lpad195:                                          ; preds = %if.then228, %_ZNSsD2Ev.exit431, %invoke.cont235, %invoke.cont198
  %154 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup908

if.end202:                                        ; preds = %invoke.cont198
  %call206 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %invoke.cont205 unwind label %lpad204

invoke.cont205:                                   ; preds = %if.end202
  %add207 = add nsw i32 %0, 1
  %add208 = add nsw i32 %1, 1
  %add209 = add nsw i32 %2, 1
  %bc_rows_0 = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %mesh, i64 0, i32 0
  invoke void @_ZN6miniFE16impose_dirichletINS_9CSRMatrixIdiiEENS_6VectorIdiiEEEEvNT_10ScalarTypeERS5_RT0_iiiRKSt3setINS5_17GlobalOrdinalTypeESt4lessISB_ESaISB_EE(double noundef 0.000000e+00, %"struct.miniFE::CSRMatrix"* noundef nonnull align 8 dereferenceable(132) %A, %"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %b, i32 noundef signext %add207, i32 noundef signext %add208, i32 noundef signext %add209, %"class.std::set"* noundef nonnull align 8 dereferenceable(48) %bc_rows_0)
          to label %invoke.cont210 unwind label %lpad204

invoke.cont210:                                   ; preds = %invoke.cont205
  %call212 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %invoke.cont211 unwind label %lpad204

invoke.cont211:                                   ; preds = %invoke.cont210
  %sub213 = fsub contract double %call212, %call206
  %add214 = fadd contract double %add95, %sub213
  %call.i438 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIdEERSoT_(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, double noundef %sub213)
          to label %invoke.cont217 unwind label %lpad204

invoke.cont217:                                   ; preds = %invoke.cont211
  %call1.i441443 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call.i438, i8* noundef nonnull getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0), i64 noundef 15)
          to label %invoke.cont219 unwind label %lpad204

invoke.cont219:                                   ; preds = %invoke.cont217
  %call.i445 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIdEERSoT_(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call.i438, double noundef %add214)
          to label %invoke.cont221 unwind label %lpad204

invoke.cont221:                                   ; preds = %invoke.cont219
  %155 = bitcast %"class.std::basic_ostream"* %call.i445 to i8**
  %vtable.i1147 = load i8*, i8** %155, align 8, !tbaa !32
  %vbase.offset.ptr.i1148 = getelementptr i8, i8* %vtable.i1147, i64 -24
  %156 = bitcast i8* %vbase.offset.ptr.i1148 to i64*
  %vbase.offset.i1149 = load i64, i64* %156, align 8
  %157 = bitcast %"class.std::basic_ostream"* %call.i445 to i8*
  %add.ptr.i1150 = getelementptr inbounds i8, i8* %157, i64 %vbase.offset.i1149
  %_M_ctype.i.i1151 = getelementptr inbounds i8, i8* %add.ptr.i1150, i64 240
  %158 = bitcast i8* %_M_ctype.i.i1151 to %"class.std::ctype"**
  %159 = load %"class.std::ctype"*, %"class.std::ctype"** %158, align 8, !tbaa !34
  %tobool.not.i.i.i1152 = icmp eq %"class.std::ctype"* %159, null
  br i1 %tobool.not.i.i.i1152, label %if.then.i.i.i1153, label %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i1156

if.then.i.i.i1153:                                ; preds = %invoke.cont221
  invoke void @_ZSt16__throw_bad_castv() #29
          to label %.noexc1166 unwind label %lpad204

.noexc1166:                                       ; preds = %if.then.i.i.i1153
  unreachable

_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i1156: ; preds = %invoke.cont221
  %_M_widen_ok.i.i.i1154 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %159, i64 0, i32 8
  %160 = load i8, i8* %_M_widen_ok.i.i.i1154, align 8, !tbaa !37
  %tobool.not.i1.i.i1155 = icmp eq i8 %160, 0
  br i1 %tobool.not.i1.i.i1155, label %if.end.i.i.i1161, label %if.then.i2.i.i1158

if.then.i2.i.i1158:                               ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i1156
  %arrayidx.i.i.i1157 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %159, i64 0, i32 9, i64 10
  %161 = load i8, i8* %arrayidx.i.i.i1157, align 1, !tbaa !39
  br label %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i1165

if.end.i.i.i1161:                                 ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i1156
  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %159)
          to label %.noexc1167 unwind label %lpad204

.noexc1167:                                       ; preds = %if.end.i.i.i1161
  %162 = bitcast %"class.std::ctype"* %159 to i8 (%"class.std::ctype"*, i8)***
  %vtable.i.i.i1159 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %162, align 8, !tbaa !32
  %vfn.i.i.i1160 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vtable.i.i.i1159, i64 6
  %163 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vfn.i.i.i1160, align 8
  %call.i.i.i1169 = invoke noundef zeroext i8 %163(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %159, i8 noundef zeroext 10)
          to label %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i1165 unwind label %lpad204

_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i1165: ; preds = %.noexc1167, %if.then.i2.i.i1158
  %retval.0.i.i.i1162 = phi i8 [ %161, %if.then.i2.i.i1158 ], [ %call.i.i.i1169, %.noexc1167 ]
  %call1.i11631170 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call.i445, i8 noundef zeroext %retval.0.i.i.i1162)
          to label %call1.i1163.noexc unwind label %lpad204

call1.i1163.noexc:                                ; preds = %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i1165
  %call.i.i11641171 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call1.i11631170)
          to label %if.then228 unwind label %lpad204

lpad204:                                          ; preds = %call1.i1163.noexc, %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i1165, %.noexc1167, %if.end.i.i.i1161, %if.then.i.i.i1153, %invoke.cont219, %invoke.cont217, %invoke.cont211, %invoke.cont210, %invoke.cont205, %if.end202
  %164 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup908

if.then228:                                       ; preds = %call1.i1163.noexc
  %vtable229 = load i8*, i8** bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8**), align 8, !tbaa !32
  %vbase.offset.ptr230 = getelementptr i8, i8* %vtable229, i64 -24
  %165 = bitcast i8* %vbase.offset.ptr230 to i64*
  %vbase.offset231 = load i64, i64* %165, align 8
  %add.ptr232 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8*), i64 %vbase.offset231
  %_M_width.i449 = getelementptr inbounds i8, i8* %add.ptr232, i64 16
  %166 = bitcast i8* %_M_width.i449 to i64*
  store i64 30, i64* %166, align 8, !tbaa !55
  %call1.i451453 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i8* noundef nonnull getelementptr inbounds ([25 x i8], [25 x i8]* @.str.22, i64 0, i64 0), i64 noundef 24)
          to label %invoke.cont235 unwind label %lpad195

invoke.cont235:                                   ; preds = %if.then228
  %call238 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout)
          to label %if.end239 unwind label %lpad195

if.end239:                                        ; preds = %invoke.cont235
  %call243 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %invoke.cont242 unwind label %lpad241

invoke.cont242:                                   ; preds = %if.end239
  %bc_rows_1 = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %mesh, i64 0, i32 1
  invoke void @_ZN6miniFE16impose_dirichletINS_9CSRMatrixIdiiEENS_6VectorIdiiEEEEvNT_10ScalarTypeERS5_RT0_iiiRKSt3setINS5_17GlobalOrdinalTypeESt4lessISB_ESaISB_EE(double noundef 1.000000e+00, %"struct.miniFE::CSRMatrix"* noundef nonnull align 8 dereferenceable(132) %A, %"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %b, i32 noundef signext %add207, i32 noundef signext %add208, i32 noundef signext %add209, %"class.std::set"* noundef nonnull align 8 dereferenceable(48) %bc_rows_1)
          to label %invoke.cont247 unwind label %lpad241

invoke.cont247:                                   ; preds = %invoke.cont242
  %call249 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %invoke.cont248 unwind label %lpad241

invoke.cont248:                                   ; preds = %invoke.cont247
  %sub250 = fsub contract double %call249, %call243
  %add251 = fadd contract double %add214, %sub250
  %call.i455 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIdEERSoT_(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, double noundef %sub250)
          to label %invoke.cont254 unwind label %lpad241

invoke.cont254:                                   ; preds = %invoke.cont248
  %call1.i458460 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call.i455, i8* noundef nonnull getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0), i64 noundef 15)
          to label %invoke.cont256 unwind label %lpad241

invoke.cont256:                                   ; preds = %invoke.cont254
  %call.i462 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIdEERSoT_(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call.i455, double noundef %add251)
          to label %invoke.cont258 unwind label %lpad241

invoke.cont258:                                   ; preds = %invoke.cont256
  %167 = bitcast %"class.std::basic_ostream"* %call.i462 to i8**
  %vtable.i1173 = load i8*, i8** %167, align 8, !tbaa !32
  %vbase.offset.ptr.i1174 = getelementptr i8, i8* %vtable.i1173, i64 -24
  %168 = bitcast i8* %vbase.offset.ptr.i1174 to i64*
  %vbase.offset.i1175 = load i64, i64* %168, align 8
  %169 = bitcast %"class.std::basic_ostream"* %call.i462 to i8*
  %add.ptr.i1176 = getelementptr inbounds i8, i8* %169, i64 %vbase.offset.i1175
  %_M_ctype.i.i1177 = getelementptr inbounds i8, i8* %add.ptr.i1176, i64 240
  %170 = bitcast i8* %_M_ctype.i.i1177 to %"class.std::ctype"**
  %171 = load %"class.std::ctype"*, %"class.std::ctype"** %170, align 8, !tbaa !34
  %tobool.not.i.i.i1178 = icmp eq %"class.std::ctype"* %171, null
  br i1 %tobool.not.i.i.i1178, label %if.then.i.i.i1179, label %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i1182

if.then.i.i.i1179:                                ; preds = %invoke.cont258
  invoke void @_ZSt16__throw_bad_castv() #29
          to label %.noexc1192 unwind label %lpad241

.noexc1192:                                       ; preds = %if.then.i.i.i1179
  unreachable

_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i1182: ; preds = %invoke.cont258
  %_M_widen_ok.i.i.i1180 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %171, i64 0, i32 8
  %172 = load i8, i8* %_M_widen_ok.i.i.i1180, align 8, !tbaa !37
  %tobool.not.i1.i.i1181 = icmp eq i8 %172, 0
  br i1 %tobool.not.i1.i.i1181, label %if.end.i.i.i1187, label %if.then.i2.i.i1184

if.then.i2.i.i1184:                               ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i1182
  %arrayidx.i.i.i1183 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %171, i64 0, i32 9, i64 10
  %173 = load i8, i8* %arrayidx.i.i.i1183, align 1, !tbaa !39
  br label %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i1191

if.end.i.i.i1187:                                 ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i1182
  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %171)
          to label %.noexc1193 unwind label %lpad241

.noexc1193:                                       ; preds = %if.end.i.i.i1187
  %174 = bitcast %"class.std::ctype"* %171 to i8 (%"class.std::ctype"*, i8)***
  %vtable.i.i.i1185 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %174, align 8, !tbaa !32
  %vfn.i.i.i1186 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vtable.i.i.i1185, i64 6
  %175 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vfn.i.i.i1186, align 8
  %call.i.i.i1195 = invoke noundef zeroext i8 %175(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %171, i8 noundef zeroext 10)
          to label %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i1191 unwind label %lpad241

_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i1191: ; preds = %.noexc1193, %if.then.i2.i.i1184
  %retval.0.i.i.i1188 = phi i8 [ %173, %if.then.i2.i.i1184 ], [ %call.i.i.i1195, %.noexc1193 ]
  %call1.i11891196 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call.i462, i8 noundef zeroext %retval.0.i.i.i1188)
          to label %call1.i1189.noexc unwind label %lpad241

call1.i1189.noexc:                                ; preds = %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i1191
  %call.i.i11901197 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call1.i11891196)
          to label %if.then265 unwind label %lpad241

lpad241:                                          ; preds = %call1.i1189.noexc, %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i1191, %.noexc1193, %if.end.i.i.i1187, %if.then.i.i.i1179, %invoke.cont256, %invoke.cont254, %invoke.cont248, %invoke.cont247, %invoke.cont242, %if.end239
  %176 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup908

if.then265:                                       ; preds = %call1.i1189.noexc
  %vtable266 = load i8*, i8** bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8**), align 8, !tbaa !32
  %vbase.offset.ptr267 = getelementptr i8, i8* %vtable266, i64 -24
  %177 = bitcast i8* %vbase.offset.ptr267 to i64*
  %vbase.offset268 = load i64, i64* %177, align 8
  %add.ptr269 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8*), i64 %vbase.offset268
  %_M_width.i466 = getelementptr inbounds i8, i8* %add.ptr269, i64 16
  %178 = bitcast i8* %_M_width.i466 to i64*
  store i64 30, i64* %178, align 8, !tbaa !55
  %call1.i468470 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i8* noundef nonnull getelementptr inbounds ([31 x i8], [31 x i8]* @.str.23, i64 0, i64 0), i64 noundef 30)
          to label %invoke.cont273 unwind label %lpad270

invoke.cont273:                                   ; preds = %if.then265
  %call276 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout)
          to label %if.end277 unwind label %lpad270

lpad270:                                          ; preds = %if.then265, %invoke.cont273
  %179 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup908

if.end277:                                        ; preds = %invoke.cont273
  %call281 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %invoke.cont280 unwind label %lpad279

invoke.cont280:                                   ; preds = %if.end277
  %180 = load i32*, i32** %_M_finish.i, align 8, !tbaa !71
  %_M_start.i.i = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 2, i32 0, i32 0, i32 0
  %181 = load i32*, i32** %_M_start.i.i, align 8, !tbaa !74
  %sub.ptr.lhs.cast.i.i = ptrtoint i32* %180 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i32* %181 to i64
  %sub.ptr.sub.i.i = sub i64 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  %182 = lshr exact i64 %sub.ptr.sub.i.i, 2
  %conv.i472 = trunc i64 %182 to i32
  %num_cols.i = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 7
  store i32 %conv.i472, i32* %num_cols.i, align 8, !tbaa !83
  store i8 1, i8* %19, align 8, !tbaa !67
  %call284 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %invoke.cont283 unwind label %lpad279

invoke.cont283:                                   ; preds = %invoke.cont280
  %sub285 = fsub contract double %call284, %call281
  %add286 = fadd contract double %add251, %sub285
  %call.i474 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIdEERSoT_(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, double noundef %sub285)
          to label %invoke.cont289 unwind label %lpad279

invoke.cont289:                                   ; preds = %invoke.cont283
  %call1.i477479 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call.i474, i8* noundef nonnull getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0), i64 noundef 15)
          to label %invoke.cont291 unwind label %lpad279

invoke.cont291:                                   ; preds = %invoke.cont289
  %call.i481 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIdEERSoT_(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call.i474, double noundef %add286)
          to label %invoke.cont293 unwind label %lpad279

invoke.cont293:                                   ; preds = %invoke.cont291
  %183 = bitcast %"class.std::basic_ostream"* %call.i481 to i8**
  %vtable.i1199 = load i8*, i8** %183, align 8, !tbaa !32
  %vbase.offset.ptr.i1200 = getelementptr i8, i8* %vtable.i1199, i64 -24
  %184 = bitcast i8* %vbase.offset.ptr.i1200 to i64*
  %vbase.offset.i1201 = load i64, i64* %184, align 8
  %185 = bitcast %"class.std::basic_ostream"* %call.i481 to i8*
  %add.ptr.i1202 = getelementptr inbounds i8, i8* %185, i64 %vbase.offset.i1201
  %_M_ctype.i.i1203 = getelementptr inbounds i8, i8* %add.ptr.i1202, i64 240
  %186 = bitcast i8* %_M_ctype.i.i1203 to %"class.std::ctype"**
  %187 = load %"class.std::ctype"*, %"class.std::ctype"** %186, align 8, !tbaa !34
  %tobool.not.i.i.i1204 = icmp eq %"class.std::ctype"* %187, null
  br i1 %tobool.not.i.i.i1204, label %if.then.i.i.i1205, label %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i1208

if.then.i.i.i1205:                                ; preds = %invoke.cont293
  invoke void @_ZSt16__throw_bad_castv() #29
          to label %.noexc1218 unwind label %lpad279

.noexc1218:                                       ; preds = %if.then.i.i.i1205
  unreachable

_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i1208: ; preds = %invoke.cont293
  %_M_widen_ok.i.i.i1206 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %187, i64 0, i32 8
  %188 = load i8, i8* %_M_widen_ok.i.i.i1206, align 8, !tbaa !37
  %tobool.not.i1.i.i1207 = icmp eq i8 %188, 0
  br i1 %tobool.not.i1.i.i1207, label %if.end.i.i.i1213, label %if.then.i2.i.i1210

if.then.i2.i.i1210:                               ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i1208
  %arrayidx.i.i.i1209 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %187, i64 0, i32 9, i64 10
  %189 = load i8, i8* %arrayidx.i.i.i1209, align 1, !tbaa !39
  br label %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i1217

if.end.i.i.i1213:                                 ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i1208
  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %187)
          to label %.noexc1219 unwind label %lpad279

.noexc1219:                                       ; preds = %if.end.i.i.i1213
  %190 = bitcast %"class.std::ctype"* %187 to i8 (%"class.std::ctype"*, i8)***
  %vtable.i.i.i1211 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %190, align 8, !tbaa !32
  %vfn.i.i.i1212 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vtable.i.i.i1211, i64 6
  %191 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vfn.i.i.i1212, align 8
  %call.i.i.i1221 = invoke noundef zeroext i8 %191(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %187, i8 noundef zeroext 10)
          to label %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i1217 unwind label %lpad279

_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i1217: ; preds = %.noexc1219, %if.then.i2.i.i1210
  %retval.0.i.i.i1214 = phi i8 [ %189, %if.then.i2.i.i1210 ], [ %call.i.i.i1221, %.noexc1219 ]
  %call1.i12151222 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call.i481, i8 noundef zeroext %retval.0.i.i.i1214)
          to label %call1.i1215.noexc unwind label %lpad279

call1.i1215.noexc:                                ; preds = %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i1217
  %call.i.i12161223 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call1.i12151222)
          to label %if.end297 unwind label %lpad279

lpad279:                                          ; preds = %call1.i1215.noexc, %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i1217, %.noexc1219, %if.end.i.i.i1213, %if.then.i.i.i1205, %invoke.cont291, %invoke.cont289, %invoke.cont283, %invoke.cont280, %if.end277
  %192 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup908

if.end297:                                        ; preds = %call1.i1215.noexc
  %call301 = invoke noundef i64 @_ZN6miniFE20compute_matrix_statsINS_9CSRMatrixIdiiEEEEmRKT_iiR8YAML_Doc(%"struct.miniFE::CSRMatrix"* noundef nonnull align 8 dereferenceable(132) %A, i32 noundef signext 0, i32 noundef signext 1, %class.YAML_Doc* noundef nonnull align 8 dereferenceable(72) %ydoc)
          to label %invoke.cont300 unwind label %lpad299

invoke.cont300:                                   ; preds = %if.end297
  %193 = bitcast i32* %num_iters to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %193) #8
  store i32 0, i32* %num_iters, align 4, !tbaa !16
  %194 = bitcast double* %rnorm to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %194) #8
  store double 0.000000e+00, double* %rnorm, align 8, !tbaa !84
  %195 = bitcast double* %tol to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %195) #8
  store double 0x3CB0000000000000, double* %tol, align 8, !tbaa !84
  %196 = bitcast [5 x double]* %cg_times to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %196) #8
  %call305 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %invoke.cont304 unwind label %lpad303

invoke.cont304:                                   ; preds = %invoke.cont300
  %mv_overlap_comm_comp = getelementptr inbounds %"struct.miniFE::Parameters", %"struct.miniFE::Parameters"* %params, i64 0, i32 4
  %197 = load i32, i32* %mv_overlap_comm_comp, align 8, !tbaa !20
  %cmp307 = icmp eq i32 %197, 1
  %call1.i486488 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i8* noundef nonnull getelementptr inbounds ([24 x i8], [24 x i8]* @.str.24, i64 0, i64 0), i64 noundef 23)
          to label %invoke.cont311 unwind label %lpad310

invoke.cont311:                                   ; preds = %invoke.cont304
  %vtable.i1225 = load i8*, i8** bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8**), align 8, !tbaa !32
  %vbase.offset.ptr.i1226 = getelementptr i8, i8* %vtable.i1225, i64 -24
  %198 = bitcast i8* %vbase.offset.ptr.i1226 to i64*
  %vbase.offset.i1227 = load i64, i64* %198, align 8
  %add.ptr.i1228 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8*), i64 %vbase.offset.i1227
  %_M_ctype.i.i1229 = getelementptr inbounds i8, i8* %add.ptr.i1228, i64 240
  %199 = bitcast i8* %_M_ctype.i.i1229 to %"class.std::ctype"**
  %200 = load %"class.std::ctype"*, %"class.std::ctype"** %199, align 8, !tbaa !34
  %tobool.not.i.i.i1230 = icmp eq %"class.std::ctype"* %200, null
  br i1 %tobool.not.i.i.i1230, label %if.then.i.i.i1231, label %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i1234

if.then.i.i.i1231:                                ; preds = %invoke.cont311
  invoke void @_ZSt16__throw_bad_castv() #29
          to label %.noexc1244 unwind label %lpad310

.noexc1244:                                       ; preds = %if.then.i.i.i1231
  unreachable

_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i1234: ; preds = %invoke.cont311
  %_M_widen_ok.i.i.i1232 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %200, i64 0, i32 8
  %201 = load i8, i8* %_M_widen_ok.i.i.i1232, align 8, !tbaa !37
  %tobool.not.i1.i.i1233 = icmp eq i8 %201, 0
  br i1 %tobool.not.i1.i.i1233, label %if.end.i.i.i1239, label %if.then.i2.i.i1236

if.then.i2.i.i1236:                               ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i1234
  %arrayidx.i.i.i1235 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %200, i64 0, i32 9, i64 10
  %202 = load i8, i8* %arrayidx.i.i.i1235, align 1, !tbaa !39
  br label %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i1243

if.end.i.i.i1239:                                 ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i1234
  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %200)
          to label %.noexc1245 unwind label %lpad310

.noexc1245:                                       ; preds = %if.end.i.i.i1239
  %203 = bitcast %"class.std::ctype"* %200 to i8 (%"class.std::ctype"*, i8)***
  %vtable.i.i.i1237 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %203, align 8, !tbaa !32
  %vfn.i.i.i1238 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vtable.i.i.i1237, i64 6
  %204 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vfn.i.i.i1238, align 8
  %call.i.i.i1247 = invoke noundef zeroext i8 %204(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %200, i8 noundef zeroext 10)
          to label %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i1243 unwind label %lpad310

_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i1243: ; preds = %.noexc1245, %if.then.i2.i.i1236
  %retval.0.i.i.i1240 = phi i8 [ %202, %if.then.i2.i.i1236 ], [ %call.i.i.i1247, %.noexc1245 ]
  %call1.i12411248 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i8 noundef zeroext %retval.0.i.i.i1240)
          to label %call1.i1241.noexc unwind label %lpad310

call1.i1241.noexc:                                ; preds = %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i1243
  %call.i.i12421249 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call1.i12411248)
          to label %if.end315 unwind label %lpad310

lpad299:                                          ; preds = %if.end297
  %205 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup908

lpad303:                                          ; preds = %invoke.cont300
  %206 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup900

lpad310:                                          ; preds = %call1.i1267.noexc, %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i1269, %.noexc1271, %if.end.i.i.i1265, %if.then.i.i.i1257, %call1.i1241.noexc, %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i1243, %.noexc1245, %if.end.i.i.i1239, %if.then.i.i.i1231, %invoke.cont325, %if.then324, %invoke.cont304, %if.else, %invoke.cont317, %if.then316
  %207 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup900

if.end315:                                        ; preds = %call1.i1241.noexc
  br i1 %cmp307, label %if.then316, label %if.else

if.then316:                                       ; preds = %if.end315
  invoke void @_ZN6miniFE31rearrange_matrix_local_externalINS_9CSRMatrixIdiiEEEEvRT_(%"struct.miniFE::CSRMatrix"* noundef nonnull align 8 dereferenceable(132) %A)
          to label %invoke.cont317 unwind label %lpad310

invoke.cont317:                                   ; preds = %if.then316
  %arraydecay = getelementptr inbounds [5 x double], [5 x double]* %cg_times, i64 0, i64 0
  invoke void @_ZN6miniFE8cg_solveINS_9CSRMatrixIdiiEENS_6VectorIdiiEENS_14matvec_overlapIS2_S4_EEEEvRT_RKT0_RS9_T1_NS7_16LocalOrdinalTypeERNS_10TypeTraitsINS7_10ScalarTypeEE14magnitude_typeERSE_SJ_Pd(%"struct.miniFE::CSRMatrix"* noundef nonnull align 8 dereferenceable(132) %A, %"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %b, %"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %x, i8 undef, i32 noundef signext 200, double* noundef nonnull align 8 dereferenceable(8) %tol, i32* noundef nonnull align 4 dereferenceable(4) %num_iters, double* noundef nonnull align 8 dereferenceable(8) %rnorm, double* noundef nonnull %arraydecay)
          to label %if.end353 unwind label %lpad310

if.else:                                          ; preds = %if.end315
  %arraydecay320 = getelementptr inbounds [5 x double], [5 x double]* %cg_times, i64 0, i64 0
  invoke void @_ZN6miniFE8cg_solveINS_9CSRMatrixIdiiEENS_6VectorIdiiEENS_10matvec_stdIS2_S4_EEEEvRT_RKT0_RS9_T1_NS7_16LocalOrdinalTypeERNS_10TypeTraitsINS7_10ScalarTypeEE14magnitude_typeERSE_SJ_Pd(%"struct.miniFE::CSRMatrix"* noundef nonnull align 8 dereferenceable(132) %A, %"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %b, %"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %x, i8 undef, i32 noundef signext 200, double* noundef nonnull align 8 dereferenceable(8) %tol, i32* noundef nonnull align 4 dereferenceable(4) %num_iters, double* noundef nonnull align 8 dereferenceable(8) %rnorm, double* noundef nonnull %arraydecay320)
          to label %if.then324 unwind label %lpad310

if.then324:                                       ; preds = %if.else
  %call1.i493495 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i8* noundef nonnull getelementptr inbounds ([19 x i8], [19 x i8]* @.str.25, i64 0, i64 0), i64 noundef 18)
          to label %invoke.cont325 unwind label %lpad310

invoke.cont325:                                   ; preds = %if.then324
  %208 = load double, double* %rnorm, align 8, !tbaa !84
  %call.i497 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIdEERSoT_(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, double noundef %208)
          to label %invoke.cont327 unwind label %lpad310

invoke.cont327:                                   ; preds = %invoke.cont325
  %209 = bitcast %"class.std::basic_ostream"* %call.i497 to i8**
  %vtable.i1251 = load i8*, i8** %209, align 8, !tbaa !32
  %vbase.offset.ptr.i1252 = getelementptr i8, i8* %vtable.i1251, i64 -24
  %210 = bitcast i8* %vbase.offset.ptr.i1252 to i64*
  %vbase.offset.i1253 = load i64, i64* %210, align 8
  %211 = bitcast %"class.std::basic_ostream"* %call.i497 to i8*
  %add.ptr.i1254 = getelementptr inbounds i8, i8* %211, i64 %vbase.offset.i1253
  %_M_ctype.i.i1255 = getelementptr inbounds i8, i8* %add.ptr.i1254, i64 240
  %212 = bitcast i8* %_M_ctype.i.i1255 to %"class.std::ctype"**
  %213 = load %"class.std::ctype"*, %"class.std::ctype"** %212, align 8, !tbaa !34
  %tobool.not.i.i.i1256 = icmp eq %"class.std::ctype"* %213, null
  br i1 %tobool.not.i.i.i1256, label %if.then.i.i.i1257, label %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i1260

if.then.i.i.i1257:                                ; preds = %invoke.cont327
  invoke void @_ZSt16__throw_bad_castv() #29
          to label %.noexc1270 unwind label %lpad310

.noexc1270:                                       ; preds = %if.then.i.i.i1257
  unreachable

_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i1260: ; preds = %invoke.cont327
  %_M_widen_ok.i.i.i1258 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %213, i64 0, i32 8
  %214 = load i8, i8* %_M_widen_ok.i.i.i1258, align 8, !tbaa !37
  %tobool.not.i1.i.i1259 = icmp eq i8 %214, 0
  br i1 %tobool.not.i1.i.i1259, label %if.end.i.i.i1265, label %if.then.i2.i.i1262

if.then.i2.i.i1262:                               ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i1260
  %arrayidx.i.i.i1261 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %213, i64 0, i32 9, i64 10
  %215 = load i8, i8* %arrayidx.i.i.i1261, align 1, !tbaa !39
  br label %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i1269

if.end.i.i.i1265:                                 ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i1260
  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %213)
          to label %.noexc1271 unwind label %lpad310

.noexc1271:                                       ; preds = %if.end.i.i.i1265
  %216 = bitcast %"class.std::ctype"* %213 to i8 (%"class.std::ctype"*, i8)***
  %vtable.i.i.i1263 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %216, align 8, !tbaa !32
  %vfn.i.i.i1264 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vtable.i.i.i1263, i64 6
  %217 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vfn.i.i.i1264, align 8
  %call.i.i.i1273 = invoke noundef zeroext i8 %217(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %213, i8 noundef zeroext 10)
          to label %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i1269 unwind label %lpad310

_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i1269: ; preds = %.noexc1271, %if.then.i2.i.i1262
  %retval.0.i.i.i1266 = phi i8 [ %215, %if.then.i2.i.i1262 ], [ %call.i.i.i1273, %.noexc1271 ]
  %call1.i12671274 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call.i497, i8 noundef zeroext %retval.0.i.i.i1266)
          to label %call1.i1267.noexc unwind label %lpad310

call1.i1267.noexc:                                ; preds = %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i1269
  %call.i.i12681275 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call1.i12671274)
          to label %if.else341 unwind label %lpad310

lpad336:                                          ; preds = %call1.i1293.noexc, %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i1295, %.noexc1297, %if.end.i.i.i1291, %if.then.i.i.i1283, %if.else341, %if.end347
  %218 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup900

if.else341:                                       ; preds = %call1.i1267.noexc
  %call1.i502504 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i8* noundef nonnull getelementptr inbounds ([44 x i8], [44 x i8]* @.str.27, i64 0, i64 0), i64 noundef 43)
          to label %invoke.cont342 unwind label %lpad336

invoke.cont342:                                   ; preds = %if.else341
  %vtable.i1277 = load i8*, i8** bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8**), align 8, !tbaa !32
  %vbase.offset.ptr.i1278 = getelementptr i8, i8* %vtable.i1277, i64 -24
  %219 = bitcast i8* %vbase.offset.ptr.i1278 to i64*
  %vbase.offset.i1279 = load i64, i64* %219, align 8
  %add.ptr.i1280 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8*), i64 %vbase.offset.i1279
  %_M_ctype.i.i1281 = getelementptr inbounds i8, i8* %add.ptr.i1280, i64 240
  %220 = bitcast i8* %_M_ctype.i.i1281 to %"class.std::ctype"**
  %221 = load %"class.std::ctype"*, %"class.std::ctype"** %220, align 8, !tbaa !34
  %tobool.not.i.i.i1282 = icmp eq %"class.std::ctype"* %221, null
  br i1 %tobool.not.i.i.i1282, label %if.then.i.i.i1283, label %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i1286

if.then.i.i.i1283:                                ; preds = %invoke.cont342
  invoke void @_ZSt16__throw_bad_castv() #29
          to label %.noexc1296 unwind label %lpad336

.noexc1296:                                       ; preds = %if.then.i.i.i1283
  unreachable

_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i1286: ; preds = %invoke.cont342
  %_M_widen_ok.i.i.i1284 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %221, i64 0, i32 8
  %222 = load i8, i8* %_M_widen_ok.i.i.i1284, align 8, !tbaa !37
  %tobool.not.i1.i.i1285 = icmp eq i8 %222, 0
  br i1 %tobool.not.i1.i.i1285, label %if.end.i.i.i1291, label %if.then.i2.i.i1288

if.then.i2.i.i1288:                               ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i1286
  %arrayidx.i.i.i1287 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %221, i64 0, i32 9, i64 10
  %223 = load i8, i8* %arrayidx.i.i.i1287, align 1, !tbaa !39
  br label %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i1295

if.end.i.i.i1291:                                 ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i1286
  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %221)
          to label %.noexc1297 unwind label %lpad336

.noexc1297:                                       ; preds = %if.end.i.i.i1291
  %224 = bitcast %"class.std::ctype"* %221 to i8 (%"class.std::ctype"*, i8)***
  %vtable.i.i.i1289 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %224, align 8, !tbaa !32
  %vfn.i.i.i1290 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vtable.i.i.i1289, i64 6
  %225 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vfn.i.i.i1290, align 8
  %call.i.i.i1299 = invoke noundef zeroext i8 %225(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %221, i8 noundef zeroext 10)
          to label %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i1295 unwind label %lpad336

_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i1295: ; preds = %.noexc1297, %if.then.i2.i.i1288
  %retval.0.i.i.i1292 = phi i8 [ %223, %if.then.i2.i.i1288 ], [ %call.i.i.i1299, %.noexc1297 ]
  %call1.i12931300 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i8 noundef zeroext %retval.0.i.i.i1292)
          to label %call1.i1293.noexc unwind label %lpad336

call1.i1293.noexc:                                ; preds = %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i1295
  %call.i.i12941301 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call1.i12931300)
          to label %if.end347 unwind label %lpad336

if.end347:                                        ; preds = %call1.i1293.noexc
  %call350 = invoke noundef signext i32 @_ZN6miniFE15verify_solutionINS_6VectorIdiiEEEEiRKNS_23simple_mesh_descriptionINT_17GlobalOrdinalTypeEEERKS4_db(%"class.miniFE::simple_mesh_description"* noundef nonnull align 8 dereferenceable(192) %mesh, %"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %x, double noundef 6.000000e-02, i1 noundef zeroext false)
          to label %if.end353 unwind label %lpad336

if.end353:                                        ; preds = %if.end347, %invoke.cont317
  %verify_result.0 = phi i32 [ 0, %invoke.cont317 ], [ %call350, %if.end347 ]
  %226 = bitcast %"class.std::basic_string"* %title to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %226) #8
  %227 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp354, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %227) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %title, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp354)
          to label %invoke.cont356 unwind label %lpad355

invoke.cont356:                                   ; preds = %if.end353
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %227) #8
  %228 = bitcast %"class.std::basic_string"* %ref.tmp361 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %228) #8
  %229 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp362, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %229) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp361, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.29, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp362)
          to label %invoke.cont364 unwind label %lpad363

invoke.cont364:                                   ; preds = %invoke.cont356
  %call367 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %73, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp361)
          to label %invoke.cont366 unwind label %lpad365

invoke.cont366:                                   ; preds = %invoke.cont364
  %230 = bitcast %"class.std::basic_string"* %ref.tmp368 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %230) #8
  %231 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp369, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %231) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp368, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp369)
          to label %invoke.cont371 unwind label %lpad370

invoke.cont371:                                   ; preds = %invoke.cont366
  %232 = bitcast %"class.std::basic_string"* %ref.tmp372 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %232) #8
  %233 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp376, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %233) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp372, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.158, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp376)
          to label %invoke.cont378 unwind label %lpad377

invoke.cont378:                                   ; preds = %invoke.cont371
  %call381 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsS1_(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call367, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp368, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp372)
          to label %invoke.cont380 unwind label %lpad379

invoke.cont380:                                   ; preds = %invoke.cont378
  %_M_p.i.i.i509 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp372, i64 0, i32 0, i32 0
  %234 = load i8*, i8** %_M_p.i.i.i509, align 8, !tbaa !43
  %arrayidx.i.i510 = getelementptr inbounds i8, i8* %234, i64 -24
  %235 = bitcast i8* %arrayidx.i.i510 to %"struct.std::basic_string<char>::_Rep"*
  %236 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i508, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %236) #8
  %cmp.not.i.i511 = icmp eq i8* %arrayidx.i.i510, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i511, label %_ZNSsD2Ev.exit521, label %if.then.i.i513, !prof !47

if.then.i.i513:                                   ; preds = %invoke.cont380
  %_M_refcount.i.i512 = getelementptr inbounds i8, i8* %234, i64 -8
  %237 = bitcast i8* %_M_refcount.i.i512 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i514, label %if.else.i.i.i516

if.then.i.i.i514:                                 ; preds = %if.then.i.i513
  %238 = atomicrmw volatile add i32* %237, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i519

if.else.i.i.i516:                                 ; preds = %if.then.i.i513
  %239 = load i32, i32* %237, align 8, !tbaa !16
  %add.i.i.i.i515 = add nsw i32 %239, -1
  store i32 %add.i.i.i.i515, i32* %237, align 8, !tbaa !16
  br label %invoke.cont.i.i519

invoke.cont.i.i519:                               ; preds = %if.else.i.i.i516, %if.then.i.i.i514
  %retval.0.i.i.i517 = phi i32 [ %238, %if.then.i.i.i514 ], [ %239, %if.else.i.i.i516 ]
  %cmp3.i.i518 = icmp slt i32 %retval.0.i.i.i517, 1
  br i1 %cmp3.i.i518, label %if.then4.i.i520, label %_ZNSsD2Ev.exit521

if.then4.i.i520:                                  ; preds = %invoke.cont.i.i519
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %235, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i508) #8
  br label %_ZNSsD2Ev.exit521

_ZNSsD2Ev.exit521:                                ; preds = %invoke.cont380, %invoke.cont.i.i519, %if.then4.i.i520
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %236) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %233) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %232) #8
  %_M_p.i.i.i523 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp368, i64 0, i32 0, i32 0
  %240 = load i8*, i8** %_M_p.i.i.i523, align 8, !tbaa !43
  %arrayidx.i.i524 = getelementptr inbounds i8, i8* %240, i64 -24
  %241 = bitcast i8* %arrayidx.i.i524 to %"struct.std::basic_string<char>::_Rep"*
  %242 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i522, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %242) #8
  %cmp.not.i.i525 = icmp eq i8* %arrayidx.i.i524, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i525, label %_ZNSsD2Ev.exit535, label %if.then.i.i527, !prof !47

if.then.i.i527:                                   ; preds = %_ZNSsD2Ev.exit521
  %_M_refcount.i.i526 = getelementptr inbounds i8, i8* %240, i64 -8
  %243 = bitcast i8* %_M_refcount.i.i526 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i528, label %if.else.i.i.i530

if.then.i.i.i528:                                 ; preds = %if.then.i.i527
  %244 = atomicrmw volatile add i32* %243, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i533

if.else.i.i.i530:                                 ; preds = %if.then.i.i527
  %245 = load i32, i32* %243, align 8, !tbaa !16
  %add.i.i.i.i529 = add nsw i32 %245, -1
  store i32 %add.i.i.i.i529, i32* %243, align 8, !tbaa !16
  br label %invoke.cont.i.i533

invoke.cont.i.i533:                               ; preds = %if.else.i.i.i530, %if.then.i.i.i528
  %retval.0.i.i.i531 = phi i32 [ %244, %if.then.i.i.i528 ], [ %245, %if.else.i.i.i530 ]
  %cmp3.i.i532 = icmp slt i32 %retval.0.i.i.i531, 1
  br i1 %cmp3.i.i532, label %if.then4.i.i534, label %_ZNSsD2Ev.exit535

if.then4.i.i534:                                  ; preds = %invoke.cont.i.i533
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %241, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i522) #8
  br label %_ZNSsD2Ev.exit535

_ZNSsD2Ev.exit535:                                ; preds = %_ZNSsD2Ev.exit521, %invoke.cont.i.i533, %if.then4.i.i534
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %242) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %231) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %230) #8
  %_M_p.i.i.i537 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp361, i64 0, i32 0, i32 0
  %246 = load i8*, i8** %_M_p.i.i.i537, align 8, !tbaa !43
  %arrayidx.i.i538 = getelementptr inbounds i8, i8* %246, i64 -24
  %247 = bitcast i8* %arrayidx.i.i538 to %"struct.std::basic_string<char>::_Rep"*
  %248 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i536, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %248) #8
  %cmp.not.i.i539 = icmp eq i8* %arrayidx.i.i538, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i539, label %_ZNSsD2Ev.exit549, label %if.then.i.i541, !prof !47

if.then.i.i541:                                   ; preds = %_ZNSsD2Ev.exit535
  %_M_refcount.i.i540 = getelementptr inbounds i8, i8* %246, i64 -8
  %249 = bitcast i8* %_M_refcount.i.i540 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i542, label %if.else.i.i.i544

if.then.i.i.i542:                                 ; preds = %if.then.i.i541
  %250 = atomicrmw volatile add i32* %249, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i547

if.else.i.i.i544:                                 ; preds = %if.then.i.i541
  %251 = load i32, i32* %249, align 8, !tbaa !16
  %add.i.i.i.i543 = add nsw i32 %251, -1
  store i32 %add.i.i.i.i543, i32* %249, align 8, !tbaa !16
  br label %invoke.cont.i.i547

invoke.cont.i.i547:                               ; preds = %if.else.i.i.i544, %if.then.i.i.i542
  %retval.0.i.i.i545 = phi i32 [ %250, %if.then.i.i.i542 ], [ %251, %if.else.i.i.i544 ]
  %cmp3.i.i546 = icmp slt i32 %retval.0.i.i.i545, 1
  br i1 %cmp3.i.i546, label %if.then4.i.i548, label %_ZNSsD2Ev.exit549

if.then4.i.i548:                                  ; preds = %invoke.cont.i.i547
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %247, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i536) #8
  br label %_ZNSsD2Ev.exit549

_ZNSsD2Ev.exit549:                                ; preds = %_ZNSsD2Ev.exit535, %invoke.cont.i.i547, %if.then4.i.i548
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %248) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %229) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %228) #8
  %252 = bitcast %"class.std::basic_string"* %ref.tmp394 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %252) #8
  %253 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp395, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %253) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp394, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.29, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp395)
          to label %invoke.cont397 unwind label %lpad396

invoke.cont397:                                   ; preds = %_ZNSsD2Ev.exit549
  %call400 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %73, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp394)
          to label %invoke.cont399 unwind label %lpad398

invoke.cont399:                                   ; preds = %invoke.cont397
  %254 = bitcast %"class.std::basic_string"* %ref.tmp401 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %254) #8
  %255 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp402, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %255) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp401, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.31, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp402)
          to label %invoke.cont404 unwind label %lpad403

invoke.cont404:                                   ; preds = %invoke.cont399
  %256 = bitcast %"class.std::basic_string"* %ref.tmp405 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %256) #8
  %257 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp409, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %257) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp405, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.159, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp409)
          to label %invoke.cont411 unwind label %lpad410

invoke.cont411:                                   ; preds = %invoke.cont404
  %call414 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsS1_(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call400, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp401, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp405)
          to label %invoke.cont413 unwind label %lpad412

invoke.cont413:                                   ; preds = %invoke.cont411
  %_M_p.i.i.i551 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp405, i64 0, i32 0, i32 0
  %258 = load i8*, i8** %_M_p.i.i.i551, align 8, !tbaa !43
  %arrayidx.i.i552 = getelementptr inbounds i8, i8* %258, i64 -24
  %259 = bitcast i8* %arrayidx.i.i552 to %"struct.std::basic_string<char>::_Rep"*
  %260 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i550, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %260) #8
  %cmp.not.i.i553 = icmp eq i8* %arrayidx.i.i552, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i553, label %_ZNSsD2Ev.exit563, label %if.then.i.i555, !prof !47

if.then.i.i555:                                   ; preds = %invoke.cont413
  %_M_refcount.i.i554 = getelementptr inbounds i8, i8* %258, i64 -8
  %261 = bitcast i8* %_M_refcount.i.i554 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i556, label %if.else.i.i.i558

if.then.i.i.i556:                                 ; preds = %if.then.i.i555
  %262 = atomicrmw volatile add i32* %261, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i561

if.else.i.i.i558:                                 ; preds = %if.then.i.i555
  %263 = load i32, i32* %261, align 8, !tbaa !16
  %add.i.i.i.i557 = add nsw i32 %263, -1
  store i32 %add.i.i.i.i557, i32* %261, align 8, !tbaa !16
  br label %invoke.cont.i.i561

invoke.cont.i.i561:                               ; preds = %if.else.i.i.i558, %if.then.i.i.i556
  %retval.0.i.i.i559 = phi i32 [ %262, %if.then.i.i.i556 ], [ %263, %if.else.i.i.i558 ]
  %cmp3.i.i560 = icmp slt i32 %retval.0.i.i.i559, 1
  br i1 %cmp3.i.i560, label %if.then4.i.i562, label %_ZNSsD2Ev.exit563

if.then4.i.i562:                                  ; preds = %invoke.cont.i.i561
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %259, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i550) #8
  br label %_ZNSsD2Ev.exit563

_ZNSsD2Ev.exit563:                                ; preds = %invoke.cont413, %invoke.cont.i.i561, %if.then4.i.i562
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %260) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %257) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %256) #8
  %_M_p.i.i.i565 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp401, i64 0, i32 0, i32 0
  %264 = load i8*, i8** %_M_p.i.i.i565, align 8, !tbaa !43
  %arrayidx.i.i566 = getelementptr inbounds i8, i8* %264, i64 -24
  %265 = bitcast i8* %arrayidx.i.i566 to %"struct.std::basic_string<char>::_Rep"*
  %266 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i564, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %266) #8
  %cmp.not.i.i567 = icmp eq i8* %arrayidx.i.i566, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i567, label %_ZNSsD2Ev.exit577, label %if.then.i.i569, !prof !47

if.then.i.i569:                                   ; preds = %_ZNSsD2Ev.exit563
  %_M_refcount.i.i568 = getelementptr inbounds i8, i8* %264, i64 -8
  %267 = bitcast i8* %_M_refcount.i.i568 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i570, label %if.else.i.i.i572

if.then.i.i.i570:                                 ; preds = %if.then.i.i569
  %268 = atomicrmw volatile add i32* %267, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i575

if.else.i.i.i572:                                 ; preds = %if.then.i.i569
  %269 = load i32, i32* %267, align 8, !tbaa !16
  %add.i.i.i.i571 = add nsw i32 %269, -1
  store i32 %add.i.i.i.i571, i32* %267, align 8, !tbaa !16
  br label %invoke.cont.i.i575

invoke.cont.i.i575:                               ; preds = %if.else.i.i.i572, %if.then.i.i.i570
  %retval.0.i.i.i573 = phi i32 [ %268, %if.then.i.i.i570 ], [ %269, %if.else.i.i.i572 ]
  %cmp3.i.i574 = icmp slt i32 %retval.0.i.i.i573, 1
  br i1 %cmp3.i.i574, label %if.then4.i.i576, label %_ZNSsD2Ev.exit577

if.then4.i.i576:                                  ; preds = %invoke.cont.i.i575
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %265, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i564) #8
  br label %_ZNSsD2Ev.exit577

_ZNSsD2Ev.exit577:                                ; preds = %_ZNSsD2Ev.exit563, %invoke.cont.i.i575, %if.then4.i.i576
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %266) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %255) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %254) #8
  %_M_p.i.i.i579 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp394, i64 0, i32 0, i32 0
  %270 = load i8*, i8** %_M_p.i.i.i579, align 8, !tbaa !43
  %arrayidx.i.i580 = getelementptr inbounds i8, i8* %270, i64 -24
  %271 = bitcast i8* %arrayidx.i.i580 to %"struct.std::basic_string<char>::_Rep"*
  %272 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i578, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %272) #8
  %cmp.not.i.i581 = icmp eq i8* %arrayidx.i.i580, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i581, label %_ZNSsD2Ev.exit591, label %if.then.i.i583, !prof !47

if.then.i.i583:                                   ; preds = %_ZNSsD2Ev.exit577
  %_M_refcount.i.i582 = getelementptr inbounds i8, i8* %270, i64 -8
  %273 = bitcast i8* %_M_refcount.i.i582 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i584, label %if.else.i.i.i586

if.then.i.i.i584:                                 ; preds = %if.then.i.i583
  %274 = atomicrmw volatile add i32* %273, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i589

if.else.i.i.i586:                                 ; preds = %if.then.i.i583
  %275 = load i32, i32* %273, align 8, !tbaa !16
  %add.i.i.i.i585 = add nsw i32 %275, -1
  store i32 %add.i.i.i.i585, i32* %273, align 8, !tbaa !16
  br label %invoke.cont.i.i589

invoke.cont.i.i589:                               ; preds = %if.else.i.i.i586, %if.then.i.i.i584
  %retval.0.i.i.i587 = phi i32 [ %274, %if.then.i.i.i584 ], [ %275, %if.else.i.i.i586 ]
  %cmp3.i.i588 = icmp slt i32 %retval.0.i.i.i587, 1
  br i1 %cmp3.i.i588, label %if.then4.i.i590, label %_ZNSsD2Ev.exit591

if.then4.i.i590:                                  ; preds = %invoke.cont.i.i589
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %271, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i578) #8
  br label %_ZNSsD2Ev.exit591

_ZNSsD2Ev.exit591:                                ; preds = %_ZNSsD2Ev.exit577, %invoke.cont.i.i589, %if.then4.i.i590
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %272) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %253) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %252) #8
  %276 = bitcast %"class.std::basic_string"* %ref.tmp427 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %276) #8
  %277 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp428, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %277) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp427, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.29, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp428)
          to label %invoke.cont430 unwind label %lpad429

invoke.cont430:                                   ; preds = %_ZNSsD2Ev.exit591
  %call433 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %73, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp427)
          to label %invoke.cont432 unwind label %lpad431

invoke.cont432:                                   ; preds = %invoke.cont430
  %278 = bitcast %"class.std::basic_string"* %ref.tmp434 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %278) #8
  %279 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp435, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %279) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp434, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.32, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp435)
          to label %invoke.cont437 unwind label %lpad436

invoke.cont437:                                   ; preds = %invoke.cont432
  %280 = bitcast %"class.std::basic_string"* %ref.tmp438 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %280) #8
  %281 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp442, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %281) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp438, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.159, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp442)
          to label %invoke.cont444 unwind label %lpad443

invoke.cont444:                                   ; preds = %invoke.cont437
  %call447 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsS1_(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call433, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp434, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp438)
          to label %invoke.cont446 unwind label %lpad445

invoke.cont446:                                   ; preds = %invoke.cont444
  %_M_p.i.i.i593 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp438, i64 0, i32 0, i32 0
  %282 = load i8*, i8** %_M_p.i.i.i593, align 8, !tbaa !43
  %arrayidx.i.i594 = getelementptr inbounds i8, i8* %282, i64 -24
  %283 = bitcast i8* %arrayidx.i.i594 to %"struct.std::basic_string<char>::_Rep"*
  %284 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i592, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %284) #8
  %cmp.not.i.i595 = icmp eq i8* %arrayidx.i.i594, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i595, label %_ZNSsD2Ev.exit605, label %if.then.i.i597, !prof !47

if.then.i.i597:                                   ; preds = %invoke.cont446
  %_M_refcount.i.i596 = getelementptr inbounds i8, i8* %282, i64 -8
  %285 = bitcast i8* %_M_refcount.i.i596 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i598, label %if.else.i.i.i600

if.then.i.i.i598:                                 ; preds = %if.then.i.i597
  %286 = atomicrmw volatile add i32* %285, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i603

if.else.i.i.i600:                                 ; preds = %if.then.i.i597
  %287 = load i32, i32* %285, align 8, !tbaa !16
  %add.i.i.i.i599 = add nsw i32 %287, -1
  store i32 %add.i.i.i.i599, i32* %285, align 8, !tbaa !16
  br label %invoke.cont.i.i603

invoke.cont.i.i603:                               ; preds = %if.else.i.i.i600, %if.then.i.i.i598
  %retval.0.i.i.i601 = phi i32 [ %286, %if.then.i.i.i598 ], [ %287, %if.else.i.i.i600 ]
  %cmp3.i.i602 = icmp slt i32 %retval.0.i.i.i601, 1
  br i1 %cmp3.i.i602, label %if.then4.i.i604, label %_ZNSsD2Ev.exit605

if.then4.i.i604:                                  ; preds = %invoke.cont.i.i603
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %283, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i592) #8
  br label %_ZNSsD2Ev.exit605

_ZNSsD2Ev.exit605:                                ; preds = %invoke.cont446, %invoke.cont.i.i603, %if.then4.i.i604
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %284) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %281) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %280) #8
  %_M_p.i.i.i607 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp434, i64 0, i32 0, i32 0
  %288 = load i8*, i8** %_M_p.i.i.i607, align 8, !tbaa !43
  %arrayidx.i.i608 = getelementptr inbounds i8, i8* %288, i64 -24
  %289 = bitcast i8* %arrayidx.i.i608 to %"struct.std::basic_string<char>::_Rep"*
  %290 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i606, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %290) #8
  %cmp.not.i.i609 = icmp eq i8* %arrayidx.i.i608, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i609, label %_ZNSsD2Ev.exit619, label %if.then.i.i611, !prof !47

if.then.i.i611:                                   ; preds = %_ZNSsD2Ev.exit605
  %_M_refcount.i.i610 = getelementptr inbounds i8, i8* %288, i64 -8
  %291 = bitcast i8* %_M_refcount.i.i610 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i612, label %if.else.i.i.i614

if.then.i.i.i612:                                 ; preds = %if.then.i.i611
  %292 = atomicrmw volatile add i32* %291, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i617

if.else.i.i.i614:                                 ; preds = %if.then.i.i611
  %293 = load i32, i32* %291, align 8, !tbaa !16
  %add.i.i.i.i613 = add nsw i32 %293, -1
  store i32 %add.i.i.i.i613, i32* %291, align 8, !tbaa !16
  br label %invoke.cont.i.i617

invoke.cont.i.i617:                               ; preds = %if.else.i.i.i614, %if.then.i.i.i612
  %retval.0.i.i.i615 = phi i32 [ %292, %if.then.i.i.i612 ], [ %293, %if.else.i.i.i614 ]
  %cmp3.i.i616 = icmp slt i32 %retval.0.i.i.i615, 1
  br i1 %cmp3.i.i616, label %if.then4.i.i618, label %_ZNSsD2Ev.exit619

if.then4.i.i618:                                  ; preds = %invoke.cont.i.i617
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %289, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i606) #8
  br label %_ZNSsD2Ev.exit619

_ZNSsD2Ev.exit619:                                ; preds = %_ZNSsD2Ev.exit605, %invoke.cont.i.i617, %if.then4.i.i618
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %290) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %279) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %278) #8
  %_M_p.i.i.i621 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp427, i64 0, i32 0, i32 0
  %294 = load i8*, i8** %_M_p.i.i.i621, align 8, !tbaa !43
  %arrayidx.i.i622 = getelementptr inbounds i8, i8* %294, i64 -24
  %295 = bitcast i8* %arrayidx.i.i622 to %"struct.std::basic_string<char>::_Rep"*
  %296 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i620, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %296) #8
  %cmp.not.i.i623 = icmp eq i8* %arrayidx.i.i622, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i623, label %_ZNSsD2Ev.exit633, label %if.then.i.i625, !prof !47

if.then.i.i625:                                   ; preds = %_ZNSsD2Ev.exit619
  %_M_refcount.i.i624 = getelementptr inbounds i8, i8* %294, i64 -8
  %297 = bitcast i8* %_M_refcount.i.i624 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i626, label %if.else.i.i.i628

if.then.i.i.i626:                                 ; preds = %if.then.i.i625
  %298 = atomicrmw volatile add i32* %297, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i631

if.else.i.i.i628:                                 ; preds = %if.then.i.i625
  %299 = load i32, i32* %297, align 8, !tbaa !16
  %add.i.i.i.i627 = add nsw i32 %299, -1
  store i32 %add.i.i.i.i627, i32* %297, align 8, !tbaa !16
  br label %invoke.cont.i.i631

invoke.cont.i.i631:                               ; preds = %if.else.i.i.i628, %if.then.i.i.i626
  %retval.0.i.i.i629 = phi i32 [ %298, %if.then.i.i.i626 ], [ %299, %if.else.i.i.i628 ]
  %cmp3.i.i630 = icmp slt i32 %retval.0.i.i.i629, 1
  br i1 %cmp3.i.i630, label %if.then4.i.i632, label %_ZNSsD2Ev.exit633

if.then4.i.i632:                                  ; preds = %invoke.cont.i.i631
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %295, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i620) #8
  br label %_ZNSsD2Ev.exit633

_ZNSsD2Ev.exit633:                                ; preds = %_ZNSsD2Ev.exit619, %invoke.cont.i.i631, %if.then4.i.i632
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %296) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %277) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %276) #8
  %300 = bitcast %"class.std::basic_string"* %ref.tmp460 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %300) #8
  %301 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp461, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %301) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp460, i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp461)
          to label %invoke.cont463 unwind label %lpad462

invoke.cont463:                                   ; preds = %_ZNSsD2Ev.exit633
  %call466 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsS1_(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %73, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %title, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp460)
          to label %invoke.cont465 unwind label %lpad464

invoke.cont465:                                   ; preds = %invoke.cont463
  %_M_p.i.i.i635 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp460, i64 0, i32 0, i32 0
  %302 = load i8*, i8** %_M_p.i.i.i635, align 8, !tbaa !43
  %arrayidx.i.i636 = getelementptr inbounds i8, i8* %302, i64 -24
  %303 = bitcast i8* %arrayidx.i.i636 to %"struct.std::basic_string<char>::_Rep"*
  %304 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i634, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %304) #8
  %cmp.not.i.i637 = icmp eq i8* %arrayidx.i.i636, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i637, label %_ZNSsD2Ev.exit647, label %if.then.i.i639, !prof !47

if.then.i.i639:                                   ; preds = %invoke.cont465
  %_M_refcount.i.i638 = getelementptr inbounds i8, i8* %302, i64 -8
  %305 = bitcast i8* %_M_refcount.i.i638 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i640, label %if.else.i.i.i642

if.then.i.i.i640:                                 ; preds = %if.then.i.i639
  %306 = atomicrmw volatile add i32* %305, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i645

if.else.i.i.i642:                                 ; preds = %if.then.i.i639
  %307 = load i32, i32* %305, align 8, !tbaa !16
  %add.i.i.i.i641 = add nsw i32 %307, -1
  store i32 %add.i.i.i.i641, i32* %305, align 8, !tbaa !16
  br label %invoke.cont.i.i645

invoke.cont.i.i645:                               ; preds = %if.else.i.i.i642, %if.then.i.i.i640
  %retval.0.i.i.i643 = phi i32 [ %306, %if.then.i.i.i640 ], [ %307, %if.else.i.i.i642 ]
  %cmp3.i.i644 = icmp slt i32 %retval.0.i.i.i643, 1
  br i1 %cmp3.i.i644, label %if.then4.i.i646, label %_ZNSsD2Ev.exit647

if.then4.i.i646:                                  ; preds = %invoke.cont.i.i645
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %303, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i634) #8
  br label %_ZNSsD2Ev.exit647

_ZNSsD2Ev.exit647:                                ; preds = %invoke.cont465, %invoke.cont.i.i645, %if.then4.i.i646
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %304) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %301) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %300) #8
  %call473 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %73, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %title)
          to label %invoke.cont472 unwind label %lpad471

invoke.cont472:                                   ; preds = %_ZNSsD2Ev.exit647
  %308 = bitcast %"class.std::basic_string"* %ref.tmp474 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %308) #8
  %309 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp475, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %309) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp474, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.33, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp475)
          to label %invoke.cont477 unwind label %lpad476

invoke.cont477:                                   ; preds = %invoke.cont472
  %310 = load i32, i32* %num_iters, align 4, !tbaa !16
  %call480 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsi(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call473, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp474, i32 noundef signext %310)
          to label %invoke.cont479 unwind label %lpad478

invoke.cont479:                                   ; preds = %invoke.cont477
  %_M_p.i.i.i649 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp474, i64 0, i32 0, i32 0
  %311 = load i8*, i8** %_M_p.i.i.i649, align 8, !tbaa !43
  %arrayidx.i.i650 = getelementptr inbounds i8, i8* %311, i64 -24
  %312 = bitcast i8* %arrayidx.i.i650 to %"struct.std::basic_string<char>::_Rep"*
  %313 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i648, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %313) #8
  %cmp.not.i.i651 = icmp eq i8* %arrayidx.i.i650, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i651, label %_ZNSsD2Ev.exit661, label %if.then.i.i653, !prof !47

if.then.i.i653:                                   ; preds = %invoke.cont479
  %_M_refcount.i.i652 = getelementptr inbounds i8, i8* %311, i64 -8
  %314 = bitcast i8* %_M_refcount.i.i652 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i654, label %if.else.i.i.i656

if.then.i.i.i654:                                 ; preds = %if.then.i.i653
  %315 = atomicrmw volatile add i32* %314, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i659

if.else.i.i.i656:                                 ; preds = %if.then.i.i653
  %316 = load i32, i32* %314, align 8, !tbaa !16
  %add.i.i.i.i655 = add nsw i32 %316, -1
  store i32 %add.i.i.i.i655, i32* %314, align 8, !tbaa !16
  br label %invoke.cont.i.i659

invoke.cont.i.i659:                               ; preds = %if.else.i.i.i656, %if.then.i.i.i654
  %retval.0.i.i.i657 = phi i32 [ %315, %if.then.i.i.i654 ], [ %316, %if.else.i.i.i656 ]
  %cmp3.i.i658 = icmp slt i32 %retval.0.i.i.i657, 1
  br i1 %cmp3.i.i658, label %if.then4.i.i660, label %_ZNSsD2Ev.exit661

if.then4.i.i660:                                  ; preds = %invoke.cont.i.i659
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %312, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i648) #8
  br label %_ZNSsD2Ev.exit661

_ZNSsD2Ev.exit661:                                ; preds = %invoke.cont479, %invoke.cont.i.i659, %if.then4.i.i660
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %313) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %309) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %308) #8
  %call486 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %73, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %title)
          to label %invoke.cont485 unwind label %lpad471

invoke.cont485:                                   ; preds = %_ZNSsD2Ev.exit661
  %317 = bitcast %"class.std::basic_string"* %ref.tmp487 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %317) #8
  %318 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp488, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %318) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp487, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.34, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp488)
          to label %invoke.cont490 unwind label %lpad489

invoke.cont490:                                   ; preds = %invoke.cont485
  %319 = load double, double* %rnorm, align 8, !tbaa !84
  %call493 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsd(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call486, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp487, double noundef %319)
          to label %invoke.cont492 unwind label %lpad491

invoke.cont492:                                   ; preds = %invoke.cont490
  %_M_p.i.i.i663 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp487, i64 0, i32 0, i32 0
  %320 = load i8*, i8** %_M_p.i.i.i663, align 8, !tbaa !43
  %arrayidx.i.i664 = getelementptr inbounds i8, i8* %320, i64 -24
  %321 = bitcast i8* %arrayidx.i.i664 to %"struct.std::basic_string<char>::_Rep"*
  %322 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i662, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %322) #8
  %cmp.not.i.i665 = icmp eq i8* %arrayidx.i.i664, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i665, label %_ZNSsD2Ev.exit675, label %if.then.i.i667, !prof !47

if.then.i.i667:                                   ; preds = %invoke.cont492
  %_M_refcount.i.i666 = getelementptr inbounds i8, i8* %320, i64 -8
  %323 = bitcast i8* %_M_refcount.i.i666 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i668, label %if.else.i.i.i670

if.then.i.i.i668:                                 ; preds = %if.then.i.i667
  %324 = atomicrmw volatile add i32* %323, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i673

if.else.i.i.i670:                                 ; preds = %if.then.i.i667
  %325 = load i32, i32* %323, align 8, !tbaa !16
  %add.i.i.i.i669 = add nsw i32 %325, -1
  store i32 %add.i.i.i.i669, i32* %323, align 8, !tbaa !16
  br label %invoke.cont.i.i673

invoke.cont.i.i673:                               ; preds = %if.else.i.i.i670, %if.then.i.i.i668
  %retval.0.i.i.i671 = phi i32 [ %324, %if.then.i.i.i668 ], [ %325, %if.else.i.i.i670 ]
  %cmp3.i.i672 = icmp slt i32 %retval.0.i.i.i671, 1
  br i1 %cmp3.i.i672, label %if.then4.i.i674, label %_ZNSsD2Ev.exit675

if.then4.i.i674:                                  ; preds = %invoke.cont.i.i673
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %321, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i662) #8
  br label %_ZNSsD2Ev.exit675

_ZNSsD2Ev.exit675:                                ; preds = %invoke.cont492, %invoke.cont.i.i673, %if.then4.i.i674
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %322) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %318) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %317) #8
  %mul = mul i32 %1, %0
  %mul498 = mul i32 %mul, %2
  %conv499 = uitofp i64 %call301 to double
  %mul500 = fmul contract double %conv499, 2.000000e+00
  %conv501 = sitofp i32 %mul498 to double
  %mul502 = fmul contract double %conv501, 2.000000e+00
  %mul504 = fmul contract double %conv501, 3.000000e+00
  %326 = load i32, i32* %num_iters, align 4, !tbaa !16
  %add505 = add nsw i32 %326, 1
  %conv506 = sitofp i32 %add505 to double
  %mul507 = fmul contract double %mul500, %conv506
  %mul508 = shl nsw i32 %326, 1
  %conv509 = sitofp i32 %mul508 to double
  %mul510 = fmul contract double %mul502, %conv509
  %mul511 = mul nsw i32 %326, 3
  %add512 = add nsw i32 %mul511, 2
  %conv513 = sitofp i32 %add512 to double
  %mul514 = fmul contract double %mul504, %conv513
  %add515 = fadd contract double %mul507, %mul510
  %add516 = fadd contract double %add515, %mul514
  %arrayidx517 = getelementptr inbounds [5 x double], [5 x double]* %cg_times, i64 0, i64 2
  %327 = load double, double* %arrayidx517, align 8, !tbaa !84
  %cmp518 = fcmp contract ogt double %327, 1.000000e-04
  br i1 %cmp518, label %if.then519, label %if.end522

if.then519:                                       ; preds = %_ZNSsD2Ev.exit675
  %div = fdiv contract double %mul507, %327
  %mul521 = fmul contract double %div, 0x3EB0C6F7A0B5ED8D
  br label %if.end522

lpad355:                                          ; preds = %if.end353
  %328 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %227) #8
  br label %ehcleanup897

lpad363:                                          ; preds = %invoke.cont356
  %329 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup391

lpad365:                                          ; preds = %invoke.cont364
  %330 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup390

lpad370:                                          ; preds = %invoke.cont366
  %331 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup387

lpad377:                                          ; preds = %invoke.cont371
  %332 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup383

lpad379:                                          ; preds = %invoke.cont378
  %333 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp372) #8
  br label %ehcleanup383

ehcleanup383:                                     ; preds = %lpad379, %lpad377
  %.pn187 = phi { i8*, i32 } [ %333, %lpad379 ], [ %332, %lpad377 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %233) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %232) #8
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp368) #8
  br label %ehcleanup387

ehcleanup387:                                     ; preds = %ehcleanup383, %lpad370
  %.pn187.pn = phi { i8*, i32 } [ %.pn187, %ehcleanup383 ], [ %331, %lpad370 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %231) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %230) #8
  br label %ehcleanup390

ehcleanup390:                                     ; preds = %ehcleanup387, %lpad365
  %.pn187.pn.pn = phi { i8*, i32 } [ %.pn187.pn, %ehcleanup387 ], [ %330, %lpad365 ]
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp361) #8
  br label %ehcleanup391

ehcleanup391:                                     ; preds = %ehcleanup390, %lpad363
  %.pn187.pn.pn.pn = phi { i8*, i32 } [ %.pn187.pn.pn, %ehcleanup390 ], [ %329, %lpad363 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %229) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %228) #8
  br label %ehcleanup896

lpad396:                                          ; preds = %_ZNSsD2Ev.exit549
  %334 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup424

lpad398:                                          ; preds = %invoke.cont397
  %335 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup423

lpad403:                                          ; preds = %invoke.cont399
  %336 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup420

lpad410:                                          ; preds = %invoke.cont404
  %337 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup416

lpad412:                                          ; preds = %invoke.cont411
  %338 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp405) #8
  br label %ehcleanup416

ehcleanup416:                                     ; preds = %lpad412, %lpad410
  %.pn192 = phi { i8*, i32 } [ %338, %lpad412 ], [ %337, %lpad410 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %257) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %256) #8
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp401) #8
  br label %ehcleanup420

ehcleanup420:                                     ; preds = %ehcleanup416, %lpad403
  %.pn192.pn = phi { i8*, i32 } [ %.pn192, %ehcleanup416 ], [ %336, %lpad403 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %255) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %254) #8
  br label %ehcleanup423

ehcleanup423:                                     ; preds = %ehcleanup420, %lpad398
  %.pn192.pn.pn = phi { i8*, i32 } [ %.pn192.pn, %ehcleanup420 ], [ %335, %lpad398 ]
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp394) #8
  br label %ehcleanup424

ehcleanup424:                                     ; preds = %ehcleanup423, %lpad396
  %.pn192.pn.pn.pn = phi { i8*, i32 } [ %.pn192.pn.pn, %ehcleanup423 ], [ %334, %lpad396 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %253) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %252) #8
  br label %ehcleanup896

lpad429:                                          ; preds = %_ZNSsD2Ev.exit591
  %339 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup457

lpad431:                                          ; preds = %invoke.cont430
  %340 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup456

lpad436:                                          ; preds = %invoke.cont432
  %341 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup453

lpad443:                                          ; preds = %invoke.cont437
  %342 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup449

lpad445:                                          ; preds = %invoke.cont444
  %343 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp438) #8
  br label %ehcleanup449

ehcleanup449:                                     ; preds = %lpad445, %lpad443
  %.pn197 = phi { i8*, i32 } [ %343, %lpad445 ], [ %342, %lpad443 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %281) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %280) #8
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp434) #8
  br label %ehcleanup453

ehcleanup453:                                     ; preds = %ehcleanup449, %lpad436
  %.pn197.pn = phi { i8*, i32 } [ %.pn197, %ehcleanup449 ], [ %341, %lpad436 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %279) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %278) #8
  br label %ehcleanup456

ehcleanup456:                                     ; preds = %ehcleanup453, %lpad431
  %.pn197.pn.pn = phi { i8*, i32 } [ %.pn197.pn, %ehcleanup453 ], [ %340, %lpad431 ]
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp427) #8
  br label %ehcleanup457

ehcleanup457:                                     ; preds = %ehcleanup456, %lpad429
  %.pn197.pn.pn.pn = phi { i8*, i32 } [ %.pn197.pn.pn, %ehcleanup456 ], [ %339, %lpad429 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %277) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %276) #8
  br label %ehcleanup896

lpad462:                                          ; preds = %_ZNSsD2Ev.exit633
  %344 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup468

lpad464:                                          ; preds = %invoke.cont463
  %345 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp460) #8
  br label %ehcleanup468

ehcleanup468:                                     ; preds = %lpad464, %lpad462
  %.pn202 = phi { i8*, i32 } [ %345, %lpad464 ], [ %344, %lpad462 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %301) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %300) #8
  br label %ehcleanup896

lpad471:                                          ; preds = %_ZNSsD2Ev.exit661, %_ZNSsD2Ev.exit647
  %346 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup896

lpad476:                                          ; preds = %invoke.cont472
  %347 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup482

lpad478:                                          ; preds = %invoke.cont477
  %348 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp474) #8
  br label %ehcleanup482

ehcleanup482:                                     ; preds = %lpad478, %lpad476
  %.pn204 = phi { i8*, i32 } [ %348, %lpad478 ], [ %347, %lpad476 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %309) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %308) #8
  br label %ehcleanup896

lpad489:                                          ; preds = %invoke.cont485
  %349 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup495

lpad491:                                          ; preds = %invoke.cont490
  %350 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp487) #8
  br label %ehcleanup495

ehcleanup495:                                     ; preds = %lpad491, %lpad489
  %.pn206 = phi { i8*, i32 } [ %350, %lpad491 ], [ %349, %lpad489 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %318) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %317) #8
  br label %ehcleanup896

if.end522:                                        ; preds = %if.then519, %_ZNSsD2Ev.exit675
  %mv_mflops.0 = phi double [ %mul521, %if.then519 ], [ -1.000000e+00, %_ZNSsD2Ev.exit675 ]
  %arrayidx523 = getelementptr inbounds [5 x double], [5 x double]* %cg_times, i64 0, i64 1
  %351 = load double, double* %arrayidx523, align 8, !tbaa !84
  %cmp524 = fcmp contract ogt double %351, 1.000000e-04
  br i1 %cmp524, label %if.then525, label %if.end529

if.then525:                                       ; preds = %if.end522
  %div527 = fdiv contract double %mul510, %351
  %mul528 = fmul contract double %div527, 0x3EB0C6F7A0B5ED8D
  br label %if.end529

if.end529:                                        ; preds = %if.then525, %if.end522
  %dot_mflops.0 = phi double [ %mul528, %if.then525 ], [ -1.000000e+00, %if.end522 ]
  %arrayidx530 = getelementptr inbounds [5 x double], [5 x double]* %cg_times, i64 0, i64 0
  %352 = load double, double* %arrayidx530, align 8, !tbaa !84
  %cmp531 = fcmp contract ogt double %352, 1.000000e-04
  br i1 %cmp531, label %if.then532, label %if.end536

if.then532:                                       ; preds = %if.end529
  %div534 = fdiv contract double %mul514, %352
  %mul535 = fmul contract double %div534, 0x3EB0C6F7A0B5ED8D
  br label %if.end536

if.end536:                                        ; preds = %if.then532, %if.end529
  %waxpy_mflops.0 = phi double [ %mul535, %if.then532 ], [ -1.000000e+00, %if.end529 ]
  %arrayidx537 = getelementptr inbounds [5 x double], [5 x double]* %cg_times, i64 0, i64 4
  %353 = load double, double* %arrayidx537, align 8, !tbaa !84
  %cmp538 = fcmp contract ogt double %353, 1.000000e-04
  br i1 %cmp538, label %if.then539, label %if.end543

if.then539:                                       ; preds = %if.end536
  %div541 = fdiv contract double %add516, %353
  %mul542 = fmul contract double %div541, 0x3EB0C6F7A0B5ED8D
  br label %if.end543

if.end543:                                        ; preds = %if.then539, %if.end536
  %total_mflops.0 = phi double [ %mul542, %if.then539 ], [ -1.000000e+00, %if.end536 ]
  %call546 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %73, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %title)
          to label %invoke.cont545 unwind label %lpad544

invoke.cont545:                                   ; preds = %if.end543
  %354 = bitcast %"class.std::basic_string"* %ref.tmp547 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %354) #8
  %355 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp548, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %355) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp547, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.35, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp548)
          to label %invoke.cont550 unwind label %lpad549

invoke.cont550:                                   ; preds = %invoke.cont545
  %356 = load double, double* %arrayidx530, align 8, !tbaa !84
  %call554 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsd(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call546, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp547, double noundef %356)
          to label %invoke.cont553 unwind label %lpad552

invoke.cont553:                                   ; preds = %invoke.cont550
  %_M_p.i.i.i677 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp547, i64 0, i32 0, i32 0
  %357 = load i8*, i8** %_M_p.i.i.i677, align 8, !tbaa !43
  %arrayidx.i.i678 = getelementptr inbounds i8, i8* %357, i64 -24
  %358 = bitcast i8* %arrayidx.i.i678 to %"struct.std::basic_string<char>::_Rep"*
  %359 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i676, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %359) #8
  %cmp.not.i.i679 = icmp eq i8* %arrayidx.i.i678, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i679, label %_ZNSsD2Ev.exit689, label %if.then.i.i681, !prof !47

if.then.i.i681:                                   ; preds = %invoke.cont553
  %_M_refcount.i.i680 = getelementptr inbounds i8, i8* %357, i64 -8
  %360 = bitcast i8* %_M_refcount.i.i680 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i682, label %if.else.i.i.i684

if.then.i.i.i682:                                 ; preds = %if.then.i.i681
  %361 = atomicrmw volatile add i32* %360, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i687

if.else.i.i.i684:                                 ; preds = %if.then.i.i681
  %362 = load i32, i32* %360, align 8, !tbaa !16
  %add.i.i.i.i683 = add nsw i32 %362, -1
  store i32 %add.i.i.i.i683, i32* %360, align 8, !tbaa !16
  br label %invoke.cont.i.i687

invoke.cont.i.i687:                               ; preds = %if.else.i.i.i684, %if.then.i.i.i682
  %retval.0.i.i.i685 = phi i32 [ %361, %if.then.i.i.i682 ], [ %362, %if.else.i.i.i684 ]
  %cmp3.i.i686 = icmp slt i32 %retval.0.i.i.i685, 1
  br i1 %cmp3.i.i686, label %if.then4.i.i688, label %_ZNSsD2Ev.exit689

if.then4.i.i688:                                  ; preds = %invoke.cont.i.i687
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %358, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i676) #8
  br label %_ZNSsD2Ev.exit689

_ZNSsD2Ev.exit689:                                ; preds = %invoke.cont553, %invoke.cont.i.i687, %if.then4.i.i688
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %359) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %355) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %354) #8
  %call560 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %73, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %title)
          to label %invoke.cont559 unwind label %lpad544

invoke.cont559:                                   ; preds = %_ZNSsD2Ev.exit689
  %363 = bitcast %"class.std::basic_string"* %ref.tmp561 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %363) #8
  %364 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp562, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %364) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp561, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.36, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp562)
          to label %invoke.cont564 unwind label %lpad563

invoke.cont564:                                   ; preds = %invoke.cont559
  %call567 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsd(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call560, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp561, double noundef %mul514)
          to label %invoke.cont566 unwind label %lpad565

invoke.cont566:                                   ; preds = %invoke.cont564
  %_M_p.i.i.i691 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp561, i64 0, i32 0, i32 0
  %365 = load i8*, i8** %_M_p.i.i.i691, align 8, !tbaa !43
  %arrayidx.i.i692 = getelementptr inbounds i8, i8* %365, i64 -24
  %366 = bitcast i8* %arrayidx.i.i692 to %"struct.std::basic_string<char>::_Rep"*
  %367 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i690, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %367) #8
  %cmp.not.i.i693 = icmp eq i8* %arrayidx.i.i692, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i693, label %_ZNSsD2Ev.exit703, label %if.then.i.i695, !prof !47

if.then.i.i695:                                   ; preds = %invoke.cont566
  %_M_refcount.i.i694 = getelementptr inbounds i8, i8* %365, i64 -8
  %368 = bitcast i8* %_M_refcount.i.i694 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i696, label %if.else.i.i.i698

if.then.i.i.i696:                                 ; preds = %if.then.i.i695
  %369 = atomicrmw volatile add i32* %368, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i701

if.else.i.i.i698:                                 ; preds = %if.then.i.i695
  %370 = load i32, i32* %368, align 8, !tbaa !16
  %add.i.i.i.i697 = add nsw i32 %370, -1
  store i32 %add.i.i.i.i697, i32* %368, align 8, !tbaa !16
  br label %invoke.cont.i.i701

invoke.cont.i.i701:                               ; preds = %if.else.i.i.i698, %if.then.i.i.i696
  %retval.0.i.i.i699 = phi i32 [ %369, %if.then.i.i.i696 ], [ %370, %if.else.i.i.i698 ]
  %cmp3.i.i700 = icmp slt i32 %retval.0.i.i.i699, 1
  br i1 %cmp3.i.i700, label %if.then4.i.i702, label %_ZNSsD2Ev.exit703

if.then4.i.i702:                                  ; preds = %invoke.cont.i.i701
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %366, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i690) #8
  br label %_ZNSsD2Ev.exit703

_ZNSsD2Ev.exit703:                                ; preds = %invoke.cont566, %invoke.cont.i.i701, %if.then4.i.i702
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %367) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %364) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %363) #8
  %cmp572 = fcmp contract ult double %waxpy_mflops.0, 0.000000e+00
  br i1 %cmp572, label %if.else587, label %if.then573

if.then573:                                       ; preds = %_ZNSsD2Ev.exit703
  %call575 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %73, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %title)
          to label %invoke.cont574 unwind label %lpad544

invoke.cont574:                                   ; preds = %if.then573
  %371 = bitcast %"class.std::basic_string"* %ref.tmp576 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %371) #8
  %372 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp577, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %372) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp576, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.37, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp577)
          to label %invoke.cont579 unwind label %lpad578

invoke.cont579:                                   ; preds = %invoke.cont574
  %call582 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsd(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call575, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp576, double noundef %waxpy_mflops.0)
          to label %invoke.cont581 unwind label %lpad580

invoke.cont581:                                   ; preds = %invoke.cont579
  %_M_p.i.i.i705 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp576, i64 0, i32 0, i32 0
  %373 = load i8*, i8** %_M_p.i.i.i705, align 8, !tbaa !43
  %arrayidx.i.i706 = getelementptr inbounds i8, i8* %373, i64 -24
  %374 = bitcast i8* %arrayidx.i.i706 to %"struct.std::basic_string<char>::_Rep"*
  %375 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i704, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %375) #8
  %cmp.not.i.i707 = icmp eq i8* %arrayidx.i.i706, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i707, label %_ZNSsD2Ev.exit717, label %if.then.i.i709, !prof !47

if.then.i.i709:                                   ; preds = %invoke.cont581
  %_M_refcount.i.i708 = getelementptr inbounds i8, i8* %373, i64 -8
  %376 = bitcast i8* %_M_refcount.i.i708 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i710, label %if.else.i.i.i712

if.then.i.i.i710:                                 ; preds = %if.then.i.i709
  %377 = atomicrmw volatile add i32* %376, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i715

if.else.i.i.i712:                                 ; preds = %if.then.i.i709
  %378 = load i32, i32* %376, align 8, !tbaa !16
  %add.i.i.i.i711 = add nsw i32 %378, -1
  store i32 %add.i.i.i.i711, i32* %376, align 8, !tbaa !16
  br label %invoke.cont.i.i715

invoke.cont.i.i715:                               ; preds = %if.else.i.i.i712, %if.then.i.i.i710
  %retval.0.i.i.i713 = phi i32 [ %377, %if.then.i.i.i710 ], [ %378, %if.else.i.i.i712 ]
  %cmp3.i.i714 = icmp slt i32 %retval.0.i.i.i713, 1
  br i1 %cmp3.i.i714, label %if.then4.i.i716, label %_ZNSsD2Ev.exit717

if.then4.i.i716:                                  ; preds = %invoke.cont.i.i715
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %374, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i704) #8
  br label %_ZNSsD2Ev.exit717

_ZNSsD2Ev.exit717:                                ; preds = %invoke.cont581, %invoke.cont.i.i715, %if.then4.i.i716
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %375) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %372) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %371) #8
  br label %if.end609

lpad544:                                          ; preds = %if.end869, %if.else836, %if.then811, %_ZNSsD2Ev.exit941, %_ZNSsD2Ev.exit913, %if.end739, %if.else717, %if.then703, %_ZNSsD2Ev.exit829, %if.end674, %if.else652, %if.then638, %_ZNSsD2Ev.exit759, %if.end609, %if.else587, %if.then573, %_ZNSsD2Ev.exit689, %if.end543
  %379 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup896

lpad549:                                          ; preds = %invoke.cont545
  %380 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup556

lpad552:                                          ; preds = %invoke.cont550
  %381 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp547) #8
  br label %ehcleanup556

ehcleanup556:                                     ; preds = %lpad552, %lpad549
  %.pn208 = phi { i8*, i32 } [ %381, %lpad552 ], [ %380, %lpad549 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %355) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %354) #8
  br label %ehcleanup896

lpad563:                                          ; preds = %invoke.cont559
  %382 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup569

lpad565:                                          ; preds = %invoke.cont564
  %383 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp561) #8
  br label %ehcleanup569

ehcleanup569:                                     ; preds = %lpad565, %lpad563
  %.pn210 = phi { i8*, i32 } [ %383, %lpad565 ], [ %382, %lpad563 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %364) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %363) #8
  br label %ehcleanup896

lpad578:                                          ; preds = %invoke.cont574
  %384 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup584

lpad580:                                          ; preds = %invoke.cont579
  %385 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp576) #8
  br label %ehcleanup584

ehcleanup584:                                     ; preds = %lpad580, %lpad578
  %.pn255 = phi { i8*, i32 } [ %385, %lpad580 ], [ %384, %lpad578 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %372) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %371) #8
  br label %ehcleanup896

if.else587:                                       ; preds = %_ZNSsD2Ev.exit703
  %call589 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %73, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %title)
          to label %invoke.cont588 unwind label %lpad544

invoke.cont588:                                   ; preds = %if.else587
  %386 = bitcast %"class.std::basic_string"* %ref.tmp590 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %386) #8
  %387 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp591, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %387) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp590, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.37, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp591)
          to label %invoke.cont593 unwind label %lpad592

invoke.cont593:                                   ; preds = %invoke.cont588
  %388 = bitcast %"class.std::basic_string"* %ref.tmp594 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %388) #8
  %389 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp595, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %389) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp594, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.38, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp595)
          to label %invoke.cont597 unwind label %lpad596

invoke.cont597:                                   ; preds = %invoke.cont593
  %call600 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsS1_(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call589, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp590, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp594)
          to label %invoke.cont599 unwind label %lpad598

invoke.cont599:                                   ; preds = %invoke.cont597
  %_M_p.i.i.i719 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp594, i64 0, i32 0, i32 0
  %390 = load i8*, i8** %_M_p.i.i.i719, align 8, !tbaa !43
  %arrayidx.i.i720 = getelementptr inbounds i8, i8* %390, i64 -24
  %391 = bitcast i8* %arrayidx.i.i720 to %"struct.std::basic_string<char>::_Rep"*
  %392 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i718, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %392) #8
  %cmp.not.i.i721 = icmp eq i8* %arrayidx.i.i720, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i721, label %_ZNSsD2Ev.exit731, label %if.then.i.i723, !prof !47

if.then.i.i723:                                   ; preds = %invoke.cont599
  %_M_refcount.i.i722 = getelementptr inbounds i8, i8* %390, i64 -8
  %393 = bitcast i8* %_M_refcount.i.i722 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i724, label %if.else.i.i.i726

if.then.i.i.i724:                                 ; preds = %if.then.i.i723
  %394 = atomicrmw volatile add i32* %393, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i729

if.else.i.i.i726:                                 ; preds = %if.then.i.i723
  %395 = load i32, i32* %393, align 8, !tbaa !16
  %add.i.i.i.i725 = add nsw i32 %395, -1
  store i32 %add.i.i.i.i725, i32* %393, align 8, !tbaa !16
  br label %invoke.cont.i.i729

invoke.cont.i.i729:                               ; preds = %if.else.i.i.i726, %if.then.i.i.i724
  %retval.0.i.i.i727 = phi i32 [ %394, %if.then.i.i.i724 ], [ %395, %if.else.i.i.i726 ]
  %cmp3.i.i728 = icmp slt i32 %retval.0.i.i.i727, 1
  br i1 %cmp3.i.i728, label %if.then4.i.i730, label %_ZNSsD2Ev.exit731

if.then4.i.i730:                                  ; preds = %invoke.cont.i.i729
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %391, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i718) #8
  br label %_ZNSsD2Ev.exit731

_ZNSsD2Ev.exit731:                                ; preds = %invoke.cont599, %invoke.cont.i.i729, %if.then4.i.i730
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %392) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %389) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %388) #8
  %_M_p.i.i.i733 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp590, i64 0, i32 0, i32 0
  %396 = load i8*, i8** %_M_p.i.i.i733, align 8, !tbaa !43
  %arrayidx.i.i734 = getelementptr inbounds i8, i8* %396, i64 -24
  %397 = bitcast i8* %arrayidx.i.i734 to %"struct.std::basic_string<char>::_Rep"*
  %398 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i732, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %398) #8
  %cmp.not.i.i735 = icmp eq i8* %arrayidx.i.i734, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i735, label %_ZNSsD2Ev.exit745, label %if.then.i.i737, !prof !47

if.then.i.i737:                                   ; preds = %_ZNSsD2Ev.exit731
  %_M_refcount.i.i736 = getelementptr inbounds i8, i8* %396, i64 -8
  %399 = bitcast i8* %_M_refcount.i.i736 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i738, label %if.else.i.i.i740

if.then.i.i.i738:                                 ; preds = %if.then.i.i737
  %400 = atomicrmw volatile add i32* %399, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i743

if.else.i.i.i740:                                 ; preds = %if.then.i.i737
  %401 = load i32, i32* %399, align 8, !tbaa !16
  %add.i.i.i.i739 = add nsw i32 %401, -1
  store i32 %add.i.i.i.i739, i32* %399, align 8, !tbaa !16
  br label %invoke.cont.i.i743

invoke.cont.i.i743:                               ; preds = %if.else.i.i.i740, %if.then.i.i.i738
  %retval.0.i.i.i741 = phi i32 [ %400, %if.then.i.i.i738 ], [ %401, %if.else.i.i.i740 ]
  %cmp3.i.i742 = icmp slt i32 %retval.0.i.i.i741, 1
  br i1 %cmp3.i.i742, label %if.then4.i.i744, label %_ZNSsD2Ev.exit745

if.then4.i.i744:                                  ; preds = %invoke.cont.i.i743
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %397, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i732) #8
  br label %_ZNSsD2Ev.exit745

_ZNSsD2Ev.exit745:                                ; preds = %_ZNSsD2Ev.exit731, %invoke.cont.i.i743, %if.then4.i.i744
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %398) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %387) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %386) #8
  br label %if.end609

lpad592:                                          ; preds = %invoke.cont588
  %402 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup606

lpad596:                                          ; preds = %invoke.cont593
  %403 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup602

lpad598:                                          ; preds = %invoke.cont597
  %404 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp594) #8
  br label %ehcleanup602

ehcleanup602:                                     ; preds = %lpad598, %lpad596
  %.pn212 = phi { i8*, i32 } [ %404, %lpad598 ], [ %403, %lpad596 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %389) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %388) #8
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp590) #8
  br label %ehcleanup606

ehcleanup606:                                     ; preds = %ehcleanup602, %lpad592
  %.pn212.pn = phi { i8*, i32 } [ %.pn212, %ehcleanup602 ], [ %402, %lpad592 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %387) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %386) #8
  br label %ehcleanup896

if.end609:                                        ; preds = %_ZNSsD2Ev.exit745, %_ZNSsD2Ev.exit717
  %call611 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %73, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %title)
          to label %invoke.cont610 unwind label %lpad544

invoke.cont610:                                   ; preds = %if.end609
  %405 = bitcast %"class.std::basic_string"* %ref.tmp612 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %405) #8
  %406 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp613, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %406) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp612, i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.39, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp613)
          to label %invoke.cont615 unwind label %lpad614

invoke.cont615:                                   ; preds = %invoke.cont610
  %407 = load double, double* %arrayidx523, align 8, !tbaa !84
  %call619 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsd(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call611, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp612, double noundef %407)
          to label %invoke.cont618 unwind label %lpad617

invoke.cont618:                                   ; preds = %invoke.cont615
  %_M_p.i.i.i747 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp612, i64 0, i32 0, i32 0
  %408 = load i8*, i8** %_M_p.i.i.i747, align 8, !tbaa !43
  %arrayidx.i.i748 = getelementptr inbounds i8, i8* %408, i64 -24
  %409 = bitcast i8* %arrayidx.i.i748 to %"struct.std::basic_string<char>::_Rep"*
  %410 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i746, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %410) #8
  %cmp.not.i.i749 = icmp eq i8* %arrayidx.i.i748, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i749, label %_ZNSsD2Ev.exit759, label %if.then.i.i751, !prof !47

if.then.i.i751:                                   ; preds = %invoke.cont618
  %_M_refcount.i.i750 = getelementptr inbounds i8, i8* %408, i64 -8
  %411 = bitcast i8* %_M_refcount.i.i750 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i752, label %if.else.i.i.i754

if.then.i.i.i752:                                 ; preds = %if.then.i.i751
  %412 = atomicrmw volatile add i32* %411, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i757

if.else.i.i.i754:                                 ; preds = %if.then.i.i751
  %413 = load i32, i32* %411, align 8, !tbaa !16
  %add.i.i.i.i753 = add nsw i32 %413, -1
  store i32 %add.i.i.i.i753, i32* %411, align 8, !tbaa !16
  br label %invoke.cont.i.i757

invoke.cont.i.i757:                               ; preds = %if.else.i.i.i754, %if.then.i.i.i752
  %retval.0.i.i.i755 = phi i32 [ %412, %if.then.i.i.i752 ], [ %413, %if.else.i.i.i754 ]
  %cmp3.i.i756 = icmp slt i32 %retval.0.i.i.i755, 1
  br i1 %cmp3.i.i756, label %if.then4.i.i758, label %_ZNSsD2Ev.exit759

if.then4.i.i758:                                  ; preds = %invoke.cont.i.i757
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %409, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i746) #8
  br label %_ZNSsD2Ev.exit759

_ZNSsD2Ev.exit759:                                ; preds = %invoke.cont618, %invoke.cont.i.i757, %if.then4.i.i758
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %410) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %406) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %405) #8
  %call625 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %73, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %title)
          to label %invoke.cont624 unwind label %lpad544

invoke.cont624:                                   ; preds = %_ZNSsD2Ev.exit759
  %414 = bitcast %"class.std::basic_string"* %ref.tmp626 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %414) #8
  %415 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp627, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %415) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp626, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.40, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp627)
          to label %invoke.cont629 unwind label %lpad628

invoke.cont629:                                   ; preds = %invoke.cont624
  %call632 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsd(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call625, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp626, double noundef %mul510)
          to label %invoke.cont631 unwind label %lpad630

invoke.cont631:                                   ; preds = %invoke.cont629
  %_M_p.i.i.i761 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp626, i64 0, i32 0, i32 0
  %416 = load i8*, i8** %_M_p.i.i.i761, align 8, !tbaa !43
  %arrayidx.i.i762 = getelementptr inbounds i8, i8* %416, i64 -24
  %417 = bitcast i8* %arrayidx.i.i762 to %"struct.std::basic_string<char>::_Rep"*
  %418 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i760, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %418) #8
  %cmp.not.i.i763 = icmp eq i8* %arrayidx.i.i762, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i763, label %_ZNSsD2Ev.exit773, label %if.then.i.i765, !prof !47

if.then.i.i765:                                   ; preds = %invoke.cont631
  %_M_refcount.i.i764 = getelementptr inbounds i8, i8* %416, i64 -8
  %419 = bitcast i8* %_M_refcount.i.i764 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i766, label %if.else.i.i.i768

if.then.i.i.i766:                                 ; preds = %if.then.i.i765
  %420 = atomicrmw volatile add i32* %419, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i771

if.else.i.i.i768:                                 ; preds = %if.then.i.i765
  %421 = load i32, i32* %419, align 8, !tbaa !16
  %add.i.i.i.i767 = add nsw i32 %421, -1
  store i32 %add.i.i.i.i767, i32* %419, align 8, !tbaa !16
  br label %invoke.cont.i.i771

invoke.cont.i.i771:                               ; preds = %if.else.i.i.i768, %if.then.i.i.i766
  %retval.0.i.i.i769 = phi i32 [ %420, %if.then.i.i.i766 ], [ %421, %if.else.i.i.i768 ]
  %cmp3.i.i770 = icmp slt i32 %retval.0.i.i.i769, 1
  br i1 %cmp3.i.i770, label %if.then4.i.i772, label %_ZNSsD2Ev.exit773

if.then4.i.i772:                                  ; preds = %invoke.cont.i.i771
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %417, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i760) #8
  br label %_ZNSsD2Ev.exit773

_ZNSsD2Ev.exit773:                                ; preds = %invoke.cont631, %invoke.cont.i.i771, %if.then4.i.i772
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %418) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %415) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %414) #8
  %cmp637 = fcmp contract ult double %dot_mflops.0, 0.000000e+00
  br i1 %cmp637, label %if.else652, label %if.then638

if.then638:                                       ; preds = %_ZNSsD2Ev.exit773
  %call640 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %73, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %title)
          to label %invoke.cont639 unwind label %lpad544

invoke.cont639:                                   ; preds = %if.then638
  %422 = bitcast %"class.std::basic_string"* %ref.tmp641 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %422) #8
  %423 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp642, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %423) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp641, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.41, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp642)
          to label %invoke.cont644 unwind label %lpad643

invoke.cont644:                                   ; preds = %invoke.cont639
  %call647 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsd(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call640, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp641, double noundef %dot_mflops.0)
          to label %invoke.cont646 unwind label %lpad645

invoke.cont646:                                   ; preds = %invoke.cont644
  %_M_p.i.i.i775 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp641, i64 0, i32 0, i32 0
  %424 = load i8*, i8** %_M_p.i.i.i775, align 8, !tbaa !43
  %arrayidx.i.i776 = getelementptr inbounds i8, i8* %424, i64 -24
  %425 = bitcast i8* %arrayidx.i.i776 to %"struct.std::basic_string<char>::_Rep"*
  %426 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i774, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %426) #8
  %cmp.not.i.i777 = icmp eq i8* %arrayidx.i.i776, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i777, label %_ZNSsD2Ev.exit787, label %if.then.i.i779, !prof !47

if.then.i.i779:                                   ; preds = %invoke.cont646
  %_M_refcount.i.i778 = getelementptr inbounds i8, i8* %424, i64 -8
  %427 = bitcast i8* %_M_refcount.i.i778 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i780, label %if.else.i.i.i782

if.then.i.i.i780:                                 ; preds = %if.then.i.i779
  %428 = atomicrmw volatile add i32* %427, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i785

if.else.i.i.i782:                                 ; preds = %if.then.i.i779
  %429 = load i32, i32* %427, align 8, !tbaa !16
  %add.i.i.i.i781 = add nsw i32 %429, -1
  store i32 %add.i.i.i.i781, i32* %427, align 8, !tbaa !16
  br label %invoke.cont.i.i785

invoke.cont.i.i785:                               ; preds = %if.else.i.i.i782, %if.then.i.i.i780
  %retval.0.i.i.i783 = phi i32 [ %428, %if.then.i.i.i780 ], [ %429, %if.else.i.i.i782 ]
  %cmp3.i.i784 = icmp slt i32 %retval.0.i.i.i783, 1
  br i1 %cmp3.i.i784, label %if.then4.i.i786, label %_ZNSsD2Ev.exit787

if.then4.i.i786:                                  ; preds = %invoke.cont.i.i785
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %425, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i774) #8
  br label %_ZNSsD2Ev.exit787

_ZNSsD2Ev.exit787:                                ; preds = %invoke.cont646, %invoke.cont.i.i785, %if.then4.i.i786
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %426) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %423) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %422) #8
  br label %if.end674

lpad614:                                          ; preds = %invoke.cont610
  %430 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup621

lpad617:                                          ; preds = %invoke.cont615
  %431 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp612) #8
  br label %ehcleanup621

ehcleanup621:                                     ; preds = %lpad617, %lpad614
  %.pn215 = phi { i8*, i32 } [ %431, %lpad617 ], [ %430, %lpad614 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %406) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %405) #8
  br label %ehcleanup896

lpad628:                                          ; preds = %invoke.cont624
  %432 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup634

lpad630:                                          ; preds = %invoke.cont629
  %433 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp626) #8
  br label %ehcleanup634

ehcleanup634:                                     ; preds = %lpad630, %lpad628
  %.pn217 = phi { i8*, i32 } [ %433, %lpad630 ], [ %432, %lpad628 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %415) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %414) #8
  br label %ehcleanup896

lpad643:                                          ; preds = %invoke.cont639
  %434 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup649

lpad645:                                          ; preds = %invoke.cont644
  %435 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp641) #8
  br label %ehcleanup649

ehcleanup649:                                     ; preds = %lpad645, %lpad643
  %.pn253 = phi { i8*, i32 } [ %435, %lpad645 ], [ %434, %lpad643 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %423) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %422) #8
  br label %ehcleanup896

if.else652:                                       ; preds = %_ZNSsD2Ev.exit773
  %call654 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %73, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %title)
          to label %invoke.cont653 unwind label %lpad544

invoke.cont653:                                   ; preds = %if.else652
  %436 = bitcast %"class.std::basic_string"* %ref.tmp655 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %436) #8
  %437 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp656, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %437) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp655, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.41, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp656)
          to label %invoke.cont658 unwind label %lpad657

invoke.cont658:                                   ; preds = %invoke.cont653
  %438 = bitcast %"class.std::basic_string"* %ref.tmp659 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %438) #8
  %439 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp660, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %439) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp659, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.38, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp660)
          to label %invoke.cont662 unwind label %lpad661

invoke.cont662:                                   ; preds = %invoke.cont658
  %call665 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsS1_(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call654, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp655, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp659)
          to label %invoke.cont664 unwind label %lpad663

invoke.cont664:                                   ; preds = %invoke.cont662
  %_M_p.i.i.i789 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp659, i64 0, i32 0, i32 0
  %440 = load i8*, i8** %_M_p.i.i.i789, align 8, !tbaa !43
  %arrayidx.i.i790 = getelementptr inbounds i8, i8* %440, i64 -24
  %441 = bitcast i8* %arrayidx.i.i790 to %"struct.std::basic_string<char>::_Rep"*
  %442 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i788, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %442) #8
  %cmp.not.i.i791 = icmp eq i8* %arrayidx.i.i790, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i791, label %_ZNSsD2Ev.exit801, label %if.then.i.i793, !prof !47

if.then.i.i793:                                   ; preds = %invoke.cont664
  %_M_refcount.i.i792 = getelementptr inbounds i8, i8* %440, i64 -8
  %443 = bitcast i8* %_M_refcount.i.i792 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i794, label %if.else.i.i.i796

if.then.i.i.i794:                                 ; preds = %if.then.i.i793
  %444 = atomicrmw volatile add i32* %443, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i799

if.else.i.i.i796:                                 ; preds = %if.then.i.i793
  %445 = load i32, i32* %443, align 8, !tbaa !16
  %add.i.i.i.i795 = add nsw i32 %445, -1
  store i32 %add.i.i.i.i795, i32* %443, align 8, !tbaa !16
  br label %invoke.cont.i.i799

invoke.cont.i.i799:                               ; preds = %if.else.i.i.i796, %if.then.i.i.i794
  %retval.0.i.i.i797 = phi i32 [ %444, %if.then.i.i.i794 ], [ %445, %if.else.i.i.i796 ]
  %cmp3.i.i798 = icmp slt i32 %retval.0.i.i.i797, 1
  br i1 %cmp3.i.i798, label %if.then4.i.i800, label %_ZNSsD2Ev.exit801

if.then4.i.i800:                                  ; preds = %invoke.cont.i.i799
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %441, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i788) #8
  br label %_ZNSsD2Ev.exit801

_ZNSsD2Ev.exit801:                                ; preds = %invoke.cont664, %invoke.cont.i.i799, %if.then4.i.i800
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %442) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %439) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %438) #8
  %_M_p.i.i.i803 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp655, i64 0, i32 0, i32 0
  %446 = load i8*, i8** %_M_p.i.i.i803, align 8, !tbaa !43
  %arrayidx.i.i804 = getelementptr inbounds i8, i8* %446, i64 -24
  %447 = bitcast i8* %arrayidx.i.i804 to %"struct.std::basic_string<char>::_Rep"*
  %448 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i802, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %448) #8
  %cmp.not.i.i805 = icmp eq i8* %arrayidx.i.i804, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i805, label %_ZNSsD2Ev.exit815, label %if.then.i.i807, !prof !47

if.then.i.i807:                                   ; preds = %_ZNSsD2Ev.exit801
  %_M_refcount.i.i806 = getelementptr inbounds i8, i8* %446, i64 -8
  %449 = bitcast i8* %_M_refcount.i.i806 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i808, label %if.else.i.i.i810

if.then.i.i.i808:                                 ; preds = %if.then.i.i807
  %450 = atomicrmw volatile add i32* %449, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i813

if.else.i.i.i810:                                 ; preds = %if.then.i.i807
  %451 = load i32, i32* %449, align 8, !tbaa !16
  %add.i.i.i.i809 = add nsw i32 %451, -1
  store i32 %add.i.i.i.i809, i32* %449, align 8, !tbaa !16
  br label %invoke.cont.i.i813

invoke.cont.i.i813:                               ; preds = %if.else.i.i.i810, %if.then.i.i.i808
  %retval.0.i.i.i811 = phi i32 [ %450, %if.then.i.i.i808 ], [ %451, %if.else.i.i.i810 ]
  %cmp3.i.i812 = icmp slt i32 %retval.0.i.i.i811, 1
  br i1 %cmp3.i.i812, label %if.then4.i.i814, label %_ZNSsD2Ev.exit815

if.then4.i.i814:                                  ; preds = %invoke.cont.i.i813
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %447, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i802) #8
  br label %_ZNSsD2Ev.exit815

_ZNSsD2Ev.exit815:                                ; preds = %_ZNSsD2Ev.exit801, %invoke.cont.i.i813, %if.then4.i.i814
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %448) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %437) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %436) #8
  br label %if.end674

lpad657:                                          ; preds = %invoke.cont653
  %452 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup671

lpad661:                                          ; preds = %invoke.cont658
  %453 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup667

lpad663:                                          ; preds = %invoke.cont662
  %454 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp659) #8
  br label %ehcleanup667

ehcleanup667:                                     ; preds = %lpad663, %lpad661
  %.pn219 = phi { i8*, i32 } [ %454, %lpad663 ], [ %453, %lpad661 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %439) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %438) #8
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp655) #8
  br label %ehcleanup671

ehcleanup671:                                     ; preds = %ehcleanup667, %lpad657
  %.pn219.pn = phi { i8*, i32 } [ %.pn219, %ehcleanup667 ], [ %452, %lpad657 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %437) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %436) #8
  br label %ehcleanup896

if.end674:                                        ; preds = %_ZNSsD2Ev.exit815, %_ZNSsD2Ev.exit787
  %call676 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %73, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %title)
          to label %invoke.cont675 unwind label %lpad544

invoke.cont675:                                   ; preds = %if.end674
  %455 = bitcast %"class.std::basic_string"* %ref.tmp677 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %455) #8
  %456 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp678, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %456) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp677, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.42, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp678)
          to label %invoke.cont680 unwind label %lpad679

invoke.cont680:                                   ; preds = %invoke.cont675
  %457 = load double, double* %arrayidx517, align 8, !tbaa !84
  %call684 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsd(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call676, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp677, double noundef %457)
          to label %invoke.cont683 unwind label %lpad682

invoke.cont683:                                   ; preds = %invoke.cont680
  %_M_p.i.i.i817 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp677, i64 0, i32 0, i32 0
  %458 = load i8*, i8** %_M_p.i.i.i817, align 8, !tbaa !43
  %arrayidx.i.i818 = getelementptr inbounds i8, i8* %458, i64 -24
  %459 = bitcast i8* %arrayidx.i.i818 to %"struct.std::basic_string<char>::_Rep"*
  %460 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i816, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %460) #8
  %cmp.not.i.i819 = icmp eq i8* %arrayidx.i.i818, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i819, label %_ZNSsD2Ev.exit829, label %if.then.i.i821, !prof !47

if.then.i.i821:                                   ; preds = %invoke.cont683
  %_M_refcount.i.i820 = getelementptr inbounds i8, i8* %458, i64 -8
  %461 = bitcast i8* %_M_refcount.i.i820 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i822, label %if.else.i.i.i824

if.then.i.i.i822:                                 ; preds = %if.then.i.i821
  %462 = atomicrmw volatile add i32* %461, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i827

if.else.i.i.i824:                                 ; preds = %if.then.i.i821
  %463 = load i32, i32* %461, align 8, !tbaa !16
  %add.i.i.i.i823 = add nsw i32 %463, -1
  store i32 %add.i.i.i.i823, i32* %461, align 8, !tbaa !16
  br label %invoke.cont.i.i827

invoke.cont.i.i827:                               ; preds = %if.else.i.i.i824, %if.then.i.i.i822
  %retval.0.i.i.i825 = phi i32 [ %462, %if.then.i.i.i822 ], [ %463, %if.else.i.i.i824 ]
  %cmp3.i.i826 = icmp slt i32 %retval.0.i.i.i825, 1
  br i1 %cmp3.i.i826, label %if.then4.i.i828, label %_ZNSsD2Ev.exit829

if.then4.i.i828:                                  ; preds = %invoke.cont.i.i827
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %459, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i816) #8
  br label %_ZNSsD2Ev.exit829

_ZNSsD2Ev.exit829:                                ; preds = %invoke.cont683, %invoke.cont.i.i827, %if.then4.i.i828
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %460) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %456) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %455) #8
  %call690 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %73, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %title)
          to label %invoke.cont689 unwind label %lpad544

invoke.cont689:                                   ; preds = %_ZNSsD2Ev.exit829
  %464 = bitcast %"class.std::basic_string"* %ref.tmp691 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %464) #8
  %465 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp692, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %465) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp691, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.43, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp692)
          to label %invoke.cont694 unwind label %lpad693

invoke.cont694:                                   ; preds = %invoke.cont689
  %call697 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsd(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call690, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp691, double noundef %mul507)
          to label %invoke.cont696 unwind label %lpad695

invoke.cont696:                                   ; preds = %invoke.cont694
  %_M_p.i.i.i831 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp691, i64 0, i32 0, i32 0
  %466 = load i8*, i8** %_M_p.i.i.i831, align 8, !tbaa !43
  %arrayidx.i.i832 = getelementptr inbounds i8, i8* %466, i64 -24
  %467 = bitcast i8* %arrayidx.i.i832 to %"struct.std::basic_string<char>::_Rep"*
  %468 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i830, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %468) #8
  %cmp.not.i.i833 = icmp eq i8* %arrayidx.i.i832, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i833, label %_ZNSsD2Ev.exit843, label %if.then.i.i835, !prof !47

if.then.i.i835:                                   ; preds = %invoke.cont696
  %_M_refcount.i.i834 = getelementptr inbounds i8, i8* %466, i64 -8
  %469 = bitcast i8* %_M_refcount.i.i834 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i836, label %if.else.i.i.i838

if.then.i.i.i836:                                 ; preds = %if.then.i.i835
  %470 = atomicrmw volatile add i32* %469, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i841

if.else.i.i.i838:                                 ; preds = %if.then.i.i835
  %471 = load i32, i32* %469, align 8, !tbaa !16
  %add.i.i.i.i837 = add nsw i32 %471, -1
  store i32 %add.i.i.i.i837, i32* %469, align 8, !tbaa !16
  br label %invoke.cont.i.i841

invoke.cont.i.i841:                               ; preds = %if.else.i.i.i838, %if.then.i.i.i836
  %retval.0.i.i.i839 = phi i32 [ %470, %if.then.i.i.i836 ], [ %471, %if.else.i.i.i838 ]
  %cmp3.i.i840 = icmp slt i32 %retval.0.i.i.i839, 1
  br i1 %cmp3.i.i840, label %if.then4.i.i842, label %_ZNSsD2Ev.exit843

if.then4.i.i842:                                  ; preds = %invoke.cont.i.i841
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %467, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i830) #8
  br label %_ZNSsD2Ev.exit843

_ZNSsD2Ev.exit843:                                ; preds = %invoke.cont696, %invoke.cont.i.i841, %if.then4.i.i842
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %468) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %465) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %464) #8
  %cmp702 = fcmp contract ult double %mv_mflops.0, 0.000000e+00
  br i1 %cmp702, label %if.else717, label %if.then703

if.then703:                                       ; preds = %_ZNSsD2Ev.exit843
  %call705 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %73, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %title)
          to label %invoke.cont704 unwind label %lpad544

invoke.cont704:                                   ; preds = %if.then703
  %472 = bitcast %"class.std::basic_string"* %ref.tmp706 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %472) #8
  %473 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp707, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %473) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp706, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.44, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp707)
          to label %invoke.cont709 unwind label %lpad708

invoke.cont709:                                   ; preds = %invoke.cont704
  %call712 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsd(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call705, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp706, double noundef %mv_mflops.0)
          to label %invoke.cont711 unwind label %lpad710

invoke.cont711:                                   ; preds = %invoke.cont709
  %_M_p.i.i.i845 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp706, i64 0, i32 0, i32 0
  %474 = load i8*, i8** %_M_p.i.i.i845, align 8, !tbaa !43
  %arrayidx.i.i846 = getelementptr inbounds i8, i8* %474, i64 -24
  %475 = bitcast i8* %arrayidx.i.i846 to %"struct.std::basic_string<char>::_Rep"*
  %476 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i844, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %476) #8
  %cmp.not.i.i847 = icmp eq i8* %arrayidx.i.i846, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i847, label %_ZNSsD2Ev.exit857, label %if.then.i.i849, !prof !47

if.then.i.i849:                                   ; preds = %invoke.cont711
  %_M_refcount.i.i848 = getelementptr inbounds i8, i8* %474, i64 -8
  %477 = bitcast i8* %_M_refcount.i.i848 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i850, label %if.else.i.i.i852

if.then.i.i.i850:                                 ; preds = %if.then.i.i849
  %478 = atomicrmw volatile add i32* %477, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i855

if.else.i.i.i852:                                 ; preds = %if.then.i.i849
  %479 = load i32, i32* %477, align 8, !tbaa !16
  %add.i.i.i.i851 = add nsw i32 %479, -1
  store i32 %add.i.i.i.i851, i32* %477, align 8, !tbaa !16
  br label %invoke.cont.i.i855

invoke.cont.i.i855:                               ; preds = %if.else.i.i.i852, %if.then.i.i.i850
  %retval.0.i.i.i853 = phi i32 [ %478, %if.then.i.i.i850 ], [ %479, %if.else.i.i.i852 ]
  %cmp3.i.i854 = icmp slt i32 %retval.0.i.i.i853, 1
  br i1 %cmp3.i.i854, label %if.then4.i.i856, label %_ZNSsD2Ev.exit857

if.then4.i.i856:                                  ; preds = %invoke.cont.i.i855
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %475, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i844) #8
  br label %_ZNSsD2Ev.exit857

_ZNSsD2Ev.exit857:                                ; preds = %invoke.cont711, %invoke.cont.i.i855, %if.then4.i.i856
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %476) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %473) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %472) #8
  br label %if.end739

lpad679:                                          ; preds = %invoke.cont675
  %480 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup686

lpad682:                                          ; preds = %invoke.cont680
  %481 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp677) #8
  br label %ehcleanup686

ehcleanup686:                                     ; preds = %lpad682, %lpad679
  %.pn222 = phi { i8*, i32 } [ %481, %lpad682 ], [ %480, %lpad679 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %456) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %455) #8
  br label %ehcleanup896

lpad693:                                          ; preds = %invoke.cont689
  %482 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup699

lpad695:                                          ; preds = %invoke.cont694
  %483 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp691) #8
  br label %ehcleanup699

ehcleanup699:                                     ; preds = %lpad695, %lpad693
  %.pn224 = phi { i8*, i32 } [ %483, %lpad695 ], [ %482, %lpad693 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %465) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %464) #8
  br label %ehcleanup896

lpad708:                                          ; preds = %invoke.cont704
  %484 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup714

lpad710:                                          ; preds = %invoke.cont709
  %485 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp706) #8
  br label %ehcleanup714

ehcleanup714:                                     ; preds = %lpad710, %lpad708
  %.pn251 = phi { i8*, i32 } [ %485, %lpad710 ], [ %484, %lpad708 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %473) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %472) #8
  br label %ehcleanup896

if.else717:                                       ; preds = %_ZNSsD2Ev.exit843
  %call719 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %73, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %title)
          to label %invoke.cont718 unwind label %lpad544

invoke.cont718:                                   ; preds = %if.else717
  %486 = bitcast %"class.std::basic_string"* %ref.tmp720 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %486) #8
  %487 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp721, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %487) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp720, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.44, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp721)
          to label %invoke.cont723 unwind label %lpad722

invoke.cont723:                                   ; preds = %invoke.cont718
  %488 = bitcast %"class.std::basic_string"* %ref.tmp724 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %488) #8
  %489 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp725, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %489) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp724, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.38, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp725)
          to label %invoke.cont727 unwind label %lpad726

invoke.cont727:                                   ; preds = %invoke.cont723
  %call730 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsS1_(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call719, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp720, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp724)
          to label %invoke.cont729 unwind label %lpad728

invoke.cont729:                                   ; preds = %invoke.cont727
  %_M_p.i.i.i859 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp724, i64 0, i32 0, i32 0
  %490 = load i8*, i8** %_M_p.i.i.i859, align 8, !tbaa !43
  %arrayidx.i.i860 = getelementptr inbounds i8, i8* %490, i64 -24
  %491 = bitcast i8* %arrayidx.i.i860 to %"struct.std::basic_string<char>::_Rep"*
  %492 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i858, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %492) #8
  %cmp.not.i.i861 = icmp eq i8* %arrayidx.i.i860, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i861, label %_ZNSsD2Ev.exit871, label %if.then.i.i863, !prof !47

if.then.i.i863:                                   ; preds = %invoke.cont729
  %_M_refcount.i.i862 = getelementptr inbounds i8, i8* %490, i64 -8
  %493 = bitcast i8* %_M_refcount.i.i862 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i864, label %if.else.i.i.i866

if.then.i.i.i864:                                 ; preds = %if.then.i.i863
  %494 = atomicrmw volatile add i32* %493, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i869

if.else.i.i.i866:                                 ; preds = %if.then.i.i863
  %495 = load i32, i32* %493, align 8, !tbaa !16
  %add.i.i.i.i865 = add nsw i32 %495, -1
  store i32 %add.i.i.i.i865, i32* %493, align 8, !tbaa !16
  br label %invoke.cont.i.i869

invoke.cont.i.i869:                               ; preds = %if.else.i.i.i866, %if.then.i.i.i864
  %retval.0.i.i.i867 = phi i32 [ %494, %if.then.i.i.i864 ], [ %495, %if.else.i.i.i866 ]
  %cmp3.i.i868 = icmp slt i32 %retval.0.i.i.i867, 1
  br i1 %cmp3.i.i868, label %if.then4.i.i870, label %_ZNSsD2Ev.exit871

if.then4.i.i870:                                  ; preds = %invoke.cont.i.i869
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %491, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i858) #8
  br label %_ZNSsD2Ev.exit871

_ZNSsD2Ev.exit871:                                ; preds = %invoke.cont729, %invoke.cont.i.i869, %if.then4.i.i870
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %492) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %489) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %488) #8
  %_M_p.i.i.i873 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp720, i64 0, i32 0, i32 0
  %496 = load i8*, i8** %_M_p.i.i.i873, align 8, !tbaa !43
  %arrayidx.i.i874 = getelementptr inbounds i8, i8* %496, i64 -24
  %497 = bitcast i8* %arrayidx.i.i874 to %"struct.std::basic_string<char>::_Rep"*
  %498 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i872, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %498) #8
  %cmp.not.i.i875 = icmp eq i8* %arrayidx.i.i874, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i875, label %_ZNSsD2Ev.exit885, label %if.then.i.i877, !prof !47

if.then.i.i877:                                   ; preds = %_ZNSsD2Ev.exit871
  %_M_refcount.i.i876 = getelementptr inbounds i8, i8* %496, i64 -8
  %499 = bitcast i8* %_M_refcount.i.i876 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i878, label %if.else.i.i.i880

if.then.i.i.i878:                                 ; preds = %if.then.i.i877
  %500 = atomicrmw volatile add i32* %499, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i883

if.else.i.i.i880:                                 ; preds = %if.then.i.i877
  %501 = load i32, i32* %499, align 8, !tbaa !16
  %add.i.i.i.i879 = add nsw i32 %501, -1
  store i32 %add.i.i.i.i879, i32* %499, align 8, !tbaa !16
  br label %invoke.cont.i.i883

invoke.cont.i.i883:                               ; preds = %if.else.i.i.i880, %if.then.i.i.i878
  %retval.0.i.i.i881 = phi i32 [ %500, %if.then.i.i.i878 ], [ %501, %if.else.i.i.i880 ]
  %cmp3.i.i882 = icmp slt i32 %retval.0.i.i.i881, 1
  br i1 %cmp3.i.i882, label %if.then4.i.i884, label %_ZNSsD2Ev.exit885

if.then4.i.i884:                                  ; preds = %invoke.cont.i.i883
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %497, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i872) #8
  br label %_ZNSsD2Ev.exit885

_ZNSsD2Ev.exit885:                                ; preds = %_ZNSsD2Ev.exit871, %invoke.cont.i.i883, %if.then4.i.i884
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %498) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %487) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %486) #8
  br label %if.end739

lpad722:                                          ; preds = %invoke.cont718
  %502 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup736

lpad726:                                          ; preds = %invoke.cont723
  %503 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup732

lpad728:                                          ; preds = %invoke.cont727
  %504 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp724) #8
  br label %ehcleanup732

ehcleanup732:                                     ; preds = %lpad728, %lpad726
  %.pn226 = phi { i8*, i32 } [ %504, %lpad728 ], [ %503, %lpad726 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %489) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %488) #8
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp720) #8
  br label %ehcleanup736

ehcleanup736:                                     ; preds = %ehcleanup732, %lpad722
  %.pn226.pn = phi { i8*, i32 } [ %.pn226, %ehcleanup732 ], [ %502, %lpad722 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %487) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %486) #8
  br label %ehcleanup896

if.end739:                                        ; preds = %_ZNSsD2Ev.exit885, %_ZNSsD2Ev.exit857
  %call741 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %73, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %title)
          to label %invoke.cont740 unwind label %lpad544

invoke.cont740:                                   ; preds = %if.end739
  %505 = bitcast %"class.std::basic_string"* %ref.tmp742 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %505) #8
  %506 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp743, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %506) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp742, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.45, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp743)
          to label %invoke.cont745 unwind label %lpad744

invoke.cont745:                                   ; preds = %invoke.cont740
  %507 = bitcast %"class.std::basic_string"* %ref.tmp746 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %507) #8
  %508 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp747, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %508) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp746, i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp747)
          to label %invoke.cont749 unwind label %lpad748

invoke.cont749:                                   ; preds = %invoke.cont745
  %call752 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsS1_(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call741, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp742, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp746)
          to label %invoke.cont751 unwind label %lpad750

invoke.cont751:                                   ; preds = %invoke.cont749
  %_M_p.i.i.i887 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp746, i64 0, i32 0, i32 0
  %509 = load i8*, i8** %_M_p.i.i.i887, align 8, !tbaa !43
  %arrayidx.i.i888 = getelementptr inbounds i8, i8* %509, i64 -24
  %510 = bitcast i8* %arrayidx.i.i888 to %"struct.std::basic_string<char>::_Rep"*
  %511 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i886, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %511) #8
  %cmp.not.i.i889 = icmp eq i8* %arrayidx.i.i888, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i889, label %_ZNSsD2Ev.exit899, label %if.then.i.i891, !prof !47

if.then.i.i891:                                   ; preds = %invoke.cont751
  %_M_refcount.i.i890 = getelementptr inbounds i8, i8* %509, i64 -8
  %512 = bitcast i8* %_M_refcount.i.i890 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i892, label %if.else.i.i.i894

if.then.i.i.i892:                                 ; preds = %if.then.i.i891
  %513 = atomicrmw volatile add i32* %512, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i897

if.else.i.i.i894:                                 ; preds = %if.then.i.i891
  %514 = load i32, i32* %512, align 8, !tbaa !16
  %add.i.i.i.i893 = add nsw i32 %514, -1
  store i32 %add.i.i.i.i893, i32* %512, align 8, !tbaa !16
  br label %invoke.cont.i.i897

invoke.cont.i.i897:                               ; preds = %if.else.i.i.i894, %if.then.i.i.i892
  %retval.0.i.i.i895 = phi i32 [ %513, %if.then.i.i.i892 ], [ %514, %if.else.i.i.i894 ]
  %cmp3.i.i896 = icmp slt i32 %retval.0.i.i.i895, 1
  br i1 %cmp3.i.i896, label %if.then4.i.i898, label %_ZNSsD2Ev.exit899

if.then4.i.i898:                                  ; preds = %invoke.cont.i.i897
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %510, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i886) #8
  br label %_ZNSsD2Ev.exit899

_ZNSsD2Ev.exit899:                                ; preds = %invoke.cont751, %invoke.cont.i.i897, %if.then4.i.i898
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %511) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %508) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %507) #8
  %_M_p.i.i.i901 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp742, i64 0, i32 0, i32 0
  %515 = load i8*, i8** %_M_p.i.i.i901, align 8, !tbaa !43
  %arrayidx.i.i902 = getelementptr inbounds i8, i8* %515, i64 -24
  %516 = bitcast i8* %arrayidx.i.i902 to %"struct.std::basic_string<char>::_Rep"*
  %517 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i900, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %517) #8
  %cmp.not.i.i903 = icmp eq i8* %arrayidx.i.i902, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i903, label %_ZNSsD2Ev.exit913, label %if.then.i.i905, !prof !47

if.then.i.i905:                                   ; preds = %_ZNSsD2Ev.exit899
  %_M_refcount.i.i904 = getelementptr inbounds i8, i8* %515, i64 -8
  %518 = bitcast i8* %_M_refcount.i.i904 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i906, label %if.else.i.i.i908

if.then.i.i.i906:                                 ; preds = %if.then.i.i905
  %519 = atomicrmw volatile add i32* %518, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i911

if.else.i.i.i908:                                 ; preds = %if.then.i.i905
  %520 = load i32, i32* %518, align 8, !tbaa !16
  %add.i.i.i.i907 = add nsw i32 %520, -1
  store i32 %add.i.i.i.i907, i32* %518, align 8, !tbaa !16
  br label %invoke.cont.i.i911

invoke.cont.i.i911:                               ; preds = %if.else.i.i.i908, %if.then.i.i.i906
  %retval.0.i.i.i909 = phi i32 [ %519, %if.then.i.i.i906 ], [ %520, %if.else.i.i.i908 ]
  %cmp3.i.i910 = icmp slt i32 %retval.0.i.i.i909, 1
  br i1 %cmp3.i.i910, label %if.then4.i.i912, label %_ZNSsD2Ev.exit913

if.then4.i.i912:                                  ; preds = %invoke.cont.i.i911
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %516, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i900) #8
  br label %_ZNSsD2Ev.exit913

_ZNSsD2Ev.exit913:                                ; preds = %_ZNSsD2Ev.exit899, %invoke.cont.i.i911, %if.then4.i.i912
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %517) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %506) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %505) #8
  %call762 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %73, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %title)
          to label %invoke.cont761 unwind label %lpad544

invoke.cont761:                                   ; preds = %_ZNSsD2Ev.exit913
  %521 = bitcast %"class.std::basic_string"* %ref.tmp763 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %521) #8
  %522 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp764, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %522) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp763, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.45, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp764)
          to label %invoke.cont766 unwind label %lpad765

invoke.cont766:                                   ; preds = %invoke.cont761
  %call769 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call762, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp763)
          to label %invoke.cont768 unwind label %lpad767

invoke.cont768:                                   ; preds = %invoke.cont766
  %523 = bitcast %"class.std::basic_string"* %ref.tmp770 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %523) #8
  %524 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp771, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %524) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp770, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.46, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp771)
          to label %invoke.cont773 unwind label %lpad772

invoke.cont773:                                   ; preds = %invoke.cont768
  %525 = load double, double* %arrayidx537, align 8, !tbaa !84
  %call777 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsd(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call769, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp770, double noundef %525)
          to label %invoke.cont776 unwind label %lpad775

invoke.cont776:                                   ; preds = %invoke.cont773
  %_M_p.i.i.i915 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp770, i64 0, i32 0, i32 0
  %526 = load i8*, i8** %_M_p.i.i.i915, align 8, !tbaa !43
  %arrayidx.i.i916 = getelementptr inbounds i8, i8* %526, i64 -24
  %527 = bitcast i8* %arrayidx.i.i916 to %"struct.std::basic_string<char>::_Rep"*
  %528 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i914, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %528) #8
  %cmp.not.i.i917 = icmp eq i8* %arrayidx.i.i916, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i917, label %_ZNSsD2Ev.exit927, label %if.then.i.i919, !prof !47

if.then.i.i919:                                   ; preds = %invoke.cont776
  %_M_refcount.i.i918 = getelementptr inbounds i8, i8* %526, i64 -8
  %529 = bitcast i8* %_M_refcount.i.i918 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i920, label %if.else.i.i.i922

if.then.i.i.i920:                                 ; preds = %if.then.i.i919
  %530 = atomicrmw volatile add i32* %529, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i925

if.else.i.i.i922:                                 ; preds = %if.then.i.i919
  %531 = load i32, i32* %529, align 8, !tbaa !16
  %add.i.i.i.i921 = add nsw i32 %531, -1
  store i32 %add.i.i.i.i921, i32* %529, align 8, !tbaa !16
  br label %invoke.cont.i.i925

invoke.cont.i.i925:                               ; preds = %if.else.i.i.i922, %if.then.i.i.i920
  %retval.0.i.i.i923 = phi i32 [ %530, %if.then.i.i.i920 ], [ %531, %if.else.i.i.i922 ]
  %cmp3.i.i924 = icmp slt i32 %retval.0.i.i.i923, 1
  br i1 %cmp3.i.i924, label %if.then4.i.i926, label %_ZNSsD2Ev.exit927

if.then4.i.i926:                                  ; preds = %invoke.cont.i.i925
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %527, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i914) #8
  br label %_ZNSsD2Ev.exit927

_ZNSsD2Ev.exit927:                                ; preds = %invoke.cont776, %invoke.cont.i.i925, %if.then4.i.i926
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %528) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %524) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %523) #8
  %_M_p.i.i.i929 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp763, i64 0, i32 0, i32 0
  %532 = load i8*, i8** %_M_p.i.i.i929, align 8, !tbaa !43
  %arrayidx.i.i930 = getelementptr inbounds i8, i8* %532, i64 -24
  %533 = bitcast i8* %arrayidx.i.i930 to %"struct.std::basic_string<char>::_Rep"*
  %534 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i928, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %534) #8
  %cmp.not.i.i931 = icmp eq i8* %arrayidx.i.i930, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i931, label %_ZNSsD2Ev.exit941, label %if.then.i.i933, !prof !47

if.then.i.i933:                                   ; preds = %_ZNSsD2Ev.exit927
  %_M_refcount.i.i932 = getelementptr inbounds i8, i8* %532, i64 -8
  %535 = bitcast i8* %_M_refcount.i.i932 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i934, label %if.else.i.i.i936

if.then.i.i.i934:                                 ; preds = %if.then.i.i933
  %536 = atomicrmw volatile add i32* %535, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i939

if.else.i.i.i936:                                 ; preds = %if.then.i.i933
  %537 = load i32, i32* %535, align 8, !tbaa !16
  %add.i.i.i.i935 = add nsw i32 %537, -1
  store i32 %add.i.i.i.i935, i32* %535, align 8, !tbaa !16
  br label %invoke.cont.i.i939

invoke.cont.i.i939:                               ; preds = %if.else.i.i.i936, %if.then.i.i.i934
  %retval.0.i.i.i937 = phi i32 [ %536, %if.then.i.i.i934 ], [ %537, %if.else.i.i.i936 ]
  %cmp3.i.i938 = icmp slt i32 %retval.0.i.i.i937, 1
  br i1 %cmp3.i.i938, label %if.then4.i.i940, label %_ZNSsD2Ev.exit941

if.then4.i.i940:                                  ; preds = %invoke.cont.i.i939
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %533, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i928) #8
  br label %_ZNSsD2Ev.exit941

_ZNSsD2Ev.exit941:                                ; preds = %_ZNSsD2Ev.exit927, %invoke.cont.i.i939, %if.then4.i.i940
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %534) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %522) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %521) #8
  %call787 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %73, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %title)
          to label %invoke.cont786 unwind label %lpad544

invoke.cont786:                                   ; preds = %_ZNSsD2Ev.exit941
  %538 = bitcast %"class.std::basic_string"* %ref.tmp788 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %538) #8
  %539 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp789, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %539) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp788, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.45, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp789)
          to label %invoke.cont791 unwind label %lpad790

invoke.cont791:                                   ; preds = %invoke.cont786
  %call794 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call787, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp788)
          to label %invoke.cont793 unwind label %lpad792

invoke.cont793:                                   ; preds = %invoke.cont791
  %540 = bitcast %"class.std::basic_string"* %ref.tmp795 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %540) #8
  %541 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp796, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %541) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp795, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.47, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp796)
          to label %invoke.cont798 unwind label %lpad797

invoke.cont798:                                   ; preds = %invoke.cont793
  %call801 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsd(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call794, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp795, double noundef %add516)
          to label %invoke.cont800 unwind label %lpad799

invoke.cont800:                                   ; preds = %invoke.cont798
  %_M_p.i.i.i943 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp795, i64 0, i32 0, i32 0
  %542 = load i8*, i8** %_M_p.i.i.i943, align 8, !tbaa !43
  %arrayidx.i.i944 = getelementptr inbounds i8, i8* %542, i64 -24
  %543 = bitcast i8* %arrayidx.i.i944 to %"struct.std::basic_string<char>::_Rep"*
  %544 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i942, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %544) #8
  %cmp.not.i.i945 = icmp eq i8* %arrayidx.i.i944, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i945, label %_ZNSsD2Ev.exit955, label %if.then.i.i947, !prof !47

if.then.i.i947:                                   ; preds = %invoke.cont800
  %_M_refcount.i.i946 = getelementptr inbounds i8, i8* %542, i64 -8
  %545 = bitcast i8* %_M_refcount.i.i946 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i948, label %if.else.i.i.i950

if.then.i.i.i948:                                 ; preds = %if.then.i.i947
  %546 = atomicrmw volatile add i32* %545, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i953

if.else.i.i.i950:                                 ; preds = %if.then.i.i947
  %547 = load i32, i32* %545, align 8, !tbaa !16
  %add.i.i.i.i949 = add nsw i32 %547, -1
  store i32 %add.i.i.i.i949, i32* %545, align 8, !tbaa !16
  br label %invoke.cont.i.i953

invoke.cont.i.i953:                               ; preds = %if.else.i.i.i950, %if.then.i.i.i948
  %retval.0.i.i.i951 = phi i32 [ %546, %if.then.i.i.i948 ], [ %547, %if.else.i.i.i950 ]
  %cmp3.i.i952 = icmp slt i32 %retval.0.i.i.i951, 1
  br i1 %cmp3.i.i952, label %if.then4.i.i954, label %_ZNSsD2Ev.exit955

if.then4.i.i954:                                  ; preds = %invoke.cont.i.i953
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %543, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i942) #8
  br label %_ZNSsD2Ev.exit955

_ZNSsD2Ev.exit955:                                ; preds = %invoke.cont800, %invoke.cont.i.i953, %if.then4.i.i954
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %544) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %541) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %540) #8
  %_M_p.i.i.i957 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp788, i64 0, i32 0, i32 0
  %548 = load i8*, i8** %_M_p.i.i.i957, align 8, !tbaa !43
  %arrayidx.i.i958 = getelementptr inbounds i8, i8* %548, i64 -24
  %549 = bitcast i8* %arrayidx.i.i958 to %"struct.std::basic_string<char>::_Rep"*
  %550 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i956, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %550) #8
  %cmp.not.i.i959 = icmp eq i8* %arrayidx.i.i958, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i959, label %_ZNSsD2Ev.exit969, label %if.then.i.i961, !prof !47

if.then.i.i961:                                   ; preds = %_ZNSsD2Ev.exit955
  %_M_refcount.i.i960 = getelementptr inbounds i8, i8* %548, i64 -8
  %551 = bitcast i8* %_M_refcount.i.i960 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i962, label %if.else.i.i.i964

if.then.i.i.i962:                                 ; preds = %if.then.i.i961
  %552 = atomicrmw volatile add i32* %551, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i967

if.else.i.i.i964:                                 ; preds = %if.then.i.i961
  %553 = load i32, i32* %551, align 8, !tbaa !16
  %add.i.i.i.i963 = add nsw i32 %553, -1
  store i32 %add.i.i.i.i963, i32* %551, align 8, !tbaa !16
  br label %invoke.cont.i.i967

invoke.cont.i.i967:                               ; preds = %if.else.i.i.i964, %if.then.i.i.i962
  %retval.0.i.i.i965 = phi i32 [ %552, %if.then.i.i.i962 ], [ %553, %if.else.i.i.i964 ]
  %cmp3.i.i966 = icmp slt i32 %retval.0.i.i.i965, 1
  br i1 %cmp3.i.i966, label %if.then4.i.i968, label %_ZNSsD2Ev.exit969

if.then4.i.i968:                                  ; preds = %invoke.cont.i.i967
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %549, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i956) #8
  br label %_ZNSsD2Ev.exit969

_ZNSsD2Ev.exit969:                                ; preds = %_ZNSsD2Ev.exit955, %invoke.cont.i.i967, %if.then4.i.i968
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %550) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %539) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %538) #8
  %cmp810 = fcmp contract ult double %total_mflops.0, 0.000000e+00
  br i1 %cmp810, label %if.else836, label %if.then811

if.then811:                                       ; preds = %_ZNSsD2Ev.exit969
  %call813 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %73, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %title)
          to label %invoke.cont812 unwind label %lpad544

invoke.cont812:                                   ; preds = %if.then811
  %554 = bitcast %"class.std::basic_string"* %ref.tmp814 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %554) #8
  %555 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp815, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %555) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp814, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.45, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp815)
          to label %invoke.cont817 unwind label %lpad816

invoke.cont817:                                   ; preds = %invoke.cont812
  %call820 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call813, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp814)
          to label %invoke.cont819 unwind label %lpad818

invoke.cont819:                                   ; preds = %invoke.cont817
  %556 = bitcast %"class.std::basic_string"* %ref.tmp821 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %556) #8
  %557 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp822, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %557) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp821, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.48, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp822)
          to label %invoke.cont824 unwind label %lpad823

invoke.cont824:                                   ; preds = %invoke.cont819
  %call827 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsd(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call820, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp821, double noundef %total_mflops.0)
          to label %invoke.cont826 unwind label %lpad825

invoke.cont826:                                   ; preds = %invoke.cont824
  %_M_p.i.i.i971 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp821, i64 0, i32 0, i32 0
  %558 = load i8*, i8** %_M_p.i.i.i971, align 8, !tbaa !43
  %arrayidx.i.i972 = getelementptr inbounds i8, i8* %558, i64 -24
  %559 = bitcast i8* %arrayidx.i.i972 to %"struct.std::basic_string<char>::_Rep"*
  %560 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i970, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %560) #8
  %cmp.not.i.i973 = icmp eq i8* %arrayidx.i.i972, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i973, label %_ZNSsD2Ev.exit983, label %if.then.i.i975, !prof !47

if.then.i.i975:                                   ; preds = %invoke.cont826
  %_M_refcount.i.i974 = getelementptr inbounds i8, i8* %558, i64 -8
  %561 = bitcast i8* %_M_refcount.i.i974 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i976, label %if.else.i.i.i978

if.then.i.i.i976:                                 ; preds = %if.then.i.i975
  %562 = atomicrmw volatile add i32* %561, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i981

if.else.i.i.i978:                                 ; preds = %if.then.i.i975
  %563 = load i32, i32* %561, align 8, !tbaa !16
  %add.i.i.i.i977 = add nsw i32 %563, -1
  store i32 %add.i.i.i.i977, i32* %561, align 8, !tbaa !16
  br label %invoke.cont.i.i981

invoke.cont.i.i981:                               ; preds = %if.else.i.i.i978, %if.then.i.i.i976
  %retval.0.i.i.i979 = phi i32 [ %562, %if.then.i.i.i976 ], [ %563, %if.else.i.i.i978 ]
  %cmp3.i.i980 = icmp slt i32 %retval.0.i.i.i979, 1
  br i1 %cmp3.i.i980, label %if.then4.i.i982, label %_ZNSsD2Ev.exit983

if.then4.i.i982:                                  ; preds = %invoke.cont.i.i981
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %559, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i970) #8
  br label %_ZNSsD2Ev.exit983

_ZNSsD2Ev.exit983:                                ; preds = %invoke.cont826, %invoke.cont.i.i981, %if.then4.i.i982
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %560) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %557) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %556) #8
  %_M_p.i.i.i985 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp814, i64 0, i32 0, i32 0
  %564 = load i8*, i8** %_M_p.i.i.i985, align 8, !tbaa !43
  %arrayidx.i.i986 = getelementptr inbounds i8, i8* %564, i64 -24
  %565 = bitcast i8* %arrayidx.i.i986 to %"struct.std::basic_string<char>::_Rep"*
  %566 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i984, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %566) #8
  %cmp.not.i.i987 = icmp eq i8* %arrayidx.i.i986, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i987, label %_ZNSsD2Ev.exit997, label %if.then.i.i989, !prof !47

if.then.i.i989:                                   ; preds = %_ZNSsD2Ev.exit983
  %_M_refcount.i.i988 = getelementptr inbounds i8, i8* %564, i64 -8
  %567 = bitcast i8* %_M_refcount.i.i988 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i990, label %if.else.i.i.i992

if.then.i.i.i990:                                 ; preds = %if.then.i.i989
  %568 = atomicrmw volatile add i32* %567, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i995

if.else.i.i.i992:                                 ; preds = %if.then.i.i989
  %569 = load i32, i32* %567, align 8, !tbaa !16
  %add.i.i.i.i991 = add nsw i32 %569, -1
  store i32 %add.i.i.i.i991, i32* %567, align 8, !tbaa !16
  br label %invoke.cont.i.i995

invoke.cont.i.i995:                               ; preds = %if.else.i.i.i992, %if.then.i.i.i990
  %retval.0.i.i.i993 = phi i32 [ %568, %if.then.i.i.i990 ], [ %569, %if.else.i.i.i992 ]
  %cmp3.i.i994 = icmp slt i32 %retval.0.i.i.i993, 1
  br i1 %cmp3.i.i994, label %if.then4.i.i996, label %_ZNSsD2Ev.exit997

if.then4.i.i996:                                  ; preds = %invoke.cont.i.i995
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %565, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i984) #8
  br label %_ZNSsD2Ev.exit997

_ZNSsD2Ev.exit997:                                ; preds = %_ZNSsD2Ev.exit983, %invoke.cont.i.i995, %if.then4.i.i996
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %566) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %555) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %554) #8
  br label %if.end869

lpad744:                                          ; preds = %invoke.cont740
  %570 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup758

lpad748:                                          ; preds = %invoke.cont745
  %571 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup754

lpad750:                                          ; preds = %invoke.cont749
  %572 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp746) #8
  br label %ehcleanup754

ehcleanup754:                                     ; preds = %lpad750, %lpad748
  %.pn229 = phi { i8*, i32 } [ %572, %lpad750 ], [ %571, %lpad748 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %508) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %507) #8
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp742) #8
  br label %ehcleanup758

ehcleanup758:                                     ; preds = %ehcleanup754, %lpad744
  %.pn229.pn = phi { i8*, i32 } [ %.pn229, %ehcleanup754 ], [ %570, %lpad744 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %506) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %505) #8
  br label %ehcleanup896

lpad765:                                          ; preds = %invoke.cont761
  %573 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup783

lpad767:                                          ; preds = %invoke.cont766
  %574 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup782

lpad772:                                          ; preds = %invoke.cont768
  %575 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup779

lpad775:                                          ; preds = %invoke.cont773
  %576 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp770) #8
  br label %ehcleanup779

ehcleanup779:                                     ; preds = %lpad775, %lpad772
  %.pn232 = phi { i8*, i32 } [ %576, %lpad775 ], [ %575, %lpad772 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %524) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %523) #8
  br label %ehcleanup782

ehcleanup782:                                     ; preds = %ehcleanup779, %lpad767
  %.pn232.pn = phi { i8*, i32 } [ %.pn232, %ehcleanup779 ], [ %574, %lpad767 ]
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp763) #8
  br label %ehcleanup783

ehcleanup783:                                     ; preds = %ehcleanup782, %lpad765
  %.pn232.pn.pn = phi { i8*, i32 } [ %.pn232.pn, %ehcleanup782 ], [ %573, %lpad765 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %522) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %521) #8
  br label %ehcleanup896

lpad790:                                          ; preds = %invoke.cont786
  %577 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup807

lpad792:                                          ; preds = %invoke.cont791
  %578 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup806

lpad797:                                          ; preds = %invoke.cont793
  %579 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup803

lpad799:                                          ; preds = %invoke.cont798
  %580 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp795) #8
  br label %ehcleanup803

ehcleanup803:                                     ; preds = %lpad799, %lpad797
  %.pn236 = phi { i8*, i32 } [ %580, %lpad799 ], [ %579, %lpad797 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %541) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %540) #8
  br label %ehcleanup806

ehcleanup806:                                     ; preds = %ehcleanup803, %lpad792
  %.pn236.pn = phi { i8*, i32 } [ %.pn236, %ehcleanup803 ], [ %578, %lpad792 ]
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp788) #8
  br label %ehcleanup807

ehcleanup807:                                     ; preds = %ehcleanup806, %lpad790
  %.pn236.pn.pn = phi { i8*, i32 } [ %.pn236.pn, %ehcleanup806 ], [ %577, %lpad790 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %539) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %538) #8
  br label %ehcleanup896

lpad816:                                          ; preds = %invoke.cont812
  %581 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup833

lpad818:                                          ; preds = %invoke.cont817
  %582 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup832

lpad823:                                          ; preds = %invoke.cont819
  %583 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup829

lpad825:                                          ; preds = %invoke.cont824
  %584 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp821) #8
  br label %ehcleanup829

ehcleanup829:                                     ; preds = %lpad825, %lpad823
  %.pn247 = phi { i8*, i32 } [ %584, %lpad825 ], [ %583, %lpad823 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %557) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %556) #8
  br label %ehcleanup832

ehcleanup832:                                     ; preds = %ehcleanup829, %lpad818
  %.pn247.pn = phi { i8*, i32 } [ %.pn247, %ehcleanup829 ], [ %582, %lpad818 ]
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp814) #8
  br label %ehcleanup833

ehcleanup833:                                     ; preds = %ehcleanup832, %lpad816
  %.pn247.pn.pn = phi { i8*, i32 } [ %.pn247.pn, %ehcleanup832 ], [ %581, %lpad816 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %555) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %554) #8
  br label %ehcleanup896

if.else836:                                       ; preds = %_ZNSsD2Ev.exit969
  %call838 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %73, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %title)
          to label %invoke.cont837 unwind label %lpad544

invoke.cont837:                                   ; preds = %if.else836
  %585 = bitcast %"class.std::basic_string"* %ref.tmp839 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %585) #8
  %586 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp840, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %586) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp839, i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.45, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp840)
          to label %invoke.cont842 unwind label %lpad841

invoke.cont842:                                   ; preds = %invoke.cont837
  %call845 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call838, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp839)
          to label %invoke.cont844 unwind label %lpad843

invoke.cont844:                                   ; preds = %invoke.cont842
  %587 = bitcast %"class.std::basic_string"* %ref.tmp846 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %587) #8
  %588 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp847, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %588) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp846, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.48, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp847)
          to label %invoke.cont849 unwind label %lpad848

invoke.cont849:                                   ; preds = %invoke.cont844
  %589 = bitcast %"class.std::basic_string"* %ref.tmp850 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %589) #8
  %590 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp851, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %590) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp850, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.38, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp851)
          to label %invoke.cont853 unwind label %lpad852

invoke.cont853:                                   ; preds = %invoke.cont849
  %call856 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsS1_(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call845, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp846, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp850)
          to label %invoke.cont855 unwind label %lpad854

invoke.cont855:                                   ; preds = %invoke.cont853
  %_M_p.i.i.i999 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp850, i64 0, i32 0, i32 0
  %591 = load i8*, i8** %_M_p.i.i.i999, align 8, !tbaa !43
  %arrayidx.i.i1000 = getelementptr inbounds i8, i8* %591, i64 -24
  %592 = bitcast i8* %arrayidx.i.i1000 to %"struct.std::basic_string<char>::_Rep"*
  %593 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i998, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %593) #8
  %cmp.not.i.i1001 = icmp eq i8* %arrayidx.i.i1000, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i1001, label %_ZNSsD2Ev.exit1011, label %if.then.i.i1003, !prof !47

if.then.i.i1003:                                  ; preds = %invoke.cont855
  %_M_refcount.i.i1002 = getelementptr inbounds i8, i8* %591, i64 -8
  %594 = bitcast i8* %_M_refcount.i.i1002 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i1004, label %if.else.i.i.i1006

if.then.i.i.i1004:                                ; preds = %if.then.i.i1003
  %595 = atomicrmw volatile add i32* %594, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i1009

if.else.i.i.i1006:                                ; preds = %if.then.i.i1003
  %596 = load i32, i32* %594, align 8, !tbaa !16
  %add.i.i.i.i1005 = add nsw i32 %596, -1
  store i32 %add.i.i.i.i1005, i32* %594, align 8, !tbaa !16
  br label %invoke.cont.i.i1009

invoke.cont.i.i1009:                              ; preds = %if.else.i.i.i1006, %if.then.i.i.i1004
  %retval.0.i.i.i1007 = phi i32 [ %595, %if.then.i.i.i1004 ], [ %596, %if.else.i.i.i1006 ]
  %cmp3.i.i1008 = icmp slt i32 %retval.0.i.i.i1007, 1
  br i1 %cmp3.i.i1008, label %if.then4.i.i1010, label %_ZNSsD2Ev.exit1011

if.then4.i.i1010:                                 ; preds = %invoke.cont.i.i1009
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %592, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i998) #8
  br label %_ZNSsD2Ev.exit1011

_ZNSsD2Ev.exit1011:                               ; preds = %invoke.cont855, %invoke.cont.i.i1009, %if.then4.i.i1010
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %593) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %590) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %589) #8
  %_M_p.i.i.i1013 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp846, i64 0, i32 0, i32 0
  %597 = load i8*, i8** %_M_p.i.i.i1013, align 8, !tbaa !43
  %arrayidx.i.i1014 = getelementptr inbounds i8, i8* %597, i64 -24
  %598 = bitcast i8* %arrayidx.i.i1014 to %"struct.std::basic_string<char>::_Rep"*
  %599 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i1012, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %599) #8
  %cmp.not.i.i1015 = icmp eq i8* %arrayidx.i.i1014, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i1015, label %_ZNSsD2Ev.exit1025, label %if.then.i.i1017, !prof !47

if.then.i.i1017:                                  ; preds = %_ZNSsD2Ev.exit1011
  %_M_refcount.i.i1016 = getelementptr inbounds i8, i8* %597, i64 -8
  %600 = bitcast i8* %_M_refcount.i.i1016 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i1018, label %if.else.i.i.i1020

if.then.i.i.i1018:                                ; preds = %if.then.i.i1017
  %601 = atomicrmw volatile add i32* %600, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i1023

if.else.i.i.i1020:                                ; preds = %if.then.i.i1017
  %602 = load i32, i32* %600, align 8, !tbaa !16
  %add.i.i.i.i1019 = add nsw i32 %602, -1
  store i32 %add.i.i.i.i1019, i32* %600, align 8, !tbaa !16
  br label %invoke.cont.i.i1023

invoke.cont.i.i1023:                              ; preds = %if.else.i.i.i1020, %if.then.i.i.i1018
  %retval.0.i.i.i1021 = phi i32 [ %601, %if.then.i.i.i1018 ], [ %602, %if.else.i.i.i1020 ]
  %cmp3.i.i1022 = icmp slt i32 %retval.0.i.i.i1021, 1
  br i1 %cmp3.i.i1022, label %if.then4.i.i1024, label %_ZNSsD2Ev.exit1025

if.then4.i.i1024:                                 ; preds = %invoke.cont.i.i1023
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %598, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i1012) #8
  br label %_ZNSsD2Ev.exit1025

_ZNSsD2Ev.exit1025:                               ; preds = %_ZNSsD2Ev.exit1011, %invoke.cont.i.i1023, %if.then4.i.i1024
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %599) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %588) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %587) #8
  %_M_p.i.i.i1027 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp839, i64 0, i32 0, i32 0
  %603 = load i8*, i8** %_M_p.i.i.i1027, align 8, !tbaa !43
  %arrayidx.i.i1028 = getelementptr inbounds i8, i8* %603, i64 -24
  %604 = bitcast i8* %arrayidx.i.i1028 to %"struct.std::basic_string<char>::_Rep"*
  %605 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i1026, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %605) #8
  %cmp.not.i.i1029 = icmp eq i8* %arrayidx.i.i1028, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i1029, label %_ZNSsD2Ev.exit1039, label %if.then.i.i1031, !prof !47

if.then.i.i1031:                                  ; preds = %_ZNSsD2Ev.exit1025
  %_M_refcount.i.i1030 = getelementptr inbounds i8, i8* %603, i64 -8
  %606 = bitcast i8* %_M_refcount.i.i1030 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i1032, label %if.else.i.i.i1034

if.then.i.i.i1032:                                ; preds = %if.then.i.i1031
  %607 = atomicrmw volatile add i32* %606, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i1037

if.else.i.i.i1034:                                ; preds = %if.then.i.i1031
  %608 = load i32, i32* %606, align 8, !tbaa !16
  %add.i.i.i.i1033 = add nsw i32 %608, -1
  store i32 %add.i.i.i.i1033, i32* %606, align 8, !tbaa !16
  br label %invoke.cont.i.i1037

invoke.cont.i.i1037:                              ; preds = %if.else.i.i.i1034, %if.then.i.i.i1032
  %retval.0.i.i.i1035 = phi i32 [ %607, %if.then.i.i.i1032 ], [ %608, %if.else.i.i.i1034 ]
  %cmp3.i.i1036 = icmp slt i32 %retval.0.i.i.i1035, 1
  br i1 %cmp3.i.i1036, label %if.then4.i.i1038, label %_ZNSsD2Ev.exit1039

if.then4.i.i1038:                                 ; preds = %invoke.cont.i.i1037
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %604, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i1026) #8
  br label %_ZNSsD2Ev.exit1039

_ZNSsD2Ev.exit1039:                               ; preds = %_ZNSsD2Ev.exit1025, %invoke.cont.i.i1037, %if.then4.i.i1038
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %605) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %586) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %585) #8
  br label %if.end869

lpad841:                                          ; preds = %invoke.cont837
  %609 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup866

lpad843:                                          ; preds = %invoke.cont842
  %610 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup865

lpad848:                                          ; preds = %invoke.cont844
  %611 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup862

lpad852:                                          ; preds = %invoke.cont849
  %612 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup858

lpad854:                                          ; preds = %invoke.cont853
  %613 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp850) #8
  br label %ehcleanup858

ehcleanup858:                                     ; preds = %lpad854, %lpad852
  %.pn240 = phi { i8*, i32 } [ %613, %lpad854 ], [ %612, %lpad852 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %590) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %589) #8
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp846) #8
  br label %ehcleanup862

ehcleanup862:                                     ; preds = %ehcleanup858, %lpad848
  %.pn240.pn = phi { i8*, i32 } [ %.pn240, %ehcleanup858 ], [ %611, %lpad848 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %588) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %587) #8
  br label %ehcleanup865

ehcleanup865:                                     ; preds = %ehcleanup862, %lpad843
  %.pn240.pn.pn = phi { i8*, i32 } [ %.pn240.pn, %ehcleanup862 ], [ %610, %lpad843 ]
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp839) #8
  br label %ehcleanup866

ehcleanup866:                                     ; preds = %ehcleanup865, %lpad841
  %.pn240.pn.pn.pn = phi { i8*, i32 } [ %.pn240.pn.pn, %ehcleanup865 ], [ %609, %lpad841 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %586) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %585) #8
  br label %ehcleanup896

if.end869:                                        ; preds = %_ZNSsD2Ev.exit1039, %_ZNSsD2Ev.exit997
  %call871 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %73, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %title)
          to label %invoke.cont870 unwind label %lpad544

invoke.cont870:                                   ; preds = %if.end869
  %614 = bitcast %"class.std::basic_string"* %ref.tmp872 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %614) #8
  %615 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp873, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %615) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp872, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.49, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp873)
          to label %invoke.cont875 unwind label %lpad874

invoke.cont875:                                   ; preds = %invoke.cont870
  %616 = load double, double* %arrayidx537, align 8, !tbaa !84
  %617 = load i32, i32* %num_iters, align 4, !tbaa !16
  %conv877 = sitofp i32 %617 to double
  %div878 = fdiv contract double %616, %conv877
  %call881 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsd(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call871, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp872, double noundef %div878)
          to label %invoke.cont880 unwind label %lpad879

invoke.cont880:                                   ; preds = %invoke.cont875
  %_M_p.i.i.i1041 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp872, i64 0, i32 0, i32 0
  %618 = load i8*, i8** %_M_p.i.i.i1041, align 8, !tbaa !43
  %arrayidx.i.i1042 = getelementptr inbounds i8, i8* %618, i64 -24
  %619 = bitcast i8* %arrayidx.i.i1042 to %"struct.std::basic_string<char>::_Rep"*
  %620 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i1040, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %620) #8
  %cmp.not.i.i1043 = icmp eq i8* %arrayidx.i.i1042, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i1043, label %_ZNSsD2Ev.exit1053, label %if.then.i.i1045, !prof !47

if.then.i.i1045:                                  ; preds = %invoke.cont880
  %_M_refcount.i.i1044 = getelementptr inbounds i8, i8* %618, i64 -8
  %621 = bitcast i8* %_M_refcount.i.i1044 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i1046, label %if.else.i.i.i1048

if.then.i.i.i1046:                                ; preds = %if.then.i.i1045
  %622 = atomicrmw volatile add i32* %621, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i1051

if.else.i.i.i1048:                                ; preds = %if.then.i.i1045
  %623 = load i32, i32* %621, align 8, !tbaa !16
  %add.i.i.i.i1047 = add nsw i32 %623, -1
  store i32 %add.i.i.i.i1047, i32* %621, align 8, !tbaa !16
  br label %invoke.cont.i.i1051

invoke.cont.i.i1051:                              ; preds = %if.else.i.i.i1048, %if.then.i.i.i1046
  %retval.0.i.i.i1049 = phi i32 [ %622, %if.then.i.i.i1046 ], [ %623, %if.else.i.i.i1048 ]
  %cmp3.i.i1050 = icmp slt i32 %retval.0.i.i.i1049, 1
  br i1 %cmp3.i.i1050, label %if.then4.i.i1052, label %_ZNSsD2Ev.exit1053

if.then4.i.i1052:                                 ; preds = %invoke.cont.i.i1051
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %619, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i1040) #8
  br label %_ZNSsD2Ev.exit1053

_ZNSsD2Ev.exit1053:                               ; preds = %invoke.cont880, %invoke.cont.i.i1051, %if.then4.i.i1052
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %620) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %615) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %614) #8
  %_M_p.i.i.i1055 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %title, i64 0, i32 0, i32 0
  %624 = load i8*, i8** %_M_p.i.i.i1055, align 8, !tbaa !43
  %arrayidx.i.i1056 = getelementptr inbounds i8, i8* %624, i64 -24
  %625 = bitcast i8* %arrayidx.i.i1056 to %"struct.std::basic_string<char>::_Rep"*
  %626 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i1054, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %626) #8
  %cmp.not.i.i1057 = icmp eq i8* %arrayidx.i.i1056, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i1057, label %_ZNSsD2Ev.exit1067, label %if.then.i.i1059, !prof !47

if.then.i.i1059:                                  ; preds = %_ZNSsD2Ev.exit1053
  %_M_refcount.i.i1058 = getelementptr inbounds i8, i8* %624, i64 -8
  %627 = bitcast i8* %_M_refcount.i.i1058 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i1060, label %if.else.i.i.i1062

if.then.i.i.i1060:                                ; preds = %if.then.i.i1059
  %628 = atomicrmw volatile add i32* %627, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i1065

if.else.i.i.i1062:                                ; preds = %if.then.i.i1059
  %629 = load i32, i32* %627, align 8, !tbaa !16
  %add.i.i.i.i1061 = add nsw i32 %629, -1
  store i32 %add.i.i.i.i1061, i32* %627, align 8, !tbaa !16
  br label %invoke.cont.i.i1065

invoke.cont.i.i1065:                              ; preds = %if.else.i.i.i1062, %if.then.i.i.i1060
  %retval.0.i.i.i1063 = phi i32 [ %628, %if.then.i.i.i1060 ], [ %629, %if.else.i.i.i1062 ]
  %cmp3.i.i1064 = icmp slt i32 %retval.0.i.i.i1063, 1
  br i1 %cmp3.i.i1064, label %if.then4.i.i1066, label %_ZNSsD2Ev.exit1067

if.then4.i.i1066:                                 ; preds = %invoke.cont.i.i1065
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %625, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i1054) #8
  br label %_ZNSsD2Ev.exit1067

_ZNSsD2Ev.exit1067:                               ; preds = %_ZNSsD2Ev.exit1053, %invoke.cont.i.i1065, %if.then4.i.i1066
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %626) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %226) #8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %196) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %195) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %194) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %193) #8
  %_M_start.i.i.i = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %x, i64 0, i32 2, i32 0, i32 0, i32 0
  %630 = load double*, double** %_M_start.i.i.i, align 8, !tbaa !78
  %tobool.not.i.i.i.i = icmp eq double* %630, null
  br i1 %tobool.not.i.i.i.i, label %_ZN6miniFE6VectorIdiiED2Ev.exit, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %_ZNSsD2Ev.exit1067
  %631 = bitcast double* %630 to i8*
  call void @_ZdlPv(i8* noundef nonnull %631) #8
  br label %_ZN6miniFE6VectorIdiiED2Ev.exit

_ZN6miniFE6VectorIdiiED2Ev.exit:                  ; preds = %_ZNSsD2Ev.exit1067, %if.then.i.i.i.i
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %44) #8
  %_M_start.i.i.i1068 = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %b, i64 0, i32 2, i32 0, i32 0, i32 0
  %632 = load double*, double** %_M_start.i.i.i1068, align 8, !tbaa !78
  %tobool.not.i.i.i.i1069 = icmp eq double* %632, null
  br i1 %tobool.not.i.i.i.i1069, label %_ZN6miniFE6VectorIdiiED2Ev.exit1071, label %if.then.i.i.i.i1070

if.then.i.i.i.i1070:                              ; preds = %_ZN6miniFE6VectorIdiiED2Ev.exit
  %633 = bitcast double* %632 to i8*
  call void @_ZdlPv(i8* noundef nonnull %633) #8
  br label %_ZN6miniFE6VectorIdiiED2Ev.exit1071

_ZN6miniFE6VectorIdiiED2Ev.exit1071:              ; preds = %_ZN6miniFE6VectorIdiiED2Ev.exit, %if.then.i.i.i.i1070
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %.pre-phi) #8
  %_M_start.i.i.i1072 = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 6, i32 0, i32 0, i32 0
  %634 = load double*, double** %_M_start.i.i.i1072, align 8, !tbaa !78
  %tobool.not.i.i.i.i1073 = icmp eq double* %634, null
  br i1 %tobool.not.i.i.i.i1073, label %_ZNSt6vectorIdSaIdEED2Ev.exit.i, label %if.then.i.i.i.i1074

if.then.i.i.i.i1074:                              ; preds = %_ZN6miniFE6VectorIdiiED2Ev.exit1071
  %635 = bitcast double* %634 to i8*
  call void @_ZdlPv(i8* noundef nonnull %635) #8
  br label %_ZNSt6vectorIdSaIdEED2Ev.exit.i

_ZNSt6vectorIdSaIdEED2Ev.exit.i:                  ; preds = %if.then.i.i.i.i1074, %_ZN6miniFE6VectorIdiiED2Ev.exit1071
  %_M_start.i.i1.i = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 5, i32 0, i32 0, i32 0
  %636 = load i32*, i32** %_M_start.i.i1.i, align 8, !tbaa !74
  %tobool.not.i.i.i2.i = icmp eq i32* %636, null
  br i1 %tobool.not.i.i.i2.i, label %_ZNSt6vectorIiSaIiEED2Ev.exit.i, label %if.then.i.i.i3.i

if.then.i.i.i3.i:                                 ; preds = %_ZNSt6vectorIdSaIdEED2Ev.exit.i
  %637 = bitcast i32* %636 to i8*
  call void @_ZdlPv(i8* noundef nonnull %637) #8
  br label %_ZNSt6vectorIiSaIiEED2Ev.exit.i

_ZNSt6vectorIiSaIiEED2Ev.exit.i:                  ; preds = %if.then.i.i.i3.i, %_ZNSt6vectorIdSaIdEED2Ev.exit.i
  %_M_start.i.i4.i = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 4, i32 0, i32 0, i32 0
  %638 = load i32*, i32** %_M_start.i.i4.i, align 8, !tbaa !74
  %tobool.not.i.i.i5.i = icmp eq i32* %638, null
  br i1 %tobool.not.i.i.i5.i, label %_ZNSt6vectorIiSaIiEED2Ev.exit7.i, label %if.then.i.i.i6.i

if.then.i.i.i6.i:                                 ; preds = %_ZNSt6vectorIiSaIiEED2Ev.exit.i
  %639 = bitcast i32* %638 to i8*
  call void @_ZdlPv(i8* noundef nonnull %639) #8
  br label %_ZNSt6vectorIiSaIiEED2Ev.exit7.i

_ZNSt6vectorIiSaIiEED2Ev.exit7.i:                 ; preds = %if.then.i.i.i6.i, %_ZNSt6vectorIiSaIiEED2Ev.exit.i
  %_M_start.i.i8.i = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 3, i32 0, i32 0, i32 0
  %640 = load i32*, i32** %_M_start.i.i8.i, align 8, !tbaa !74
  %tobool.not.i.i.i9.i = icmp eq i32* %640, null
  br i1 %tobool.not.i.i.i9.i, label %_ZNSt6vectorIiSaIiEED2Ev.exit11.i, label %if.then.i.i.i10.i

if.then.i.i.i10.i:                                ; preds = %_ZNSt6vectorIiSaIiEED2Ev.exit7.i
  %641 = bitcast i32* %640 to i8*
  call void @_ZdlPv(i8* noundef nonnull %641) #8
  br label %_ZNSt6vectorIiSaIiEED2Ev.exit11.i

_ZNSt6vectorIiSaIiEED2Ev.exit11.i:                ; preds = %if.then.i.i.i10.i, %_ZNSt6vectorIiSaIiEED2Ev.exit7.i
  %642 = load i32*, i32** %_M_start.i.i, align 8, !tbaa !74
  %tobool.not.i.i.i13.i = icmp eq i32* %642, null
  br i1 %tobool.not.i.i.i13.i, label %_ZN6miniFE9CSRMatrixIdiiED2Ev.exit, label %if.then.i.i.i14.i

if.then.i.i.i14.i:                                ; preds = %_ZNSt6vectorIiSaIiEED2Ev.exit11.i
  %643 = bitcast i32* %642 to i8*
  call void @_ZdlPv(i8* noundef nonnull %643) #8
  br label %_ZN6miniFE9CSRMatrixIdiiED2Ev.exit

_ZN6miniFE9CSRMatrixIdiiED2Ev.exit:               ; preds = %_ZNSt6vectorIiSaIiEED2Ev.exit11.i, %if.then.i.i.i14.i
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %19) #8
  %map_ids_to_rows.i = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %mesh, i64 0, i32 2
  %_M_t.i.i = getelementptr inbounds %"class.std::map", %"class.std::map"* %map_ids_to_rows.i, i64 0, i32 0
  %644 = getelementptr inbounds %"class.std::map", %"class.std::map"* %map_ids_to_rows.i, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %_M_parent.i.i.i.i = getelementptr inbounds i8, i8* %644, i64 16
  %645 = bitcast i8* %_M_parent.i.i.i.i to %"struct.std::_Rb_tree_node"**
  %646 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %645, align 8, !tbaa !86
  invoke void @_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree.11"* noundef nonnull align 8 dereferenceable(48) %_M_t.i.i, %"struct.std::_Rb_tree_node"* noundef %646)
          to label %_ZNSt3mapIiiSt4lessIiESaISt4pairIKiiEEED2Ev.exit.i unwind label %lpad.i.i.i

lpad.i.i.i:                                       ; preds = %_ZN6miniFE9CSRMatrixIdiiED2Ev.exit
  %647 = landingpad { i8*, i32 }
          catch i8* null
  %648 = extractvalue { i8*, i32 } %647, 0
  call void @__clang_call_terminate(i8* %648) #31
  unreachable

_ZNSt3mapIiiSt4lessIiESaISt4pairIKiiEEED2Ev.exit.i: ; preds = %_ZN6miniFE9CSRMatrixIdiiED2Ev.exit
  %_M_t.i1.i = getelementptr inbounds %"class.std::set", %"class.std::set"* %bc_rows_1, i64 0, i32 0
  %649 = getelementptr inbounds %"class.std::set", %"class.std::set"* %bc_rows_1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %_M_parent.i.i.i2.i = getelementptr inbounds i8, i8* %649, i64 16
  %650 = bitcast i8* %_M_parent.i.i.i2.i to %"struct.std::_Rb_tree_node.48"**
  %651 = load %"struct.std::_Rb_tree_node.48"*, %"struct.std::_Rb_tree_node.48"** %650, align 8, !tbaa !86
  invoke void @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiE(%"class.std::_Rb_tree"* noundef nonnull align 8 dereferenceable(48) %_M_t.i1.i, %"struct.std::_Rb_tree_node.48"* noundef %651)
          to label %_ZNSt3setIiSt4lessIiESaIiEED2Ev.exit.i unwind label %lpad.i.i3.i

lpad.i.i3.i:                                      ; preds = %_ZNSt3mapIiiSt4lessIiESaISt4pairIKiiEEED2Ev.exit.i
  %652 = landingpad { i8*, i32 }
          catch i8* null
  %653 = extractvalue { i8*, i32 } %652, 0
  call void @__clang_call_terminate(i8* %653) #31
  unreachable

_ZNSt3setIiSt4lessIiESaIiEED2Ev.exit.i:           ; preds = %_ZNSt3mapIiiSt4lessIiESaISt4pairIKiiEEED2Ev.exit.i
  %_M_t.i4.i = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %mesh, i64 0, i32 0, i32 0
  %_M_parent.i.i.i5.i = getelementptr inbounds i8, i8* %7, i64 16
  %654 = bitcast i8* %_M_parent.i.i.i5.i to %"struct.std::_Rb_tree_node.48"**
  %655 = load %"struct.std::_Rb_tree_node.48"*, %"struct.std::_Rb_tree_node.48"** %654, align 8, !tbaa !86
  invoke void @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiE(%"class.std::_Rb_tree"* noundef nonnull align 8 dereferenceable(48) %_M_t.i4.i, %"struct.std::_Rb_tree_node.48"* noundef %655)
          to label %_ZN6miniFE23simple_mesh_descriptionIiED2Ev.exit unwind label %lpad.i.i6.i

lpad.i.i6.i:                                      ; preds = %_ZNSt3setIiSt4lessIiESaIiEED2Ev.exit.i
  %656 = landingpad { i8*, i32 }
          catch i8* null
  %657 = extractvalue { i8*, i32 } %656, 0
  call void @__clang_call_terminate(i8* %657) #31
  unreachable

_ZN6miniFE23simple_mesh_descriptionIiED2Ev.exit:  ; preds = %_ZNSt3setIiSt4lessIiESaIiEED2Ev.exit.i
  call void @llvm.lifetime.end.p0i8(i64 192, i8* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #8
  ret i32 %verify_result.0

lpad874:                                          ; preds = %invoke.cont870
  %658 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup883

lpad879:                                          ; preds = %invoke.cont875
  %659 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp872) #8
  br label %ehcleanup883

ehcleanup883:                                     ; preds = %lpad879, %lpad874
  %.pn245 = phi { i8*, i32 } [ %659, %lpad879 ], [ %658, %lpad874 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %615) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %614) #8
  br label %ehcleanup896

ehcleanup896:                                     ; preds = %lpad544, %ehcleanup556, %ehcleanup569, %ehcleanup584, %ehcleanup606, %ehcleanup621, %ehcleanup634, %ehcleanup649, %ehcleanup671, %ehcleanup686, %ehcleanup699, %ehcleanup714, %ehcleanup736, %ehcleanup758, %ehcleanup783, %ehcleanup807, %ehcleanup833, %ehcleanup866, %ehcleanup883, %ehcleanup495, %ehcleanup482, %lpad471, %ehcleanup468, %ehcleanup457, %ehcleanup424, %ehcleanup391
  %.pn245.pn.pn = phi { i8*, i32 } [ %.pn206, %ehcleanup495 ], [ %346, %lpad471 ], [ %.pn204, %ehcleanup482 ], [ %.pn202, %ehcleanup468 ], [ %.pn197.pn.pn.pn, %ehcleanup457 ], [ %.pn192.pn.pn.pn, %ehcleanup424 ], [ %.pn187.pn.pn.pn, %ehcleanup391 ], [ %.pn245, %ehcleanup883 ], [ %379, %lpad544 ], [ %.pn247.pn.pn, %ehcleanup833 ], [ %.pn240.pn.pn.pn, %ehcleanup866 ], [ %.pn236.pn.pn, %ehcleanup807 ], [ %.pn232.pn.pn, %ehcleanup783 ], [ %.pn229.pn, %ehcleanup758 ], [ %.pn251, %ehcleanup714 ], [ %.pn226.pn, %ehcleanup736 ], [ %.pn224, %ehcleanup699 ], [ %.pn222, %ehcleanup686 ], [ %.pn253, %ehcleanup649 ], [ %.pn219.pn, %ehcleanup671 ], [ %.pn217, %ehcleanup634 ], [ %.pn215, %ehcleanup621 ], [ %.pn255, %ehcleanup584 ], [ %.pn212.pn, %ehcleanup606 ], [ %.pn210, %ehcleanup569 ], [ %.pn208, %ehcleanup556 ]
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %title) #8
  br label %ehcleanup897

ehcleanup897:                                     ; preds = %ehcleanup896, %lpad355
  %.pn245.pn.pn.pn = phi { i8*, i32 } [ %.pn245.pn.pn, %ehcleanup896 ], [ %328, %lpad355 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %226) #8
  br label %ehcleanup900

ehcleanup900:                                     ; preds = %lpad310, %lpad336, %ehcleanup897, %lpad303
  %.pn245.pn.pn.pn.pn.pn = phi { i8*, i32 } [ %206, %lpad303 ], [ %.pn245.pn.pn.pn, %ehcleanup897 ], [ %207, %lpad310 ], [ %218, %lpad336 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %196) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %195) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %194) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %193) #8
  br label %ehcleanup908

ehcleanup908:                                     ; preds = %lpad195, %lpad204, %lpad241, %lpad299, %ehcleanup900, %lpad279, %lpad270, %ehcleanup185, %ehcleanup163, %ehcleanup144, %ehcleanup122, %lpad88, %lpad79
  %.pn245.pn.pn.pn.pn.pn.pn.pn.pn.pn = phi { i8*, i32 } [ %.pn183.pn.pn, %ehcleanup185 ], [ %.pn180.pn, %ehcleanup163 ], [ %.pn176.pn.pn, %ehcleanup144 ], [ %.pn.pn, %ehcleanup122 ], [ %72, %lpad88 ], [ %52, %lpad79 ], [ %176, %lpad241 ], [ %154, %lpad195 ], [ %164, %lpad204 ], [ %192, %lpad279 ], [ %179, %lpad270 ], [ %.pn245.pn.pn.pn.pn.pn, %ehcleanup900 ], [ %205, %lpad299 ]
  %_M_start.i.i.i1075 = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %x, i64 0, i32 2, i32 0, i32 0, i32 0
  %660 = load double*, double** %_M_start.i.i.i1075, align 8, !tbaa !78
  %tobool.not.i.i.i.i1076 = icmp eq double* %660, null
  br i1 %tobool.not.i.i.i.i1076, label %ehcleanup910, label %if.then.i.i.i.i1077

if.then.i.i.i.i1077:                              ; preds = %ehcleanup908
  %661 = bitcast double* %660 to i8*
  call void @_ZdlPv(i8* noundef nonnull %661) #8
  br label %ehcleanup910

ehcleanup910:                                     ; preds = %if.then.i.i.i.i1077, %ehcleanup908, %lpad71
  %.pn245.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn = phi { i8*, i32 } [ %51, %lpad71 ], [ %.pn245.pn.pn.pn.pn.pn.pn.pn.pn.pn, %ehcleanup908 ], [ %.pn245.pn.pn.pn.pn.pn.pn.pn.pn.pn, %if.then.i.i.i.i1077 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %44) #8
  %_M_start.i.i.i1080 = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %b, i64 0, i32 2, i32 0, i32 0, i32 0
  %662 = load double*, double** %_M_start.i.i.i1080, align 8, !tbaa !78
  %tobool.not.i.i.i.i1081 = icmp eq double* %662, null
  br i1 %tobool.not.i.i.i.i1081, label %ehcleanup912, label %if.then.i.i.i.i1082

if.then.i.i.i.i1082:                              ; preds = %ehcleanup910
  %663 = bitcast double* %662 to i8*
  call void @_ZdlPv(i8* noundef nonnull %663) #8
  br label %ehcleanup912

ehcleanup912:                                     ; preds = %if.then.i.i.i.i1082, %ehcleanup910, %lpad69
  %.pn245.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn = phi { i8*, i32 } [ %.pn245.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn, %if.then.i.i.i.i1082 ], [ %.pn245.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn, %ehcleanup910 ], [ %50, %lpad69 ]
  %.pre-phi1322 = bitcast %"struct.miniFE::Vector"* %b to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %.pre-phi1322) #8
  br label %ehcleanup915

ehcleanup915:                                     ; preds = %ehcleanup912, %lpad46, %lpad38
  %.pn245.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn = phi { i8*, i32 } [ %.pn245.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn, %ehcleanup912 ], [ %33, %lpad46 ], [ %23, %lpad38 ]
  call void @_ZN6miniFE9CSRMatrixIdiiED2Ev(%"struct.miniFE::CSRMatrix"* noundef nonnull align 8 dereferenceable(132) %A) #8
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %19) #8
  br label %ehcleanup919

ehcleanup919:                                     ; preds = %lpad15, %ehcleanup915, %lpad
  %.pn245.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn = phi { i8*, i32 } [ %17, %lpad ], [ %.pn245.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn, %ehcleanup915 ], [ %18, %lpad15 ]
  call void @_ZN6miniFE23simple_mesh_descriptionIiED2Ev(%"class.miniFE::simple_mesh_description"* noundef nonnull align 8 dereferenceable(192) %mesh) #8
  call void @llvm.lifetime.end.p0i8(i64 192, i8* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #8
  resume { i8*, i32 } %.pn245.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn
}

declare noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsd(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40), %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8), double noundef) local_unnamed_addr #0

declare void @_ZN8YAML_Doc12generateYAMLEv(%"class.std::basic_string"* sret(%"class.std::basic_string") align 8, %class.YAML_Doc* noundef nonnull align 8 dereferenceable(72)) local_unnamed_addr #0

; Function Attrs: nounwind
declare void @_ZN8YAML_DocD1Ev(%class.YAML_Doc* noundef nonnull align 8 dereferenceable(72)) unnamed_addr #1

; Function Attrs: nounwind uwtable
declare void @_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev(%"class.std::basic_ostringstream"* noundef nonnull align 8 dereferenceable(88)) unnamed_addr #12 align 2

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN6miniFE10ParametersD2Ev(%"struct.miniFE::Parameters"* noundef nonnull align 8 dereferenceable(68) %this) unnamed_addr #13 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %ref.tmp.i = alloca %"class.std::allocator", align 1
  %_M_p.i.i.i = getelementptr inbounds %"struct.miniFE::Parameters", %"struct.miniFE::Parameters"* %this, i64 0, i32 8, i32 0, i32 0
  %0 = load i8*, i8** %_M_p.i.i.i, align 8, !tbaa !43
  %arrayidx.i.i = getelementptr inbounds i8, i8* %0, i64 -24
  %1 = bitcast i8* %arrayidx.i.i to %"struct.std::basic_string<char>::_Rep"*
  %2 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #8
  %cmp.not.i.i = icmp eq i8* %arrayidx.i.i, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i, label %_ZNSsD2Ev.exit, label %if.then.i.i, !prof !47

if.then.i.i:                                      ; preds = %entry
  %_M_refcount.i.i = getelementptr inbounds i8, i8* %0, i64 -8
  %3 = bitcast i8* %_M_refcount.i.i to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i, label %if.else.i.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i
  %4 = atomicrmw volatile add i32* %3, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i

if.else.i.i.i:                                    ; preds = %if.then.i.i
  %5 = load i32, i32* %3, align 8, !tbaa !16
  %add.i.i.i.i = add nsw i32 %5, -1
  store i32 %add.i.i.i.i, i32* %3, align 8, !tbaa !16
  br label %invoke.cont.i.i

invoke.cont.i.i:                                  ; preds = %if.else.i.i.i, %if.then.i.i.i
  %retval.0.i.i.i = phi i32 [ %4, %if.then.i.i.i ], [ %5, %if.else.i.i.i ]
  %cmp3.i.i = icmp slt i32 %retval.0.i.i.i, 1
  br i1 %cmp3.i.i, label %if.then4.i.i, label %_ZNSsD2Ev.exit

if.then4.i.i:                                     ; preds = %invoke.cont.i.i
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %1, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i) #8
  br label %_ZNSsD2Ev.exit

_ZNSsD2Ev.exit:                                   ; preds = %entry, %invoke.cont.i.i, %if.then4.i.i
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #8
  ret void
}

declare noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8), i8* noundef, i64 noundef) local_unnamed_addr #0

declare noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8), i8 noundef zeroext) local_unnamed_addr #0

declare noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8)) local_unnamed_addr #0

; Function Attrs: noreturn
declare void @_ZSt16__throw_bad_castv() local_unnamed_addr #14

declare void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570)) local_unnamed_addr #0

declare noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIdEERSoT_(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8), double noundef) local_unnamed_addr #0

; Function Attrs: noreturn
declare void @_ZSt17__throw_bad_allocv() local_unnamed_addr #14

; Function Attrs: nobuiltin allocsize(0)
declare noundef nonnull i8* @_Znwm(i64 noundef) local_unnamed_addr #15

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #16

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #17

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8* %0) local_unnamed_addr #18 comdat {
  %2 = tail call i8* @__cxa_begin_catch(i8* %0) #8
  tail call void @_ZSt9terminatev() #31
  unreachable
}

declare i8* @__cxa_begin_catch(i8*) local_unnamed_addr

declare void @_ZSt9terminatev() local_unnamed_addr

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8* noundef) local_unnamed_addr #19

; Function Attrs: nounwind
declare void @_ZNSt6localeD1Ev(%"class.std::locale"* noundef nonnull align 8 dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_baseD2Ev(%"class.std::ios_base"* noundef nonnull align 8 dereferenceable(216)) unnamed_addr #1

; Function Attrs: nounwind
declare noundef signext i32 @_ZNKSs7compareEPKc(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8), i8* noundef) local_unnamed_addr #1

; Function Attrs: uwtable
declare void @_ZNKSt15basic_stringbufIcSt11char_traitsIcESaIcEE3strEv(%"class.std::basic_string"* noalias sret(%"class.std::basic_string") align 8, %"class.std::basic_stringbuf"* noundef nonnull align 8 dereferenceable(80)) local_unnamed_addr #11 align 2

; Function Attrs: nounwind
declare void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1)) local_unnamed_addr #1

; Function Attrs: nounwind
declare extern_weak noundef signext i32 @__pthread_key_create(i32* noundef, void (i8*)* noundef) #1

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN6miniFE17compute_imbalanceIiEEvRK3BoxS3_RfS4_R8YAML_Docb(%struct.Box* noundef nonnull align 4 dereferenceable(24) %global_box, %struct.Box* noundef nonnull align 4 dereferenceable(24) %local_box, float* noundef nonnull align 4 dereferenceable(4) %largest_imbalance, float* noundef nonnull align 4 dereferenceable(4) %std_dev, %class.YAML_Doc* noundef nonnull align 8 dereferenceable(72) %doc, i1 noundef zeroext %record_in_doc) local_unnamed_addr #11 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %ref.tmp.i106 = alloca %"class.std::allocator", align 1
  %ref.tmp.i92 = alloca %"class.std::allocator", align 1
  %ref.tmp.i78 = alloca %"class.std::allocator", align 1
  %ref.tmp.i64 = alloca %"class.std::allocator", align 1
  %ref.tmp.i50 = alloca %"class.std::allocator", align 1
  %ref.tmp.i = alloca %"class.std::allocator", align 1
  %ref.tmp = alloca %"class.std::basic_string", align 8
  %ref.tmp10 = alloca %"class.std::allocator", align 1
  %ref.tmp11 = alloca %"class.std::basic_string", align 8
  %ref.tmp12 = alloca %"class.std::allocator", align 1
  %ref.tmp24 = alloca %"class.std::basic_string", align 8
  %ref.tmp25 = alloca %"class.std::allocator", align 1
  %ref.tmp31 = alloca %"class.std::basic_string", align 8
  %ref.tmp32 = alloca %"class.std::allocator", align 1
  %ref.tmp47 = alloca %"class.std::basic_string", align 8
  %ref.tmp48 = alloca %"class.std::allocator", align 1
  %ref.tmp54 = alloca %"class.std::basic_string", align 8
  %ref.tmp55 = alloca %"class.std::allocator", align 1
  %arrayidx.i.i = getelementptr inbounds %struct.Box, %struct.Box* %local_box, i64 0, i32 0, i64 0
  %arrayidx.i = getelementptr inbounds %struct.Box, %struct.Box* %local_box, i64 0, i32 0, i64 1
  %0 = load i32, i32* %arrayidx.i, align 4, !tbaa !16
  %1 = load i32, i32* %arrayidx.i.i, align 4, !tbaa !16
  %sub.i = sub nsw i32 %0, %1
  %arrayidx.i12.i = getelementptr inbounds %struct.Box, %struct.Box* %local_box, i64 0, i32 0, i64 2
  %arrayidx4.i = getelementptr inbounds %struct.Box, %struct.Box* %local_box, i64 0, i32 0, i64 3
  %2 = load i32, i32* %arrayidx4.i, align 4, !tbaa !16
  %3 = load i32, i32* %arrayidx.i12.i, align 4, !tbaa !16
  %sub7.i = sub nsw i32 %2, %3
  %arrayidx.i14.i = getelementptr inbounds %struct.Box, %struct.Box* %local_box, i64 0, i32 0, i64 4
  %arrayidx9.i = getelementptr inbounds %struct.Box, %struct.Box* %local_box, i64 0, i32 0, i64 5
  %4 = load i32, i32* %arrayidx9.i, align 4, !tbaa !16
  %5 = load i32, i32* %arrayidx.i14.i, align 4, !tbaa !16
  %sub12.i = sub nsw i32 %4, %5
  %mul.i = mul nsw i32 %sub7.i, %sub.i
  %mul13.i = mul nsw i32 %mul.i, %sub12.i
  %call2.i.i.i.i1.i.i23.i = tail call noalias noundef nonnull i8* @_Znwm(i64 noundef 4) #30
  %6 = bitcast i8* %call2.i.i.i.i1.i.i23.i to i32*
  store i32 %mul13.i, i32* %6, align 4, !tbaa !16
  %mul.i35 = mul nsw i32 %mul13.i, 5
  tail call void @_ZdlPv(i8* noundef nonnull %call2.i.i.i.i1.i.i23.i) #8
  %conv = sitofp i32 %mul13.i to float
  %7 = tail call contract float @llvm.fabs.f32(float %conv) #8
  %conv.i = fpext float %7 to double
  %cmp.i = fcmp contract ogt double %conv.i, 1.000000e-05
  br i1 %cmp.i, label %_ZN6miniFE21percentage_differenceIfEET_S1_S1_.exit48, label %if.end.sink.split

_ZN6miniFE21percentage_differenceIfEET_S1_S1_.exit48: ; preds = %entry
  %cmp7.i = icmp sgt i32 %mul.i35, %mul13.i
  %spec.select = select i1 %cmp7.i, i32 %mul13.i, i32 %mul.i35
  %conv2 = sitofp i32 %spec.select to float
  %8 = icmp sgt i32 %mul13.i, 0
  %max_nrows.0 = select i1 %8, i32 %mul13.i, i32 0
  %sub.i36 = fsub contract float %conv2, %conv
  %9 = tail call contract float @llvm.fabs.f32(float %sub.i36) #8
  %div.i = fdiv contract float %9, %conv
  %mul.i37 = fmul contract float %div.i, 1.000000e+02
  %conv4134 = sitofp i32 %max_nrows.0 to float
  %sub.i42 = fsub contract float %conv4134, %conv
  %10 = tail call contract float @llvm.fabs.f32(float %sub.i42) #8
  %div.i43 = fdiv contract float %10, %conv
  %mul.i44 = fmul contract float %div.i43, 1.000000e+02
  %cmp = fcmp contract ogt float %mul.i44, %mul.i37
  br i1 %cmp, label %if.end.sink.split, label %if.end

if.end.sink.split:                                ; preds = %_ZN6miniFE21percentage_differenceIfEET_S1_S1_.exit48, %entry
  %.sink = phi float [ -1.000000e+00, %entry ], [ %mul.i44, %_ZN6miniFE21percentage_differenceIfEET_S1_S1_.exit48 ]
  br label %if.end

if.end:                                           ; preds = %if.end.sink.split, %_ZN6miniFE21percentage_differenceIfEET_S1_S1_.exit48
  %storemerge = phi float [ %.sink, %if.end.sink.split ], [ %mul.i37, %_ZN6miniFE21percentage_differenceIfEET_S1_S1_.exit48 ]
  store float %storemerge, float* %largest_imbalance, align 4, !tbaa !66
  store float 0.000000e+00, float* %std_dev, align 4, !tbaa !66
  br i1 %record_in_doc, label %if.then9, label %if.end70

if.then9:                                         ; preds = %if.end
  %11 = getelementptr inbounds %class.YAML_Doc, %class.YAML_Doc* %doc, i64 0, i32 0
  %12 = bitcast %"class.std::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #8
  %13 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.50, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp10)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %if.then9
  %14 = bitcast %"class.std::basic_string"* %ref.tmp11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #8
  %15 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %15) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp11, i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp12)
          to label %invoke.cont14 unwind label %lpad13

invoke.cont14:                                    ; preds = %invoke.cont
  %call17 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsS1_(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %11, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp11)
          to label %invoke.cont16 unwind label %lpad15

invoke.cont16:                                    ; preds = %invoke.cont14
  %_M_p.i.i.i = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp11, i64 0, i32 0, i32 0
  %16 = load i8*, i8** %_M_p.i.i.i, align 8, !tbaa !43
  %arrayidx.i.i49 = getelementptr inbounds i8, i8* %16, i64 -24
  %17 = bitcast i8* %arrayidx.i.i49 to %"struct.std::basic_string<char>::_Rep"*
  %18 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %18) #8
  %cmp.not.i.i = icmp eq i8* %arrayidx.i.i49, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i, label %_ZNSsD2Ev.exit, label %if.then.i.i, !prof !47

if.then.i.i:                                      ; preds = %invoke.cont16
  %_M_refcount.i.i = getelementptr inbounds i8, i8* %16, i64 -8
  %19 = bitcast i8* %_M_refcount.i.i to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i, label %if.else.i.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i
  %20 = atomicrmw volatile add i32* %19, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i

if.else.i.i.i:                                    ; preds = %if.then.i.i
  %21 = load i32, i32* %19, align 8, !tbaa !16
  %add.i.i.i.i = add nsw i32 %21, -1
  store i32 %add.i.i.i.i, i32* %19, align 8, !tbaa !16
  br label %invoke.cont.i.i

invoke.cont.i.i:                                  ; preds = %if.else.i.i.i, %if.then.i.i.i
  %retval.0.i.i.i = phi i32 [ %20, %if.then.i.i.i ], [ %21, %if.else.i.i.i ]
  %cmp3.i.i = icmp slt i32 %retval.0.i.i.i, 1
  br i1 %cmp3.i.i, label %if.then4.i.i, label %_ZNSsD2Ev.exit

if.then4.i.i:                                     ; preds = %invoke.cont.i.i
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %17, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i) #8
  br label %_ZNSsD2Ev.exit

_ZNSsD2Ev.exit:                                   ; preds = %invoke.cont16, %invoke.cont.i.i, %if.then4.i.i
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %18) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %15) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #8
  %_M_p.i.i.i51 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  %22 = load i8*, i8** %_M_p.i.i.i51, align 8, !tbaa !43
  %arrayidx.i.i52 = getelementptr inbounds i8, i8* %22, i64 -24
  %23 = bitcast i8* %arrayidx.i.i52 to %"struct.std::basic_string<char>::_Rep"*
  %24 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i50, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %24) #8
  %cmp.not.i.i53 = icmp eq i8* %arrayidx.i.i52, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i53, label %_ZNSsD2Ev.exit63, label %if.then.i.i55, !prof !47

if.then.i.i55:                                    ; preds = %_ZNSsD2Ev.exit
  %_M_refcount.i.i54 = getelementptr inbounds i8, i8* %22, i64 -8
  %25 = bitcast i8* %_M_refcount.i.i54 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i56, label %if.else.i.i.i58

if.then.i.i.i56:                                  ; preds = %if.then.i.i55
  %26 = atomicrmw volatile add i32* %25, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i61

if.else.i.i.i58:                                  ; preds = %if.then.i.i55
  %27 = load i32, i32* %25, align 8, !tbaa !16
  %add.i.i.i.i57 = add nsw i32 %27, -1
  store i32 %add.i.i.i.i57, i32* %25, align 8, !tbaa !16
  br label %invoke.cont.i.i61

invoke.cont.i.i61:                                ; preds = %if.else.i.i.i58, %if.then.i.i.i56
  %retval.0.i.i.i59 = phi i32 [ %26, %if.then.i.i.i56 ], [ %27, %if.else.i.i.i58 ]
  %cmp3.i.i60 = icmp slt i32 %retval.0.i.i.i59, 1
  br i1 %cmp3.i.i60, label %if.then4.i.i62, label %_ZNSsD2Ev.exit63

if.then4.i.i62:                                   ; preds = %invoke.cont.i.i61
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %23, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i50) #8
  br label %_ZNSsD2Ev.exit63

_ZNSsD2Ev.exit63:                                 ; preds = %_ZNSsD2Ev.exit, %invoke.cont.i.i61, %if.then4.i.i62
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %24) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #8
  %28 = bitcast %"class.std::basic_string"* %ref.tmp24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8
  %29 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp25, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %29) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp24, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.50, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp25)
          to label %invoke.cont27 unwind label %lpad26

invoke.cont27:                                    ; preds = %_ZNSsD2Ev.exit63
  %call30 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %11, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp24)
          to label %invoke.cont29 unwind label %lpad28

invoke.cont29:                                    ; preds = %invoke.cont27
  %30 = bitcast %"class.std::basic_string"* %ref.tmp31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #8
  %31 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp32, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %31) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp31, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.51, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp32)
          to label %invoke.cont34 unwind label %lpad33

invoke.cont34:                                    ; preds = %invoke.cont29
  %32 = load float, float* %largest_imbalance, align 4, !tbaa !66
  %conv35 = fpext float %32 to double
  %call38 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsd(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call30, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp31, double noundef %conv35)
          to label %invoke.cont37 unwind label %lpad36

invoke.cont37:                                    ; preds = %invoke.cont34
  %_M_p.i.i.i65 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp31, i64 0, i32 0, i32 0
  %33 = load i8*, i8** %_M_p.i.i.i65, align 8, !tbaa !43
  %arrayidx.i.i66 = getelementptr inbounds i8, i8* %33, i64 -24
  %34 = bitcast i8* %arrayidx.i.i66 to %"struct.std::basic_string<char>::_Rep"*
  %35 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i64, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %35) #8
  %cmp.not.i.i67 = icmp eq i8* %arrayidx.i.i66, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i67, label %_ZNSsD2Ev.exit77, label %if.then.i.i69, !prof !47

if.then.i.i69:                                    ; preds = %invoke.cont37
  %_M_refcount.i.i68 = getelementptr inbounds i8, i8* %33, i64 -8
  %36 = bitcast i8* %_M_refcount.i.i68 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i70, label %if.else.i.i.i72

if.then.i.i.i70:                                  ; preds = %if.then.i.i69
  %37 = atomicrmw volatile add i32* %36, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i75

if.else.i.i.i72:                                  ; preds = %if.then.i.i69
  %38 = load i32, i32* %36, align 8, !tbaa !16
  %add.i.i.i.i71 = add nsw i32 %38, -1
  store i32 %add.i.i.i.i71, i32* %36, align 8, !tbaa !16
  br label %invoke.cont.i.i75

invoke.cont.i.i75:                                ; preds = %if.else.i.i.i72, %if.then.i.i.i70
  %retval.0.i.i.i73 = phi i32 [ %37, %if.then.i.i.i70 ], [ %38, %if.else.i.i.i72 ]
  %cmp3.i.i74 = icmp slt i32 %retval.0.i.i.i73, 1
  br i1 %cmp3.i.i74, label %if.then4.i.i76, label %_ZNSsD2Ev.exit77

if.then4.i.i76:                                   ; preds = %invoke.cont.i.i75
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %34, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i64) #8
  br label %_ZNSsD2Ev.exit77

_ZNSsD2Ev.exit77:                                 ; preds = %invoke.cont37, %invoke.cont.i.i75, %if.then4.i.i76
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %35) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %31) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #8
  %_M_p.i.i.i79 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp24, i64 0, i32 0, i32 0
  %39 = load i8*, i8** %_M_p.i.i.i79, align 8, !tbaa !43
  %arrayidx.i.i80 = getelementptr inbounds i8, i8* %39, i64 -24
  %40 = bitcast i8* %arrayidx.i.i80 to %"struct.std::basic_string<char>::_Rep"*
  %41 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i78, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %41) #8
  %cmp.not.i.i81 = icmp eq i8* %arrayidx.i.i80, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i81, label %_ZNSsD2Ev.exit91, label %if.then.i.i83, !prof !47

if.then.i.i83:                                    ; preds = %_ZNSsD2Ev.exit77
  %_M_refcount.i.i82 = getelementptr inbounds i8, i8* %39, i64 -8
  %42 = bitcast i8* %_M_refcount.i.i82 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i84, label %if.else.i.i.i86

if.then.i.i.i84:                                  ; preds = %if.then.i.i83
  %43 = atomicrmw volatile add i32* %42, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i89

if.else.i.i.i86:                                  ; preds = %if.then.i.i83
  %44 = load i32, i32* %42, align 8, !tbaa !16
  %add.i.i.i.i85 = add nsw i32 %44, -1
  store i32 %add.i.i.i.i85, i32* %42, align 8, !tbaa !16
  br label %invoke.cont.i.i89

invoke.cont.i.i89:                                ; preds = %if.else.i.i.i86, %if.then.i.i.i84
  %retval.0.i.i.i87 = phi i32 [ %43, %if.then.i.i.i84 ], [ %44, %if.else.i.i.i86 ]
  %cmp3.i.i88 = icmp slt i32 %retval.0.i.i.i87, 1
  br i1 %cmp3.i.i88, label %if.then4.i.i90, label %_ZNSsD2Ev.exit91

if.then4.i.i90:                                   ; preds = %invoke.cont.i.i89
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %40, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i78) #8
  br label %_ZNSsD2Ev.exit91

_ZNSsD2Ev.exit91:                                 ; preds = %_ZNSsD2Ev.exit77, %invoke.cont.i.i89, %if.then4.i.i90
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %41) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %29) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  %45 = bitcast %"class.std::basic_string"* %ref.tmp47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #8
  %46 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp48, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %46) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp47, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.50, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp48)
          to label %invoke.cont50 unwind label %lpad49

invoke.cont50:                                    ; preds = %_ZNSsD2Ev.exit91
  %call53 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %11, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp47)
          to label %invoke.cont52 unwind label %lpad51

invoke.cont52:                                    ; preds = %invoke.cont50
  %47 = bitcast %"class.std::basic_string"* %ref.tmp54 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #8
  %48 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp55, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %48) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp54, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.52, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp55)
          to label %invoke.cont57 unwind label %lpad56

invoke.cont57:                                    ; preds = %invoke.cont52
  %49 = load float, float* %std_dev, align 4, !tbaa !66
  %conv58 = fpext float %49 to double
  %call61 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsd(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call53, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp54, double noundef %conv58)
          to label %invoke.cont60 unwind label %lpad59

invoke.cont60:                                    ; preds = %invoke.cont57
  %_M_p.i.i.i93 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp54, i64 0, i32 0, i32 0
  %50 = load i8*, i8** %_M_p.i.i.i93, align 8, !tbaa !43
  %arrayidx.i.i94 = getelementptr inbounds i8, i8* %50, i64 -24
  %51 = bitcast i8* %arrayidx.i.i94 to %"struct.std::basic_string<char>::_Rep"*
  %52 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i92, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %52) #8
  %cmp.not.i.i95 = icmp eq i8* %arrayidx.i.i94, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i95, label %_ZNSsD2Ev.exit105, label %if.then.i.i97, !prof !47

if.then.i.i97:                                    ; preds = %invoke.cont60
  %_M_refcount.i.i96 = getelementptr inbounds i8, i8* %50, i64 -8
  %53 = bitcast i8* %_M_refcount.i.i96 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i98, label %if.else.i.i.i100

if.then.i.i.i98:                                  ; preds = %if.then.i.i97
  %54 = atomicrmw volatile add i32* %53, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i103

if.else.i.i.i100:                                 ; preds = %if.then.i.i97
  %55 = load i32, i32* %53, align 8, !tbaa !16
  %add.i.i.i.i99 = add nsw i32 %55, -1
  store i32 %add.i.i.i.i99, i32* %53, align 8, !tbaa !16
  br label %invoke.cont.i.i103

invoke.cont.i.i103:                               ; preds = %if.else.i.i.i100, %if.then.i.i.i98
  %retval.0.i.i.i101 = phi i32 [ %54, %if.then.i.i.i98 ], [ %55, %if.else.i.i.i100 ]
  %cmp3.i.i102 = icmp slt i32 %retval.0.i.i.i101, 1
  br i1 %cmp3.i.i102, label %if.then4.i.i104, label %_ZNSsD2Ev.exit105

if.then4.i.i104:                                  ; preds = %invoke.cont.i.i103
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %51, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i92) #8
  br label %_ZNSsD2Ev.exit105

_ZNSsD2Ev.exit105:                                ; preds = %invoke.cont60, %invoke.cont.i.i103, %if.then4.i.i104
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %52) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %48) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #8
  %_M_p.i.i.i107 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp47, i64 0, i32 0, i32 0
  %56 = load i8*, i8** %_M_p.i.i.i107, align 8, !tbaa !43
  %arrayidx.i.i108 = getelementptr inbounds i8, i8* %56, i64 -24
  %57 = bitcast i8* %arrayidx.i.i108 to %"struct.std::basic_string<char>::_Rep"*
  %58 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i106, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %58) #8
  %cmp.not.i.i109 = icmp eq i8* %arrayidx.i.i108, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i109, label %_ZNSsD2Ev.exit119, label %if.then.i.i111, !prof !47

if.then.i.i111:                                   ; preds = %_ZNSsD2Ev.exit105
  %_M_refcount.i.i110 = getelementptr inbounds i8, i8* %56, i64 -8
  %59 = bitcast i8* %_M_refcount.i.i110 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i112, label %if.else.i.i.i114

if.then.i.i.i112:                                 ; preds = %if.then.i.i111
  %60 = atomicrmw volatile add i32* %59, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i117

if.else.i.i.i114:                                 ; preds = %if.then.i.i111
  %61 = load i32, i32* %59, align 8, !tbaa !16
  %add.i.i.i.i113 = add nsw i32 %61, -1
  store i32 %add.i.i.i.i113, i32* %59, align 8, !tbaa !16
  br label %invoke.cont.i.i117

invoke.cont.i.i117:                               ; preds = %if.else.i.i.i114, %if.then.i.i.i112
  %retval.0.i.i.i115 = phi i32 [ %60, %if.then.i.i.i112 ], [ %61, %if.else.i.i.i114 ]
  %cmp3.i.i116 = icmp slt i32 %retval.0.i.i.i115, 1
  br i1 %cmp3.i.i116, label %if.then4.i.i118, label %_ZNSsD2Ev.exit119

if.then4.i.i118:                                  ; preds = %invoke.cont.i.i117
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %57, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i106) #8
  br label %_ZNSsD2Ev.exit119

_ZNSsD2Ev.exit119:                                ; preds = %_ZNSsD2Ev.exit105, %invoke.cont.i.i117, %if.then4.i.i118
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %58) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %46) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #8
  br label %if.end70

lpad:                                             ; preds = %if.then9
  %62 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup21

lpad13:                                           ; preds = %invoke.cont
  %63 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup

lpad15:                                           ; preds = %invoke.cont14
  %64 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp11) #8
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad15, %lpad13
  %.pn = phi { i8*, i32 } [ %64, %lpad15 ], [ %63, %lpad13 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %15) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #8
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp) #8
  br label %ehcleanup21

ehcleanup21:                                      ; preds = %ehcleanup, %lpad
  %.pn.pn = phi { i8*, i32 } [ %.pn, %ehcleanup ], [ %62, %lpad ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #8
  br label %ehcleanup71

lpad26:                                           ; preds = %_ZNSsD2Ev.exit63
  %65 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup44

lpad28:                                           ; preds = %invoke.cont27
  %66 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup43

lpad33:                                           ; preds = %invoke.cont29
  %67 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup40

lpad36:                                           ; preds = %invoke.cont34
  %68 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp31) #8
  br label %ehcleanup40

ehcleanup40:                                      ; preds = %lpad36, %lpad33
  %.pn26 = phi { i8*, i32 } [ %68, %lpad36 ], [ %67, %lpad33 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %31) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #8
  br label %ehcleanup43

ehcleanup43:                                      ; preds = %ehcleanup40, %lpad28
  %.pn26.pn = phi { i8*, i32 } [ %.pn26, %ehcleanup40 ], [ %66, %lpad28 ]
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp24) #8
  br label %ehcleanup44

ehcleanup44:                                      ; preds = %ehcleanup43, %lpad26
  %.pn26.pn.pn = phi { i8*, i32 } [ %.pn26.pn, %ehcleanup43 ], [ %65, %lpad26 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %29) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  br label %ehcleanup71

lpad49:                                           ; preds = %_ZNSsD2Ev.exit91
  %69 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup67

lpad51:                                           ; preds = %invoke.cont50
  %70 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup66

lpad56:                                           ; preds = %invoke.cont52
  %71 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup63

lpad59:                                           ; preds = %invoke.cont57
  %72 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp54) #8
  br label %ehcleanup63

ehcleanup63:                                      ; preds = %lpad59, %lpad56
  %.pn30 = phi { i8*, i32 } [ %72, %lpad59 ], [ %71, %lpad56 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %48) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #8
  br label %ehcleanup66

ehcleanup66:                                      ; preds = %ehcleanup63, %lpad51
  %.pn30.pn = phi { i8*, i32 } [ %.pn30, %ehcleanup63 ], [ %70, %lpad51 ]
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp47) #8
  br label %ehcleanup67

ehcleanup67:                                      ; preds = %ehcleanup66, %lpad49
  %.pn30.pn.pn = phi { i8*, i32 } [ %.pn30.pn, %ehcleanup66 ], [ %69, %lpad49 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %46) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #8
  br label %ehcleanup71

if.end70:                                         ; preds = %_ZNSsD2Ev.exit119, %if.end
  ret void

ehcleanup71:                                      ; preds = %ehcleanup67, %ehcleanup44, %ehcleanup21
  %.pn30.pn.pn.pn = phi { i8*, i32 } [ %.pn30.pn.pn, %ehcleanup67 ], [ %.pn26.pn.pn, %ehcleanup44 ], [ %.pn.pn, %ehcleanup21 ]
  resume { i8*, i32 } %.pn30.pn.pn.pn
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN6miniFE23simple_mesh_descriptionIiEC2ERK3BoxS4_(%"class.miniFE::simple_mesh_description"* noundef nonnull align 8 dereferenceable(192) %this, %struct.Box* noundef nonnull align 4 dereferenceable(24) %global_box_in, %struct.Box* noundef nonnull align 4 dereferenceable(24) %local_box_in) unnamed_addr #11 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %local_node_box = alloca %struct.Box, align 4
  %0 = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %this, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1 = getelementptr inbounds i8, i8* %0, i64 8
  %_M_color.i.i.i.i = bitcast i8* %1 to i32*
  store i32 0, i32* %_M_color.i.i.i.i, align 8, !tbaa !90
  %_M_parent.i.i.i.i.i = getelementptr inbounds i8, i8* %0, i64 16
  %2 = bitcast i8* %_M_parent.i.i.i.i.i to %"struct.std::_Rb_tree_node_base"**
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %2, align 8, !tbaa !86
  %_M_left.i.i.i.i.i = getelementptr inbounds i8, i8* %0, i64 24
  %3 = bitcast i8* %_M_left.i.i.i.i.i to i8**
  store i8* %1, i8** %3, align 8, !tbaa !91
  %_M_right.i.i.i.i.i = getelementptr inbounds i8, i8* %0, i64 32
  %4 = bitcast i8* %_M_right.i.i.i.i.i to i8**
  store i8* %1, i8** %4, align 8, !tbaa !92
  %_M_node_count.i.i.i.i.i = getelementptr inbounds i8, i8* %0, i64 40
  %5 = bitcast i8* %_M_node_count.i.i.i.i.i to i64*
  store i64 0, i64* %5, align 8, !tbaa !93
  %bc_rows_1 = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %this, i64 0, i32 1
  %6 = getelementptr inbounds %"class.std::set", %"class.std::set"* %bc_rows_1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds i8, i8* %6, i64 8
  %_M_color.i.i.i.i207 = bitcast i8* %7 to i32*
  store i32 0, i32* %_M_color.i.i.i.i207, align 8, !tbaa !90
  %_M_parent.i.i.i.i.i208 = getelementptr inbounds i8, i8* %6, i64 16
  %8 = bitcast i8* %_M_parent.i.i.i.i.i208 to %"struct.std::_Rb_tree_node_base"**
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %8, align 8, !tbaa !86
  %_M_left.i.i.i.i.i209 = getelementptr inbounds i8, i8* %6, i64 24
  %9 = bitcast i8* %_M_left.i.i.i.i.i209 to i8**
  store i8* %7, i8** %9, align 8, !tbaa !91
  %_M_right.i.i.i.i.i210 = getelementptr inbounds i8, i8* %6, i64 32
  %10 = bitcast i8* %_M_right.i.i.i.i.i210 to i8**
  store i8* %7, i8** %10, align 8, !tbaa !92
  %_M_node_count.i.i.i.i.i211 = getelementptr inbounds i8, i8* %6, i64 40
  %11 = bitcast i8* %_M_node_count.i.i.i.i.i211 to i64*
  store i64 0, i64* %11, align 8, !tbaa !93
  %map_ids_to_rows = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %this, i64 0, i32 2
  %12 = getelementptr inbounds %"class.std::map", %"class.std::map"* %map_ids_to_rows, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds i8, i8* %12, i64 8
  %_M_color.i.i.i.i212 = bitcast i8* %13 to i32*
  store i32 0, i32* %_M_color.i.i.i.i212, align 8, !tbaa !90
  %_M_parent.i.i.i.i.i213 = getelementptr inbounds i8, i8* %12, i64 16
  %14 = bitcast i8* %_M_parent.i.i.i.i.i213 to %"struct.std::_Rb_tree_node_base"**
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %14, align 8, !tbaa !86
  %_M_left.i.i.i.i.i214 = getelementptr inbounds i8, i8* %12, i64 24
  %15 = bitcast i8* %_M_left.i.i.i.i.i214 to i8**
  store i8* %13, i8** %15, align 8, !tbaa !91
  %_M_right.i.i.i.i.i215 = getelementptr inbounds i8, i8* %12, i64 32
  %16 = bitcast i8* %_M_right.i.i.i.i.i215 to i8**
  store i8* %13, i8** %16, align 8, !tbaa !92
  %_M_node_count.i.i.i.i.i216 = getelementptr inbounds i8, i8* %12, i64 40
  %17 = bitcast i8* %_M_node_count.i.i.i.i.i216 to i64*
  store i64 0, i64* %17, align 8, !tbaa !93
  %18 = bitcast %struct.Box* %local_node_box to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #8
  %arrayidx.i219 = getelementptr inbounds %struct.Box, %struct.Box* %global_box_in, i64 0, i32 0, i64 0
  %19 = load i32, i32* %arrayidx.i219, align 4, !tbaa !16
  %arrayidx.i222 = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %this, i64 0, i32 3, i32 0, i64 0
  store i32 %19, i32* %arrayidx.i222, align 8, !tbaa !16
  %arrayidx6 = getelementptr inbounds %struct.Box, %struct.Box* %global_box_in, i64 0, i32 0, i64 1
  %20 = load i32, i32* %arrayidx6, align 4, !tbaa !16
  %arrayidx9 = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %this, i64 0, i32 3, i32 0, i64 1
  store i32 %20, i32* %arrayidx9, align 4, !tbaa !16
  %arrayidx.i231 = getelementptr inbounds %struct.Box, %struct.Box* %local_box_in, i64 0, i32 0, i64 0
  %21 = load i32, i32* %arrayidx.i231, align 4, !tbaa !16
  %arrayidx.i234 = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %this, i64 0, i32 4, i32 0, i64 0
  store i32 %21, i32* %arrayidx.i234, align 8, !tbaa !16
  %arrayidx16 = getelementptr inbounds %struct.Box, %struct.Box* %local_box_in, i64 0, i32 0, i64 1
  %22 = load i32, i32* %arrayidx16, align 4, !tbaa !16
  %arrayidx19 = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %this, i64 0, i32 4, i32 0, i64 1
  store i32 %22, i32* %arrayidx19, align 4, !tbaa !16
  %23 = load i32, i32* %arrayidx.i231, align 4, !tbaa !16
  %arrayidx.i246 = getelementptr inbounds %struct.Box, %struct.Box* %local_node_box, i64 0, i32 0, i64 0
  store i32 %23, i32* %arrayidx.i246, align 4, !tbaa !16
  %24 = load i32, i32* %arrayidx16, align 4, !tbaa !16
  %arrayidx27 = getelementptr inbounds %struct.Box, %struct.Box* %local_node_box, i64 0, i32 0, i64 1
  %cmp32 = icmp sgt i32 %24, %23
  %cmp38 = icmp eq i32 %24, %20
  %or.cond = select i1 %cmp32, i1 %cmp38, i1 false
  %add = zext i1 %or.cond to i32
  %spec.select682 = add nsw i32 %24, %add
  store i32 %spec.select682, i32* %arrayidx27, align 4, !tbaa !16
  %arrayidx.i219.1 = getelementptr inbounds %struct.Box, %struct.Box* %global_box_in, i64 0, i32 0, i64 2
  %25 = load i32, i32* %arrayidx.i219.1, align 4, !tbaa !16
  %arrayidx.i222.1 = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %this, i64 0, i32 3, i32 0, i64 2
  store i32 %25, i32* %arrayidx.i222.1, align 8, !tbaa !16
  %arrayidx6.1 = getelementptr inbounds %struct.Box, %struct.Box* %global_box_in, i64 0, i32 0, i64 3
  %26 = load i32, i32* %arrayidx6.1, align 4, !tbaa !16
  %arrayidx9.1 = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %this, i64 0, i32 3, i32 0, i64 3
  store i32 %26, i32* %arrayidx9.1, align 4, !tbaa !16
  %arrayidx.i231.1 = getelementptr inbounds %struct.Box, %struct.Box* %local_box_in, i64 0, i32 0, i64 2
  %27 = load i32, i32* %arrayidx.i231.1, align 4, !tbaa !16
  %arrayidx.i234.1 = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %this, i64 0, i32 4, i32 0, i64 2
  store i32 %27, i32* %arrayidx.i234.1, align 8, !tbaa !16
  %arrayidx16.1 = getelementptr inbounds %struct.Box, %struct.Box* %local_box_in, i64 0, i32 0, i64 3
  %28 = load i32, i32* %arrayidx16.1, align 4, !tbaa !16
  %arrayidx19.1 = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %this, i64 0, i32 4, i32 0, i64 3
  store i32 %28, i32* %arrayidx19.1, align 4, !tbaa !16
  %29 = load i32, i32* %arrayidx.i231.1, align 4, !tbaa !16
  %arrayidx.i246.1 = getelementptr inbounds %struct.Box, %struct.Box* %local_node_box, i64 0, i32 0, i64 2
  store i32 %29, i32* %arrayidx.i246.1, align 4, !tbaa !16
  %30 = load i32, i32* %arrayidx16.1, align 4, !tbaa !16
  %arrayidx27.1 = getelementptr inbounds %struct.Box, %struct.Box* %local_node_box, i64 0, i32 0, i64 3
  %cmp32.1 = icmp sgt i32 %30, %29
  %cmp38.1 = icmp eq i32 %30, %26
  %or.cond.1 = select i1 %cmp32.1, i1 %cmp38.1, i1 false
  %add.1 = zext i1 %or.cond.1 to i32
  %spec.select682.1 = add nsw i32 %30, %add.1
  store i32 %spec.select682.1, i32* %arrayidx27.1, align 4, !tbaa !16
  %arrayidx.i219.2 = getelementptr inbounds %struct.Box, %struct.Box* %global_box_in, i64 0, i32 0, i64 4
  %31 = load i32, i32* %arrayidx.i219.2, align 4, !tbaa !16
  %arrayidx.i222.2 = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %this, i64 0, i32 3, i32 0, i64 4
  store i32 %31, i32* %arrayidx.i222.2, align 8, !tbaa !16
  %arrayidx6.2 = getelementptr inbounds %struct.Box, %struct.Box* %global_box_in, i64 0, i32 0, i64 5
  %32 = load i32, i32* %arrayidx6.2, align 4, !tbaa !16
  %arrayidx9.2 = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %this, i64 0, i32 3, i32 0, i64 5
  store i32 %32, i32* %arrayidx9.2, align 4, !tbaa !16
  %arrayidx.i231.2 = getelementptr inbounds %struct.Box, %struct.Box* %local_box_in, i64 0, i32 0, i64 4
  %33 = load i32, i32* %arrayidx.i231.2, align 4, !tbaa !16
  %arrayidx.i234.2 = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %this, i64 0, i32 4, i32 0, i64 4
  store i32 %33, i32* %arrayidx.i234.2, align 8, !tbaa !16
  %arrayidx16.2 = getelementptr inbounds %struct.Box, %struct.Box* %local_box_in, i64 0, i32 0, i64 5
  %34 = load i32, i32* %arrayidx16.2, align 4, !tbaa !16
  %arrayidx19.2 = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %this, i64 0, i32 4, i32 0, i64 5
  store i32 %34, i32* %arrayidx19.2, align 4, !tbaa !16
  %35 = load i32, i32* %arrayidx.i231.2, align 4, !tbaa !16
  %arrayidx.i246.2 = getelementptr inbounds %struct.Box, %struct.Box* %local_node_box, i64 0, i32 0, i64 4
  store i32 %35, i32* %arrayidx.i246.2, align 4, !tbaa !16
  %36 = load i32, i32* %arrayidx16.2, align 4, !tbaa !16
  %arrayidx27.2 = getelementptr inbounds %struct.Box, %struct.Box* %local_node_box, i64 0, i32 0, i64 5
  %cmp32.2 = icmp sgt i32 %36, %35
  %cmp38.2 = icmp eq i32 %36, %32
  %or.cond.2 = select i1 %cmp32.2, i1 %cmp38.2, i1 false
  %add.2 = zext i1 %or.cond.2 to i32
  %spec.select682.2 = add nsw i32 %36, %add.2
  store i32 %spec.select682.2, i32* %arrayidx27.2, align 4, !tbaa !16
  %arrayidx43 = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %this, i64 0, i32 3, i32 0, i64 1
  %add44 = add nsw i32 %20, 1
  %arrayidx47 = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %this, i64 0, i32 3, i32 0, i64 3
  %add48 = add nsw i32 %26, 1
  %arrayidx51 = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %this, i64 0, i32 3, i32 0, i64 5
  %add52 = add nsw i32 %32, 1
  invoke void @_ZN6miniFE20create_map_id_to_rowIiEEviiiRK3BoxRSt3mapIT_S5_St4lessIS5_ESaISt4pairIKS5_S5_EEE(i32 noundef signext %add44, i32 noundef signext %add48, i32 noundef signext %add52, %struct.Box* noundef nonnull align 4 dereferenceable(24) %local_node_box, %"class.std::map"* noundef nonnull align 8 dereferenceable(48) %map_ids_to_rows)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %37 = load i32, i32* %arrayidx.i222, align 8, !tbaa !16
  %38 = load i32, i32* %arrayidx.i234, align 8, !tbaa !16
  %cmp62 = icmp eq i32 %37, %38
  br i1 %cmp62, label %if.then63, label %if.end124

if.then63:                                        ; preds = %invoke.cont
  %39 = load i32, i32* %arrayidx.i246.1, align 4, !tbaa !16
  %40 = load i32, i32* %arrayidx.i246.2, align 4, !tbaa !16
  %arrayidx69 = getelementptr inbounds %struct.Box, %struct.Box* %local_node_box, i64 0, i32 0, i64 3
  %41 = load i32, i32* %arrayidx69, align 4, !tbaa !16
  %arrayidx71 = getelementptr inbounds %struct.Box, %struct.Box* %local_node_box, i64 0, i32 0, i64 5
  %42 = load i32, i32* %arrayidx71, align 4, !tbaa !16
  %cmp74 = icmp sgt i32 %39, 0
  %dec = sext i1 %cmp74 to i32
  %spec.select = add nsw i32 %39, %dec
  %cmp79 = icmp sgt i32 %40, 0
  %dec81 = sext i1 %cmp79 to i32
  %minz.0 = add nsw i32 %40, %dec81
  %cmp85.not = icmp sle i32 %41, %26
  %inc87 = zext i1 %cmp85.not to i32
  %maxy.0 = add nsw i32 %41, %inc87
  %cmp91.not = icmp sle i32 %42, %32
  %inc93 = zext i1 %cmp91.not to i32
  %maxz.0 = add nsw i32 %42, %inc93
  %cmp4.not.i = icmp sgt i32 %20, -1
  %43 = bitcast i8* %_M_parent.i.i.i.i.i to %"struct.std::_Rb_tree_node.48"**
  %_M_header.i.i.i.i = bitcast i8* %1 to %"struct.std::_Rb_tree_node_base"*
  %44 = bitcast i8* %_M_left.i.i.i.i.i to %"struct.std::_Rb_tree_node_base"**
  %cmp96687 = icmp slt i32 %minz.0, %maxz.0
  %cmp100684 = icmp slt i32 %spec.select, %maxy.0
  %or.cond734 = select i1 %cmp96687, i1 %cmp100684, i1 false
  br i1 %or.cond734, label %for.cond99.preheader.us, label %if.end124

for.cond99.preheader.us:                          ; preds = %if.then63, %for.cond99.for.cond.cleanup101_crit_edge.us
  %iz.0688.us = phi i32 [ %inc117.us, %for.cond99.for.cond.cleanup101_crit_edge.us ], [ %minz.0, %if.then63 ]
  %cmp8.not.i.us = icmp sle i32 %iz.0688.us, %32
  %mul11.i.us = mul i32 %iz.0688.us, %add48
  br label %for.body102.us

for.body102.us:                                   ; preds = %for.cond99.preheader.us, %invoke.cont110.us
  %iy.0685.us = phi i32 [ %spec.select, %for.cond99.preheader.us ], [ %inc113.us, %invoke.cont110.us ]
  %45 = or i32 %iy.0685.us, %iz.0688.us
  %.not.i.us = icmp sgt i32 %45, -1
  br i1 %.not.i.us, label %if.end.i.us, label %_ZN6miniFE6get_idIiEET_iiiiii.exit.us

if.end.i.us:                                      ; preds = %for.body102.us
  %cmp6.not.i.us = icmp sle i32 %iy.0685.us, %26
  %or.cond.i.us = and i1 %cmp4.not.i, %cmp6.not.i.us
  %or.cond14.i.us = and i1 %cmp8.not.i.us, %or.cond.i.us
  br i1 %or.cond14.i.us, label %if.end10.i.us, label %_ZN6miniFE6get_idIiEET_iiiiii.exit.us

if.end10.i.us:                                    ; preds = %if.end.i.us
  %reass.add.i.us = add i32 %iy.0685.us, %mul11.i.us
  %reass.mul.i.us = mul i32 %reass.add.i.us, %add44
  br label %_ZN6miniFE6get_idIiEET_iiiiii.exit.us

_ZN6miniFE6get_idIiEET_iiiiii.exit.us:            ; preds = %if.end10.i.us, %if.end.i.us, %for.body102.us
  %retval.0.i.us = phi i32 [ %reass.mul.i.us, %if.end10.i.us ], [ -1, %for.body102.us ], [ -1, %if.end.i.us ]
  %call.i278.us = invoke noundef signext i32 @_ZN6miniFE15find_row_for_idIiEET_S1_RKSt3mapIS1_S1_St4lessIS1_ESaISt4pairIKS1_S1_EEE(i32 noundef signext %retval.0.i.us, %"class.std::map"* noundef nonnull align 8 dereferenceable(48) %map_ids_to_rows)
          to label %invoke.cont108.us unwind label %lpad107.split.us

invoke.cont108.us:                                ; preds = %_ZN6miniFE6get_idIiEET_iiiiii.exit.us
  %__x.028.i.i.i.us = load %"struct.std::_Rb_tree_node.48"*, %"struct.std::_Rb_tree_node.48"** %43, align 8, !tbaa !94
  %cmp.not29.i.i.i.us = icmp eq %"struct.std::_Rb_tree_node.48"* %__x.028.i.i.i.us, null
  br i1 %cmp.not29.i.i.i.us, label %if.then.i.i.i.us, label %while.body.i.i.i.us

while.body.i.i.i.us:                              ; preds = %invoke.cont108.us, %while.body.i.i.i.us
  %__x.030.i.i.i.us = phi %"struct.std::_Rb_tree_node.48"* [ %__x.0.i.i.i.us, %while.body.i.i.i.us ], [ %__x.028.i.i.i.us, %invoke.cont108.us ]
  %_M_storage.i.i.i.i.i.i.us = getelementptr inbounds %"struct.std::_Rb_tree_node.48", %"struct.std::_Rb_tree_node.48"* %__x.030.i.i.i.us, i64 0, i32 1
  %46 = bitcast %"struct.__gnu_cxx::__aligned_membuf.49"* %_M_storage.i.i.i.i.i.i.us to i32*
  %47 = load i32, i32* %46, align 4, !tbaa !16
  %cmp.i.i.i.i.us = icmp slt i32 %call.i278.us, %47
  %_M_left.i.i.i.i.us = getelementptr inbounds %"struct.std::_Rb_tree_node.48", %"struct.std::_Rb_tree_node.48"* %__x.030.i.i.i.us, i64 0, i32 0, i32 2
  %_M_right.i.i.i.i.us = getelementptr inbounds %"struct.std::_Rb_tree_node.48", %"struct.std::_Rb_tree_node.48"* %__x.030.i.i.i.us, i64 0, i32 0, i32 3
  %cond.in.in.i.i.i.us = select i1 %cmp.i.i.i.i.us, %"struct.std::_Rb_tree_node_base"** %_M_left.i.i.i.i.us, %"struct.std::_Rb_tree_node_base"** %_M_right.i.i.i.i.us
  %cond.in.i.i.i.us = bitcast %"struct.std::_Rb_tree_node_base"** %cond.in.in.i.i.i.us to %"struct.std::_Rb_tree_node.48"**
  %__x.0.i.i.i.us = load %"struct.std::_Rb_tree_node.48"*, %"struct.std::_Rb_tree_node.48"** %cond.in.i.i.i.us, align 8, !tbaa !94
  %cmp.not.i.i.i.us = icmp eq %"struct.std::_Rb_tree_node.48"* %__x.0.i.i.i.us, null
  br i1 %cmp.not.i.i.i.us, label %while.end.i.i.i.us, label %while.body.i.i.i.us, !llvm.loop !95

while.end.i.i.i.us:                               ; preds = %while.body.i.i.i.us
  %48 = getelementptr %"struct.std::_Rb_tree_node.48", %"struct.std::_Rb_tree_node.48"* %__x.030.i.i.i.us, i64 0, i32 0
  br i1 %cmp.i.i.i.i.us, label %if.then.i.i.i.us, label %if.end12.i.i.i.us

if.then.i.i.i.us:                                 ; preds = %while.end.i.i.i.us, %invoke.cont108.us
  %__y.0.lcssa37.i.i.i.us = phi %"struct.std::_Rb_tree_node_base"* [ %48, %while.end.i.i.i.us ], [ %_M_header.i.i.i.i, %invoke.cont108.us ]
  %49 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %44, align 8, !tbaa !91
  %cmp.i5.i.i.i.us = icmp eq %"struct.std::_Rb_tree_node_base"* %__y.0.lcssa37.i.i.i.us, %49
  br i1 %cmp.i5.i.i.i.us, label %_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE24_M_get_insert_unique_posERKi.exit.i.i.us, label %if.else.i.i.i.us

if.else.i.i.i.us:                                 ; preds = %if.then.i.i.i.us
  %call.i.i.i.i.us = call noundef %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* noundef %__y.0.lcssa37.i.i.i.us) #32
  br label %if.end12.i.i.i.us

if.end12.i.i.i.us:                                ; preds = %if.else.i.i.i.us, %while.end.i.i.i.us
  %__y.0.lcssa36.i.i.i.us = phi %"struct.std::_Rb_tree_node_base"* [ %__y.0.lcssa37.i.i.i.us, %if.else.i.i.i.us ], [ %48, %while.end.i.i.i.us ]
  %__j.sroa.0.0.i.i.i.us = phi %"struct.std::_Rb_tree_node_base"* [ %call.i.i.i.i.us, %if.else.i.i.i.us ], [ %48, %while.end.i.i.i.us ]
  %50 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %__j.sroa.0.0.i.i.i.us, i64 1, i32 0
  %51 = load i32, i32* %50, align 4, !tbaa !16
  %cmp.i7.i.i.i.us = icmp slt i32 %51, %call.i278.us
  br i1 %cmp.i7.i.i.i.us, label %_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE24_M_get_insert_unique_posERKi.exit.i.i.us, label %invoke.cont110.us

_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE24_M_get_insert_unique_posERKi.exit.i.i.us: ; preds = %if.end12.i.i.i.us, %if.then.i.i.i.us
  %retval.sroa.4.0.i.i.i.us = phi %"struct.std::_Rb_tree_node_base"* [ %__y.0.lcssa37.i.i.i.us, %if.then.i.i.i.us ], [ %__y.0.lcssa36.i.i.i.us, %if.end12.i.i.i.us ]
  %tobool.not.i.i.us = icmp eq %"struct.std::_Rb_tree_node_base"* %retval.sroa.4.0.i.i.i.us, null
  br i1 %tobool.not.i.i.us, label %invoke.cont110.us, label %if.then.i.i.us

if.then.i.i.us:                                   ; preds = %_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE24_M_get_insert_unique_posERKi.exit.i.i.us
  %cmp2.i.i.i.us = icmp eq %"struct.std::_Rb_tree_node_base"* %retval.sroa.4.0.i.i.i.us, %_M_header.i.i.i.i
  br i1 %cmp2.i.i.i.us, label %_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE10_M_insert_IiNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIiEPSt18_Rb_tree_node_baseSB_OT_RT0_.exit.i.i.us, label %lor.rhs.i.i.i.us

lor.rhs.i.i.i.us:                                 ; preds = %if.then.i.i.us
  %52 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %retval.sroa.4.0.i.i.i.us, i64 1, i32 0
  %53 = load i32, i32* %52, align 4, !tbaa !16
  %cmp.i.i9.i.i.us = icmp slt i32 %call.i278.us, %53
  br label %_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE10_M_insert_IiNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIiEPSt18_Rb_tree_node_baseSB_OT_RT0_.exit.i.i.us

_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE10_M_insert_IiNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIiEPSt18_Rb_tree_node_baseSB_OT_RT0_.exit.i.i.us: ; preds = %lor.rhs.i.i.i.us, %if.then.i.i.us
  %54 = phi i1 [ true, %if.then.i.i.us ], [ %cmp.i.i9.i.i.us, %lor.rhs.i.i.i.us ]
  %call2.i.i.i.i.i.i.i.i279.us = invoke noalias noundef nonnull i8* @_Znwm(i64 noundef 40) #30
          to label %call2.i.i.i.i.i.i.i.i.noexc.us unwind label %lpad107.split.us

call2.i.i.i.i.i.i.i.i.noexc.us:                   ; preds = %_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE10_M_insert_IiNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIiEPSt18_Rb_tree_node_baseSB_OT_RT0_.exit.i.i.us
  %_M_storage.i.i.i.i.i.i.i.us = getelementptr inbounds i8, i8* %call2.i.i.i.i.i.i.i.i279.us, i64 32
  %55 = bitcast i8* %_M_storage.i.i.i.i.i.i.i.us to i32*
  store i32 %call.i278.us, i32* %55, align 4, !tbaa !16
  %56 = bitcast i8* %call2.i.i.i.i.i.i.i.i279.us to %"struct.std::_Rb_tree_node_base"*
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 noundef zeroext %54, %"struct.std::_Rb_tree_node_base"* noundef nonnull %56, %"struct.std::_Rb_tree_node_base"* noundef nonnull %retval.sroa.4.0.i.i.i.us, %"struct.std::_Rb_tree_node_base"* noundef nonnull align 8 dereferenceable(32) %_M_header.i.i.i.i) #8
  %57 = load i64, i64* %5, align 8, !tbaa !93
  %inc.i.i.i.us = add i64 %57, 1
  store i64 %inc.i.i.i.us, i64* %5, align 8, !tbaa !93
  br label %invoke.cont110.us

invoke.cont110.us:                                ; preds = %call2.i.i.i.i.i.i.i.i.noexc.us, %_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE24_M_get_insert_unique_posERKi.exit.i.i.us, %if.end12.i.i.i.us
  %inc113.us = add nsw i32 %iy.0685.us, 1
  %cmp100.us = icmp slt i32 %inc113.us, %maxy.0
  br i1 %cmp100.us, label %for.body102.us, label %for.cond99.for.cond.cleanup101_crit_edge.us, !llvm.loop !97

for.cond99.for.cond.cleanup101_crit_edge.us:      ; preds = %invoke.cont110.us
  %inc117.us = add nsw i32 %iz.0688.us, 1
  %cmp96.us = icmp slt i32 %inc117.us, %maxz.0
  br i1 %cmp96.us, label %for.cond99.preheader.us, label %if.end124, !llvm.loop !98

lpad107.split.us:                                 ; preds = %_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE10_M_insert_IiNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIiEPSt18_Rb_tree_node_baseSB_OT_RT0_.exit.i.i.us, %_ZN6miniFE6get_idIiEET_iiiiii.exit.us
  %58 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup553

lpad:                                             ; preds = %entry
  %59 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup553

if.end124:                                        ; preds = %for.cond99.for.cond.cleanup101_crit_edge.us, %if.then63, %invoke.cont
  %60 = load i32, i32* %arrayidx.i222.1, align 8, !tbaa !16
  %61 = load i32, i32* %arrayidx.i234.1, align 8, !tbaa !16
  %cmp131 = icmp eq i32 %60, %61
  br i1 %cmp131, label %if.then132, label %if.end222

if.then132:                                       ; preds = %if.end124
  %62 = load i32, i32* %arrayidx.i246, align 4, !tbaa !16
  %63 = load i32, i32* %arrayidx.i246.2, align 4, !tbaa !16
  %arrayidx139 = getelementptr inbounds %struct.Box, %struct.Box* %local_node_box, i64 0, i32 0, i64 1
  %64 = load i32, i32* %arrayidx139, align 4, !tbaa !16
  %arrayidx142 = getelementptr inbounds %struct.Box, %struct.Box* %local_node_box, i64 0, i32 0, i64 5
  %65 = load i32, i32* %arrayidx142, align 4, !tbaa !16
  %cmp145 = icmp sgt i32 %62, 0
  %dec147 = sext i1 %cmp145 to i32
  %spec.select202 = add nsw i32 %62, %dec147
  %cmp151 = icmp sgt i32 %63, 0
  %dec153 = sext i1 %cmp151 to i32
  %minz135.0 = add nsw i32 %63, %dec153
  %cmp157.not = icmp sle i32 %64, %20
  %inc159 = zext i1 %cmp157.not to i32
  %maxx.0 = add nsw i32 %64, %inc159
  %cmp163.not = icmp sle i32 %65, %32
  %inc165 = zext i1 %cmp163.not to i32
  %maxz140.0 = add nsw i32 %65, %inc165
  %cmp6.not.i292 = icmp sgt i32 %26, -1
  %mul11.i297 = mul i32 %add48, %add44
  %66 = bitcast i8* %_M_parent.i.i.i.i.i to %"struct.std::_Rb_tree_node.48"**
  %_M_header.i.i.i.i322 = bitcast i8* %1 to %"struct.std::_Rb_tree_node_base"*
  %67 = bitcast i8* %_M_left.i.i.i.i.i to %"struct.std::_Rb_tree_node_base"**
  %cmp169694 = icmp slt i32 %minz135.0, %maxz140.0
  %cmp173690 = icmp slt i32 %spec.select202, %maxx.0
  %or.cond735 = select i1 %cmp169694, i1 %cmp173690, i1 false
  br i1 %or.cond735, label %for.cond172.preheader.us, label %if.end222

for.cond172.preheader.us:                         ; preds = %if.then132, %for.cond172.for.cond.cleanup174_crit_edge.us
  %iz167.0695.us = phi i32 [ %inc215.us, %for.cond172.for.cond.cleanup174_crit_edge.us ], [ %minz135.0, %if.then132 ]
  %cmp8.not.i294.us = icmp sle i32 %iz167.0695.us, %32
  %reass.mul.i298.us = mul i32 %mul11.i297, %iz167.0695.us
  br label %for.body175.us

for.body175.us:                                   ; preds = %for.cond172.preheader.us, %invoke.cont205.us
  %ix.0691.us = phi i32 [ %spec.select202, %for.cond172.preheader.us ], [ %inc211.us, %invoke.cont205.us ]
  %68 = or i32 %ix.0691.us, %iz167.0695.us
  %.not.i290.us = icmp sgt i32 %68, -1
  br i1 %.not.i290.us, label %if.end.i296.us, label %_ZN6miniFE6get_idIiEET_iiiiii.exit301.us

if.end.i296.us:                                   ; preds = %for.body175.us
  %cmp4.not.i291.us = icmp sle i32 %ix.0691.us, %20
  %or.cond.i293.us = and i1 %cmp6.not.i292, %cmp4.not.i291.us
  %or.cond14.i295.us = and i1 %cmp8.not.i294.us, %or.cond.i293.us
  %add13.i.us = add i32 %ix.0691.us, %reass.mul.i298.us
  %spec.select721 = select i1 %or.cond14.i295.us, i32 %add13.i.us, i32 -1
  br label %_ZN6miniFE6get_idIiEET_iiiiii.exit301.us

_ZN6miniFE6get_idIiEET_iiiiii.exit301.us:         ; preds = %if.end.i296.us, %for.body175.us
  %retval.0.i300.us = phi i32 [ -1, %for.body175.us ], [ %spec.select721, %if.end.i296.us ]
  %call.i303.us = invoke noundef signext i32 @_ZN6miniFE15find_row_for_idIiEET_S1_RKSt3mapIS1_S1_St4lessIS1_ESaISt4pairIKS1_S1_EEE(i32 noundef signext %retval.0.i300.us, %"class.std::map"* noundef nonnull align 8 dereferenceable(48) %map_ids_to_rows)
          to label %invoke.cont181.us unwind label %lpad180.loopexit.split.us

invoke.cont181.us:                                ; preds = %_ZN6miniFE6get_idIiEET_iiiiii.exit301.us
  %cmp183.us = icmp slt i32 %call.i303.us, 0
  br i1 %cmp183.us, label %if.then184.us, label %if.end203.us

if.then184.us:                                    ; preds = %invoke.cont181.us
  %call1.i306.us = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i8* noundef nonnull getelementptr inbounds ([22 x i8], [22 x i8]* @.str.53, i64 0, i64 0), i64 noundef 21)
          to label %invoke.cont185.us unwind label %lpad180.loopexit.split.us

invoke.cont185.us:                                ; preds = %if.then184.us
  %call188.us = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i32 noundef signext %ix.0691.us)
          to label %invoke.cont187.us unwind label %lpad180.loopexit.split.us

invoke.cont187.us:                                ; preds = %invoke.cont185.us
  %call1.i309.us = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call188.us, i8* noundef nonnull getelementptr inbounds ([6 x i8], [6 x i8]* @.str.54, i64 0, i64 0), i64 noundef 5)
          to label %invoke.cont189.us unwind label %lpad180.loopexit.split.us

invoke.cont189.us:                                ; preds = %invoke.cont187.us
  %call192.us = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call188.us, i32 noundef signext %iz167.0695.us)
          to label %invoke.cont191.us unwind label %lpad180.loopexit.split.us

invoke.cont191.us:                                ; preds = %invoke.cont189.us
  %call1.i313.us = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call192.us, i8* noundef nonnull getelementptr inbounds ([31 x i8], [31 x i8]* @.str.55, i64 0, i64 0), i64 noundef 30)
          to label %invoke.cont193.us unwind label %lpad180.loopexit.split.us

invoke.cont193.us:                                ; preds = %invoke.cont191.us
  %call196.us = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call192.us, i32 noundef signext %call.i303.us)
          to label %invoke.cont195.us unwind label %lpad180.loopexit.split.us

invoke.cont195.us:                                ; preds = %invoke.cont193.us
  %call1.i317.us = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call196.us, i8* noundef nonnull getelementptr inbounds ([14 x i8], [14 x i8]* @.str.56, i64 0, i64 0), i64 noundef 13)
          to label %invoke.cont197.us unwind label %lpad180.loopexit.split.us

invoke.cont197.us:                                ; preds = %invoke.cont195.us
  %call200.us = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call196.us, i32 noundef signext %retval.0.i300.us)
          to label %invoke.cont199.us unwind label %lpad180.loopexit.split.us

invoke.cont199.us:                                ; preds = %invoke.cont197.us
  %69 = bitcast %"class.std::basic_ostream"* %call200.us to i8**
  %vtable.i.us = load i8*, i8** %69, align 8, !tbaa !32
  %vbase.offset.ptr.i.us = getelementptr i8, i8* %vtable.i.us, i64 -24
  %70 = bitcast i8* %vbase.offset.ptr.i.us to i64*
  %vbase.offset.i.us = load i64, i64* %70, align 8
  %add.ptr.i.us = getelementptr inbounds %"class.std::basic_ostream", %"class.std::basic_ostream"* %call200.us, i64 0, i32 1, i32 4
  %71 = bitcast %"class.std::basic_streambuf"** %add.ptr.i.us to i8*
  %_M_ctype.i.i.us = getelementptr inbounds i8, i8* %71, i64 %vbase.offset.i.us
  %72 = bitcast i8* %_M_ctype.i.i.us to %"class.std::ctype"**
  %73 = load %"class.std::ctype"*, %"class.std::ctype"** %72, align 8, !tbaa !34
  %tobool.not.i.i.i.us = icmp eq %"class.std::ctype"* %73, null
  br i1 %tobool.not.i.i.i.us, label %if.then.i.i.i643, label %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i.us

_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i.us: ; preds = %invoke.cont199.us
  %_M_widen_ok.i.i.i.us = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %73, i64 0, i32 8
  %74 = load i8, i8* %_M_widen_ok.i.i.i.us, align 8, !tbaa !37
  %tobool.not.i1.i.i.us = icmp eq i8 %74, 0
  br i1 %tobool.not.i1.i.i.us, label %if.end.i.i.i.us, label %if.then.i2.i.i.us

if.then.i2.i.i.us:                                ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i.us
  %arrayidx.i.i.i.us = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %73, i64 0, i32 9, i64 10
  %75 = load i8, i8* %arrayidx.i.i.i.us, align 1, !tbaa !39
  br label %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i.us

if.end.i.i.i.us:                                  ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i.us
  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %73)
          to label %.noexc645.us unwind label %lpad180.loopexit.split.us

.noexc645.us:                                     ; preds = %if.end.i.i.i.us
  %76 = bitcast %"class.std::ctype"* %73 to i8 (%"class.std::ctype"*, i8)***
  %vtable.i.i.i.us = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %76, align 8, !tbaa !32
  %vfn.i.i.i.us = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vtable.i.i.i.us, i64 6
  %77 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vfn.i.i.i.us, align 8
  %call.i.i.i646.us = invoke noundef zeroext i8 %77(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %73, i8 noundef zeroext 10)
          to label %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i.us unwind label %lpad180.loopexit.split.us

_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i.us: ; preds = %.noexc645.us, %if.then.i2.i.i.us
  %retval.0.i.i.i.us = phi i8 [ %75, %if.then.i2.i.i.us ], [ %call.i.i.i646.us, %.noexc645.us ]
  %call1.i647.us = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call200.us, i8 noundef zeroext %retval.0.i.i.i.us)
          to label %call1.i.noexc.us unwind label %lpad180.loopexit.split.us

call1.i.noexc.us:                                 ; preds = %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i.us
  %call.i.i644648.us = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call1.i647.us)
          to label %if.end203.us unwind label %lpad180.loopexit.split.us

if.end203.us:                                     ; preds = %call1.i.noexc.us, %invoke.cont181.us
  %__x.028.i.i.i323.us = load %"struct.std::_Rb_tree_node.48"*, %"struct.std::_Rb_tree_node.48"** %66, align 8, !tbaa !94
  %cmp.not29.i.i.i324.us = icmp eq %"struct.std::_Rb_tree_node.48"* %__x.028.i.i.i323.us, null
  br i1 %cmp.not29.i.i.i324.us, label %if.then.i.i.i339.us, label %while.body.i.i.i334.us

while.body.i.i.i334.us:                           ; preds = %if.end203.us, %while.body.i.i.i334.us
  %__x.030.i.i.i325.us = phi %"struct.std::_Rb_tree_node.48"* [ %__x.0.i.i.i332.us, %while.body.i.i.i334.us ], [ %__x.028.i.i.i323.us, %if.end203.us ]
  %_M_storage.i.i.i.i.i.i326.us = getelementptr inbounds %"struct.std::_Rb_tree_node.48", %"struct.std::_Rb_tree_node.48"* %__x.030.i.i.i325.us, i64 0, i32 1
  %78 = bitcast %"struct.__gnu_cxx::__aligned_membuf.49"* %_M_storage.i.i.i.i.i.i326.us to i32*
  %79 = load i32, i32* %78, align 4, !tbaa !16
  %cmp.i.i.i.i327.us = icmp slt i32 %call.i303.us, %79
  %_M_left.i.i.i.i328.us = getelementptr inbounds %"struct.std::_Rb_tree_node.48", %"struct.std::_Rb_tree_node.48"* %__x.030.i.i.i325.us, i64 0, i32 0, i32 2
  %_M_right.i.i.i.i329.us = getelementptr inbounds %"struct.std::_Rb_tree_node.48", %"struct.std::_Rb_tree_node.48"* %__x.030.i.i.i325.us, i64 0, i32 0, i32 3
  %cond.in.in.i.i.i330.us = select i1 %cmp.i.i.i.i327.us, %"struct.std::_Rb_tree_node_base"** %_M_left.i.i.i.i328.us, %"struct.std::_Rb_tree_node_base"** %_M_right.i.i.i.i329.us
  %cond.in.i.i.i331.us = bitcast %"struct.std::_Rb_tree_node_base"** %cond.in.in.i.i.i330.us to %"struct.std::_Rb_tree_node.48"**
  %__x.0.i.i.i332.us = load %"struct.std::_Rb_tree_node.48"*, %"struct.std::_Rb_tree_node.48"** %cond.in.i.i.i331.us, align 8, !tbaa !94
  %cmp.not.i.i.i333.us = icmp eq %"struct.std::_Rb_tree_node.48"* %__x.0.i.i.i332.us, null
  br i1 %cmp.not.i.i.i333.us, label %while.end.i.i.i335.us, label %while.body.i.i.i334.us, !llvm.loop !95

while.end.i.i.i335.us:                            ; preds = %while.body.i.i.i334.us
  %80 = getelementptr %"struct.std::_Rb_tree_node.48", %"struct.std::_Rb_tree_node.48"* %__x.030.i.i.i325.us, i64 0, i32 0
  br i1 %cmp.i.i.i.i327.us, label %if.then.i.i.i339.us, label %if.end12.i.i.i345.us

if.then.i.i.i339.us:                              ; preds = %while.end.i.i.i335.us, %if.end203.us
  %__y.0.lcssa37.i.i.i336.us = phi %"struct.std::_Rb_tree_node_base"* [ %80, %while.end.i.i.i335.us ], [ %_M_header.i.i.i.i322, %if.end203.us ]
  %81 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %67, align 8, !tbaa !91
  %cmp.i5.i.i.i338.us = icmp eq %"struct.std::_Rb_tree_node_base"* %__y.0.lcssa37.i.i.i336.us, %81
  br i1 %cmp.i5.i.i.i338.us, label %_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE24_M_get_insert_unique_posERKi.exit.i.i348.us, label %if.else.i.i.i341.us

if.else.i.i.i341.us:                              ; preds = %if.then.i.i.i339.us
  %call.i.i.i.i340.us = call noundef %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* noundef %__y.0.lcssa37.i.i.i336.us) #32
  br label %if.end12.i.i.i345.us

if.end12.i.i.i345.us:                             ; preds = %if.else.i.i.i341.us, %while.end.i.i.i335.us
  %__y.0.lcssa36.i.i.i342.us = phi %"struct.std::_Rb_tree_node_base"* [ %__y.0.lcssa37.i.i.i336.us, %if.else.i.i.i341.us ], [ %80, %while.end.i.i.i335.us ]
  %__j.sroa.0.0.i.i.i343.us = phi %"struct.std::_Rb_tree_node_base"* [ %call.i.i.i.i340.us, %if.else.i.i.i341.us ], [ %80, %while.end.i.i.i335.us ]
  %82 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %__j.sroa.0.0.i.i.i343.us, i64 1, i32 0
  %83 = load i32, i32* %82, align 4, !tbaa !16
  %cmp.i7.i.i.i344.us = icmp slt i32 %83, %call.i303.us
  br i1 %cmp.i7.i.i.i344.us, label %_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE24_M_get_insert_unique_posERKi.exit.i.i348.us, label %invoke.cont205.us

_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE24_M_get_insert_unique_posERKi.exit.i.i348.us: ; preds = %if.end12.i.i.i345.us, %if.then.i.i.i339.us
  %retval.sroa.4.0.i.i.i346.us = phi %"struct.std::_Rb_tree_node_base"* [ %__y.0.lcssa37.i.i.i336.us, %if.then.i.i.i339.us ], [ %__y.0.lcssa36.i.i.i342.us, %if.end12.i.i.i345.us ]
  %tobool.not.i.i347.us = icmp eq %"struct.std::_Rb_tree_node_base"* %retval.sroa.4.0.i.i.i346.us, null
  br i1 %tobool.not.i.i347.us, label %invoke.cont205.us, label %if.then.i.i350.us

if.then.i.i350.us:                                ; preds = %_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE24_M_get_insert_unique_posERKi.exit.i.i348.us
  %cmp2.i.i.i349.us = icmp eq %"struct.std::_Rb_tree_node_base"* %retval.sroa.4.0.i.i.i346.us, %_M_header.i.i.i.i322
  br i1 %cmp2.i.i.i349.us, label %_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE10_M_insert_IRKiNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIiEPSt18_Rb_tree_node_baseSD_OT_RT0_.exit.i.i.us, label %lor.rhs.i.i.i352.us

lor.rhs.i.i.i352.us:                              ; preds = %if.then.i.i350.us
  %84 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %retval.sroa.4.0.i.i.i346.us, i64 1, i32 0
  %85 = load i32, i32* %84, align 4, !tbaa !16
  %cmp.i.i9.i.i351.us = icmp slt i32 %call.i303.us, %85
  br label %_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE10_M_insert_IRKiNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIiEPSt18_Rb_tree_node_baseSD_OT_RT0_.exit.i.i.us

_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE10_M_insert_IRKiNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIiEPSt18_Rb_tree_node_baseSD_OT_RT0_.exit.i.i.us: ; preds = %lor.rhs.i.i.i352.us, %if.then.i.i350.us
  %86 = phi i1 [ true, %if.then.i.i350.us ], [ %cmp.i.i9.i.i351.us, %lor.rhs.i.i.i352.us ]
  %call2.i.i.i.i.i.i.i.i362.us = invoke noalias noundef nonnull i8* @_Znwm(i64 noundef 40) #30
          to label %call2.i.i.i.i.i.i.i.i.noexc361.us unwind label %lpad180.loopexit.split.us

call2.i.i.i.i.i.i.i.i.noexc361.us:                ; preds = %_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE10_M_insert_IRKiNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIiEPSt18_Rb_tree_node_baseSD_OT_RT0_.exit.i.i.us
  %_M_storage.i.i.i.i.i.i.i353.us = getelementptr inbounds i8, i8* %call2.i.i.i.i.i.i.i.i362.us, i64 32
  %87 = bitcast i8* %_M_storage.i.i.i.i.i.i.i353.us to i32*
  store i32 %call.i303.us, i32* %87, align 4, !tbaa !16
  %88 = bitcast i8* %call2.i.i.i.i.i.i.i.i362.us to %"struct.std::_Rb_tree_node_base"*
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 noundef zeroext %86, %"struct.std::_Rb_tree_node_base"* noundef nonnull %88, %"struct.std::_Rb_tree_node_base"* noundef nonnull %retval.sroa.4.0.i.i.i346.us, %"struct.std::_Rb_tree_node_base"* noundef nonnull align 8 dereferenceable(32) %_M_header.i.i.i.i322) #8
  %89 = load i64, i64* %5, align 8, !tbaa !93
  %inc.i.i.i355.us = add i64 %89, 1
  store i64 %inc.i.i.i355.us, i64* %5, align 8, !tbaa !93
  br label %invoke.cont205.us

invoke.cont205.us:                                ; preds = %call2.i.i.i.i.i.i.i.i.noexc361.us, %_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE24_M_get_insert_unique_posERKi.exit.i.i348.us, %if.end12.i.i.i345.us
  %inc211.us = add nsw i32 %ix.0691.us, 1
  %cmp173.us = icmp slt i32 %inc211.us, %maxx.0
  br i1 %cmp173.us, label %for.body175.us, label %for.cond172.for.cond.cleanup174_crit_edge.us, !llvm.loop !99

for.cond172.for.cond.cleanup174_crit_edge.us:     ; preds = %invoke.cont205.us
  %inc215.us = add nsw i32 %iz167.0695.us, 1
  %cmp169.us = icmp slt i32 %inc215.us, %maxz140.0
  br i1 %cmp169.us, label %for.cond172.preheader.us, label %if.end222, !llvm.loop !100

lpad180.loopexit.split.us:                        ; preds = %_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE10_M_insert_IRKiNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIiEPSt18_Rb_tree_node_baseSD_OT_RT0_.exit.i.i.us, %call1.i.noexc.us, %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i.us, %.noexc645.us, %if.end.i.i.i.us, %invoke.cont197.us, %invoke.cont195.us, %invoke.cont193.us, %invoke.cont191.us, %invoke.cont189.us, %invoke.cont187.us, %invoke.cont185.us, %if.then184.us, %_ZN6miniFE6get_idIiEET_iiiiii.exit301.us
  %lpad.loopexit.us = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup553

if.then.i.i.i643:                                 ; preds = %invoke.cont199.us
  invoke void @_ZSt16__throw_bad_castv() #29
          to label %.noexc unwind label %lpad180.loopexit.split-lp

.noexc:                                           ; preds = %if.then.i.i.i643
  unreachable

lpad180.loopexit.split-lp:                        ; preds = %if.then.i.i.i643
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup553

if.end222:                                        ; preds = %for.cond172.for.cond.cleanup174_crit_edge.us, %if.then132, %if.end124
  %90 = load i32, i32* %arrayidx.i222.2, align 8, !tbaa !16
  %91 = load i32, i32* %arrayidx.i234.2, align 8, !tbaa !16
  %cmp229 = icmp eq i32 %90, %91
  br i1 %cmp229, label %if.then230, label %if.end303

if.then230:                                       ; preds = %if.end222
  %92 = load i32, i32* %arrayidx.i246, align 4, !tbaa !16
  %93 = load i32, i32* %arrayidx.i246.1, align 4, !tbaa !16
  %arrayidx239 = getelementptr inbounds %struct.Box, %struct.Box* %local_node_box, i64 0, i32 0, i64 1
  %94 = load i32, i32* %arrayidx239, align 4, !tbaa !16
  %arrayidx242 = getelementptr inbounds %struct.Box, %struct.Box* %local_node_box, i64 0, i32 0, i64 3
  %95 = load i32, i32* %arrayidx242, align 4, !tbaa !16
  %cmp245 = icmp sgt i32 %92, 0
  %dec247 = sext i1 %cmp245 to i32
  %spec.select203 = add nsw i32 %92, %dec247
  %cmp251 = icmp sgt i32 %93, 0
  %dec253 = sext i1 %cmp251 to i32
  %miny234.0 = add nsw i32 %93, %dec253
  %cmp257.not = icmp sle i32 %94, %20
  %inc259 = zext i1 %cmp257.not to i32
  %maxx237.0 = add nsw i32 %94, %inc259
  %cmp263.not = icmp sle i32 %95, %26
  %inc265 = zext i1 %cmp263.not to i32
  %maxy240.0 = add nsw i32 %95, %inc265
  %cmp8.not.i377 = icmp sgt i32 %32, -1
  %96 = bitcast i8* %_M_parent.i.i.i.i.i to %"struct.std::_Rb_tree_node.48"**
  %_M_header.i.i.i.i390 = bitcast i8* %1 to %"struct.std::_Rb_tree_node_base"*
  %97 = bitcast i8* %_M_left.i.i.i.i.i to %"struct.std::_Rb_tree_node_base"**
  %cmp269700 = icmp slt i32 %miny234.0, %maxy240.0
  %cmp274697 = icmp slt i32 %spec.select203, %maxx237.0
  %or.cond736 = select i1 %cmp269700, i1 %cmp274697, i1 false
  br i1 %or.cond736, label %for.cond273.preheader.us, label %if.end303

for.cond273.preheader.us:                         ; preds = %if.then230, %for.cond273.for.cond.cleanup275_crit_edge.us
  %iy267.0701.us = phi i32 [ %inc296.us, %for.cond273.for.cond.cleanup275_crit_edge.us ], [ %miny234.0, %if.then230 ]
  %cmp6.not.i375.us = icmp sle i32 %iy267.0701.us, %26
  %reass.mul.i380.us = mul i32 %iy267.0701.us, %add44
  br label %for.body276.us

for.body276.us:                                   ; preds = %for.cond273.preheader.us, %invoke.cont286.us
  %ix272.0698.us = phi i32 [ %spec.select203, %for.cond273.preheader.us ], [ %inc292.us, %invoke.cont286.us ]
  %98 = or i32 %ix272.0698.us, %iy267.0701.us
  %.not.i373.us = icmp sgt i32 %98, -1
  br i1 %.not.i373.us, label %if.end.i379.us, label %_ZN6miniFE6get_idIiEET_iiiiii.exit384.us

if.end.i379.us:                                   ; preds = %for.body276.us
  %cmp4.not.i374.us = icmp sle i32 %ix272.0698.us, %20
  %or.cond.i376.us = and i1 %cmp6.not.i375.us, %cmp4.not.i374.us
  %or.cond14.i378.us = and i1 %cmp8.not.i377, %or.cond.i376.us
  %add13.i381.us = add i32 %ix272.0698.us, %reass.mul.i380.us
  %spec.select722 = select i1 %or.cond14.i378.us, i32 %add13.i381.us, i32 -1
  br label %_ZN6miniFE6get_idIiEET_iiiiii.exit384.us

_ZN6miniFE6get_idIiEET_iiiiii.exit384.us:         ; preds = %if.end.i379.us, %for.body276.us
  %retval.0.i383.us = phi i32 [ -1, %for.body276.us ], [ %spec.select722, %if.end.i379.us ]
  %call.i386.us = invoke noundef signext i32 @_ZN6miniFE15find_row_for_idIiEET_S1_RKSt3mapIS1_S1_St4lessIS1_ESaISt4pairIKS1_S1_EEE(i32 noundef signext %retval.0.i383.us, %"class.std::map"* noundef nonnull align 8 dereferenceable(48) %map_ids_to_rows)
          to label %invoke.cont284.us unwind label %lpad283.split.us

invoke.cont284.us:                                ; preds = %_ZN6miniFE6get_idIiEET_iiiiii.exit384.us
  %__x.028.i.i.i391.us = load %"struct.std::_Rb_tree_node.48"*, %"struct.std::_Rb_tree_node.48"** %96, align 8, !tbaa !94
  %cmp.not29.i.i.i392.us = icmp eq %"struct.std::_Rb_tree_node.48"* %__x.028.i.i.i391.us, null
  br i1 %cmp.not29.i.i.i392.us, label %if.then.i.i.i407.us, label %while.body.i.i.i402.us

while.body.i.i.i402.us:                           ; preds = %invoke.cont284.us, %while.body.i.i.i402.us
  %__x.030.i.i.i393.us = phi %"struct.std::_Rb_tree_node.48"* [ %__x.0.i.i.i400.us, %while.body.i.i.i402.us ], [ %__x.028.i.i.i391.us, %invoke.cont284.us ]
  %_M_storage.i.i.i.i.i.i394.us = getelementptr inbounds %"struct.std::_Rb_tree_node.48", %"struct.std::_Rb_tree_node.48"* %__x.030.i.i.i393.us, i64 0, i32 1
  %99 = bitcast %"struct.__gnu_cxx::__aligned_membuf.49"* %_M_storage.i.i.i.i.i.i394.us to i32*
  %100 = load i32, i32* %99, align 4, !tbaa !16
  %cmp.i.i.i.i395.us = icmp slt i32 %call.i386.us, %100
  %_M_left.i.i.i.i396.us = getelementptr inbounds %"struct.std::_Rb_tree_node.48", %"struct.std::_Rb_tree_node.48"* %__x.030.i.i.i393.us, i64 0, i32 0, i32 2
  %_M_right.i.i.i.i397.us = getelementptr inbounds %"struct.std::_Rb_tree_node.48", %"struct.std::_Rb_tree_node.48"* %__x.030.i.i.i393.us, i64 0, i32 0, i32 3
  %cond.in.in.i.i.i398.us = select i1 %cmp.i.i.i.i395.us, %"struct.std::_Rb_tree_node_base"** %_M_left.i.i.i.i396.us, %"struct.std::_Rb_tree_node_base"** %_M_right.i.i.i.i397.us
  %cond.in.i.i.i399.us = bitcast %"struct.std::_Rb_tree_node_base"** %cond.in.in.i.i.i398.us to %"struct.std::_Rb_tree_node.48"**
  %__x.0.i.i.i400.us = load %"struct.std::_Rb_tree_node.48"*, %"struct.std::_Rb_tree_node.48"** %cond.in.i.i.i399.us, align 8, !tbaa !94
  %cmp.not.i.i.i401.us = icmp eq %"struct.std::_Rb_tree_node.48"* %__x.0.i.i.i400.us, null
  br i1 %cmp.not.i.i.i401.us, label %while.end.i.i.i403.us, label %while.body.i.i.i402.us, !llvm.loop !95

while.end.i.i.i403.us:                            ; preds = %while.body.i.i.i402.us
  %101 = getelementptr %"struct.std::_Rb_tree_node.48", %"struct.std::_Rb_tree_node.48"* %__x.030.i.i.i393.us, i64 0, i32 0
  br i1 %cmp.i.i.i.i395.us, label %if.then.i.i.i407.us, label %if.end12.i.i.i413.us

if.then.i.i.i407.us:                              ; preds = %while.end.i.i.i403.us, %invoke.cont284.us
  %__y.0.lcssa37.i.i.i404.us = phi %"struct.std::_Rb_tree_node_base"* [ %101, %while.end.i.i.i403.us ], [ %_M_header.i.i.i.i390, %invoke.cont284.us ]
  %102 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %97, align 8, !tbaa !91
  %cmp.i5.i.i.i406.us = icmp eq %"struct.std::_Rb_tree_node_base"* %__y.0.lcssa37.i.i.i404.us, %102
  br i1 %cmp.i5.i.i.i406.us, label %_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE24_M_get_insert_unique_posERKi.exit.i.i416.us, label %if.else.i.i.i409.us

if.else.i.i.i409.us:                              ; preds = %if.then.i.i.i407.us
  %call.i.i.i.i408.us = call noundef %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* noundef %__y.0.lcssa37.i.i.i404.us) #32
  br label %if.end12.i.i.i413.us

if.end12.i.i.i413.us:                             ; preds = %if.else.i.i.i409.us, %while.end.i.i.i403.us
  %__y.0.lcssa36.i.i.i410.us = phi %"struct.std::_Rb_tree_node_base"* [ %__y.0.lcssa37.i.i.i404.us, %if.else.i.i.i409.us ], [ %101, %while.end.i.i.i403.us ]
  %__j.sroa.0.0.i.i.i411.us = phi %"struct.std::_Rb_tree_node_base"* [ %call.i.i.i.i408.us, %if.else.i.i.i409.us ], [ %101, %while.end.i.i.i403.us ]
  %103 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %__j.sroa.0.0.i.i.i411.us, i64 1, i32 0
  %104 = load i32, i32* %103, align 4, !tbaa !16
  %cmp.i7.i.i.i412.us = icmp slt i32 %104, %call.i386.us
  br i1 %cmp.i7.i.i.i412.us, label %_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE24_M_get_insert_unique_posERKi.exit.i.i416.us, label %invoke.cont286.us

_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE24_M_get_insert_unique_posERKi.exit.i.i416.us: ; preds = %if.end12.i.i.i413.us, %if.then.i.i.i407.us
  %retval.sroa.4.0.i.i.i414.us = phi %"struct.std::_Rb_tree_node_base"* [ %__y.0.lcssa37.i.i.i404.us, %if.then.i.i.i407.us ], [ %__y.0.lcssa36.i.i.i410.us, %if.end12.i.i.i413.us ]
  %tobool.not.i.i415.us = icmp eq %"struct.std::_Rb_tree_node_base"* %retval.sroa.4.0.i.i.i414.us, null
  br i1 %tobool.not.i.i415.us, label %invoke.cont286.us, label %if.then.i.i418.us

if.then.i.i418.us:                                ; preds = %_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE24_M_get_insert_unique_posERKi.exit.i.i416.us
  %cmp2.i.i.i417.us = icmp eq %"struct.std::_Rb_tree_node_base"* %retval.sroa.4.0.i.i.i414.us, %_M_header.i.i.i.i390
  br i1 %cmp2.i.i.i417.us, label %_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE10_M_insert_IiNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIiEPSt18_Rb_tree_node_baseSB_OT_RT0_.exit.i.i425.us, label %lor.rhs.i.i.i420.us

lor.rhs.i.i.i420.us:                              ; preds = %if.then.i.i418.us
  %105 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %retval.sroa.4.0.i.i.i414.us, i64 1, i32 0
  %106 = load i32, i32* %105, align 4, !tbaa !16
  %cmp.i.i9.i.i419.us = icmp slt i32 %call.i386.us, %106
  br label %_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE10_M_insert_IiNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIiEPSt18_Rb_tree_node_baseSB_OT_RT0_.exit.i.i425.us

_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE10_M_insert_IiNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIiEPSt18_Rb_tree_node_baseSB_OT_RT0_.exit.i.i425.us: ; preds = %lor.rhs.i.i.i420.us, %if.then.i.i418.us
  %107 = phi i1 [ true, %if.then.i.i418.us ], [ %cmp.i.i9.i.i419.us, %lor.rhs.i.i.i420.us ]
  %call2.i.i.i.i.i.i.i.i431.us = invoke noalias noundef nonnull i8* @_Znwm(i64 noundef 40) #30
          to label %call2.i.i.i.i.i.i.i.i.noexc430.us unwind label %lpad283.split.us

call2.i.i.i.i.i.i.i.i.noexc430.us:                ; preds = %_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE10_M_insert_IiNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIiEPSt18_Rb_tree_node_baseSB_OT_RT0_.exit.i.i425.us
  %_M_storage.i.i.i.i.i.i.i421.us = getelementptr inbounds i8, i8* %call2.i.i.i.i.i.i.i.i431.us, i64 32
  %108 = bitcast i8* %_M_storage.i.i.i.i.i.i.i421.us to i32*
  store i32 %call.i386.us, i32* %108, align 4, !tbaa !16
  %109 = bitcast i8* %call2.i.i.i.i.i.i.i.i431.us to %"struct.std::_Rb_tree_node_base"*
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 noundef zeroext %107, %"struct.std::_Rb_tree_node_base"* noundef nonnull %109, %"struct.std::_Rb_tree_node_base"* noundef nonnull %retval.sroa.4.0.i.i.i414.us, %"struct.std::_Rb_tree_node_base"* noundef nonnull align 8 dereferenceable(32) %_M_header.i.i.i.i390) #8
  %110 = load i64, i64* %5, align 8, !tbaa !93
  %inc.i.i.i423.us = add i64 %110, 1
  store i64 %inc.i.i.i423.us, i64* %5, align 8, !tbaa !93
  br label %invoke.cont286.us

invoke.cont286.us:                                ; preds = %call2.i.i.i.i.i.i.i.i.noexc430.us, %_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE24_M_get_insert_unique_posERKi.exit.i.i416.us, %if.end12.i.i.i413.us
  %inc292.us = add nsw i32 %ix272.0698.us, 1
  %cmp274.us = icmp slt i32 %inc292.us, %maxx237.0
  br i1 %cmp274.us, label %for.body276.us, label %for.cond273.for.cond.cleanup275_crit_edge.us, !llvm.loop !101

for.cond273.for.cond.cleanup275_crit_edge.us:     ; preds = %invoke.cont286.us
  %inc296.us = add nsw i32 %iy267.0701.us, 1
  %cmp269.us = icmp slt i32 %inc296.us, %maxy240.0
  br i1 %cmp269.us, label %for.cond273.preheader.us, label %if.end303, !llvm.loop !102

lpad283.split.us:                                 ; preds = %_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE10_M_insert_IiNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIiEPSt18_Rb_tree_node_baseSB_OT_RT0_.exit.i.i425.us, %_ZN6miniFE6get_idIiEET_iiiiii.exit384.us
  %111 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup553

if.end303:                                        ; preds = %for.cond273.for.cond.cleanup275_crit_edge.us, %if.then230, %if.end222
  %112 = load i32, i32* %arrayidx43, align 4, !tbaa !16
  %arrayidx309 = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %this, i64 0, i32 4, i32 0, i64 1
  %113 = load i32, i32* %arrayidx309, align 4, !tbaa !16
  %cmp310 = icmp eq i32 %112, %113
  br i1 %cmp310, label %if.then311, label %if.end384

if.then311:                                       ; preds = %if.end303
  %114 = load i32, i32* %arrayidx.i246.2, align 4, !tbaa !16
  %115 = load i32, i32* %arrayidx.i246.1, align 4, !tbaa !16
  %arrayidx320 = getelementptr inbounds %struct.Box, %struct.Box* %local_node_box, i64 0, i32 0, i64 5
  %116 = load i32, i32* %arrayidx320, align 4, !tbaa !16
  %arrayidx323 = getelementptr inbounds %struct.Box, %struct.Box* %local_node_box, i64 0, i32 0, i64 3
  %117 = load i32, i32* %arrayidx323, align 4, !tbaa !16
  %cmp326 = icmp sgt i32 %114, 0
  %dec328 = sext i1 %cmp326 to i32
  %spec.select204 = add nsw i32 %114, %dec328
  %cmp332 = icmp sgt i32 %115, 0
  %dec334 = sext i1 %cmp332 to i32
  %miny315.0 = add nsw i32 %115, %dec334
  %cmp338.not = icmp sle i32 %116, %32
  %inc340 = zext i1 %cmp338.not to i32
  %maxz318.0 = add nsw i32 %116, %inc340
  %cmp344.not = icmp sle i32 %117, %26
  %inc346 = zext i1 %cmp344.not to i32
  %maxy321.0 = add nsw i32 %117, %inc346
  %118 = bitcast i8* %_M_parent.i.i.i.i.i208 to %"struct.std::_Rb_tree_node.48"**
  %_M_header.i.i.i.i460 = bitcast i8* %7 to %"struct.std::_Rb_tree_node_base"*
  %119 = bitcast i8* %_M_left.i.i.i.i.i209 to %"struct.std::_Rb_tree_node_base"**
  %cmp350706 = icmp slt i32 %miny315.0, %maxy321.0
  %cmp355703 = icmp slt i32 %spec.select204, %maxz318.0
  %or.cond737 = select i1 %cmp350706, i1 %cmp355703, i1 false
  br i1 %or.cond737, label %for.cond354.preheader.us, label %if.end384

for.cond354.preheader.us:                         ; preds = %if.then311, %for.cond354.for.cond.cleanup356_crit_edge.us
  %iy348.0707.us = phi i32 [ %inc377.us, %for.cond354.for.cond.cleanup356_crit_edge.us ], [ %miny315.0, %if.then311 ]
  %120 = or i32 %iy348.0707.us, %20
  %cmp6.not.i444.us = icmp sle i32 %iy348.0707.us, %26
  br label %for.body357.us

for.body357.us:                                   ; preds = %for.cond354.preheader.us, %invoke.cont367.us
  %iz353.0704.us = phi i32 [ %spec.select204, %for.cond354.preheader.us ], [ %inc373.us, %invoke.cont367.us ]
  %121 = or i32 %120, %iz353.0704.us
  %.not.i443.us = icmp sgt i32 %121, -1
  %cmp8.not.i445.us = icmp sle i32 %iz353.0704.us, %32
  %or.cond14.i446.us = and i1 %cmp6.not.i444.us, %cmp8.not.i445.us
  %or.cond723 = select i1 %.not.i443.us, i1 %or.cond14.i446.us, i1 false
  %mul11.i448.us = mul i32 %iz353.0704.us, %add48
  %reass.add.i449.us = add i32 %mul11.i448.us, %iy348.0707.us
  %reass.mul.i450.us = mul i32 %reass.add.i449.us, %add44
  %add13.i451.us = add i32 %reass.mul.i450.us, %20
  %retval.0.i453.us = select i1 %or.cond723, i32 %add13.i451.us, i32 -1
  %call.i456.us = invoke noundef signext i32 @_ZN6miniFE15find_row_for_idIiEET_S1_RKSt3mapIS1_S1_St4lessIS1_ESaISt4pairIKS1_S1_EEE(i32 noundef signext %retval.0.i453.us, %"class.std::map"* noundef nonnull align 8 dereferenceable(48) %map_ids_to_rows)
          to label %invoke.cont364.us unwind label %lpad363.split.us

invoke.cont364.us:                                ; preds = %for.body357.us
  %__x.028.i.i.i461.us = load %"struct.std::_Rb_tree_node.48"*, %"struct.std::_Rb_tree_node.48"** %118, align 8, !tbaa !94
  %cmp.not29.i.i.i462.us = icmp eq %"struct.std::_Rb_tree_node.48"* %__x.028.i.i.i461.us, null
  br i1 %cmp.not29.i.i.i462.us, label %if.then.i.i.i477.us, label %while.body.i.i.i472.us

while.body.i.i.i472.us:                           ; preds = %invoke.cont364.us, %while.body.i.i.i472.us
  %__x.030.i.i.i463.us = phi %"struct.std::_Rb_tree_node.48"* [ %__x.0.i.i.i470.us, %while.body.i.i.i472.us ], [ %__x.028.i.i.i461.us, %invoke.cont364.us ]
  %_M_storage.i.i.i.i.i.i464.us = getelementptr inbounds %"struct.std::_Rb_tree_node.48", %"struct.std::_Rb_tree_node.48"* %__x.030.i.i.i463.us, i64 0, i32 1
  %122 = bitcast %"struct.__gnu_cxx::__aligned_membuf.49"* %_M_storage.i.i.i.i.i.i464.us to i32*
  %123 = load i32, i32* %122, align 4, !tbaa !16
  %cmp.i.i.i.i465.us = icmp slt i32 %call.i456.us, %123
  %_M_left.i.i.i.i466.us = getelementptr inbounds %"struct.std::_Rb_tree_node.48", %"struct.std::_Rb_tree_node.48"* %__x.030.i.i.i463.us, i64 0, i32 0, i32 2
  %_M_right.i.i.i.i467.us = getelementptr inbounds %"struct.std::_Rb_tree_node.48", %"struct.std::_Rb_tree_node.48"* %__x.030.i.i.i463.us, i64 0, i32 0, i32 3
  %cond.in.in.i.i.i468.us = select i1 %cmp.i.i.i.i465.us, %"struct.std::_Rb_tree_node_base"** %_M_left.i.i.i.i466.us, %"struct.std::_Rb_tree_node_base"** %_M_right.i.i.i.i467.us
  %cond.in.i.i.i469.us = bitcast %"struct.std::_Rb_tree_node_base"** %cond.in.in.i.i.i468.us to %"struct.std::_Rb_tree_node.48"**
  %__x.0.i.i.i470.us = load %"struct.std::_Rb_tree_node.48"*, %"struct.std::_Rb_tree_node.48"** %cond.in.i.i.i469.us, align 8, !tbaa !94
  %cmp.not.i.i.i471.us = icmp eq %"struct.std::_Rb_tree_node.48"* %__x.0.i.i.i470.us, null
  br i1 %cmp.not.i.i.i471.us, label %while.end.i.i.i473.us, label %while.body.i.i.i472.us, !llvm.loop !95

while.end.i.i.i473.us:                            ; preds = %while.body.i.i.i472.us
  %124 = getelementptr %"struct.std::_Rb_tree_node.48", %"struct.std::_Rb_tree_node.48"* %__x.030.i.i.i463.us, i64 0, i32 0
  br i1 %cmp.i.i.i.i465.us, label %if.then.i.i.i477.us, label %if.end12.i.i.i483.us

if.then.i.i.i477.us:                              ; preds = %while.end.i.i.i473.us, %invoke.cont364.us
  %__y.0.lcssa37.i.i.i474.us = phi %"struct.std::_Rb_tree_node_base"* [ %124, %while.end.i.i.i473.us ], [ %_M_header.i.i.i.i460, %invoke.cont364.us ]
  %125 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %119, align 8, !tbaa !91
  %cmp.i5.i.i.i476.us = icmp eq %"struct.std::_Rb_tree_node_base"* %__y.0.lcssa37.i.i.i474.us, %125
  br i1 %cmp.i5.i.i.i476.us, label %_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE24_M_get_insert_unique_posERKi.exit.i.i486.us, label %if.else.i.i.i479.us

if.else.i.i.i479.us:                              ; preds = %if.then.i.i.i477.us
  %call.i.i.i.i478.us = call noundef %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* noundef %__y.0.lcssa37.i.i.i474.us) #32
  br label %if.end12.i.i.i483.us

if.end12.i.i.i483.us:                             ; preds = %if.else.i.i.i479.us, %while.end.i.i.i473.us
  %__y.0.lcssa36.i.i.i480.us = phi %"struct.std::_Rb_tree_node_base"* [ %__y.0.lcssa37.i.i.i474.us, %if.else.i.i.i479.us ], [ %124, %while.end.i.i.i473.us ]
  %__j.sroa.0.0.i.i.i481.us = phi %"struct.std::_Rb_tree_node_base"* [ %call.i.i.i.i478.us, %if.else.i.i.i479.us ], [ %124, %while.end.i.i.i473.us ]
  %126 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %__j.sroa.0.0.i.i.i481.us, i64 1, i32 0
  %127 = load i32, i32* %126, align 4, !tbaa !16
  %cmp.i7.i.i.i482.us = icmp slt i32 %127, %call.i456.us
  br i1 %cmp.i7.i.i.i482.us, label %_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE24_M_get_insert_unique_posERKi.exit.i.i486.us, label %invoke.cont367.us

_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE24_M_get_insert_unique_posERKi.exit.i.i486.us: ; preds = %if.end12.i.i.i483.us, %if.then.i.i.i477.us
  %retval.sroa.4.0.i.i.i484.us = phi %"struct.std::_Rb_tree_node_base"* [ %__y.0.lcssa37.i.i.i474.us, %if.then.i.i.i477.us ], [ %__y.0.lcssa36.i.i.i480.us, %if.end12.i.i.i483.us ]
  %tobool.not.i.i485.us = icmp eq %"struct.std::_Rb_tree_node_base"* %retval.sroa.4.0.i.i.i484.us, null
  br i1 %tobool.not.i.i485.us, label %invoke.cont367.us, label %if.then.i.i488.us

if.then.i.i488.us:                                ; preds = %_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE24_M_get_insert_unique_posERKi.exit.i.i486.us
  %cmp2.i.i.i487.us = icmp eq %"struct.std::_Rb_tree_node_base"* %retval.sroa.4.0.i.i.i484.us, %_M_header.i.i.i.i460
  br i1 %cmp2.i.i.i487.us, label %_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE10_M_insert_IRKiNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIiEPSt18_Rb_tree_node_baseSD_OT_RT0_.exit.i.i495.us, label %lor.rhs.i.i.i490.us

lor.rhs.i.i.i490.us:                              ; preds = %if.then.i.i488.us
  %128 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %retval.sroa.4.0.i.i.i484.us, i64 1, i32 0
  %129 = load i32, i32* %128, align 4, !tbaa !16
  %cmp.i.i9.i.i489.us = icmp slt i32 %call.i456.us, %129
  br label %_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE10_M_insert_IRKiNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIiEPSt18_Rb_tree_node_baseSD_OT_RT0_.exit.i.i495.us

_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE10_M_insert_IRKiNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIiEPSt18_Rb_tree_node_baseSD_OT_RT0_.exit.i.i495.us: ; preds = %lor.rhs.i.i.i490.us, %if.then.i.i488.us
  %130 = phi i1 [ true, %if.then.i.i488.us ], [ %cmp.i.i9.i.i489.us, %lor.rhs.i.i.i490.us ]
  %call2.i.i.i.i.i.i.i.i501.us = invoke noalias noundef nonnull i8* @_Znwm(i64 noundef 40) #30
          to label %call2.i.i.i.i.i.i.i.i.noexc500.us unwind label %lpad363.split.us

call2.i.i.i.i.i.i.i.i.noexc500.us:                ; preds = %_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE10_M_insert_IRKiNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIiEPSt18_Rb_tree_node_baseSD_OT_RT0_.exit.i.i495.us
  %_M_storage.i.i.i.i.i.i.i491.us = getelementptr inbounds i8, i8* %call2.i.i.i.i.i.i.i.i501.us, i64 32
  %131 = bitcast i8* %_M_storage.i.i.i.i.i.i.i491.us to i32*
  store i32 %call.i456.us, i32* %131, align 4, !tbaa !16
  %132 = bitcast i8* %call2.i.i.i.i.i.i.i.i501.us to %"struct.std::_Rb_tree_node_base"*
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 noundef zeroext %130, %"struct.std::_Rb_tree_node_base"* noundef nonnull %132, %"struct.std::_Rb_tree_node_base"* noundef nonnull %retval.sroa.4.0.i.i.i484.us, %"struct.std::_Rb_tree_node_base"* noundef nonnull align 8 dereferenceable(32) %_M_header.i.i.i.i460) #8
  %133 = load i64, i64* %11, align 8, !tbaa !93
  %inc.i.i.i493.us = add i64 %133, 1
  store i64 %inc.i.i.i493.us, i64* %11, align 8, !tbaa !93
  br label %invoke.cont367.us

invoke.cont367.us:                                ; preds = %call2.i.i.i.i.i.i.i.i.noexc500.us, %_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE24_M_get_insert_unique_posERKi.exit.i.i486.us, %if.end12.i.i.i483.us
  %inc373.us = add nsw i32 %iz353.0704.us, 1
  %cmp355.us = icmp slt i32 %inc373.us, %maxz318.0
  br i1 %cmp355.us, label %for.body357.us, label %for.cond354.for.cond.cleanup356_crit_edge.us, !llvm.loop !103

for.cond354.for.cond.cleanup356_crit_edge.us:     ; preds = %invoke.cont367.us
  %inc377.us = add nsw i32 %iy348.0707.us, 1
  %cmp350.us = icmp slt i32 %inc377.us, %maxy321.0
  br i1 %cmp350.us, label %for.cond354.preheader.us, label %if.end384, !llvm.loop !104

lpad363.split.us:                                 ; preds = %_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE10_M_insert_IRKiNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIiEPSt18_Rb_tree_node_baseSD_OT_RT0_.exit.i.i495.us, %for.body357.us
  %134 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup553

if.end384:                                        ; preds = %for.cond354.for.cond.cleanup356_crit_edge.us, %if.then311, %if.end303
  %135 = load i32, i32* %arrayidx47, align 4, !tbaa !16
  %arrayidx390 = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %this, i64 0, i32 4, i32 0, i64 3
  %136 = load i32, i32* %arrayidx390, align 4, !tbaa !16
  %cmp391 = icmp eq i32 %135, %136
  br i1 %cmp391, label %if.then392, label %if.end465

if.then392:                                       ; preds = %if.end384
  %137 = load i32, i32* %arrayidx.i246.2, align 4, !tbaa !16
  %138 = load i32, i32* %arrayidx.i246, align 4, !tbaa !16
  %arrayidx401 = getelementptr inbounds %struct.Box, %struct.Box* %local_node_box, i64 0, i32 0, i64 5
  %139 = load i32, i32* %arrayidx401, align 4, !tbaa !16
  %arrayidx404 = getelementptr inbounds %struct.Box, %struct.Box* %local_node_box, i64 0, i32 0, i64 1
  %140 = load i32, i32* %arrayidx404, align 4, !tbaa !16
  %cmp407 = icmp sgt i32 %137, 0
  %dec409 = sext i1 %cmp407 to i32
  %spec.select205 = add nsw i32 %137, %dec409
  %cmp413 = icmp sgt i32 %138, 0
  %dec415 = sext i1 %cmp413 to i32
  %minx396.0 = add nsw i32 %138, %dec415
  %cmp419.not = icmp sle i32 %139, %32
  %inc421 = zext i1 %cmp419.not to i32
  %maxz399.0 = add nsw i32 %139, %inc421
  %cmp425.not = icmp sle i32 %140, %20
  %inc427 = zext i1 %cmp425.not to i32
  %maxx402.0 = add nsw i32 %140, %inc427
  %141 = bitcast i8* %_M_parent.i.i.i.i.i to %"struct.std::_Rb_tree_node.48"**
  %_M_header.i.i.i.i530 = bitcast i8* %1 to %"struct.std::_Rb_tree_node_base"*
  %142 = bitcast i8* %_M_left.i.i.i.i.i to %"struct.std::_Rb_tree_node_base"**
  %cmp431712 = icmp slt i32 %minx396.0, %maxx402.0
  %cmp436709 = icmp slt i32 %spec.select205, %maxz399.0
  %or.cond738 = select i1 %cmp431712, i1 %cmp436709, i1 false
  br i1 %or.cond738, label %for.cond435.preheader.us, label %if.end465

for.cond435.preheader.us:                         ; preds = %if.then392, %for.cond435.for.cond.cleanup437_crit_edge.us
  %ix429.0713.us = phi i32 [ %inc458.us, %for.cond435.for.cond.cleanup437_crit_edge.us ], [ %minx396.0, %if.then392 ]
  %143 = or i32 %ix429.0713.us, %26
  %cmp4.not.i514.us = icmp sle i32 %ix429.0713.us, %20
  br label %for.body438.us

for.body438.us:                                   ; preds = %for.cond435.preheader.us, %invoke.cont448.us
  %iz434.0710.us = phi i32 [ %spec.select205, %for.cond435.preheader.us ], [ %inc454.us, %invoke.cont448.us ]
  %144 = or i32 %143, %iz434.0710.us
  %.not.i513.us = icmp sgt i32 %144, -1
  %cmp8.not.i515.us = icmp sle i32 %iz434.0710.us, %32
  %or.cond14.i516.us = and i1 %cmp4.not.i514.us, %cmp8.not.i515.us
  %or.cond724 = select i1 %.not.i513.us, i1 %or.cond14.i516.us, i1 false
  %mul11.i518.us = mul i32 %iz434.0710.us, %add48
  %reass.add.i519.us = add i32 %mul11.i518.us, %26
  %reass.mul.i520.us = mul i32 %reass.add.i519.us, %add44
  %add13.i521.us = add i32 %reass.mul.i520.us, %ix429.0713.us
  %retval.0.i523.us = select i1 %or.cond724, i32 %add13.i521.us, i32 -1
  %call.i526.us = invoke noundef signext i32 @_ZN6miniFE15find_row_for_idIiEET_S1_RKSt3mapIS1_S1_St4lessIS1_ESaISt4pairIKS1_S1_EEE(i32 noundef signext %retval.0.i523.us, %"class.std::map"* noundef nonnull align 8 dereferenceable(48) %map_ids_to_rows)
          to label %invoke.cont446.us unwind label %lpad445.split.us

invoke.cont446.us:                                ; preds = %for.body438.us
  %__x.028.i.i.i531.us = load %"struct.std::_Rb_tree_node.48"*, %"struct.std::_Rb_tree_node.48"** %141, align 8, !tbaa !94
  %cmp.not29.i.i.i532.us = icmp eq %"struct.std::_Rb_tree_node.48"* %__x.028.i.i.i531.us, null
  br i1 %cmp.not29.i.i.i532.us, label %if.then.i.i.i547.us, label %while.body.i.i.i542.us

while.body.i.i.i542.us:                           ; preds = %invoke.cont446.us, %while.body.i.i.i542.us
  %__x.030.i.i.i533.us = phi %"struct.std::_Rb_tree_node.48"* [ %__x.0.i.i.i540.us, %while.body.i.i.i542.us ], [ %__x.028.i.i.i531.us, %invoke.cont446.us ]
  %_M_storage.i.i.i.i.i.i534.us = getelementptr inbounds %"struct.std::_Rb_tree_node.48", %"struct.std::_Rb_tree_node.48"* %__x.030.i.i.i533.us, i64 0, i32 1
  %145 = bitcast %"struct.__gnu_cxx::__aligned_membuf.49"* %_M_storage.i.i.i.i.i.i534.us to i32*
  %146 = load i32, i32* %145, align 4, !tbaa !16
  %cmp.i.i.i.i535.us = icmp slt i32 %call.i526.us, %146
  %_M_left.i.i.i.i536.us = getelementptr inbounds %"struct.std::_Rb_tree_node.48", %"struct.std::_Rb_tree_node.48"* %__x.030.i.i.i533.us, i64 0, i32 0, i32 2
  %_M_right.i.i.i.i537.us = getelementptr inbounds %"struct.std::_Rb_tree_node.48", %"struct.std::_Rb_tree_node.48"* %__x.030.i.i.i533.us, i64 0, i32 0, i32 3
  %cond.in.in.i.i.i538.us = select i1 %cmp.i.i.i.i535.us, %"struct.std::_Rb_tree_node_base"** %_M_left.i.i.i.i536.us, %"struct.std::_Rb_tree_node_base"** %_M_right.i.i.i.i537.us
  %cond.in.i.i.i539.us = bitcast %"struct.std::_Rb_tree_node_base"** %cond.in.in.i.i.i538.us to %"struct.std::_Rb_tree_node.48"**
  %__x.0.i.i.i540.us = load %"struct.std::_Rb_tree_node.48"*, %"struct.std::_Rb_tree_node.48"** %cond.in.i.i.i539.us, align 8, !tbaa !94
  %cmp.not.i.i.i541.us = icmp eq %"struct.std::_Rb_tree_node.48"* %__x.0.i.i.i540.us, null
  br i1 %cmp.not.i.i.i541.us, label %while.end.i.i.i543.us, label %while.body.i.i.i542.us, !llvm.loop !95

while.end.i.i.i543.us:                            ; preds = %while.body.i.i.i542.us
  %147 = getelementptr %"struct.std::_Rb_tree_node.48", %"struct.std::_Rb_tree_node.48"* %__x.030.i.i.i533.us, i64 0, i32 0
  br i1 %cmp.i.i.i.i535.us, label %if.then.i.i.i547.us, label %if.end12.i.i.i553.us

if.then.i.i.i547.us:                              ; preds = %while.end.i.i.i543.us, %invoke.cont446.us
  %__y.0.lcssa37.i.i.i544.us = phi %"struct.std::_Rb_tree_node_base"* [ %147, %while.end.i.i.i543.us ], [ %_M_header.i.i.i.i530, %invoke.cont446.us ]
  %148 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %142, align 8, !tbaa !91
  %cmp.i5.i.i.i546.us = icmp eq %"struct.std::_Rb_tree_node_base"* %__y.0.lcssa37.i.i.i544.us, %148
  br i1 %cmp.i5.i.i.i546.us, label %_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE24_M_get_insert_unique_posERKi.exit.i.i556.us, label %if.else.i.i.i549.us

if.else.i.i.i549.us:                              ; preds = %if.then.i.i.i547.us
  %call.i.i.i.i548.us = call noundef %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* noundef %__y.0.lcssa37.i.i.i544.us) #32
  br label %if.end12.i.i.i553.us

if.end12.i.i.i553.us:                             ; preds = %if.else.i.i.i549.us, %while.end.i.i.i543.us
  %__y.0.lcssa36.i.i.i550.us = phi %"struct.std::_Rb_tree_node_base"* [ %__y.0.lcssa37.i.i.i544.us, %if.else.i.i.i549.us ], [ %147, %while.end.i.i.i543.us ]
  %__j.sroa.0.0.i.i.i551.us = phi %"struct.std::_Rb_tree_node_base"* [ %call.i.i.i.i548.us, %if.else.i.i.i549.us ], [ %147, %while.end.i.i.i543.us ]
  %149 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %__j.sroa.0.0.i.i.i551.us, i64 1, i32 0
  %150 = load i32, i32* %149, align 4, !tbaa !16
  %cmp.i7.i.i.i552.us = icmp slt i32 %150, %call.i526.us
  br i1 %cmp.i7.i.i.i552.us, label %_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE24_M_get_insert_unique_posERKi.exit.i.i556.us, label %invoke.cont448.us

_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE24_M_get_insert_unique_posERKi.exit.i.i556.us: ; preds = %if.end12.i.i.i553.us, %if.then.i.i.i547.us
  %retval.sroa.4.0.i.i.i554.us = phi %"struct.std::_Rb_tree_node_base"* [ %__y.0.lcssa37.i.i.i544.us, %if.then.i.i.i547.us ], [ %__y.0.lcssa36.i.i.i550.us, %if.end12.i.i.i553.us ]
  %tobool.not.i.i555.us = icmp eq %"struct.std::_Rb_tree_node_base"* %retval.sroa.4.0.i.i.i554.us, null
  br i1 %tobool.not.i.i555.us, label %invoke.cont448.us, label %if.then.i.i558.us

if.then.i.i558.us:                                ; preds = %_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE24_M_get_insert_unique_posERKi.exit.i.i556.us
  %cmp2.i.i.i557.us = icmp eq %"struct.std::_Rb_tree_node_base"* %retval.sroa.4.0.i.i.i554.us, %_M_header.i.i.i.i530
  br i1 %cmp2.i.i.i557.us, label %_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE10_M_insert_IiNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIiEPSt18_Rb_tree_node_baseSB_OT_RT0_.exit.i.i565.us, label %lor.rhs.i.i.i560.us

lor.rhs.i.i.i560.us:                              ; preds = %if.then.i.i558.us
  %151 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %retval.sroa.4.0.i.i.i554.us, i64 1, i32 0
  %152 = load i32, i32* %151, align 4, !tbaa !16
  %cmp.i.i9.i.i559.us = icmp slt i32 %call.i526.us, %152
  br label %_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE10_M_insert_IiNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIiEPSt18_Rb_tree_node_baseSB_OT_RT0_.exit.i.i565.us

_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE10_M_insert_IiNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIiEPSt18_Rb_tree_node_baseSB_OT_RT0_.exit.i.i565.us: ; preds = %lor.rhs.i.i.i560.us, %if.then.i.i558.us
  %153 = phi i1 [ true, %if.then.i.i558.us ], [ %cmp.i.i9.i.i559.us, %lor.rhs.i.i.i560.us ]
  %call2.i.i.i.i.i.i.i.i571.us = invoke noalias noundef nonnull i8* @_Znwm(i64 noundef 40) #30
          to label %call2.i.i.i.i.i.i.i.i.noexc570.us unwind label %lpad445.split.us

call2.i.i.i.i.i.i.i.i.noexc570.us:                ; preds = %_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE10_M_insert_IiNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIiEPSt18_Rb_tree_node_baseSB_OT_RT0_.exit.i.i565.us
  %_M_storage.i.i.i.i.i.i.i561.us = getelementptr inbounds i8, i8* %call2.i.i.i.i.i.i.i.i571.us, i64 32
  %154 = bitcast i8* %_M_storage.i.i.i.i.i.i.i561.us to i32*
  store i32 %call.i526.us, i32* %154, align 4, !tbaa !16
  %155 = bitcast i8* %call2.i.i.i.i.i.i.i.i571.us to %"struct.std::_Rb_tree_node_base"*
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 noundef zeroext %153, %"struct.std::_Rb_tree_node_base"* noundef nonnull %155, %"struct.std::_Rb_tree_node_base"* noundef nonnull %retval.sroa.4.0.i.i.i554.us, %"struct.std::_Rb_tree_node_base"* noundef nonnull align 8 dereferenceable(32) %_M_header.i.i.i.i530) #8
  %156 = load i64, i64* %5, align 8, !tbaa !93
  %inc.i.i.i563.us = add i64 %156, 1
  store i64 %inc.i.i.i563.us, i64* %5, align 8, !tbaa !93
  br label %invoke.cont448.us

invoke.cont448.us:                                ; preds = %call2.i.i.i.i.i.i.i.i.noexc570.us, %_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE24_M_get_insert_unique_posERKi.exit.i.i556.us, %if.end12.i.i.i553.us
  %inc454.us = add nsw i32 %iz434.0710.us, 1
  %cmp436.us = icmp slt i32 %inc454.us, %maxz399.0
  br i1 %cmp436.us, label %for.body438.us, label %for.cond435.for.cond.cleanup437_crit_edge.us, !llvm.loop !105

for.cond435.for.cond.cleanup437_crit_edge.us:     ; preds = %invoke.cont448.us
  %inc458.us = add nsw i32 %ix429.0713.us, 1
  %cmp431.us = icmp slt i32 %inc458.us, %maxx402.0
  br i1 %cmp431.us, label %for.cond435.preheader.us, label %if.end465, !llvm.loop !106

lpad445.split.us:                                 ; preds = %_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE10_M_insert_IiNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIiEPSt18_Rb_tree_node_baseSB_OT_RT0_.exit.i.i565.us, %for.body438.us
  %157 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup553

if.end465:                                        ; preds = %for.cond435.for.cond.cleanup437_crit_edge.us, %if.then392, %if.end384
  %158 = load i32, i32* %arrayidx51, align 4, !tbaa !16
  %arrayidx471 = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %this, i64 0, i32 4, i32 0, i64 5
  %159 = load i32, i32* %arrayidx471, align 4, !tbaa !16
  %cmp472 = icmp eq i32 %158, %159
  br i1 %cmp472, label %if.then473, label %if.end546

if.then473:                                       ; preds = %if.end465
  %160 = load i32, i32* %arrayidx.i246.1, align 4, !tbaa !16
  %161 = load i32, i32* %arrayidx.i246, align 4, !tbaa !16
  %arrayidx482 = getelementptr inbounds %struct.Box, %struct.Box* %local_node_box, i64 0, i32 0, i64 3
  %162 = load i32, i32* %arrayidx482, align 4, !tbaa !16
  %arrayidx485 = getelementptr inbounds %struct.Box, %struct.Box* %local_node_box, i64 0, i32 0, i64 1
  %163 = load i32, i32* %arrayidx485, align 4, !tbaa !16
  %cmp488 = icmp sgt i32 %160, 0
  %dec490 = sext i1 %cmp488 to i32
  %spec.select206 = add nsw i32 %160, %dec490
  %cmp494 = icmp sgt i32 %161, 0
  %dec496 = sext i1 %cmp494 to i32
  %minx477.0 = add nsw i32 %161, %dec496
  %cmp500.not = icmp sle i32 %162, %26
  %inc502 = zext i1 %cmp500.not to i32
  %maxy480.0 = add nsw i32 %162, %inc502
  %cmp506.not = icmp sle i32 %163, %20
  %inc508 = zext i1 %cmp506.not to i32
  %maxx483.0 = add nsw i32 %163, %inc508
  %mul11.i588 = mul i32 %32, %add48
  %164 = bitcast i8* %_M_parent.i.i.i.i.i to %"struct.std::_Rb_tree_node.48"**
  %_M_header.i.i.i.i600 = bitcast i8* %1 to %"struct.std::_Rb_tree_node_base"*
  %165 = bitcast i8* %_M_left.i.i.i.i.i to %"struct.std::_Rb_tree_node_base"**
  %cmp512718 = icmp slt i32 %minx477.0, %maxx483.0
  %cmp517715 = icmp slt i32 %spec.select206, %maxy480.0
  %or.cond739 = select i1 %cmp512718, i1 %cmp517715, i1 false
  br i1 %or.cond739, label %for.cond516.preheader.us, label %if.end546

for.cond516.preheader.us:                         ; preds = %if.then473, %for.cond516.for.cond.cleanup518_crit_edge.us
  %ix510.0719.us = phi i32 [ %inc539.us, %for.cond516.for.cond.cleanup518_crit_edge.us ], [ %minx477.0, %if.then473 ]
  %166 = or i32 %ix510.0719.us, %32
  %cmp4.not.i584.us = icmp sle i32 %ix510.0719.us, %20
  br label %for.body519.us

for.body519.us:                                   ; preds = %for.cond516.preheader.us, %invoke.cont529.us
  %iy515.0716.us = phi i32 [ %spec.select206, %for.cond516.preheader.us ], [ %inc535.us, %invoke.cont529.us ]
  %167 = or i32 %166, %iy515.0716.us
  %.not.i583.us = icmp sgt i32 %167, -1
  %cmp6.not.i585.us = icmp sle i32 %iy515.0716.us, %26
  %or.cond.i586.us = and i1 %cmp4.not.i584.us, %cmp6.not.i585.us
  %or.cond725 = select i1 %.not.i583.us, i1 %or.cond.i586.us, i1 false
  %reass.add.i589.us = add i32 %iy515.0716.us, %mul11.i588
  %reass.mul.i590.us = mul i32 %reass.add.i589.us, %add44
  %add13.i591.us = add i32 %reass.mul.i590.us, %ix510.0719.us
  %retval.0.i593.us = select i1 %or.cond725, i32 %add13.i591.us, i32 -1
  %call.i596.us = invoke noundef signext i32 @_ZN6miniFE15find_row_for_idIiEET_S1_RKSt3mapIS1_S1_St4lessIS1_ESaISt4pairIKS1_S1_EEE(i32 noundef signext %retval.0.i593.us, %"class.std::map"* noundef nonnull align 8 dereferenceable(48) %map_ids_to_rows)
          to label %invoke.cont527.us unwind label %lpad526.split.us

invoke.cont527.us:                                ; preds = %for.body519.us
  %__x.028.i.i.i601.us = load %"struct.std::_Rb_tree_node.48"*, %"struct.std::_Rb_tree_node.48"** %164, align 8, !tbaa !94
  %cmp.not29.i.i.i602.us = icmp eq %"struct.std::_Rb_tree_node.48"* %__x.028.i.i.i601.us, null
  br i1 %cmp.not29.i.i.i602.us, label %if.then.i.i.i617.us, label %while.body.i.i.i612.us

while.body.i.i.i612.us:                           ; preds = %invoke.cont527.us, %while.body.i.i.i612.us
  %__x.030.i.i.i603.us = phi %"struct.std::_Rb_tree_node.48"* [ %__x.0.i.i.i610.us, %while.body.i.i.i612.us ], [ %__x.028.i.i.i601.us, %invoke.cont527.us ]
  %_M_storage.i.i.i.i.i.i604.us = getelementptr inbounds %"struct.std::_Rb_tree_node.48", %"struct.std::_Rb_tree_node.48"* %__x.030.i.i.i603.us, i64 0, i32 1
  %168 = bitcast %"struct.__gnu_cxx::__aligned_membuf.49"* %_M_storage.i.i.i.i.i.i604.us to i32*
  %169 = load i32, i32* %168, align 4, !tbaa !16
  %cmp.i.i.i.i605.us = icmp slt i32 %call.i596.us, %169
  %_M_left.i.i.i.i606.us = getelementptr inbounds %"struct.std::_Rb_tree_node.48", %"struct.std::_Rb_tree_node.48"* %__x.030.i.i.i603.us, i64 0, i32 0, i32 2
  %_M_right.i.i.i.i607.us = getelementptr inbounds %"struct.std::_Rb_tree_node.48", %"struct.std::_Rb_tree_node.48"* %__x.030.i.i.i603.us, i64 0, i32 0, i32 3
  %cond.in.in.i.i.i608.us = select i1 %cmp.i.i.i.i605.us, %"struct.std::_Rb_tree_node_base"** %_M_left.i.i.i.i606.us, %"struct.std::_Rb_tree_node_base"** %_M_right.i.i.i.i607.us
  %cond.in.i.i.i609.us = bitcast %"struct.std::_Rb_tree_node_base"** %cond.in.in.i.i.i608.us to %"struct.std::_Rb_tree_node.48"**
  %__x.0.i.i.i610.us = load %"struct.std::_Rb_tree_node.48"*, %"struct.std::_Rb_tree_node.48"** %cond.in.i.i.i609.us, align 8, !tbaa !94
  %cmp.not.i.i.i611.us = icmp eq %"struct.std::_Rb_tree_node.48"* %__x.0.i.i.i610.us, null
  br i1 %cmp.not.i.i.i611.us, label %while.end.i.i.i613.us, label %while.body.i.i.i612.us, !llvm.loop !95

while.end.i.i.i613.us:                            ; preds = %while.body.i.i.i612.us
  %170 = getelementptr %"struct.std::_Rb_tree_node.48", %"struct.std::_Rb_tree_node.48"* %__x.030.i.i.i603.us, i64 0, i32 0
  br i1 %cmp.i.i.i.i605.us, label %if.then.i.i.i617.us, label %if.end12.i.i.i623.us

if.then.i.i.i617.us:                              ; preds = %while.end.i.i.i613.us, %invoke.cont527.us
  %__y.0.lcssa37.i.i.i614.us = phi %"struct.std::_Rb_tree_node_base"* [ %170, %while.end.i.i.i613.us ], [ %_M_header.i.i.i.i600, %invoke.cont527.us ]
  %171 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %165, align 8, !tbaa !91
  %cmp.i5.i.i.i616.us = icmp eq %"struct.std::_Rb_tree_node_base"* %__y.0.lcssa37.i.i.i614.us, %171
  br i1 %cmp.i5.i.i.i616.us, label %_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE24_M_get_insert_unique_posERKi.exit.i.i626.us, label %if.else.i.i.i619.us

if.else.i.i.i619.us:                              ; preds = %if.then.i.i.i617.us
  %call.i.i.i.i618.us = call noundef %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* noundef %__y.0.lcssa37.i.i.i614.us) #32
  br label %if.end12.i.i.i623.us

if.end12.i.i.i623.us:                             ; preds = %if.else.i.i.i619.us, %while.end.i.i.i613.us
  %__y.0.lcssa36.i.i.i620.us = phi %"struct.std::_Rb_tree_node_base"* [ %__y.0.lcssa37.i.i.i614.us, %if.else.i.i.i619.us ], [ %170, %while.end.i.i.i613.us ]
  %__j.sroa.0.0.i.i.i621.us = phi %"struct.std::_Rb_tree_node_base"* [ %call.i.i.i.i618.us, %if.else.i.i.i619.us ], [ %170, %while.end.i.i.i613.us ]
  %172 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %__j.sroa.0.0.i.i.i621.us, i64 1, i32 0
  %173 = load i32, i32* %172, align 4, !tbaa !16
  %cmp.i7.i.i.i622.us = icmp slt i32 %173, %call.i596.us
  br i1 %cmp.i7.i.i.i622.us, label %_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE24_M_get_insert_unique_posERKi.exit.i.i626.us, label %invoke.cont529.us

_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE24_M_get_insert_unique_posERKi.exit.i.i626.us: ; preds = %if.end12.i.i.i623.us, %if.then.i.i.i617.us
  %retval.sroa.4.0.i.i.i624.us = phi %"struct.std::_Rb_tree_node_base"* [ %__y.0.lcssa37.i.i.i614.us, %if.then.i.i.i617.us ], [ %__y.0.lcssa36.i.i.i620.us, %if.end12.i.i.i623.us ]
  %tobool.not.i.i625.us = icmp eq %"struct.std::_Rb_tree_node_base"* %retval.sroa.4.0.i.i.i624.us, null
  br i1 %tobool.not.i.i625.us, label %invoke.cont529.us, label %if.then.i.i628.us

if.then.i.i628.us:                                ; preds = %_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE24_M_get_insert_unique_posERKi.exit.i.i626.us
  %cmp2.i.i.i627.us = icmp eq %"struct.std::_Rb_tree_node_base"* %retval.sroa.4.0.i.i.i624.us, %_M_header.i.i.i.i600
  br i1 %cmp2.i.i.i627.us, label %_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE10_M_insert_IiNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIiEPSt18_Rb_tree_node_baseSB_OT_RT0_.exit.i.i635.us, label %lor.rhs.i.i.i630.us

lor.rhs.i.i.i630.us:                              ; preds = %if.then.i.i628.us
  %174 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %retval.sroa.4.0.i.i.i624.us, i64 1, i32 0
  %175 = load i32, i32* %174, align 4, !tbaa !16
  %cmp.i.i9.i.i629.us = icmp slt i32 %call.i596.us, %175
  br label %_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE10_M_insert_IiNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIiEPSt18_Rb_tree_node_baseSB_OT_RT0_.exit.i.i635.us

_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE10_M_insert_IiNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIiEPSt18_Rb_tree_node_baseSB_OT_RT0_.exit.i.i635.us: ; preds = %lor.rhs.i.i.i630.us, %if.then.i.i628.us
  %176 = phi i1 [ true, %if.then.i.i628.us ], [ %cmp.i.i9.i.i629.us, %lor.rhs.i.i.i630.us ]
  %call2.i.i.i.i.i.i.i.i641.us = invoke noalias noundef nonnull i8* @_Znwm(i64 noundef 40) #30
          to label %call2.i.i.i.i.i.i.i.i.noexc640.us unwind label %lpad526.split.us

call2.i.i.i.i.i.i.i.i.noexc640.us:                ; preds = %_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE10_M_insert_IiNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIiEPSt18_Rb_tree_node_baseSB_OT_RT0_.exit.i.i635.us
  %_M_storage.i.i.i.i.i.i.i631.us = getelementptr inbounds i8, i8* %call2.i.i.i.i.i.i.i.i641.us, i64 32
  %177 = bitcast i8* %_M_storage.i.i.i.i.i.i.i631.us to i32*
  store i32 %call.i596.us, i32* %177, align 4, !tbaa !16
  %178 = bitcast i8* %call2.i.i.i.i.i.i.i.i641.us to %"struct.std::_Rb_tree_node_base"*
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 noundef zeroext %176, %"struct.std::_Rb_tree_node_base"* noundef nonnull %178, %"struct.std::_Rb_tree_node_base"* noundef nonnull %retval.sroa.4.0.i.i.i624.us, %"struct.std::_Rb_tree_node_base"* noundef nonnull align 8 dereferenceable(32) %_M_header.i.i.i.i600) #8
  %179 = load i64, i64* %5, align 8, !tbaa !93
  %inc.i.i.i633.us = add i64 %179, 1
  store i64 %inc.i.i.i633.us, i64* %5, align 8, !tbaa !93
  br label %invoke.cont529.us

invoke.cont529.us:                                ; preds = %call2.i.i.i.i.i.i.i.i.noexc640.us, %_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE24_M_get_insert_unique_posERKi.exit.i.i626.us, %if.end12.i.i.i623.us
  %inc535.us = add nsw i32 %iy515.0716.us, 1
  %cmp517.us = icmp slt i32 %inc535.us, %maxy480.0
  br i1 %cmp517.us, label %for.body519.us, label %for.cond516.for.cond.cleanup518_crit_edge.us, !llvm.loop !107

for.cond516.for.cond.cleanup518_crit_edge.us:     ; preds = %invoke.cont529.us
  %inc539.us = add nsw i32 %ix510.0719.us, 1
  %cmp512.us = icmp slt i32 %inc539.us, %maxx483.0
  br i1 %cmp512.us, label %for.cond516.preheader.us, label %if.end546, !llvm.loop !108

lpad526.split.us:                                 ; preds = %_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE10_M_insert_IiNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIiEPSt18_Rb_tree_node_baseSB_OT_RT0_.exit.i.i635.us, %for.body519.us
  %180 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup553

if.end546:                                        ; preds = %for.cond516.for.cond.cleanup518_crit_edge.us, %if.then473, %if.end465
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #8
  ret void

ehcleanup553:                                     ; preds = %lpad180.loopexit.split.us, %lpad180.loopexit.split-lp, %lpad107.split.us, %lpad283.split.us, %lpad363.split.us, %lpad445.split.us, %lpad526.split.us, %lpad
  %.pn.pn = phi { i8*, i32 } [ %59, %lpad ], [ %58, %lpad107.split.us ], [ %111, %lpad283.split.us ], [ %134, %lpad363.split.us ], [ %157, %lpad445.split.us ], [ %180, %lpad526.split.us ], [ %lpad.loopexit.us, %lpad180.loopexit.split.us ], [ %lpad.loopexit.split-lp, %lpad180.loopexit.split-lp ]
  %bc_rows_0 = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %this, i64 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #8
  call void @_ZNSt3mapIiiSt4lessIiESaISt4pairIKiiEEED2Ev(%"class.std::map"* noundef nonnull align 8 dereferenceable(48) %map_ids_to_rows) #8
  call void @_ZNSt3setIiSt4lessIiESaIiEED2Ev(%"class.std::set"* noundef nonnull align 8 dereferenceable(48) %bc_rows_1) #8
  call void @_ZNSt3setIiSt4lessIiESaIiEED2Ev(%"class.std::set"* noundef nonnull align 8 dereferenceable(48) %bc_rows_0) #8
  resume { i8*, i32 } %.pn.pn
}

; Function Attrs: uwtable
define linkonce_odr dso_local noundef signext i32 @_ZN6miniFE25generate_matrix_structureINS_9CSRMatrixIdiiEEEEiRKNS_23simple_mesh_descriptionINT_17GlobalOrdinalTypeEEERS4_(%"class.miniFE::simple_mesh_description"* noundef nonnull align 8 dereferenceable(192) %mesh, %"struct.miniFE::CSRMatrix"* noundef nonnull align 8 dereferenceable(132) %A) local_unnamed_addr #11 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %mat_init.i = alloca %struct.MatrixInitOp, align 8
  %global_nodes_x = alloca i32, align 4
  %global_nodes_y = alloca i32, align 4
  %global_nodes_z = alloca i32, align 4
  %box = alloca %struct.Box, align 4
  %global_nrows = alloca i32, align 4
  %osstr = alloca %"class.std::basic_ostringstream", align 8
  %str1 = alloca %"class.std::basic_string", align 8
  %rows = alloca %"class.std::vector.15", align 8
  %row_offsets = alloca %"class.std::vector.15", align 8
  %row_coords = alloca %"class.std::vector.15", align 8
  %y_width = alloca i32, align 4
  %x_width = alloca i32, align 4
  %r_n = alloca i32, align 4
  %xy_width = alloca i32, align 4
  %row_ptr = alloca i32*, align 8
  %row_offset_ptr = alloca i32*, align 8
  %row_coords_ptr = alloca i32*, align 8
  %0 = bitcast i32* %global_nodes_x to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8
  %arrayidx = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %mesh, i64 0, i32 3, i32 0, i64 1
  %1 = load i32, i32* %arrayidx, align 4, !tbaa !16
  %add = add nsw i32 %1, 1
  store i32 %add, i32* %global_nodes_x, align 4, !tbaa !16
  %2 = bitcast i32* %global_nodes_y to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #8
  %arrayidx3 = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %mesh, i64 0, i32 3, i32 0, i64 3
  %3 = load i32, i32* %arrayidx3, align 4, !tbaa !16
  %add4 = add nsw i32 %3, 1
  store i32 %add4, i32* %global_nodes_y, align 4, !tbaa !16
  %4 = bitcast i32* %global_nodes_z to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #8
  %arrayidx7 = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %mesh, i64 0, i32 3, i32 0, i64 5
  %5 = load i32, i32* %arrayidx7, align 4, !tbaa !16
  %add8 = add nsw i32 %5, 1
  store i32 %add8, i32* %global_nodes_z, align 4, !tbaa !16
  %6 = bitcast %struct.Box* %box to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8
  %arrayidx.i.i = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %mesh, i64 0, i32 4, i32 0, i64 0
  %7 = load i32, i32* %arrayidx.i.i, align 8, !tbaa !16
  %arrayidx.i11.i = getelementptr inbounds %struct.Box, %struct.Box* %box, i64 0, i32 0, i64 0
  store i32 %7, i32* %arrayidx.i11.i, align 4, !tbaa !16
  %arrayidx4.i = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %mesh, i64 0, i32 4, i32 0, i64 1
  %8 = load i32, i32* %arrayidx4.i, align 4, !tbaa !16
  %arrayidx6.i = getelementptr inbounds %struct.Box, %struct.Box* %box, i64 0, i32 0, i64 1
  store i32 %8, i32* %arrayidx6.i, align 4, !tbaa !16
  %arrayidx.i.1.i = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %mesh, i64 0, i32 4, i32 0, i64 2
  %9 = load i32, i32* %arrayidx.i.1.i, align 8, !tbaa !16
  %arrayidx.i11.1.i = getelementptr inbounds %struct.Box, %struct.Box* %box, i64 0, i32 0, i64 2
  store i32 %9, i32* %arrayidx.i11.1.i, align 4, !tbaa !16
  %arrayidx4.1.i = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %mesh, i64 0, i32 4, i32 0, i64 3
  %10 = load i32, i32* %arrayidx4.1.i, align 4, !tbaa !16
  %arrayidx6.1.i = getelementptr inbounds %struct.Box, %struct.Box* %box, i64 0, i32 0, i64 3
  store i32 %10, i32* %arrayidx6.1.i, align 4, !tbaa !16
  %arrayidx.i.2.i = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %mesh, i64 0, i32 4, i32 0, i64 4
  %11 = load i32, i32* %arrayidx.i.2.i, align 8, !tbaa !16
  %arrayidx.i11.2.i = getelementptr inbounds %struct.Box, %struct.Box* %box, i64 0, i32 0, i64 4
  store i32 %11, i32* %arrayidx.i11.2.i, align 4, !tbaa !16
  %arrayidx4.2.i = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %mesh, i64 0, i32 4, i32 0, i64 5
  %12 = load i32, i32* %arrayidx4.2.i, align 4, !tbaa !16
  %arrayidx6.2.i = getelementptr inbounds %struct.Box, %struct.Box* %box, i64 0, i32 0, i64 5
  store i32 %12, i32* %arrayidx6.2.i, align 4, !tbaa !16
  %cmp = icmp sgt i32 %8, %7
  %cmp18 = icmp eq i32 %8, %1
  %or.cond = select i1 %cmp, i1 %cmp18, i1 false
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 %add, i32* %arrayidx6.i, align 4, !tbaa !16
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %13 = phi i32 [ %add, %if.then ], [ %8, %entry ]
  %cmp25 = icmp sgt i32 %10, %9
  %cmp32 = icmp eq i32 %10, %3
  %or.cond131 = select i1 %cmp25, i1 %cmp32, i1 false
  br i1 %or.cond131, label %if.then33, label %if.end37

if.then33:                                        ; preds = %if.end
  store i32 %add4, i32* %arrayidx6.1.i, align 4, !tbaa !16
  br label %if.end37

if.end37:                                         ; preds = %if.then33, %if.end
  %14 = phi i32 [ %add4, %if.then33 ], [ %10, %if.end ]
  %cmp42 = icmp sgt i32 %12, %11
  %cmp49 = icmp eq i32 %12, %5
  %or.cond132 = select i1 %cmp42, i1 %cmp49, i1 false
  br i1 %or.cond132, label %if.then50, label %if.end54

if.then50:                                        ; preds = %if.end37
  store i32 %add8, i32* %arrayidx6.2.i, align 4, !tbaa !16
  br label %if.end54

if.end54:                                         ; preds = %if.then50, %if.end37
  %15 = phi i32 [ %add8, %if.then50 ], [ %12, %if.end37 ]
  %16 = bitcast i32* %global_nrows to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #8
  %mul = mul i32 %add4, %add
  %mul55 = mul i32 %mul, %add8
  store i32 %mul55, i32* %global_nrows, align 4, !tbaa !16
  %sub.i = sub nsw i32 %13, %7
  %sub7.i = sub nsw i32 %14, %9
  %sub12.i = sub nsw i32 %15, %11
  %mul.i = mul nsw i32 %sub7.i, %sub.i
  %mul13.i = mul nsw i32 %mul.i, %sub12.i
  invoke void @_ZN6miniFE9CSRMatrixIdiiE13reserve_spaceEjj(%"struct.miniFE::CSRMatrix"* noundef nonnull align 8 dereferenceable(132) %A, i32 noundef zeroext %mul13.i, i32 noundef zeroext 27)
          to label %try.cont unwind label %lpad57

lpad57:                                           ; preds = %if.end54
  %17 = landingpad { i8*, i32 }
          catch i8* bitcast (i8** @_ZTISt9exception to i8*)
          catch i8* null
  %18 = extractvalue { i8*, i32 } %17, 0
  %19 = extractvalue { i8*, i32 } %17, 1
  %20 = tail call i32 @llvm.eh.typeid.for(i8* bitcast (i8** @_ZTISt9exception to i8*)) #8
  %matches = icmp eq i32 %19, %20
  br i1 %matches, label %catch, label %ehcleanup162

catch:                                            ; preds = %lpad57
  %21 = tail call i8* @__cxa_begin_catch(i8* %18) #8
  %exn.byref = bitcast i8* %21 to %"class.std::exception"*
  %22 = bitcast %"class.std::basic_ostringstream"* %osstr to i8*
  call void @llvm.lifetime.start.p0i8(i64 352, i8* nonnull %22) #8
  invoke void @_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEEC1ESt13_Ios_Openmode(%"class.std::basic_ostringstream"* noundef nonnull align 8 dereferenceable(88) %osstr, i32 noundef signext 16)
          to label %invoke.cont60 unwind label %lpad59

invoke.cont60:                                    ; preds = %catch
  %23 = bitcast %"class.std::basic_ostringstream"* %osstr to %"class.std::basic_ostream"*
  %call1.i51 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %23, i8* noundef nonnull getelementptr inbounds ([100 x i8], [100 x i8]* @.str.63, i64 0, i64 0), i64 noundef 99)
          to label %invoke.cont62 unwind label %lpad61

invoke.cont62:                                    ; preds = %invoke.cont60
  %call65 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %23, i32 noundef signext %mul13.i)
          to label %invoke.cont64 unwind label %lpad61

invoke.cont64:                                    ; preds = %invoke.cont62
  %call1.i53 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call65, i8* noundef nonnull getelementptr inbounds ([3 x i8], [3 x i8]* @.str.64, i64 0, i64 0), i64 noundef 2)
          to label %invoke.cont66 unwind label %lpad61

invoke.cont66:                                    ; preds = %invoke.cont64
  %24 = bitcast i8* %21 to i8* (%"class.std::exception"*)***
  %vtable = load i8* (%"class.std::exception"*)**, i8* (%"class.std::exception"*)*** %24, align 8, !tbaa !32
  %vfn = getelementptr inbounds i8* (%"class.std::exception"*)*, i8* (%"class.std::exception"*)** %vtable, i64 2
  %25 = load i8* (%"class.std::exception"*)*, i8* (%"class.std::exception"*)** %vfn, align 8
  %call68 = call noundef i8* %25(%"class.std::exception"* noundef nonnull align 8 dereferenceable(8) %exn.byref) #8
  %call70 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %23, i8* noundef %call68)
          to label %invoke.cont69 unwind label %lpad61

invoke.cont69:                                    ; preds = %invoke.cont66
  %26 = bitcast %"class.std::basic_string"* %str1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #8
  %_M_stringbuf.i = getelementptr inbounds %"class.std::basic_ostringstream", %"class.std::basic_ostringstream"* %osstr, i64 0, i32 1
  invoke void @_ZNKSt15basic_stringbufIcSt11char_traitsIcESaIcEE3strEv(%"class.std::basic_string"* nonnull sret(%"class.std::basic_string") align 8 %str1, %"class.std::basic_stringbuf"* noundef nonnull align 8 dereferenceable(80) %_M_stringbuf.i)
          to label %invoke.cont72 unwind label %lpad71

invoke.cont72:                                    ; preds = %invoke.cont69
  %exception = call i8* @__cxa_allocate_exception(i64 16) #8
  %27 = bitcast i8* %exception to %"class.std::runtime_error"*
  invoke void @_ZNSt13runtime_errorC1ERKSs(%"class.std::runtime_error"* noundef nonnull align 8 dereferenceable(16) %27, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %str1)
          to label %invoke.cont74 unwind label %lpad73

invoke.cont74:                                    ; preds = %invoke.cont72
  invoke void @__cxa_throw(i8* %exception, i8* bitcast (i8** @_ZTISt13runtime_error to i8*), i8* bitcast (void (%"class.std::runtime_error"*)* @_ZNSt13runtime_errorD1Ev to i8*)) #29
          to label %unreachable unwind label %lpad75

lpad59:                                           ; preds = %catch
  %28 = landingpad { i8*, i32 }
          catch i8* null
  br label %ehcleanup78

lpad61:                                           ; preds = %invoke.cont64, %invoke.cont60, %invoke.cont66, %invoke.cont62
  %29 = landingpad { i8*, i32 }
          catch i8* null
  br label %ehcleanup77

lpad71:                                           ; preds = %invoke.cont69
  %30 = landingpad { i8*, i32 }
          catch i8* null
  br label %ehcleanup76

lpad73:                                           ; preds = %invoke.cont72
  %31 = landingpad { i8*, i32 }
          catch i8* null
  call void @__cxa_free_exception(i8* %exception) #8
  br label %ehcleanup

lpad75:                                           ; preds = %invoke.cont74
  %32 = landingpad { i8*, i32 }
          catch i8* null
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad75, %lpad73
  %.pn = phi { i8*, i32 } [ %32, %lpad75 ], [ %31, %lpad73 ]
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %str1) #8
  br label %ehcleanup76

ehcleanup76:                                      ; preds = %ehcleanup, %lpad71
  %.pn.pn = phi { i8*, i32 } [ %.pn, %ehcleanup ], [ %30, %lpad71 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #8
  br label %ehcleanup77

ehcleanup77:                                      ; preds = %ehcleanup76, %lpad61
  %.pn.pn.pn = phi { i8*, i32 } [ %.pn.pn, %ehcleanup76 ], [ %29, %lpad61 ]
  call void @_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev(%"class.std::basic_ostringstream"* noundef nonnull align 8 dereferenceable(88) %osstr) #8
  br label %ehcleanup78

ehcleanup78:                                      ; preds = %ehcleanup77, %lpad59
  %.pn.pn.pn.pn = phi { i8*, i32 } [ %.pn.pn.pn, %ehcleanup77 ], [ %28, %lpad59 ]
  call void @llvm.lifetime.end.p0i8(i64 352, i8* nonnull %22) #8
  invoke void @__cxa_end_catch()
          to label %invoke.cont80 unwind label %terminate.lpad

invoke.cont80:                                    ; preds = %ehcleanup78
  %exn.slot.3 = extractvalue { i8*, i32 } %.pn.pn.pn.pn, 0
  br label %ehcleanup162

try.cont:                                         ; preds = %if.end54
  %33 = bitcast %"class.std::vector.15"* %rows to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #8
  %conv = sext i32 %mul13.i to i64
  %cmp.not.i.i.i.i = icmp eq i32 %mul13.i, 0
  br i1 %cmp.not.i.i.i.i, label %_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_.exit.thread.i, label %cond.true.i.i.i.i

_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_.exit.thread.i: ; preds = %try.cont
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %33, i8 0, i64 24, i1 false)
  br label %for.body.i.i.preheader.i.i.i.i.i64

cond.true.i.i.i.i:                                ; preds = %try.cont
  %cmp.i.i.i.i.i.i = icmp slt i32 %mul13.i, 0
  br i1 %cmp.i.i.i.i.i.i, label %if.then.i.i.i.i.i.i, label %for.body.i.i.preheader.i.i.i.i.i

if.then.i.i.i.i.i.i:                              ; preds = %cond.true.i.i.i.i
  invoke void @_ZSt17__throw_bad_allocv() #29
          to label %.noexc unwind label %lpad82

.noexc:                                           ; preds = %if.then.i.i.i.i.i.i
  unreachable

for.body.i.i.preheader.i.i.i.i.i:                 ; preds = %cond.true.i.i.i.i
  %mul.i.i.i.i.i.i = shl nuw nsw i64 %conv, 2
  %call2.i.i.i.i1.i.i55 = invoke noalias noundef nonnull i8* @_Znwm(i64 noundef %mul.i.i.i.i.i.i) #30
          to label %call2.i.i.i.i1.i.i.noexc unwind label %lpad82

call2.i.i.i.i1.i.i.noexc:                         ; preds = %for.body.i.i.preheader.i.i.i.i.i
  %34 = bitcast i8* %call2.i.i.i.i1.i.i55 to i32*
  %35 = bitcast %"class.std::vector.15"* %rows to i8**
  store i8* %call2.i.i.i.i1.i.i55, i8** %35, align 8, !tbaa !74
  %add.ptr.i.i.i = getelementptr i32, i32* %34, i64 %conv
  %_M_end_of_storage.i.i.i = getelementptr inbounds %"class.std::vector.15", %"class.std::vector.15"* %rows, i64 0, i32 0, i32 0, i32 2
  store i32* %add.ptr.i.i.i, i32** %_M_end_of_storage.i.i.i, align 8, !tbaa !109
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %call2.i.i.i.i1.i.i55, i8 0, i64 %mul.i.i.i.i.i.i, i1 false)
  br label %for.body.i.i.preheader.i.i.i.i.i64

for.body.i.i.preheader.i.i.i.i.i64:               ; preds = %call2.i.i.i.i1.i.i.noexc, %_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_.exit.thread.i
  %36 = phi i32* [ %34, %call2.i.i.i.i1.i.i.noexc ], [ null, %_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_.exit.thread.i ]
  %__first.addr.0.lcssa.i.i.i.i.i.i.i = phi i32* [ %add.ptr.i.i.i, %call2.i.i.i.i1.i.i.noexc ], [ null, %_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_.exit.thread.i ]
  %_M_finish.i.i = getelementptr inbounds %"class.std::vector.15", %"class.std::vector.15"* %rows, i64 0, i32 0, i32 0, i32 1
  store i32* %__first.addr.0.lcssa.i.i.i.i.i.i.i, i32** %_M_finish.i.i, align 8, !tbaa !71
  %37 = bitcast %"class.std::vector.15"* %row_offsets to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #8
  %add86 = add nuw nsw i32 %mul13.i, 1
  %conv87136 = zext i32 %add86 to i64
  %mul.i.i.i.i.i.i61 = shl nuw nsw i64 %conv87136, 2
  %call2.i.i.i.i1.i.i69 = invoke noalias noundef nonnull i8* @_Znwm(i64 noundef %mul.i.i.i.i.i.i61) #30
          to label %invoke.cont90 unwind label %lpad89

invoke.cont90:                                    ; preds = %for.body.i.i.preheader.i.i.i.i.i64
  %38 = bitcast i8* %call2.i.i.i.i1.i.i69 to i32*
  %39 = bitcast %"class.std::vector.15"* %row_offsets to i8**
  store i8* %call2.i.i.i.i1.i.i69, i8** %39, align 8, !tbaa !74
  %add.ptr.i.i.i62 = getelementptr i32, i32* %38, i64 %conv87136
  %_M_end_of_storage.i.i.i63 = getelementptr inbounds %"class.std::vector.15", %"class.std::vector.15"* %row_offsets, i64 0, i32 0, i32 0, i32 2
  store i32* %add.ptr.i.i.i62, i32** %_M_end_of_storage.i.i.i63, align 8, !tbaa !109
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %call2.i.i.i.i1.i.i69, i8 0, i64 %mul.i.i.i.i.i.i61, i1 false)
  %_M_finish.i.i66 = getelementptr inbounds %"class.std::vector.15", %"class.std::vector.15"* %row_offsets, i64 0, i32 0, i32 0, i32 1
  store i32* %add.ptr.i.i.i62, i32** %_M_finish.i.i66, align 8, !tbaa !71
  %40 = bitcast %"class.std::vector.15"* %row_coords to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #8
  %mul93 = mul nsw i32 %mul13.i, 3
  %conv94 = sext i32 %mul93 to i64
  br i1 %cmp.not.i.i.i.i, label %_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_.exit.thread.i72, label %for.body.i.i.preheader.i.i.i.i.i79

_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_.exit.thread.i72: ; preds = %invoke.cont90
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %40, i8 0, i64 24, i1 false)
  br label %invoke.cont97

for.body.i.i.preheader.i.i.i.i.i79:               ; preds = %invoke.cont90
  %mul.i.i.i.i.i.i76 = shl nuw nsw i64 %conv94, 2
  %call2.i.i.i.i1.i.i84 = invoke noalias noundef nonnull i8* @_Znwm(i64 noundef %mul.i.i.i.i.i.i76) #30
          to label %call2.i.i.i.i1.i.i.noexc83 unwind label %lpad96

call2.i.i.i.i1.i.i.noexc83:                       ; preds = %for.body.i.i.preheader.i.i.i.i.i79
  %41 = bitcast i8* %call2.i.i.i.i1.i.i84 to i32*
  %42 = bitcast %"class.std::vector.15"* %row_coords to i8**
  store i8* %call2.i.i.i.i1.i.i84, i8** %42, align 8, !tbaa !74
  %add.ptr.i.i.i77 = getelementptr i32, i32* %41, i64 %conv94
  %_M_end_of_storage.i.i.i78 = getelementptr inbounds %"class.std::vector.15", %"class.std::vector.15"* %row_coords, i64 0, i32 0, i32 0, i32 2
  store i32* %add.ptr.i.i.i77, i32** %_M_end_of_storage.i.i.i78, align 8, !tbaa !109
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %call2.i.i.i.i1.i.i84, i8 0, i64 %mul.i.i.i.i.i.i76, i1 false)
  br label %invoke.cont97

invoke.cont97:                                    ; preds = %call2.i.i.i.i1.i.i.noexc83, %_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_.exit.thread.i72
  %43 = phi i32* [ %41, %call2.i.i.i.i1.i.i.noexc83 ], [ null, %_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_.exit.thread.i72 ]
  %__first.addr.0.lcssa.i.i.i.i.i.i.i80 = phi i32* [ %add.ptr.i.i.i77, %call2.i.i.i.i1.i.i.noexc83 ], [ null, %_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_.exit.thread.i72 ]
  %_M_finish.i.i81 = getelementptr inbounds %"class.std::vector.15", %"class.std::vector.15"* %row_coords, i64 0, i32 0, i32 0, i32 1
  store i32* %__first.addr.0.lcssa.i.i.i.i.i.i.i80, i32** %_M_finish.i.i81, align 8, !tbaa !71
  %44 = bitcast i32* %y_width to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %44) #8
  %45 = load i32, i32* %arrayidx6.1.i, align 4, !tbaa !16
  %46 = load i32, i32* %arrayidx.i11.1.i, align 4, !tbaa !16
  %sub108 = sub nsw i32 %45, %46
  store i32 %sub108, i32* %y_width, align 4, !tbaa !16
  %47 = bitcast i32* %x_width to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %47) #8
  %48 = load i32, i32* %arrayidx6.i, align 4, !tbaa !16
  %49 = load i32, i32* %arrayidx.i11.i, align 4, !tbaa !16
  %sub113 = sub nsw i32 %48, %49
  store i32 %sub113, i32* %x_width, align 4, !tbaa !16
  %50 = bitcast i32* %r_n to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %50) #8
  %51 = load i32, i32* %arrayidx6.2.i, align 4, !tbaa !16
  %52 = load i32, i32* %arrayidx.i11.2.i, align 4, !tbaa !16
  %sub118 = sub nsw i32 %51, %52
  %mul124 = mul i32 %sub113, %sub108
  %mul130 = mul i32 %mul124, %sub118
  store i32 %mul130, i32* %r_n, align 4, !tbaa !16
  %53 = bitcast i32* %xy_width to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %53) #8
  store i32 %mul124, i32* %xy_width, align 4, !tbaa !16
  %54 = bitcast i32** %row_ptr to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #8
  %_M_start.i = getelementptr inbounds %"class.std::vector.15", %"class.std::vector.15"* %rows, i64 0, i32 0, i32 0, i32 0
  store i32* %36, i32** %row_ptr, align 8, !tbaa !94
  %55 = bitcast i32** %row_offset_ptr to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #8
  %_M_start.i98 = getelementptr inbounds %"class.std::vector.15", %"class.std::vector.15"* %row_offsets, i64 0, i32 0, i32 0, i32 0
  %56 = bitcast i32** %row_offset_ptr to i8**
  store i8* %call2.i.i.i.i1.i.i69, i8** %56, align 8, !tbaa !94
  %57 = bitcast i32** %row_coords_ptr to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #8
  %_M_start.i99 = getelementptr inbounds %"class.std::vector.15", %"class.std::vector.15"* %row_coords, i64 0, i32 0, i32 0, i32 0
  store i32* %43, i32** %row_coords_ptr, align 8, !tbaa !94
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull @3, i32 13, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i32*, i32*, %struct.Box*, i32*, i32*, i32*, i32*, i32*, i32**, %"class.miniFE::simple_mesh_description"*, i32**, i32*, i32**)* @.omp_outlined..65 to void (i32*, i32*, ...)*), i32* nonnull %r_n, i32* nonnull %xy_width, %struct.Box* nonnull %box, i32* nonnull %x_width, i32* nonnull %y_width, i32* nonnull %global_nodes_x, i32* nonnull %global_nodes_y, i32* nonnull %global_nodes_z, i32** nonnull %row_ptr, %"class.miniFE::simple_mesh_description"* nonnull %mesh, i32** nonnull %row_coords_ptr, i32* nonnull %global_nrows, i32** nonnull %row_offset_ptr)
  %sub.ptr.lhs.cast.i = ptrtoint i32* %add.ptr.i.i.i62 to i64
  %sub.ptr.rhs.cast.i = ptrtoint i8* %call2.i.i.i.i1.i.i69 to i64
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %58 = lshr exact i64 %sub.ptr.sub.i, 2
  %59 = trunc i64 %58 to i32
  %conv137 = add i32 %59, -1
  %60 = load i32*, i32** %row_offset_ptr, align 8
  %cmp138133 = icmp sgt i32 %conv137, 0
  br i1 %cmp138133, label %for.body.preheader, label %for.cond.cleanup

for.body.preheader:                               ; preds = %invoke.cont97
  %wide.trip.count = zext i32 %conv137 to i64
  %.pre = load i32, i32* %60, align 4, !tbaa !16
  %61 = add nsw i64 %wide.trip.count, -1
  %xtraiter = and i64 %wide.trip.count, 7
  %62 = icmp ult i64 %61, 7
  br i1 %62, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.body.preheader.new

for.body.preheader.new:                           ; preds = %for.body.preheader
  %unroll_iter = and i64 %wide.trip.count, 4294967288
  br label %for.body

for.cond.cleanup.loopexit.unr-lcssa:              ; preds = %for.body, %for.body.preheader
  %.unr = phi i32 [ %.pre, %for.body.preheader ], [ %add143.7, %for.body ]
  %indvars.iv.unr = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next.7, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.cond.cleanup, label %for.body.epil

for.body.epil:                                    ; preds = %for.cond.cleanup.loopexit.unr-lcssa, %for.body.epil
  %63 = phi i32 [ %add143.epil, %for.body.epil ], [ %.unr, %for.cond.cleanup.loopexit.unr-lcssa ]
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.cond.cleanup.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.cond.cleanup.loopexit.unr-lcssa ]
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1
  %arrayidx142.epil = getelementptr inbounds i32, i32* %60, i64 %indvars.iv.next.epil
  %64 = load i32, i32* %arrayidx142.epil, align 4, !tbaa !16
  %add143.epil = add nsw i32 %64, %63
  store i32 %add143.epil, i32* %arrayidx142.epil, align 4, !tbaa !16
  %epil.iter.next = add i64 %epil.iter, 1
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter
  br i1 %epil.iter.cmp.not, label %for.cond.cleanup, label %for.body.epil, !llvm.loop !110

for.cond.cleanup:                                 ; preds = %for.cond.cleanup.loopexit.unr-lcssa, %for.body.epil, %invoke.cont97
  %65 = load i32, i32* %global_nodes_x, align 4, !tbaa !16
  %66 = load i32, i32* %global_nodes_y, align 4, !tbaa !16
  %67 = load i32, i32* %global_nodes_z, align 4, !tbaa !16
  %68 = load i32, i32* %global_nrows, align 4, !tbaa !16
  %69 = bitcast %struct.MatrixInitOp* %mat_init.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %69) #8
  invoke void @_ZN12MatrixInitOpIN6miniFE9CSRMatrixIdiiEEEC2ERKSt6vectorIiSaIiEES8_S8_iiiiRKNS0_23simple_mesh_descriptionIiEERS2_(%struct.MatrixInitOp* noundef nonnull align 8 dereferenceable(88) %mat_init.i, %"class.std::vector.15"* noundef nonnull align 8 dereferenceable(24) %rows, %"class.std::vector.15"* noundef nonnull align 8 dereferenceable(24) %row_offsets, %"class.std::vector.15"* noundef nonnull align 8 dereferenceable(24) %row_coords, i32 noundef signext %65, i32 noundef signext %66, i32 noundef signext %67, i32 noundef signext %68, %"class.miniFE::simple_mesh_description"* noundef nonnull align 8 dereferenceable(192) %mesh, %"struct.miniFE::CSRMatrix"* noundef nonnull align 8 dereferenceable(132) %A)
          to label %.noexc101 unwind label %lpad145.loopexit.split-lp

.noexc101:                                        ; preds = %for.cond.cleanup
  %n.i = getelementptr inbounds %struct.MatrixInitOp, %struct.MatrixInitOp* %mat_init.i, i64 0, i32 11
  %70 = load i32, i32* %n.i, align 8, !tbaa !112
  %cmp4.i = icmp sgt i32 %70, 0
  br i1 %cmp4.i, label %for.body.i, label %invoke.cont146

for.body.i:                                       ; preds = %.noexc101, %.noexc102
  %i.05.i = phi i32 [ %inc.i, %.noexc102 ], [ 0, %.noexc101 ]
  invoke void @_ZN12MatrixInitOpIN6miniFE9CSRMatrixIdiiEEEclEi(%struct.MatrixInitOp* noundef nonnull align 8 dereferenceable(88) %mat_init.i, i32 noundef signext %i.05.i)
          to label %.noexc102 unwind label %lpad145.loopexit

.noexc102:                                        ; preds = %for.body.i
  %inc.i = add nuw nsw i32 %i.05.i, 1
  %71 = load i32, i32* %n.i, align 8, !tbaa !112
  %cmp.i = icmp slt i32 %inc.i, %71
  br i1 %cmp.i, label %for.body.i, label %invoke.cont146, !llvm.loop !114

lpad82:                                           ; preds = %for.body.i.i.preheader.i.i.i.i.i, %if.then.i.i.i.i.i.i
  %72 = landingpad { i8*, i32 }
          catch i8* null
  br label %ehcleanup161

lpad89:                                           ; preds = %for.body.i.i.preheader.i.i.i.i.i64
  %73 = landingpad { i8*, i32 }
          catch i8* null
  br label %ehcleanup159

lpad96:                                           ; preds = %for.body.i.i.preheader.i.i.i.i.i79
  %74 = landingpad { i8*, i32 }
          catch i8* null
  br label %ehcleanup157

for.body:                                         ; preds = %for.body, %for.body.preheader.new
  %75 = phi i32 [ %.pre, %for.body.preheader.new ], [ %add143.7, %for.body ]
  %indvars.iv = phi i64 [ 0, %for.body.preheader.new ], [ %indvars.iv.next.7, %for.body ]
  %niter = phi i64 [ 0, %for.body.preheader.new ], [ %niter.next.7, %for.body ]
  %indvars.iv.next = or i64 %indvars.iv, 1
  %arrayidx142 = getelementptr inbounds i32, i32* %60, i64 %indvars.iv.next
  %76 = load i32, i32* %arrayidx142, align 4, !tbaa !16
  %add143 = add nsw i32 %76, %75
  store i32 %add143, i32* %arrayidx142, align 4, !tbaa !16
  %indvars.iv.next.1 = or i64 %indvars.iv, 2
  %arrayidx142.1 = getelementptr inbounds i32, i32* %60, i64 %indvars.iv.next.1
  %77 = load i32, i32* %arrayidx142.1, align 4, !tbaa !16
  %add143.1 = add nsw i32 %77, %add143
  store i32 %add143.1, i32* %arrayidx142.1, align 4, !tbaa !16
  %indvars.iv.next.2 = or i64 %indvars.iv, 3
  %arrayidx142.2 = getelementptr inbounds i32, i32* %60, i64 %indvars.iv.next.2
  %78 = load i32, i32* %arrayidx142.2, align 4, !tbaa !16
  %add143.2 = add nsw i32 %78, %add143.1
  store i32 %add143.2, i32* %arrayidx142.2, align 4, !tbaa !16
  %indvars.iv.next.3 = or i64 %indvars.iv, 4
  %arrayidx142.3 = getelementptr inbounds i32, i32* %60, i64 %indvars.iv.next.3
  %79 = load i32, i32* %arrayidx142.3, align 4, !tbaa !16
  %add143.3 = add nsw i32 %79, %add143.2
  store i32 %add143.3, i32* %arrayidx142.3, align 4, !tbaa !16
  %indvars.iv.next.4 = or i64 %indvars.iv, 5
  %arrayidx142.4 = getelementptr inbounds i32, i32* %60, i64 %indvars.iv.next.4
  %80 = load i32, i32* %arrayidx142.4, align 4, !tbaa !16
  %add143.4 = add nsw i32 %80, %add143.3
  store i32 %add143.4, i32* %arrayidx142.4, align 4, !tbaa !16
  %indvars.iv.next.5 = or i64 %indvars.iv, 6
  %arrayidx142.5 = getelementptr inbounds i32, i32* %60, i64 %indvars.iv.next.5
  %81 = load i32, i32* %arrayidx142.5, align 4, !tbaa !16
  %add143.5 = add nsw i32 %81, %add143.4
  store i32 %add143.5, i32* %arrayidx142.5, align 4, !tbaa !16
  %indvars.iv.next.6 = or i64 %indvars.iv, 7
  %arrayidx142.6 = getelementptr inbounds i32, i32* %60, i64 %indvars.iv.next.6
  %82 = load i32, i32* %arrayidx142.6, align 4, !tbaa !16
  %add143.6 = add nsw i32 %82, %add143.5
  store i32 %add143.6, i32* %arrayidx142.6, align 4, !tbaa !16
  %indvars.iv.next.7 = add nuw nsw i64 %indvars.iv, 8
  %arrayidx142.7 = getelementptr inbounds i32, i32* %60, i64 %indvars.iv.next.7
  %83 = load i32, i32* %arrayidx142.7, align 4, !tbaa !16
  %add143.7 = add nsw i32 %83, %add143.6
  store i32 %add143.7, i32* %arrayidx142.7, align 4, !tbaa !16
  %niter.next.7 = add i64 %niter, 8
  %niter.ncmp.7 = icmp eq i64 %niter.next.7, %unroll_iter
  br i1 %niter.ncmp.7, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.body, !llvm.loop !115

invoke.cont146:                                   ; preds = %.noexc102, %.noexc101
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %69) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %53) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %50) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %47) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %44) #8
  %84 = load i32*, i32** %_M_start.i99, align 8, !tbaa !74
  %tobool.not.i.i.i = icmp eq i32* %84, null
  br i1 %tobool.not.i.i.i, label %_ZNSt6vectorIiSaIiEED2Ev.exit, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %invoke.cont146
  %85 = bitcast i32* %84 to i8*
  call void @_ZdlPv(i8* noundef nonnull %85) #8
  br label %_ZNSt6vectorIiSaIiEED2Ev.exit

_ZNSt6vectorIiSaIiEED2Ev.exit:                    ; preds = %invoke.cont146, %if.then.i.i.i
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #8
  %86 = load i32*, i32** %_M_start.i98, align 8, !tbaa !74
  %tobool.not.i.i.i104 = icmp eq i32* %86, null
  br i1 %tobool.not.i.i.i104, label %_ZNSt6vectorIiSaIiEED2Ev.exit106, label %if.then.i.i.i105

if.then.i.i.i105:                                 ; preds = %_ZNSt6vectorIiSaIiEED2Ev.exit
  %87 = bitcast i32* %86 to i8*
  call void @_ZdlPv(i8* noundef nonnull %87) #8
  br label %_ZNSt6vectorIiSaIiEED2Ev.exit106

_ZNSt6vectorIiSaIiEED2Ev.exit106:                 ; preds = %_ZNSt6vectorIiSaIiEED2Ev.exit, %if.then.i.i.i105
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #8
  %88 = load i32*, i32** %_M_start.i, align 8, !tbaa !74
  %tobool.not.i.i.i108 = icmp eq i32* %88, null
  br i1 %tobool.not.i.i.i108, label %97, label %if.then.i.i.i109

if.then.i.i.i109:                                 ; preds = %_ZNSt6vectorIiSaIiEED2Ev.exit106
  %89 = bitcast i32* %88 to i8*
  call void @_ZdlPv(i8* noundef nonnull %89) #8
  br label %97

lpad145.loopexit:                                 ; preds = %for.body.i
  %lpad.loopexit = landingpad { i8*, i32 }
          catch i8* null
  br label %lpad145

lpad145.loopexit.split-lp:                        ; preds = %for.cond.cleanup
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          catch i8* null
  br label %lpad145

lpad145:                                          ; preds = %lpad145.loopexit.split-lp, %lpad145.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %lpad145.loopexit ], [ %lpad.loopexit.split-lp, %lpad145.loopexit.split-lp ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %53) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %50) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %47) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %44) #8
  %90 = load i32*, i32** %_M_start.i99, align 8, !tbaa !74
  %tobool.not.i.i.i112 = icmp eq i32* %90, null
  br i1 %tobool.not.i.i.i112, label %ehcleanup157, label %if.then.i.i.i113

if.then.i.i.i113:                                 ; preds = %lpad145
  %91 = bitcast i32* %90 to i8*
  call void @_ZdlPv(i8* noundef nonnull %91) #8
  br label %ehcleanup157

ehcleanup157:                                     ; preds = %if.then.i.i.i113, %lpad145, %lpad96
  %.pn30 = phi { i8*, i32 } [ %74, %lpad96 ], [ %lpad.phi, %lpad145 ], [ %lpad.phi, %if.then.i.i.i113 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #8
  %_M_start.i.i115 = getelementptr inbounds %"class.std::vector.15", %"class.std::vector.15"* %row_offsets, i64 0, i32 0, i32 0, i32 0
  %92 = load i32*, i32** %_M_start.i.i115, align 8, !tbaa !74
  %tobool.not.i.i.i116 = icmp eq i32* %92, null
  br i1 %tobool.not.i.i.i116, label %ehcleanup159, label %if.then.i.i.i117

if.then.i.i.i117:                                 ; preds = %ehcleanup157
  %93 = bitcast i32* %92 to i8*
  call void @_ZdlPv(i8* noundef nonnull %93) #8
  br label %ehcleanup159

ehcleanup159:                                     ; preds = %if.then.i.i.i117, %ehcleanup157, %lpad89
  %.pn30.pn = phi { i8*, i32 } [ %73, %lpad89 ], [ %.pn30, %ehcleanup157 ], [ %.pn30, %if.then.i.i.i117 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #8
  %_M_start.i.i119 = getelementptr inbounds %"class.std::vector.15", %"class.std::vector.15"* %rows, i64 0, i32 0, i32 0, i32 0
  %94 = load i32*, i32** %_M_start.i.i119, align 8, !tbaa !74
  %tobool.not.i.i.i120 = icmp eq i32* %94, null
  br i1 %tobool.not.i.i.i120, label %ehcleanup161, label %if.then.i.i.i121

if.then.i.i.i121:                                 ; preds = %ehcleanup159
  %95 = bitcast i32* %94 to i8*
  call void @_ZdlPv(i8* noundef nonnull %95) #8
  br label %ehcleanup161

ehcleanup161:                                     ; preds = %if.then.i.i.i121, %ehcleanup159, %lpad82
  %.pn30.pn.pn = phi { i8*, i32 } [ %72, %lpad82 ], [ %.pn30.pn, %ehcleanup159 ], [ %.pn30.pn, %if.then.i.i.i121 ]
  %exn.slot.6 = extractvalue { i8*, i32 } %.pn30.pn.pn, 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #8
  br label %ehcleanup162

ehcleanup162:                                     ; preds = %ehcleanup161, %invoke.cont80, %lpad57
  %exn.slot.7 = phi i8* [ %exn.slot.6, %ehcleanup161 ], [ %exn.slot.3, %invoke.cont80 ], [ %18, %lpad57 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8
  %96 = call i8* @__cxa_begin_catch(i8* %exn.slot.7) #8
  %call1.i124 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i8* noundef nonnull getelementptr inbounds ([6 x i8], [6 x i8]* @.str.66, i64 0, i64 0), i64 noundef 5)
          to label %invoke.cont171 unwind label %lpad170

invoke.cont171:                                   ; preds = %ehcleanup162
  %call174 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i32 noundef signext 0)
          to label %invoke.cont173 unwind label %lpad170

invoke.cont173:                                   ; preds = %invoke.cont171
  %call1.i127 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call174, i8* noundef nonnull getelementptr inbounds ([89 x i8], [89 x i8]* @.str.67, i64 0, i64 0), i64 noundef 88)
          to label %invoke.cont175 unwind label %lpad170

invoke.cont175:                                   ; preds = %invoke.cont173
  %call.i129 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call174)
          to label %try.cont181 unwind label %lpad170

try.cont181:                                      ; preds = %invoke.cont175
  call void @__cxa_end_catch()
  br label %98

97:                                               ; preds = %if.then.i.i.i109, %_ZNSt6vectorIiSaIiEED2Ev.exit106
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8
  br label %98

98:                                               ; preds = %try.cont181, %97
  %99 = phi i32 [ 0, %97 ], [ 1, %try.cont181 ]
  ret i32 %99

lpad170:                                          ; preds = %invoke.cont175, %invoke.cont173, %ehcleanup162, %invoke.cont171
  %100 = landingpad { i8*, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %invoke.cont180 unwind label %terminate.lpad

invoke.cont180:                                   ; preds = %lpad170
  resume { i8*, i32 } %100

terminate.lpad:                                   ; preds = %lpad170, %ehcleanup78
  %101 = landingpad { i8*, i32 }
          catch i8* null
  %102 = extractvalue { i8*, i32 } %101, 0
  call void @__clang_call_terminate(i8* %102) #31
  unreachable

unreachable:                                      ; preds = %invoke.cont74
  unreachable
}

declare noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsS1_(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40), %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8), %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8)) local_unnamed_addr #0

declare noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40), %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8)) local_unnamed_addr #0

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN6miniFE16impose_dirichletINS_9CSRMatrixIdiiEENS_6VectorIdiiEEEEvNT_10ScalarTypeERS5_RT0_iiiRKSt3setINS5_17GlobalOrdinalTypeESt4lessISB_ESaISB_EE(double noundef %prescribed_value, %"struct.miniFE::CSRMatrix"* noundef nonnull align 8 dereferenceable(132) %A, %"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %b, i32 noundef signext %global_nx, i32 noundef signext %global_ny, i32 noundef signext %global_nz, %"class.std::set"* noundef nonnull align 8 dereferenceable(48) %bc_rows) local_unnamed_addr #11 comdat {
entry:
  %prescribed_value.addr = alloca double, align 8
  %ROW_COUNT = alloca i32, align 4
  store double %prescribed_value, double* %prescribed_value.addr, align 8, !tbaa !84
  %_M_finish.i = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 2, i32 0, i32 0, i32 1
  %0 = load i32*, i32** %_M_finish.i, align 8, !tbaa !71
  %_M_start.i = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 2, i32 0, i32 0, i32 0
  %1 = load i32*, i32** %_M_start.i, align 8, !tbaa !74
  %sub.ptr.lhs.cast.i = ptrtoint i32* %0 to i64
  %sub.ptr.rhs.cast.i = ptrtoint i32* %1 to i64
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %cmp.not = icmp eq i64 %sub.ptr.sub.i, 0
  br i1 %cmp.not, label %cond.end12, label %cond.true6

cond.true6:                                       ; preds = %entry
  %sub.ptr.div.i = ashr exact i64 %sub.ptr.sub.i, 2
  %2 = load i32, i32* %1, align 4, !tbaa !16
  %sub = add nsw i64 %sub.ptr.div.i, -1
  %add.ptr.i = getelementptr inbounds i32, i32* %1, i64 %sub
  %3 = load i32, i32* %add.ptr.i, align 4, !tbaa !16
  br label %cond.end12

cond.end12:                                       ; preds = %entry, %cond.true6
  %cond48 = phi i32 [ %2, %cond.true6 ], [ 0, %entry ]
  %cond13 = phi i32 [ %3, %cond.true6 ], [ -1, %entry ]
  %4 = getelementptr inbounds %"class.std::set", %"class.std::set"* %bc_rows, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %_M_left.i.i = getelementptr inbounds i8, i8* %4, i64 24
  %5 = bitcast i8* %_M_left.i.i to %"struct.std::_Rb_tree_node_base"**
  %6 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %5, align 8, !tbaa !91
  %add.ptr.i.i = getelementptr inbounds i8, i8* %4, i64 8
  %coerce.val.ip17 = bitcast i8* %add.ptr.i.i to %"struct.std::_Rb_tree_node_base"*
  %_M_start.i34 = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %b, i64 0, i32 2, i32 0, i32 0, i32 0
  %cmp.i.not49 = icmp eq %"struct.std::_Rb_tree_node_base"* %6, %coerce.val.ip17
  br i1 %cmp.i.not49, label %for.end, label %for.body

for.body:                                         ; preds = %cond.end12, %if.end
  %bc_iter.sroa.0.050 = phi %"struct.std::_Rb_tree_node_base"* [ %call.i, %if.end ], [ %6, %cond.end12 ]
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %bc_iter.sroa.0.050, i64 1, i32 0
  %8 = load i32, i32* %7, align 4, !tbaa !16
  %cmp20.not = icmp slt i32 %8, %cond48
  %cmp21.not = icmp sgt i32 %8, %cond13
  %or.cond = select i1 %cmp20.not, i1 true, i1 %cmp21.not
  br i1 %or.cond, label %if.end, label %if.then

if.then:                                          ; preds = %for.body
  %sub22 = sub nsw i32 %8, %cond48
  %conv = sext i32 %sub22 to i64
  %9 = load double, double* %prescribed_value.addr, align 8, !tbaa !84
  %10 = load double*, double** %_M_start.i34, align 8, !tbaa !78
  %add.ptr.i35 = getelementptr inbounds double, double* %10, i64 %conv
  store double %9, double* %add.ptr.i35, align 8, !tbaa !84
  tail call void @_ZN6miniFE30zero_row_and_put_1_on_diagonalINS_9CSRMatrixIdiiEEEEvRT_NS3_17GlobalOrdinalTypeE(%"struct.miniFE::CSRMatrix"* noundef nonnull align 8 dereferenceable(132) %A, i32 noundef signext %8)
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  %call.i = tail call noundef %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* noundef nonnull %bc_iter.sroa.0.050) #32
  %cmp.i.not = icmp eq %"struct.std::_Rb_tree_node_base"* %call.i, %coerce.val.ip17
  br i1 %cmp.i.not, label %for.end.loopexit, label %for.body, !llvm.loop !116

for.end.loopexit:                                 ; preds = %if.end
  %.pre = load i32*, i32** %_M_finish.i, align 8, !tbaa !71
  %.pre51 = load i32*, i32** %_M_start.i, align 8, !tbaa !74
  %.pre52 = ptrtoint i32* %.pre to i64
  %.pre53 = ptrtoint i32* %.pre51 to i64
  %.pre54 = sub i64 %.pre52, %.pre53
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit, %cond.end12
  %sub.ptr.sub.i41.pre-phi = phi i64 [ %.pre54, %for.end.loopexit ], [ %sub.ptr.sub.i, %cond.end12 ]
  %11 = bitcast i32* %ROW_COUNT to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #8
  %12 = lshr exact i64 %sub.ptr.sub.i41.pre-phi, 2
  %conv27 = trunc i64 %12 to i32
  store i32 %conv27, i32* %ROW_COUNT, align 4, !tbaa !16
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull @3, i32 5, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i32*, %"struct.miniFE::CSRMatrix"*, %"class.std::set"*, %"struct.miniFE::Vector"*, double*)* @.omp_outlined..79 to void (i32*, i32*, ...)*), i32* nonnull %ROW_COUNT, %"struct.miniFE::CSRMatrix"* nonnull %A, %"class.std::set"* nonnull %bc_rows, %"struct.miniFE::Vector"* nonnull %b, double* nonnull %prescribed_value.addr)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #8
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local noundef i64 @_ZN6miniFE20compute_matrix_statsINS_9CSRMatrixIdiiEEEEmRKT_iiR8YAML_Doc(%"struct.miniFE::CSRMatrix"* noundef nonnull align 8 dereferenceable(132) %A, i32 noundef signext %myproc, i32 noundef signext %numprocs, %class.YAML_Doc* noundef nonnull align 8 dereferenceable(72) %ydoc) local_unnamed_addr #11 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %ref.tmp.i383 = alloca %"class.std::allocator", align 1
  %ref.tmp.i369 = alloca %"class.std::allocator", align 1
  %ref.tmp.i355 = alloca %"class.std::allocator", align 1
  %ref.tmp.i341 = alloca %"class.std::allocator", align 1
  %ref.tmp.i327 = alloca %"class.std::allocator", align 1
  %ref.tmp.i313 = alloca %"class.std::allocator", align 1
  %ref.tmp.i299 = alloca %"class.std::allocator", align 1
  %ref.tmp.i285 = alloca %"class.std::allocator", align 1
  %ref.tmp.i271 = alloca %"class.std::allocator", align 1
  %ref.tmp.i257 = alloca %"class.std::allocator", align 1
  %ref.tmp.i243 = alloca %"class.std::allocator", align 1
  %ref.tmp.i229 = alloca %"class.std::allocator", align 1
  %ref.tmp.i215 = alloca %"class.std::allocator", align 1
  %ref.tmp.i201 = alloca %"class.std::allocator", align 1
  %ref.tmp.i187 = alloca %"class.std::allocator", align 1
  %ref.tmp.i173 = alloca %"class.std::allocator", align 1
  %ref.tmp.i159 = alloca %"class.std::allocator", align 1
  %ref.tmp.i145 = alloca %"class.std::allocator", align 1
  %ref.tmp.i131 = alloca %"class.std::allocator", align 1
  %ref.tmp.i117 = alloca %"class.std::allocator", align 1
  %ref.tmp.i103 = alloca %"class.std::allocator", align 1
  %ref.tmp.i = alloca %"class.std::allocator", align 1
  %ref.tmp = alloca %"class.std::basic_string", align 8
  %ref.tmp12 = alloca %"class.std::allocator", align 1
  %ref.tmp13 = alloca %"class.std::basic_string", align 8
  %ref.tmp14 = alloca %"class.std::allocator", align 1
  %ref.tmp26 = alloca %"class.std::basic_string", align 8
  %ref.tmp27 = alloca %"class.std::allocator", align 1
  %ref.tmp33 = alloca %"class.std::basic_string", align 8
  %ref.tmp34 = alloca %"class.std::allocator", align 1
  %ref.tmp48 = alloca %"class.std::basic_string", align 8
  %ref.tmp49 = alloca %"class.std::allocator", align 1
  %ref.tmp55 = alloca %"class.std::basic_string", align 8
  %ref.tmp56 = alloca %"class.std::allocator", align 1
  %ref.tmp83 = alloca %"class.std::basic_string", align 8
  %ref.tmp84 = alloca %"class.std::allocator", align 1
  %ref.tmp90 = alloca %"class.std::basic_string", align 8
  %ref.tmp91 = alloca %"class.std::allocator", align 1
  %ref.tmp105 = alloca %"class.std::basic_string", align 8
  %ref.tmp106 = alloca %"class.std::allocator", align 1
  %ref.tmp112 = alloca %"class.std::basic_string", align 8
  %ref.tmp113 = alloca %"class.std::allocator", align 1
  %ref.tmp129 = alloca %"class.std::basic_string", align 8
  %ref.tmp130 = alloca %"class.std::allocator", align 1
  %ref.tmp136 = alloca %"class.std::basic_string", align 8
  %ref.tmp137 = alloca %"class.std::allocator", align 1
  %ref.tmp151 = alloca %"class.std::basic_string", align 8
  %ref.tmp152 = alloca %"class.std::allocator", align 1
  %ref.tmp158 = alloca %"class.std::basic_string", align 8
  %ref.tmp159 = alloca %"class.std::allocator", align 1
  %ref.tmp173 = alloca %"class.std::basic_string", align 8
  %ref.tmp174 = alloca %"class.std::allocator", align 1
  %ref.tmp180 = alloca %"class.std::basic_string", align 8
  %ref.tmp181 = alloca %"class.std::allocator", align 1
  %ref.tmp195 = alloca %"class.std::basic_string", align 8
  %ref.tmp196 = alloca %"class.std::allocator", align 1
  %ref.tmp202 = alloca %"class.std::basic_string", align 8
  %ref.tmp203 = alloca %"class.std::allocator", align 1
  %ref.tmp217 = alloca %"class.std::basic_string", align 8
  %ref.tmp218 = alloca %"class.std::allocator", align 1
  %ref.tmp224 = alloca %"class.std::basic_string", align 8
  %ref.tmp225 = alloca %"class.std::allocator", align 1
  %ref.tmp239 = alloca %"class.std::basic_string", align 8
  %ref.tmp240 = alloca %"class.std::allocator", align 1
  %ref.tmp246 = alloca %"class.std::basic_string", align 8
  %ref.tmp247 = alloca %"class.std::allocator", align 1
  %_M_finish.i = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 2, i32 0, i32 0, i32 1
  %0 = load i32*, i32** %_M_finish.i, align 8, !tbaa !71
  %_M_start.i = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 2, i32 0, i32 0, i32 0
  %1 = load i32*, i32** %_M_start.i, align 8, !tbaa !74
  %sub.ptr.lhs.cast.i = ptrtoint i32* %0 to i64
  %sub.ptr.rhs.cast.i = ptrtoint i32* %1 to i64
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %2 = lshr exact i64 %sub.ptr.sub.i, 2
  %conv = trunc i64 %2 to i32
  %call2.i.i.i.i1.i.i23.i = tail call noalias noundef nonnull i8* @_Znwm(i64 noundef 4) #30
  %3 = bitcast i8* %call2.i.i.i.i1.i.i23.i to i32*
  store i32 %conv, i32* %3, align 4, !tbaa !16
  %mul.i = mul nsw i32 %conv, 5
  %cmp7.i = icmp sgt i32 %mul.i, %conv
  %spec.select = select i1 %cmp7.i, i32 %conv, i32 %mul.i
  %4 = icmp sgt i32 %conv, 0
  tail call void @_ZdlPv(i8* noundef nonnull %call2.i.i.i.i1.i.i23.i) #8
  %_M_finish.i.i = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 3, i32 0, i32 0, i32 1
  %5 = load i32*, i32** %_M_finish.i.i, align 8, !tbaa !71
  %_M_start.i.i = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 3, i32 0, i32 0, i32 0
  %6 = load i32*, i32** %_M_start.i.i, align 8, !tbaa !74
  %sub.ptr.lhs.cast.i.i = ptrtoint i32* %5 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i32* %6 to i64
  %sub.ptr.sub.i.i = sub i64 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  %sub.ptr.div.i.i = ashr exact i64 %sub.ptr.sub.i.i, 2
  %sub.i = add nsw i64 %sub.ptr.div.i.i, -1
  %add.ptr.i.i = getelementptr inbounds i32, i32* %6, i64 %sub.i
  %7 = load i32, i32* %add.ptr.i.i, align 4, !tbaa !16
  %conv.i = sext i32 %7 to i64
  %conv2 = uitofp i64 %conv.i to double
  %call2.i.i.i.i1.i.i23.i96 = tail call noalias noundef nonnull i8* @_Znwm(i64 noundef 8) #30
  %8 = bitcast i8* %call2.i.i.i.i1.i.i23.i96 to double*
  store double %conv2, double* %8, align 8, !tbaa !84
  %mul.i97 = fmul contract double %conv2, 5.000000e+00
  %cmp7.i99 = fcmp contract ogt double %mul.i97, %conv2
  %dmin_nnz.0 = select i1 %cmp7.i99, double %conv2, double %mul.i97
  tail call void @_ZdlPv(i8* noundef nonnull %call2.i.i.i.i1.i.i23.i96) #8
  %conv3 = sitofp i32 %conv to double
  %conv4 = sitofp i32 %numprocs to double
  %div = fdiv contract double %conv3, %conv4
  %div6 = fdiv contract double %conv2, %conv4
  %conv8 = fptoui double %conv2 to i64
  %9 = tail call contract double @llvm.ceil.f64(double %dmin_nnz.0)
  %conv9 = fptoui double %9 to i64
  %sext = shl i64 %sub.ptr.sub.i, 30
  %conv11 = ashr i64 %sext, 32
  %cmp = icmp eq i32 %myproc, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %10 = getelementptr inbounds %class.YAML_Doc, %class.YAML_Doc* %ydoc, i64 0, i32 0
  %11 = bitcast %"class.std::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #8
  %12 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.80, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp12)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %if.then
  %13 = bitcast %"class.std::basic_string"* %ref.tmp13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #8
  %14 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %14) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp13, i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp14)
          to label %invoke.cont16 unwind label %lpad15

invoke.cont16:                                    ; preds = %invoke.cont
  %call19 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsS1_(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %10, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp13)
          to label %invoke.cont18 unwind label %lpad17

invoke.cont18:                                    ; preds = %invoke.cont16
  %_M_p.i.i.i = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp13, i64 0, i32 0, i32 0
  %15 = load i8*, i8** %_M_p.i.i.i, align 8, !tbaa !43
  %arrayidx.i.i = getelementptr inbounds i8, i8* %15, i64 -24
  %16 = bitcast i8* %arrayidx.i.i to %"struct.std::basic_string<char>::_Rep"*
  %17 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #8
  %cmp.not.i.i = icmp eq i8* %arrayidx.i.i, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i, label %_ZNSsD2Ev.exit, label %if.then.i.i, !prof !47

if.then.i.i:                                      ; preds = %invoke.cont18
  %_M_refcount.i.i = getelementptr inbounds i8, i8* %15, i64 -8
  %18 = bitcast i8* %_M_refcount.i.i to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i, label %if.else.i.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i
  %19 = atomicrmw volatile add i32* %18, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i

if.else.i.i.i:                                    ; preds = %if.then.i.i
  %20 = load i32, i32* %18, align 8, !tbaa !16
  %add.i.i.i.i = add nsw i32 %20, -1
  store i32 %add.i.i.i.i, i32* %18, align 8, !tbaa !16
  br label %invoke.cont.i.i

invoke.cont.i.i:                                  ; preds = %if.else.i.i.i, %if.then.i.i.i
  %retval.0.i.i.i = phi i32 [ %19, %if.then.i.i.i ], [ %20, %if.else.i.i.i ]
  %cmp3.i.i = icmp slt i32 %retval.0.i.i.i, 1
  br i1 %cmp3.i.i, label %if.then4.i.i, label %_ZNSsD2Ev.exit

if.then4.i.i:                                     ; preds = %invoke.cont.i.i
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %16, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i) #8
  br label %_ZNSsD2Ev.exit

_ZNSsD2Ev.exit:                                   ; preds = %invoke.cont18, %invoke.cont.i.i, %if.then4.i.i
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #8
  %_M_p.i.i.i104 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  %21 = load i8*, i8** %_M_p.i.i.i104, align 8, !tbaa !43
  %arrayidx.i.i105 = getelementptr inbounds i8, i8* %21, i64 -24
  %22 = bitcast i8* %arrayidx.i.i105 to %"struct.std::basic_string<char>::_Rep"*
  %23 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i103, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %23) #8
  %cmp.not.i.i106 = icmp eq i8* %arrayidx.i.i105, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i106, label %_ZNSsD2Ev.exit116, label %if.then.i.i108, !prof !47

if.then.i.i108:                                   ; preds = %_ZNSsD2Ev.exit
  %_M_refcount.i.i107 = getelementptr inbounds i8, i8* %21, i64 -8
  %24 = bitcast i8* %_M_refcount.i.i107 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i109, label %if.else.i.i.i111

if.then.i.i.i109:                                 ; preds = %if.then.i.i108
  %25 = atomicrmw volatile add i32* %24, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i114

if.else.i.i.i111:                                 ; preds = %if.then.i.i108
  %26 = load i32, i32* %24, align 8, !tbaa !16
  %add.i.i.i.i110 = add nsw i32 %26, -1
  store i32 %add.i.i.i.i110, i32* %24, align 8, !tbaa !16
  br label %invoke.cont.i.i114

invoke.cont.i.i114:                               ; preds = %if.else.i.i.i111, %if.then.i.i.i109
  %retval.0.i.i.i112 = phi i32 [ %25, %if.then.i.i.i109 ], [ %26, %if.else.i.i.i111 ]
  %cmp3.i.i113 = icmp slt i32 %retval.0.i.i.i112, 1
  br i1 %cmp3.i.i113, label %if.then4.i.i115, label %_ZNSsD2Ev.exit116

if.then4.i.i115:                                  ; preds = %invoke.cont.i.i114
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %22, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i103) #8
  br label %_ZNSsD2Ev.exit116

_ZNSsD2Ev.exit116:                                ; preds = %_ZNSsD2Ev.exit, %invoke.cont.i.i114, %if.then4.i.i115
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %23) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #8
  %27 = bitcast %"class.std::basic_string"* %ref.tmp26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #8
  %28 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp27, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %28) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp26, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.80, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp27)
          to label %invoke.cont29 unwind label %lpad28

invoke.cont29:                                    ; preds = %_ZNSsD2Ev.exit116
  %call32 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %10, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp26)
          to label %invoke.cont31 unwind label %lpad30

invoke.cont31:                                    ; preds = %invoke.cont29
  %29 = bitcast %"class.std::basic_string"* %ref.tmp33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #8
  %30 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp34, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %30) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp33, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.81, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp34)
          to label %invoke.cont36 unwind label %lpad35

invoke.cont36:                                    ; preds = %invoke.cont31
  %call39 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsm(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call32, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp33, i64 noundef %conv11)
          to label %invoke.cont38 unwind label %lpad37

invoke.cont38:                                    ; preds = %invoke.cont36
  %_M_p.i.i.i118 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp33, i64 0, i32 0, i32 0
  %31 = load i8*, i8** %_M_p.i.i.i118, align 8, !tbaa !43
  %arrayidx.i.i119 = getelementptr inbounds i8, i8* %31, i64 -24
  %32 = bitcast i8* %arrayidx.i.i119 to %"struct.std::basic_string<char>::_Rep"*
  %33 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i117, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %33) #8
  %cmp.not.i.i120 = icmp eq i8* %arrayidx.i.i119, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i120, label %_ZNSsD2Ev.exit130, label %if.then.i.i122, !prof !47

if.then.i.i122:                                   ; preds = %invoke.cont38
  %_M_refcount.i.i121 = getelementptr inbounds i8, i8* %31, i64 -8
  %34 = bitcast i8* %_M_refcount.i.i121 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i123, label %if.else.i.i.i125

if.then.i.i.i123:                                 ; preds = %if.then.i.i122
  %35 = atomicrmw volatile add i32* %34, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i128

if.else.i.i.i125:                                 ; preds = %if.then.i.i122
  %36 = load i32, i32* %34, align 8, !tbaa !16
  %add.i.i.i.i124 = add nsw i32 %36, -1
  store i32 %add.i.i.i.i124, i32* %34, align 8, !tbaa !16
  br label %invoke.cont.i.i128

invoke.cont.i.i128:                               ; preds = %if.else.i.i.i125, %if.then.i.i.i123
  %retval.0.i.i.i126 = phi i32 [ %35, %if.then.i.i.i123 ], [ %36, %if.else.i.i.i125 ]
  %cmp3.i.i127 = icmp slt i32 %retval.0.i.i.i126, 1
  br i1 %cmp3.i.i127, label %if.then4.i.i129, label %_ZNSsD2Ev.exit130

if.then4.i.i129:                                  ; preds = %invoke.cont.i.i128
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %32, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i117) #8
  br label %_ZNSsD2Ev.exit130

_ZNSsD2Ev.exit130:                                ; preds = %invoke.cont38, %invoke.cont.i.i128, %if.then4.i.i129
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %33) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %30) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #8
  %_M_p.i.i.i132 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp26, i64 0, i32 0, i32 0
  %37 = load i8*, i8** %_M_p.i.i.i132, align 8, !tbaa !43
  %arrayidx.i.i133 = getelementptr inbounds i8, i8* %37, i64 -24
  %38 = bitcast i8* %arrayidx.i.i133 to %"struct.std::basic_string<char>::_Rep"*
  %39 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i131, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %39) #8
  %cmp.not.i.i134 = icmp eq i8* %arrayidx.i.i133, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i134, label %_ZNSsD2Ev.exit144, label %if.then.i.i136, !prof !47

if.then.i.i136:                                   ; preds = %_ZNSsD2Ev.exit130
  %_M_refcount.i.i135 = getelementptr inbounds i8, i8* %37, i64 -8
  %40 = bitcast i8* %_M_refcount.i.i135 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i137, label %if.else.i.i.i139

if.then.i.i.i137:                                 ; preds = %if.then.i.i136
  %41 = atomicrmw volatile add i32* %40, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i142

if.else.i.i.i139:                                 ; preds = %if.then.i.i136
  %42 = load i32, i32* %40, align 8, !tbaa !16
  %add.i.i.i.i138 = add nsw i32 %42, -1
  store i32 %add.i.i.i.i138, i32* %40, align 8, !tbaa !16
  br label %invoke.cont.i.i142

invoke.cont.i.i142:                               ; preds = %if.else.i.i.i139, %if.then.i.i.i137
  %retval.0.i.i.i140 = phi i32 [ %41, %if.then.i.i.i137 ], [ %42, %if.else.i.i.i139 ]
  %cmp3.i.i141 = icmp slt i32 %retval.0.i.i.i140, 1
  br i1 %cmp3.i.i141, label %if.then4.i.i143, label %_ZNSsD2Ev.exit144

if.then4.i.i143:                                  ; preds = %invoke.cont.i.i142
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %38, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i131) #8
  br label %_ZNSsD2Ev.exit144

_ZNSsD2Ev.exit144:                                ; preds = %_ZNSsD2Ev.exit130, %invoke.cont.i.i142, %if.then4.i.i143
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %39) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %28) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #8
  %43 = bitcast %"class.std::basic_string"* %ref.tmp48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #8
  %44 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp49, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %44) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp48, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.80, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp49)
          to label %invoke.cont51 unwind label %lpad50

invoke.cont51:                                    ; preds = %_ZNSsD2Ev.exit144
  %call54 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %10, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp48)
          to label %invoke.cont53 unwind label %lpad52

invoke.cont53:                                    ; preds = %invoke.cont51
  %45 = bitcast %"class.std::basic_string"* %ref.tmp55 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #8
  %46 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp56, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %46) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp55, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.82, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp56)
          to label %invoke.cont58 unwind label %lpad57

invoke.cont58:                                    ; preds = %invoke.cont53
  %call61 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsm(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call54, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp55, i64 noundef %conv8)
          to label %invoke.cont60 unwind label %lpad59

invoke.cont60:                                    ; preds = %invoke.cont58
  %_M_p.i.i.i146 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp55, i64 0, i32 0, i32 0
  %47 = load i8*, i8** %_M_p.i.i.i146, align 8, !tbaa !43
  %arrayidx.i.i147 = getelementptr inbounds i8, i8* %47, i64 -24
  %48 = bitcast i8* %arrayidx.i.i147 to %"struct.std::basic_string<char>::_Rep"*
  %49 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i145, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %49) #8
  %cmp.not.i.i148 = icmp eq i8* %arrayidx.i.i147, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i148, label %_ZNSsD2Ev.exit158, label %if.then.i.i150, !prof !47

if.then.i.i150:                                   ; preds = %invoke.cont60
  %_M_refcount.i.i149 = getelementptr inbounds i8, i8* %47, i64 -8
  %50 = bitcast i8* %_M_refcount.i.i149 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i151, label %if.else.i.i.i153

if.then.i.i.i151:                                 ; preds = %if.then.i.i150
  %51 = atomicrmw volatile add i32* %50, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i156

if.else.i.i.i153:                                 ; preds = %if.then.i.i150
  %52 = load i32, i32* %50, align 8, !tbaa !16
  %add.i.i.i.i152 = add nsw i32 %52, -1
  store i32 %add.i.i.i.i152, i32* %50, align 8, !tbaa !16
  br label %invoke.cont.i.i156

invoke.cont.i.i156:                               ; preds = %if.else.i.i.i153, %if.then.i.i.i151
  %retval.0.i.i.i154 = phi i32 [ %51, %if.then.i.i.i151 ], [ %52, %if.else.i.i.i153 ]
  %cmp3.i.i155 = icmp slt i32 %retval.0.i.i.i154, 1
  br i1 %cmp3.i.i155, label %if.then4.i.i157, label %_ZNSsD2Ev.exit158

if.then4.i.i157:                                  ; preds = %invoke.cont.i.i156
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %48, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i145) #8
  br label %_ZNSsD2Ev.exit158

_ZNSsD2Ev.exit158:                                ; preds = %invoke.cont60, %invoke.cont.i.i156, %if.then4.i.i157
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %49) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %46) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #8
  %_M_p.i.i.i160 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp48, i64 0, i32 0, i32 0
  %53 = load i8*, i8** %_M_p.i.i.i160, align 8, !tbaa !43
  %arrayidx.i.i161 = getelementptr inbounds i8, i8* %53, i64 -24
  %54 = bitcast i8* %arrayidx.i.i161 to %"struct.std::basic_string<char>::_Rep"*
  %55 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i159, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %55) #8
  %cmp.not.i.i162 = icmp eq i8* %arrayidx.i.i161, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i162, label %_ZNSsD2Ev.exit172, label %if.then.i.i164, !prof !47

if.then.i.i164:                                   ; preds = %_ZNSsD2Ev.exit158
  %_M_refcount.i.i163 = getelementptr inbounds i8, i8* %53, i64 -8
  %56 = bitcast i8* %_M_refcount.i.i163 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i165, label %if.else.i.i.i167

if.then.i.i.i165:                                 ; preds = %if.then.i.i164
  %57 = atomicrmw volatile add i32* %56, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i170

if.else.i.i.i167:                                 ; preds = %if.then.i.i164
  %58 = load i32, i32* %56, align 8, !tbaa !16
  %add.i.i.i.i166 = add nsw i32 %58, -1
  store i32 %add.i.i.i.i166, i32* %56, align 8, !tbaa !16
  br label %invoke.cont.i.i170

invoke.cont.i.i170:                               ; preds = %if.else.i.i.i167, %if.then.i.i.i165
  %retval.0.i.i.i168 = phi i32 [ %57, %if.then.i.i.i165 ], [ %58, %if.else.i.i.i167 ]
  %cmp3.i.i169 = icmp slt i32 %retval.0.i.i.i168, 1
  br i1 %cmp3.i.i169, label %if.then4.i.i171, label %_ZNSsD2Ev.exit172

if.then4.i.i171:                                  ; preds = %invoke.cont.i.i170
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %54, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i159) #8
  br label %_ZNSsD2Ev.exit172

_ZNSsD2Ev.exit172:                                ; preds = %_ZNSsD2Ev.exit158, %invoke.cont.i.i170, %if.then4.i.i171
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %55) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %44) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #8
  %mul = fmul contract double %conv3, 0x3E10000000000000
  %mul71 = fmul contract double %mul, 4.000000e+00
  %add = fadd contract double %mul71, %mul71
  %conv75 = uitofp i64 %conv8 to double
  %mul76 = fmul contract double %conv75, 0x3E10000000000000
  %mul77 = fmul contract double %mul76, 4.000000e+00
  %add78 = fadd contract double %add, %mul77
  %mul81 = fmul contract double %mul76, 8.000000e+00
  %add82 = fadd contract double %mul81, %add78
  %59 = bitcast %"class.std::basic_string"* %ref.tmp83 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #8
  %60 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp84, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %60) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp83, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.80, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp84)
          to label %invoke.cont86 unwind label %lpad85

invoke.cont86:                                    ; preds = %_ZNSsD2Ev.exit172
  %call89 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %10, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp83)
          to label %invoke.cont88 unwind label %lpad87

invoke.cont88:                                    ; preds = %invoke.cont86
  %61 = bitcast %"class.std::basic_string"* %ref.tmp90 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #8
  %62 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp91, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %62) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp90, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.83, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp91)
          to label %invoke.cont93 unwind label %lpad92

invoke.cont93:                                    ; preds = %invoke.cont88
  %call96 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsd(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call89, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp90, double noundef %add82)
          to label %invoke.cont95 unwind label %lpad94

invoke.cont95:                                    ; preds = %invoke.cont93
  %_M_p.i.i.i174 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp90, i64 0, i32 0, i32 0
  %63 = load i8*, i8** %_M_p.i.i.i174, align 8, !tbaa !43
  %arrayidx.i.i175 = getelementptr inbounds i8, i8* %63, i64 -24
  %64 = bitcast i8* %arrayidx.i.i175 to %"struct.std::basic_string<char>::_Rep"*
  %65 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i173, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %65) #8
  %cmp.not.i.i176 = icmp eq i8* %arrayidx.i.i175, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i176, label %_ZNSsD2Ev.exit186, label %if.then.i.i178, !prof !47

if.then.i.i178:                                   ; preds = %invoke.cont95
  %_M_refcount.i.i177 = getelementptr inbounds i8, i8* %63, i64 -8
  %66 = bitcast i8* %_M_refcount.i.i177 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i179, label %if.else.i.i.i181

if.then.i.i.i179:                                 ; preds = %if.then.i.i178
  %67 = atomicrmw volatile add i32* %66, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i184

if.else.i.i.i181:                                 ; preds = %if.then.i.i178
  %68 = load i32, i32* %66, align 8, !tbaa !16
  %add.i.i.i.i180 = add nsw i32 %68, -1
  store i32 %add.i.i.i.i180, i32* %66, align 8, !tbaa !16
  br label %invoke.cont.i.i184

invoke.cont.i.i184:                               ; preds = %if.else.i.i.i181, %if.then.i.i.i179
  %retval.0.i.i.i182 = phi i32 [ %67, %if.then.i.i.i179 ], [ %68, %if.else.i.i.i181 ]
  %cmp3.i.i183 = icmp slt i32 %retval.0.i.i.i182, 1
  br i1 %cmp3.i.i183, label %if.then4.i.i185, label %_ZNSsD2Ev.exit186

if.then4.i.i185:                                  ; preds = %invoke.cont.i.i184
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %64, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i173) #8
  br label %_ZNSsD2Ev.exit186

_ZNSsD2Ev.exit186:                                ; preds = %invoke.cont95, %invoke.cont.i.i184, %if.then4.i.i185
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %65) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %62) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #8
  %_M_p.i.i.i188 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp83, i64 0, i32 0, i32 0
  %69 = load i8*, i8** %_M_p.i.i.i188, align 8, !tbaa !43
  %arrayidx.i.i189 = getelementptr inbounds i8, i8* %69, i64 -24
  %70 = bitcast i8* %arrayidx.i.i189 to %"struct.std::basic_string<char>::_Rep"*
  %71 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i187, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %71) #8
  %cmp.not.i.i190 = icmp eq i8* %arrayidx.i.i189, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i190, label %_ZNSsD2Ev.exit200, label %if.then.i.i192, !prof !47

if.then.i.i192:                                   ; preds = %_ZNSsD2Ev.exit186
  %_M_refcount.i.i191 = getelementptr inbounds i8, i8* %69, i64 -8
  %72 = bitcast i8* %_M_refcount.i.i191 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i193, label %if.else.i.i.i195

if.then.i.i.i193:                                 ; preds = %if.then.i.i192
  %73 = atomicrmw volatile add i32* %72, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i198

if.else.i.i.i195:                                 ; preds = %if.then.i.i192
  %74 = load i32, i32* %72, align 8, !tbaa !16
  %add.i.i.i.i194 = add nsw i32 %74, -1
  store i32 %add.i.i.i.i194, i32* %72, align 8, !tbaa !16
  br label %invoke.cont.i.i198

invoke.cont.i.i198:                               ; preds = %if.else.i.i.i195, %if.then.i.i.i193
  %retval.0.i.i.i196 = phi i32 [ %73, %if.then.i.i.i193 ], [ %74, %if.else.i.i.i195 ]
  %cmp3.i.i197 = icmp slt i32 %retval.0.i.i.i196, 1
  br i1 %cmp3.i.i197, label %if.then4.i.i199, label %_ZNSsD2Ev.exit200

if.then4.i.i199:                                  ; preds = %invoke.cont.i.i198
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %70, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i187) #8
  br label %_ZNSsD2Ev.exit200

_ZNSsD2Ev.exit200:                                ; preds = %_ZNSsD2Ev.exit186, %invoke.cont.i.i198, %if.then4.i.i199
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %71) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %60) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #8
  %75 = bitcast %"class.std::basic_string"* %ref.tmp105 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #8
  %76 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp106, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %76) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp105, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.80, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp106)
          to label %invoke.cont108 unwind label %lpad107

invoke.cont108:                                   ; preds = %_ZNSsD2Ev.exit200
  %call111 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %10, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp105)
          to label %invoke.cont110 unwind label %lpad109

invoke.cont110:                                   ; preds = %invoke.cont108
  %77 = bitcast %"class.std::basic_string"* %ref.tmp112 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #8
  %78 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp113, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %78) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp112, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.84, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp113)
          to label %invoke.cont115 unwind label %lpad114

invoke.cont115:                                   ; preds = %invoke.cont110
  %call118 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsd(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call111, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp112, double noundef 0.000000e+00)
          to label %invoke.cont117 unwind label %lpad116

invoke.cont117:                                   ; preds = %invoke.cont115
  %_M_p.i.i.i202 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp112, i64 0, i32 0, i32 0
  %79 = load i8*, i8** %_M_p.i.i.i202, align 8, !tbaa !43
  %arrayidx.i.i203 = getelementptr inbounds i8, i8* %79, i64 -24
  %80 = bitcast i8* %arrayidx.i.i203 to %"struct.std::basic_string<char>::_Rep"*
  %81 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i201, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %81) #8
  %cmp.not.i.i204 = icmp eq i8* %arrayidx.i.i203, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i204, label %_ZNSsD2Ev.exit214, label %if.then.i.i206, !prof !47

if.then.i.i206:                                   ; preds = %invoke.cont117
  %_M_refcount.i.i205 = getelementptr inbounds i8, i8* %79, i64 -8
  %82 = bitcast i8* %_M_refcount.i.i205 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i207, label %if.else.i.i.i209

if.then.i.i.i207:                                 ; preds = %if.then.i.i206
  %83 = atomicrmw volatile add i32* %82, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i212

if.else.i.i.i209:                                 ; preds = %if.then.i.i206
  %84 = load i32, i32* %82, align 8, !tbaa !16
  %add.i.i.i.i208 = add nsw i32 %84, -1
  store i32 %add.i.i.i.i208, i32* %82, align 8, !tbaa !16
  br label %invoke.cont.i.i212

invoke.cont.i.i212:                               ; preds = %if.else.i.i.i209, %if.then.i.i.i207
  %retval.0.i.i.i210 = phi i32 [ %83, %if.then.i.i.i207 ], [ %84, %if.else.i.i.i209 ]
  %cmp3.i.i211 = icmp slt i32 %retval.0.i.i.i210, 1
  br i1 %cmp3.i.i211, label %if.then4.i.i213, label %_ZNSsD2Ev.exit214

if.then4.i.i213:                                  ; preds = %invoke.cont.i.i212
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %80, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i201) #8
  br label %_ZNSsD2Ev.exit214

_ZNSsD2Ev.exit214:                                ; preds = %invoke.cont117, %invoke.cont.i.i212, %if.then4.i.i213
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %81) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %78) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #8
  %_M_p.i.i.i216 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp105, i64 0, i32 0, i32 0
  %85 = load i8*, i8** %_M_p.i.i.i216, align 8, !tbaa !43
  %arrayidx.i.i217 = getelementptr inbounds i8, i8* %85, i64 -24
  %86 = bitcast i8* %arrayidx.i.i217 to %"struct.std::basic_string<char>::_Rep"*
  %87 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i215, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %87) #8
  %cmp.not.i.i218 = icmp eq i8* %arrayidx.i.i217, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i218, label %_ZNSsD2Ev.exit228, label %if.then.i.i220, !prof !47

if.then.i.i220:                                   ; preds = %_ZNSsD2Ev.exit214
  %_M_refcount.i.i219 = getelementptr inbounds i8, i8* %85, i64 -8
  %88 = bitcast i8* %_M_refcount.i.i219 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i221, label %if.else.i.i.i223

if.then.i.i.i221:                                 ; preds = %if.then.i.i220
  %89 = atomicrmw volatile add i32* %88, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i226

if.else.i.i.i223:                                 ; preds = %if.then.i.i220
  %90 = load i32, i32* %88, align 8, !tbaa !16
  %add.i.i.i.i222 = add nsw i32 %90, -1
  store i32 %add.i.i.i.i222, i32* %88, align 8, !tbaa !16
  br label %invoke.cont.i.i226

invoke.cont.i.i226:                               ; preds = %if.else.i.i.i223, %if.then.i.i.i221
  %retval.0.i.i.i224 = phi i32 [ %89, %if.then.i.i.i221 ], [ %90, %if.else.i.i.i223 ]
  %cmp3.i.i225 = icmp slt i32 %retval.0.i.i.i224, 1
  br i1 %cmp3.i.i225, label %if.then4.i.i227, label %_ZNSsD2Ev.exit228

if.then4.i.i227:                                  ; preds = %invoke.cont.i.i226
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %86, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i215) #8
  br label %_ZNSsD2Ev.exit228

_ZNSsD2Ev.exit228:                                ; preds = %_ZNSsD2Ev.exit214, %invoke.cont.i.i226, %if.then4.i.i227
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %87) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %76) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #8
  %conv127 = sext i32 %spec.select to i64
  %.op = and i64 %2, 4294967295
  %conv128422 = select i1 %4, i64 %.op, i64 0
  %91 = bitcast %"class.std::basic_string"* %ref.tmp129 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91) #8
  %92 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp130, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %92) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp129, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.80, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp130)
          to label %invoke.cont132 unwind label %lpad131

invoke.cont132:                                   ; preds = %_ZNSsD2Ev.exit228
  %call135 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %10, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp129)
          to label %invoke.cont134 unwind label %lpad133

invoke.cont134:                                   ; preds = %invoke.cont132
  %93 = bitcast %"class.std::basic_string"* %ref.tmp136 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #8
  %94 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp137, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %94) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp136, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.85, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp137)
          to label %invoke.cont139 unwind label %lpad138

invoke.cont139:                                   ; preds = %invoke.cont134
  %call142 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsm(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call135, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp136, i64 noundef %conv127)
          to label %invoke.cont141 unwind label %lpad140

invoke.cont141:                                   ; preds = %invoke.cont139
  %_M_p.i.i.i230 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp136, i64 0, i32 0, i32 0
  %95 = load i8*, i8** %_M_p.i.i.i230, align 8, !tbaa !43
  %arrayidx.i.i231 = getelementptr inbounds i8, i8* %95, i64 -24
  %96 = bitcast i8* %arrayidx.i.i231 to %"struct.std::basic_string<char>::_Rep"*
  %97 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i229, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %97) #8
  %cmp.not.i.i232 = icmp eq i8* %arrayidx.i.i231, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i232, label %_ZNSsD2Ev.exit242, label %if.then.i.i234, !prof !47

if.then.i.i234:                                   ; preds = %invoke.cont141
  %_M_refcount.i.i233 = getelementptr inbounds i8, i8* %95, i64 -8
  %98 = bitcast i8* %_M_refcount.i.i233 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i235, label %if.else.i.i.i237

if.then.i.i.i235:                                 ; preds = %if.then.i.i234
  %99 = atomicrmw volatile add i32* %98, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i240

if.else.i.i.i237:                                 ; preds = %if.then.i.i234
  %100 = load i32, i32* %98, align 8, !tbaa !16
  %add.i.i.i.i236 = add nsw i32 %100, -1
  store i32 %add.i.i.i.i236, i32* %98, align 8, !tbaa !16
  br label %invoke.cont.i.i240

invoke.cont.i.i240:                               ; preds = %if.else.i.i.i237, %if.then.i.i.i235
  %retval.0.i.i.i238 = phi i32 [ %99, %if.then.i.i.i235 ], [ %100, %if.else.i.i.i237 ]
  %cmp3.i.i239 = icmp slt i32 %retval.0.i.i.i238, 1
  br i1 %cmp3.i.i239, label %if.then4.i.i241, label %_ZNSsD2Ev.exit242

if.then4.i.i241:                                  ; preds = %invoke.cont.i.i240
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %96, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i229) #8
  br label %_ZNSsD2Ev.exit242

_ZNSsD2Ev.exit242:                                ; preds = %invoke.cont141, %invoke.cont.i.i240, %if.then4.i.i241
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %97) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %94) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93) #8
  %_M_p.i.i.i244 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp129, i64 0, i32 0, i32 0
  %101 = load i8*, i8** %_M_p.i.i.i244, align 8, !tbaa !43
  %arrayidx.i.i245 = getelementptr inbounds i8, i8* %101, i64 -24
  %102 = bitcast i8* %arrayidx.i.i245 to %"struct.std::basic_string<char>::_Rep"*
  %103 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i243, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %103) #8
  %cmp.not.i.i246 = icmp eq i8* %arrayidx.i.i245, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i246, label %_ZNSsD2Ev.exit256, label %if.then.i.i248, !prof !47

if.then.i.i248:                                   ; preds = %_ZNSsD2Ev.exit242
  %_M_refcount.i.i247 = getelementptr inbounds i8, i8* %101, i64 -8
  %104 = bitcast i8* %_M_refcount.i.i247 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i249, label %if.else.i.i.i251

if.then.i.i.i249:                                 ; preds = %if.then.i.i248
  %105 = atomicrmw volatile add i32* %104, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i254

if.else.i.i.i251:                                 ; preds = %if.then.i.i248
  %106 = load i32, i32* %104, align 8, !tbaa !16
  %add.i.i.i.i250 = add nsw i32 %106, -1
  store i32 %add.i.i.i.i250, i32* %104, align 8, !tbaa !16
  br label %invoke.cont.i.i254

invoke.cont.i.i254:                               ; preds = %if.else.i.i.i251, %if.then.i.i.i249
  %retval.0.i.i.i252 = phi i32 [ %105, %if.then.i.i.i249 ], [ %106, %if.else.i.i.i251 ]
  %cmp3.i.i253 = icmp slt i32 %retval.0.i.i.i252, 1
  br i1 %cmp3.i.i253, label %if.then4.i.i255, label %_ZNSsD2Ev.exit256

if.then4.i.i255:                                  ; preds = %invoke.cont.i.i254
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %102, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i243) #8
  br label %_ZNSsD2Ev.exit256

_ZNSsD2Ev.exit256:                                ; preds = %_ZNSsD2Ev.exit242, %invoke.cont.i.i254, %if.then4.i.i255
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %103) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %92) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91) #8
  %107 = bitcast %"class.std::basic_string"* %ref.tmp151 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %107) #8
  %108 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp152, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %108) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp151, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.80, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp152)
          to label %invoke.cont154 unwind label %lpad153

invoke.cont154:                                   ; preds = %_ZNSsD2Ev.exit256
  %call157 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %10, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp151)
          to label %invoke.cont156 unwind label %lpad155

invoke.cont156:                                   ; preds = %invoke.cont154
  %109 = bitcast %"class.std::basic_string"* %ref.tmp158 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %109) #8
  %110 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp159, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %110) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp158, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.86, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp159)
          to label %invoke.cont161 unwind label %lpad160

invoke.cont161:                                   ; preds = %invoke.cont156
  %call164 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsm(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call157, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp158, i64 noundef %conv128422)
          to label %invoke.cont163 unwind label %lpad162

invoke.cont163:                                   ; preds = %invoke.cont161
  %_M_p.i.i.i258 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp158, i64 0, i32 0, i32 0
  %111 = load i8*, i8** %_M_p.i.i.i258, align 8, !tbaa !43
  %arrayidx.i.i259 = getelementptr inbounds i8, i8* %111, i64 -24
  %112 = bitcast i8* %arrayidx.i.i259 to %"struct.std::basic_string<char>::_Rep"*
  %113 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i257, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %113) #8
  %cmp.not.i.i260 = icmp eq i8* %arrayidx.i.i259, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i260, label %_ZNSsD2Ev.exit270, label %if.then.i.i262, !prof !47

if.then.i.i262:                                   ; preds = %invoke.cont163
  %_M_refcount.i.i261 = getelementptr inbounds i8, i8* %111, i64 -8
  %114 = bitcast i8* %_M_refcount.i.i261 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i263, label %if.else.i.i.i265

if.then.i.i.i263:                                 ; preds = %if.then.i.i262
  %115 = atomicrmw volatile add i32* %114, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i268

if.else.i.i.i265:                                 ; preds = %if.then.i.i262
  %116 = load i32, i32* %114, align 8, !tbaa !16
  %add.i.i.i.i264 = add nsw i32 %116, -1
  store i32 %add.i.i.i.i264, i32* %114, align 8, !tbaa !16
  br label %invoke.cont.i.i268

invoke.cont.i.i268:                               ; preds = %if.else.i.i.i265, %if.then.i.i.i263
  %retval.0.i.i.i266 = phi i32 [ %115, %if.then.i.i.i263 ], [ %116, %if.else.i.i.i265 ]
  %cmp3.i.i267 = icmp slt i32 %retval.0.i.i.i266, 1
  br i1 %cmp3.i.i267, label %if.then4.i.i269, label %_ZNSsD2Ev.exit270

if.then4.i.i269:                                  ; preds = %invoke.cont.i.i268
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %112, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i257) #8
  br label %_ZNSsD2Ev.exit270

_ZNSsD2Ev.exit270:                                ; preds = %invoke.cont163, %invoke.cont.i.i268, %if.then4.i.i269
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %113) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %110) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109) #8
  %_M_p.i.i.i272 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp151, i64 0, i32 0, i32 0
  %117 = load i8*, i8** %_M_p.i.i.i272, align 8, !tbaa !43
  %arrayidx.i.i273 = getelementptr inbounds i8, i8* %117, i64 -24
  %118 = bitcast i8* %arrayidx.i.i273 to %"struct.std::basic_string<char>::_Rep"*
  %119 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i271, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %119) #8
  %cmp.not.i.i274 = icmp eq i8* %arrayidx.i.i273, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i274, label %_ZNSsD2Ev.exit284, label %if.then.i.i276, !prof !47

if.then.i.i276:                                   ; preds = %_ZNSsD2Ev.exit270
  %_M_refcount.i.i275 = getelementptr inbounds i8, i8* %117, i64 -8
  %120 = bitcast i8* %_M_refcount.i.i275 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i277, label %if.else.i.i.i279

if.then.i.i.i277:                                 ; preds = %if.then.i.i276
  %121 = atomicrmw volatile add i32* %120, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i282

if.else.i.i.i279:                                 ; preds = %if.then.i.i276
  %122 = load i32, i32* %120, align 8, !tbaa !16
  %add.i.i.i.i278 = add nsw i32 %122, -1
  store i32 %add.i.i.i.i278, i32* %120, align 8, !tbaa !16
  br label %invoke.cont.i.i282

invoke.cont.i.i282:                               ; preds = %if.else.i.i.i279, %if.then.i.i.i277
  %retval.0.i.i.i280 = phi i32 [ %121, %if.then.i.i.i277 ], [ %122, %if.else.i.i.i279 ]
  %cmp3.i.i281 = icmp slt i32 %retval.0.i.i.i280, 1
  br i1 %cmp3.i.i281, label %if.then4.i.i283, label %_ZNSsD2Ev.exit284

if.then4.i.i283:                                  ; preds = %invoke.cont.i.i282
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %118, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i271) #8
  br label %_ZNSsD2Ev.exit284

_ZNSsD2Ev.exit284:                                ; preds = %_ZNSsD2Ev.exit270, %invoke.cont.i.i282, %if.then4.i.i283
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %119) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %108) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %107) #8
  %123 = bitcast %"class.std::basic_string"* %ref.tmp173 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %123) #8
  %124 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp174, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %124) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp173, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.80, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp174)
          to label %invoke.cont176 unwind label %lpad175

invoke.cont176:                                   ; preds = %_ZNSsD2Ev.exit284
  %call179 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %10, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp173)
          to label %invoke.cont178 unwind label %lpad177

invoke.cont178:                                   ; preds = %invoke.cont176
  %125 = bitcast %"class.std::basic_string"* %ref.tmp180 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %125) #8
  %126 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp181, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %126) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp180, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.87, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp181)
          to label %invoke.cont183 unwind label %lpad182

invoke.cont183:                                   ; preds = %invoke.cont178
  %call186 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsd(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call179, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp180, double noundef %div)
          to label %invoke.cont185 unwind label %lpad184

invoke.cont185:                                   ; preds = %invoke.cont183
  %_M_p.i.i.i286 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp180, i64 0, i32 0, i32 0
  %127 = load i8*, i8** %_M_p.i.i.i286, align 8, !tbaa !43
  %arrayidx.i.i287 = getelementptr inbounds i8, i8* %127, i64 -24
  %128 = bitcast i8* %arrayidx.i.i287 to %"struct.std::basic_string<char>::_Rep"*
  %129 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i285, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %129) #8
  %cmp.not.i.i288 = icmp eq i8* %arrayidx.i.i287, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i288, label %_ZNSsD2Ev.exit298, label %if.then.i.i290, !prof !47

if.then.i.i290:                                   ; preds = %invoke.cont185
  %_M_refcount.i.i289 = getelementptr inbounds i8, i8* %127, i64 -8
  %130 = bitcast i8* %_M_refcount.i.i289 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i291, label %if.else.i.i.i293

if.then.i.i.i291:                                 ; preds = %if.then.i.i290
  %131 = atomicrmw volatile add i32* %130, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i296

if.else.i.i.i293:                                 ; preds = %if.then.i.i290
  %132 = load i32, i32* %130, align 8, !tbaa !16
  %add.i.i.i.i292 = add nsw i32 %132, -1
  store i32 %add.i.i.i.i292, i32* %130, align 8, !tbaa !16
  br label %invoke.cont.i.i296

invoke.cont.i.i296:                               ; preds = %if.else.i.i.i293, %if.then.i.i.i291
  %retval.0.i.i.i294 = phi i32 [ %131, %if.then.i.i.i291 ], [ %132, %if.else.i.i.i293 ]
  %cmp3.i.i295 = icmp slt i32 %retval.0.i.i.i294, 1
  br i1 %cmp3.i.i295, label %if.then4.i.i297, label %_ZNSsD2Ev.exit298

if.then4.i.i297:                                  ; preds = %invoke.cont.i.i296
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %128, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i285) #8
  br label %_ZNSsD2Ev.exit298

_ZNSsD2Ev.exit298:                                ; preds = %invoke.cont185, %invoke.cont.i.i296, %if.then4.i.i297
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %129) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %126) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %125) #8
  %_M_p.i.i.i300 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp173, i64 0, i32 0, i32 0
  %133 = load i8*, i8** %_M_p.i.i.i300, align 8, !tbaa !43
  %arrayidx.i.i301 = getelementptr inbounds i8, i8* %133, i64 -24
  %134 = bitcast i8* %arrayidx.i.i301 to %"struct.std::basic_string<char>::_Rep"*
  %135 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i299, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %135) #8
  %cmp.not.i.i302 = icmp eq i8* %arrayidx.i.i301, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i302, label %_ZNSsD2Ev.exit312, label %if.then.i.i304, !prof !47

if.then.i.i304:                                   ; preds = %_ZNSsD2Ev.exit298
  %_M_refcount.i.i303 = getelementptr inbounds i8, i8* %133, i64 -8
  %136 = bitcast i8* %_M_refcount.i.i303 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i305, label %if.else.i.i.i307

if.then.i.i.i305:                                 ; preds = %if.then.i.i304
  %137 = atomicrmw volatile add i32* %136, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i310

if.else.i.i.i307:                                 ; preds = %if.then.i.i304
  %138 = load i32, i32* %136, align 8, !tbaa !16
  %add.i.i.i.i306 = add nsw i32 %138, -1
  store i32 %add.i.i.i.i306, i32* %136, align 8, !tbaa !16
  br label %invoke.cont.i.i310

invoke.cont.i.i310:                               ; preds = %if.else.i.i.i307, %if.then.i.i.i305
  %retval.0.i.i.i308 = phi i32 [ %137, %if.then.i.i.i305 ], [ %138, %if.else.i.i.i307 ]
  %cmp3.i.i309 = icmp slt i32 %retval.0.i.i.i308, 1
  br i1 %cmp3.i.i309, label %if.then4.i.i311, label %_ZNSsD2Ev.exit312

if.then4.i.i311:                                  ; preds = %invoke.cont.i.i310
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %134, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i299) #8
  br label %_ZNSsD2Ev.exit312

_ZNSsD2Ev.exit312:                                ; preds = %_ZNSsD2Ev.exit298, %invoke.cont.i.i310, %if.then4.i.i311
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %135) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %124) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %123) #8
  %139 = bitcast %"class.std::basic_string"* %ref.tmp195 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %139) #8
  %140 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp196, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %140) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp195, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.80, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp196)
          to label %invoke.cont198 unwind label %lpad197

invoke.cont198:                                   ; preds = %_ZNSsD2Ev.exit312
  %call201 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %10, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp195)
          to label %invoke.cont200 unwind label %lpad199

invoke.cont200:                                   ; preds = %invoke.cont198
  %141 = bitcast %"class.std::basic_string"* %ref.tmp202 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %141) #8
  %142 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp203, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %142) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp202, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.88, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp203)
          to label %invoke.cont205 unwind label %lpad204

invoke.cont205:                                   ; preds = %invoke.cont200
  %call208 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsm(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call201, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp202, i64 noundef %conv9)
          to label %invoke.cont207 unwind label %lpad206

invoke.cont207:                                   ; preds = %invoke.cont205
  %_M_p.i.i.i314 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp202, i64 0, i32 0, i32 0
  %143 = load i8*, i8** %_M_p.i.i.i314, align 8, !tbaa !43
  %arrayidx.i.i315 = getelementptr inbounds i8, i8* %143, i64 -24
  %144 = bitcast i8* %arrayidx.i.i315 to %"struct.std::basic_string<char>::_Rep"*
  %145 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i313, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %145) #8
  %cmp.not.i.i316 = icmp eq i8* %arrayidx.i.i315, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i316, label %_ZNSsD2Ev.exit326, label %if.then.i.i318, !prof !47

if.then.i.i318:                                   ; preds = %invoke.cont207
  %_M_refcount.i.i317 = getelementptr inbounds i8, i8* %143, i64 -8
  %146 = bitcast i8* %_M_refcount.i.i317 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i319, label %if.else.i.i.i321

if.then.i.i.i319:                                 ; preds = %if.then.i.i318
  %147 = atomicrmw volatile add i32* %146, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i324

if.else.i.i.i321:                                 ; preds = %if.then.i.i318
  %148 = load i32, i32* %146, align 8, !tbaa !16
  %add.i.i.i.i320 = add nsw i32 %148, -1
  store i32 %add.i.i.i.i320, i32* %146, align 8, !tbaa !16
  br label %invoke.cont.i.i324

invoke.cont.i.i324:                               ; preds = %if.else.i.i.i321, %if.then.i.i.i319
  %retval.0.i.i.i322 = phi i32 [ %147, %if.then.i.i.i319 ], [ %148, %if.else.i.i.i321 ]
  %cmp3.i.i323 = icmp slt i32 %retval.0.i.i.i322, 1
  br i1 %cmp3.i.i323, label %if.then4.i.i325, label %_ZNSsD2Ev.exit326

if.then4.i.i325:                                  ; preds = %invoke.cont.i.i324
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %144, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i313) #8
  br label %_ZNSsD2Ev.exit326

_ZNSsD2Ev.exit326:                                ; preds = %invoke.cont207, %invoke.cont.i.i324, %if.then4.i.i325
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %145) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %142) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %141) #8
  %_M_p.i.i.i328 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp195, i64 0, i32 0, i32 0
  %149 = load i8*, i8** %_M_p.i.i.i328, align 8, !tbaa !43
  %arrayidx.i.i329 = getelementptr inbounds i8, i8* %149, i64 -24
  %150 = bitcast i8* %arrayidx.i.i329 to %"struct.std::basic_string<char>::_Rep"*
  %151 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i327, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %151) #8
  %cmp.not.i.i330 = icmp eq i8* %arrayidx.i.i329, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i330, label %_ZNSsD2Ev.exit340, label %if.then.i.i332, !prof !47

if.then.i.i332:                                   ; preds = %_ZNSsD2Ev.exit326
  %_M_refcount.i.i331 = getelementptr inbounds i8, i8* %149, i64 -8
  %152 = bitcast i8* %_M_refcount.i.i331 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i333, label %if.else.i.i.i335

if.then.i.i.i333:                                 ; preds = %if.then.i.i332
  %153 = atomicrmw volatile add i32* %152, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i338

if.else.i.i.i335:                                 ; preds = %if.then.i.i332
  %154 = load i32, i32* %152, align 8, !tbaa !16
  %add.i.i.i.i334 = add nsw i32 %154, -1
  store i32 %add.i.i.i.i334, i32* %152, align 8, !tbaa !16
  br label %invoke.cont.i.i338

invoke.cont.i.i338:                               ; preds = %if.else.i.i.i335, %if.then.i.i.i333
  %retval.0.i.i.i336 = phi i32 [ %153, %if.then.i.i.i333 ], [ %154, %if.else.i.i.i335 ]
  %cmp3.i.i337 = icmp slt i32 %retval.0.i.i.i336, 1
  br i1 %cmp3.i.i337, label %if.then4.i.i339, label %_ZNSsD2Ev.exit340

if.then4.i.i339:                                  ; preds = %invoke.cont.i.i338
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %150, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i327) #8
  br label %_ZNSsD2Ev.exit340

_ZNSsD2Ev.exit340:                                ; preds = %_ZNSsD2Ev.exit326, %invoke.cont.i.i338, %if.then4.i.i339
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %151) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %140) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %139) #8
  %155 = bitcast %"class.std::basic_string"* %ref.tmp217 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %155) #8
  %156 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp218, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %156) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp217, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.80, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp218)
          to label %invoke.cont220 unwind label %lpad219

invoke.cont220:                                   ; preds = %_ZNSsD2Ev.exit340
  %call223 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %10, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp217)
          to label %invoke.cont222 unwind label %lpad221

invoke.cont222:                                   ; preds = %invoke.cont220
  %157 = bitcast %"class.std::basic_string"* %ref.tmp224 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %157) #8
  %158 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp225, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %158) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp224, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.89, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp225)
          to label %invoke.cont227 unwind label %lpad226

invoke.cont227:                                   ; preds = %invoke.cont222
  %call230 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsm(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call223, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp224, i64 noundef %conv8)
          to label %invoke.cont229 unwind label %lpad228

invoke.cont229:                                   ; preds = %invoke.cont227
  %_M_p.i.i.i342 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp224, i64 0, i32 0, i32 0
  %159 = load i8*, i8** %_M_p.i.i.i342, align 8, !tbaa !43
  %arrayidx.i.i343 = getelementptr inbounds i8, i8* %159, i64 -24
  %160 = bitcast i8* %arrayidx.i.i343 to %"struct.std::basic_string<char>::_Rep"*
  %161 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i341, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %161) #8
  %cmp.not.i.i344 = icmp eq i8* %arrayidx.i.i343, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i344, label %_ZNSsD2Ev.exit354, label %if.then.i.i346, !prof !47

if.then.i.i346:                                   ; preds = %invoke.cont229
  %_M_refcount.i.i345 = getelementptr inbounds i8, i8* %159, i64 -8
  %162 = bitcast i8* %_M_refcount.i.i345 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i347, label %if.else.i.i.i349

if.then.i.i.i347:                                 ; preds = %if.then.i.i346
  %163 = atomicrmw volatile add i32* %162, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i352

if.else.i.i.i349:                                 ; preds = %if.then.i.i346
  %164 = load i32, i32* %162, align 8, !tbaa !16
  %add.i.i.i.i348 = add nsw i32 %164, -1
  store i32 %add.i.i.i.i348, i32* %162, align 8, !tbaa !16
  br label %invoke.cont.i.i352

invoke.cont.i.i352:                               ; preds = %if.else.i.i.i349, %if.then.i.i.i347
  %retval.0.i.i.i350 = phi i32 [ %163, %if.then.i.i.i347 ], [ %164, %if.else.i.i.i349 ]
  %cmp3.i.i351 = icmp slt i32 %retval.0.i.i.i350, 1
  br i1 %cmp3.i.i351, label %if.then4.i.i353, label %_ZNSsD2Ev.exit354

if.then4.i.i353:                                  ; preds = %invoke.cont.i.i352
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %160, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i341) #8
  br label %_ZNSsD2Ev.exit354

_ZNSsD2Ev.exit354:                                ; preds = %invoke.cont229, %invoke.cont.i.i352, %if.then4.i.i353
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %161) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %158) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %157) #8
  %_M_p.i.i.i356 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp217, i64 0, i32 0, i32 0
  %165 = load i8*, i8** %_M_p.i.i.i356, align 8, !tbaa !43
  %arrayidx.i.i357 = getelementptr inbounds i8, i8* %165, i64 -24
  %166 = bitcast i8* %arrayidx.i.i357 to %"struct.std::basic_string<char>::_Rep"*
  %167 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i355, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %167) #8
  %cmp.not.i.i358 = icmp eq i8* %arrayidx.i.i357, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i358, label %_ZNSsD2Ev.exit368, label %if.then.i.i360, !prof !47

if.then.i.i360:                                   ; preds = %_ZNSsD2Ev.exit354
  %_M_refcount.i.i359 = getelementptr inbounds i8, i8* %165, i64 -8
  %168 = bitcast i8* %_M_refcount.i.i359 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i361, label %if.else.i.i.i363

if.then.i.i.i361:                                 ; preds = %if.then.i.i360
  %169 = atomicrmw volatile add i32* %168, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i366

if.else.i.i.i363:                                 ; preds = %if.then.i.i360
  %170 = load i32, i32* %168, align 8, !tbaa !16
  %add.i.i.i.i362 = add nsw i32 %170, -1
  store i32 %add.i.i.i.i362, i32* %168, align 8, !tbaa !16
  br label %invoke.cont.i.i366

invoke.cont.i.i366:                               ; preds = %if.else.i.i.i363, %if.then.i.i.i361
  %retval.0.i.i.i364 = phi i32 [ %169, %if.then.i.i.i361 ], [ %170, %if.else.i.i.i363 ]
  %cmp3.i.i365 = icmp slt i32 %retval.0.i.i.i364, 1
  br i1 %cmp3.i.i365, label %if.then4.i.i367, label %_ZNSsD2Ev.exit368

if.then4.i.i367:                                  ; preds = %invoke.cont.i.i366
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %166, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i355) #8
  br label %_ZNSsD2Ev.exit368

_ZNSsD2Ev.exit368:                                ; preds = %_ZNSsD2Ev.exit354, %invoke.cont.i.i366, %if.then4.i.i367
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %167) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %156) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %155) #8
  %171 = bitcast %"class.std::basic_string"* %ref.tmp239 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %171) #8
  %172 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp240, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %172) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp239, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.80, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp240)
          to label %invoke.cont242 unwind label %lpad241

invoke.cont242:                                   ; preds = %_ZNSsD2Ev.exit368
  %call245 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3getERKSs(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %10, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp239)
          to label %invoke.cont244 unwind label %lpad243

invoke.cont244:                                   ; preds = %invoke.cont242
  %173 = bitcast %"class.std::basic_string"* %ref.tmp246 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %173) #8
  %174 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp247, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %174) #8
  invoke void @_ZNSsC1EPKcRKSaIcE(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp246, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.90, i64 0, i64 0), %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp247)
          to label %invoke.cont249 unwind label %lpad248

invoke.cont249:                                   ; preds = %invoke.cont244
  %call252 = invoke noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsd(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40) %call245, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp246, double noundef %div6)
          to label %invoke.cont251 unwind label %lpad250

invoke.cont251:                                   ; preds = %invoke.cont249
  %_M_p.i.i.i370 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp246, i64 0, i32 0, i32 0
  %175 = load i8*, i8** %_M_p.i.i.i370, align 8, !tbaa !43
  %arrayidx.i.i371 = getelementptr inbounds i8, i8* %175, i64 -24
  %176 = bitcast i8* %arrayidx.i.i371 to %"struct.std::basic_string<char>::_Rep"*
  %177 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i369, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %177) #8
  %cmp.not.i.i372 = icmp eq i8* %arrayidx.i.i371, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i372, label %_ZNSsD2Ev.exit382, label %if.then.i.i374, !prof !47

if.then.i.i374:                                   ; preds = %invoke.cont251
  %_M_refcount.i.i373 = getelementptr inbounds i8, i8* %175, i64 -8
  %178 = bitcast i8* %_M_refcount.i.i373 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i375, label %if.else.i.i.i377

if.then.i.i.i375:                                 ; preds = %if.then.i.i374
  %179 = atomicrmw volatile add i32* %178, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i380

if.else.i.i.i377:                                 ; preds = %if.then.i.i374
  %180 = load i32, i32* %178, align 8, !tbaa !16
  %add.i.i.i.i376 = add nsw i32 %180, -1
  store i32 %add.i.i.i.i376, i32* %178, align 8, !tbaa !16
  br label %invoke.cont.i.i380

invoke.cont.i.i380:                               ; preds = %if.else.i.i.i377, %if.then.i.i.i375
  %retval.0.i.i.i378 = phi i32 [ %179, %if.then.i.i.i375 ], [ %180, %if.else.i.i.i377 ]
  %cmp3.i.i379 = icmp slt i32 %retval.0.i.i.i378, 1
  br i1 %cmp3.i.i379, label %if.then4.i.i381, label %_ZNSsD2Ev.exit382

if.then4.i.i381:                                  ; preds = %invoke.cont.i.i380
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %176, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i369) #8
  br label %_ZNSsD2Ev.exit382

_ZNSsD2Ev.exit382:                                ; preds = %invoke.cont251, %invoke.cont.i.i380, %if.then4.i.i381
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %177) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %174) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %173) #8
  %_M_p.i.i.i384 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %ref.tmp239, i64 0, i32 0, i32 0
  %181 = load i8*, i8** %_M_p.i.i.i384, align 8, !tbaa !43
  %arrayidx.i.i385 = getelementptr inbounds i8, i8* %181, i64 -24
  %182 = bitcast i8* %arrayidx.i.i385 to %"struct.std::basic_string<char>::_Rep"*
  %183 = getelementptr inbounds %"class.std::allocator", %"class.std::allocator"* %ref.tmp.i383, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %183) #8
  %cmp.not.i.i386 = icmp eq i8* %arrayidx.i.i385, bitcast ([0 x i64]* @_ZNSs4_Rep20_S_empty_rep_storageE to i8*)
  br i1 %cmp.not.i.i386, label %_ZNSsD2Ev.exit396, label %if.then.i.i388, !prof !47

if.then.i.i388:                                   ; preds = %_ZNSsD2Ev.exit382
  %_M_refcount.i.i387 = getelementptr inbounds i8, i8* %181, i64 -8
  %184 = bitcast i8* %_M_refcount.i.i387 to i32*
  br i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null), label %if.then.i.i.i389, label %if.else.i.i.i391

if.then.i.i.i389:                                 ; preds = %if.then.i.i388
  %185 = atomicrmw volatile add i32* %184, i32 -1 acq_rel, align 4
  br label %invoke.cont.i.i394

if.else.i.i.i391:                                 ; preds = %if.then.i.i388
  %186 = load i32, i32* %184, align 8, !tbaa !16
  %add.i.i.i.i390 = add nsw i32 %186, -1
  store i32 %add.i.i.i.i390, i32* %184, align 8, !tbaa !16
  br label %invoke.cont.i.i394

invoke.cont.i.i394:                               ; preds = %if.else.i.i.i391, %if.then.i.i.i389
  %retval.0.i.i.i392 = phi i32 [ %185, %if.then.i.i.i389 ], [ %186, %if.else.i.i.i391 ]
  %cmp3.i.i393 = icmp slt i32 %retval.0.i.i.i392, 1
  br i1 %cmp3.i.i393, label %if.then4.i.i395, label %_ZNSsD2Ev.exit396

if.then4.i.i395:                                  ; preds = %invoke.cont.i.i394
  call void @_ZNSs4_Rep10_M_destroyERKSaIcE(%"struct.std::basic_string<char>::_Rep"* noundef nonnull align 8 dereferenceable(24) %182, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %ref.tmp.i383) #8
  br label %_ZNSsD2Ev.exit396

_ZNSsD2Ev.exit396:                                ; preds = %_ZNSsD2Ev.exit382, %invoke.cont.i.i394, %if.then4.i.i395
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %183) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %172) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %171) #8
  br label %if.end

lpad:                                             ; preds = %if.then
  %187 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup23

lpad15:                                           ; preds = %invoke.cont
  %188 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup

lpad17:                                           ; preds = %invoke.cont16
  %189 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp13) #8
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad17, %lpad15
  %.pn = phi { i8*, i32 } [ %189, %lpad17 ], [ %188, %lpad15 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #8
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp) #8
  br label %ehcleanup23

ehcleanup23:                                      ; preds = %ehcleanup, %lpad
  %.pn.pn = phi { i8*, i32 } [ %.pn, %ehcleanup ], [ %187, %lpad ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #8
  br label %ehcleanup265

lpad28:                                           ; preds = %_ZNSsD2Ev.exit116
  %190 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup45

lpad30:                                           ; preds = %invoke.cont29
  %191 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup44

lpad35:                                           ; preds = %invoke.cont31
  %192 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup41

lpad37:                                           ; preds = %invoke.cont36
  %193 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp33) #8
  br label %ehcleanup41

ehcleanup41:                                      ; preds = %lpad37, %lpad35
  %.pn53 = phi { i8*, i32 } [ %193, %lpad37 ], [ %192, %lpad35 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %30) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #8
  br label %ehcleanup44

ehcleanup44:                                      ; preds = %ehcleanup41, %lpad30
  %.pn53.pn = phi { i8*, i32 } [ %.pn53, %ehcleanup41 ], [ %191, %lpad30 ]
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp26) #8
  br label %ehcleanup45

ehcleanup45:                                      ; preds = %ehcleanup44, %lpad28
  %.pn53.pn.pn = phi { i8*, i32 } [ %.pn53.pn, %ehcleanup44 ], [ %190, %lpad28 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %28) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #8
  br label %ehcleanup265

lpad50:                                           ; preds = %_ZNSsD2Ev.exit144
  %194 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup67

lpad52:                                           ; preds = %invoke.cont51
  %195 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup66

lpad57:                                           ; preds = %invoke.cont53
  %196 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup63

lpad59:                                           ; preds = %invoke.cont58
  %197 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp55) #8
  br label %ehcleanup63

ehcleanup63:                                      ; preds = %lpad59, %lpad57
  %.pn57 = phi { i8*, i32 } [ %197, %lpad59 ], [ %196, %lpad57 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %46) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #8
  br label %ehcleanup66

ehcleanup66:                                      ; preds = %ehcleanup63, %lpad52
  %.pn57.pn = phi { i8*, i32 } [ %.pn57, %ehcleanup63 ], [ %195, %lpad52 ]
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp48) #8
  br label %ehcleanup67

ehcleanup67:                                      ; preds = %ehcleanup66, %lpad50
  %.pn57.pn.pn = phi { i8*, i32 } [ %.pn57.pn, %ehcleanup66 ], [ %194, %lpad50 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %44) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #8
  br label %ehcleanup265

lpad85:                                           ; preds = %_ZNSsD2Ev.exit172
  %198 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup102

lpad87:                                           ; preds = %invoke.cont86
  %199 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup101

lpad92:                                           ; preds = %invoke.cont88
  %200 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup98

lpad94:                                           ; preds = %invoke.cont93
  %201 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp90) #8
  br label %ehcleanup98

ehcleanup98:                                      ; preds = %lpad94, %lpad92
  %.pn61 = phi { i8*, i32 } [ %201, %lpad94 ], [ %200, %lpad92 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %62) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #8
  br label %ehcleanup101

ehcleanup101:                                     ; preds = %ehcleanup98, %lpad87
  %.pn61.pn = phi { i8*, i32 } [ %.pn61, %ehcleanup98 ], [ %199, %lpad87 ]
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp83) #8
  br label %ehcleanup102

ehcleanup102:                                     ; preds = %ehcleanup101, %lpad85
  %.pn61.pn.pn = phi { i8*, i32 } [ %.pn61.pn, %ehcleanup101 ], [ %198, %lpad85 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %60) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #8
  br label %ehcleanup265

lpad107:                                          ; preds = %_ZNSsD2Ev.exit200
  %202 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup124

lpad109:                                          ; preds = %invoke.cont108
  %203 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup123

lpad114:                                          ; preds = %invoke.cont110
  %204 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup120

lpad116:                                          ; preds = %invoke.cont115
  %205 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp112) #8
  br label %ehcleanup120

ehcleanup120:                                     ; preds = %lpad116, %lpad114
  %.pn65 = phi { i8*, i32 } [ %205, %lpad116 ], [ %204, %lpad114 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %78) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #8
  br label %ehcleanup123

ehcleanup123:                                     ; preds = %ehcleanup120, %lpad109
  %.pn65.pn = phi { i8*, i32 } [ %.pn65, %ehcleanup120 ], [ %203, %lpad109 ]
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp105) #8
  br label %ehcleanup124

ehcleanup124:                                     ; preds = %ehcleanup123, %lpad107
  %.pn65.pn.pn = phi { i8*, i32 } [ %.pn65.pn, %ehcleanup123 ], [ %202, %lpad107 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %76) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #8
  br label %ehcleanup265

lpad131:                                          ; preds = %_ZNSsD2Ev.exit228
  %206 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup148

lpad133:                                          ; preds = %invoke.cont132
  %207 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup147

lpad138:                                          ; preds = %invoke.cont134
  %208 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup144

lpad140:                                          ; preds = %invoke.cont139
  %209 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp136) #8
  br label %ehcleanup144

ehcleanup144:                                     ; preds = %lpad140, %lpad138
  %.pn69 = phi { i8*, i32 } [ %209, %lpad140 ], [ %208, %lpad138 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %94) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93) #8
  br label %ehcleanup147

ehcleanup147:                                     ; preds = %ehcleanup144, %lpad133
  %.pn69.pn = phi { i8*, i32 } [ %.pn69, %ehcleanup144 ], [ %207, %lpad133 ]
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp129) #8
  br label %ehcleanup148

ehcleanup148:                                     ; preds = %ehcleanup147, %lpad131
  %.pn69.pn.pn = phi { i8*, i32 } [ %.pn69.pn, %ehcleanup147 ], [ %206, %lpad131 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %92) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91) #8
  br label %ehcleanup265

lpad153:                                          ; preds = %_ZNSsD2Ev.exit256
  %210 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup170

lpad155:                                          ; preds = %invoke.cont154
  %211 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup169

lpad160:                                          ; preds = %invoke.cont156
  %212 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup166

lpad162:                                          ; preds = %invoke.cont161
  %213 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp158) #8
  br label %ehcleanup166

ehcleanup166:                                     ; preds = %lpad162, %lpad160
  %.pn73 = phi { i8*, i32 } [ %213, %lpad162 ], [ %212, %lpad160 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %110) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109) #8
  br label %ehcleanup169

ehcleanup169:                                     ; preds = %ehcleanup166, %lpad155
  %.pn73.pn = phi { i8*, i32 } [ %.pn73, %ehcleanup166 ], [ %211, %lpad155 ]
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp151) #8
  br label %ehcleanup170

ehcleanup170:                                     ; preds = %ehcleanup169, %lpad153
  %.pn73.pn.pn = phi { i8*, i32 } [ %.pn73.pn, %ehcleanup169 ], [ %210, %lpad153 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %108) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %107) #8
  br label %ehcleanup265

lpad175:                                          ; preds = %_ZNSsD2Ev.exit284
  %214 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup192

lpad177:                                          ; preds = %invoke.cont176
  %215 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup191

lpad182:                                          ; preds = %invoke.cont178
  %216 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup188

lpad184:                                          ; preds = %invoke.cont183
  %217 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp180) #8
  br label %ehcleanup188

ehcleanup188:                                     ; preds = %lpad184, %lpad182
  %.pn77 = phi { i8*, i32 } [ %217, %lpad184 ], [ %216, %lpad182 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %126) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %125) #8
  br label %ehcleanup191

ehcleanup191:                                     ; preds = %ehcleanup188, %lpad177
  %.pn77.pn = phi { i8*, i32 } [ %.pn77, %ehcleanup188 ], [ %215, %lpad177 ]
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp173) #8
  br label %ehcleanup192

ehcleanup192:                                     ; preds = %ehcleanup191, %lpad175
  %.pn77.pn.pn = phi { i8*, i32 } [ %.pn77.pn, %ehcleanup191 ], [ %214, %lpad175 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %124) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %123) #8
  br label %ehcleanup265

lpad197:                                          ; preds = %_ZNSsD2Ev.exit312
  %218 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup214

lpad199:                                          ; preds = %invoke.cont198
  %219 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup213

lpad204:                                          ; preds = %invoke.cont200
  %220 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup210

lpad206:                                          ; preds = %invoke.cont205
  %221 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp202) #8
  br label %ehcleanup210

ehcleanup210:                                     ; preds = %lpad206, %lpad204
  %.pn81 = phi { i8*, i32 } [ %221, %lpad206 ], [ %220, %lpad204 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %142) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %141) #8
  br label %ehcleanup213

ehcleanup213:                                     ; preds = %ehcleanup210, %lpad199
  %.pn81.pn = phi { i8*, i32 } [ %.pn81, %ehcleanup210 ], [ %219, %lpad199 ]
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp195) #8
  br label %ehcleanup214

ehcleanup214:                                     ; preds = %ehcleanup213, %lpad197
  %.pn81.pn.pn = phi { i8*, i32 } [ %.pn81.pn, %ehcleanup213 ], [ %218, %lpad197 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %140) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %139) #8
  br label %ehcleanup265

lpad219:                                          ; preds = %_ZNSsD2Ev.exit340
  %222 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup236

lpad221:                                          ; preds = %invoke.cont220
  %223 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup235

lpad226:                                          ; preds = %invoke.cont222
  %224 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup232

lpad228:                                          ; preds = %invoke.cont227
  %225 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp224) #8
  br label %ehcleanup232

ehcleanup232:                                     ; preds = %lpad228, %lpad226
  %.pn85 = phi { i8*, i32 } [ %225, %lpad228 ], [ %224, %lpad226 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %158) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %157) #8
  br label %ehcleanup235

ehcleanup235:                                     ; preds = %ehcleanup232, %lpad221
  %.pn85.pn = phi { i8*, i32 } [ %.pn85, %ehcleanup232 ], [ %223, %lpad221 ]
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp217) #8
  br label %ehcleanup236

ehcleanup236:                                     ; preds = %ehcleanup235, %lpad219
  %.pn85.pn.pn = phi { i8*, i32 } [ %.pn85.pn, %ehcleanup235 ], [ %222, %lpad219 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %156) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %155) #8
  br label %ehcleanup265

lpad241:                                          ; preds = %_ZNSsD2Ev.exit368
  %226 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup258

lpad243:                                          ; preds = %invoke.cont242
  %227 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup257

lpad248:                                          ; preds = %invoke.cont244
  %228 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup254

lpad250:                                          ; preds = %invoke.cont249
  %229 = landingpad { i8*, i32 }
          cleanup
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp246) #8
  br label %ehcleanup254

ehcleanup254:                                     ; preds = %lpad250, %lpad248
  %.pn89 = phi { i8*, i32 } [ %229, %lpad250 ], [ %228, %lpad248 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %174) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %173) #8
  br label %ehcleanup257

ehcleanup257:                                     ; preds = %ehcleanup254, %lpad243
  %.pn89.pn = phi { i8*, i32 } [ %.pn89, %ehcleanup254 ], [ %227, %lpad243 ]
  call void @_ZNSsD2Ev(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8) %ref.tmp239) #8
  br label %ehcleanup258

ehcleanup258:                                     ; preds = %ehcleanup257, %lpad241
  %.pn89.pn.pn = phi { i8*, i32 } [ %.pn89.pn, %ehcleanup257 ], [ %226, %lpad241 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %172) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %171) #8
  br label %ehcleanup265

if.end:                                           ; preds = %_ZNSsD2Ev.exit396, %entry
  ret i64 %conv8

ehcleanup265:                                     ; preds = %ehcleanup102, %ehcleanup124, %ehcleanup258, %ehcleanup236, %ehcleanup214, %ehcleanup192, %ehcleanup170, %ehcleanup148, %ehcleanup67, %ehcleanup45, %ehcleanup23
  %.pn89.pn.pn.pn.pn.pn = phi { i8*, i32 } [ %.pn57.pn.pn, %ehcleanup67 ], [ %.pn53.pn.pn, %ehcleanup45 ], [ %.pn.pn, %ehcleanup23 ], [ %.pn65.pn.pn, %ehcleanup124 ], [ %.pn61.pn.pn, %ehcleanup102 ], [ %.pn89.pn.pn, %ehcleanup258 ], [ %.pn85.pn.pn, %ehcleanup236 ], [ %.pn81.pn.pn, %ehcleanup214 ], [ %.pn77.pn.pn, %ehcleanup192 ], [ %.pn73.pn.pn, %ehcleanup170 ], [ %.pn69.pn.pn, %ehcleanup148 ]
  resume { i8*, i32 } %.pn89.pn.pn.pn.pn.pn
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN6miniFE31rearrange_matrix_local_externalINS_9CSRMatrixIdiiEEEEvRT_(%"struct.miniFE::CSRMatrix"* noundef nonnull align 8 dereferenceable(132) %A) local_unnamed_addr #11 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %_M_finish.i = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 2, i32 0, i32 0, i32 1
  %0 = load i32*, i32** %_M_finish.i, align 8, !tbaa !71
  %_M_start.i = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 2, i32 0, i32 0, i32 0
  %1 = load i32*, i32** %_M_start.i, align 8, !tbaa !74
  %sub.ptr.lhs.cast.i = ptrtoint i32* %0 to i64
  %sub.ptr.rhs.cast.i = ptrtoint i32* %1 to i64
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %sub.ptr.div.i = ashr i64 %sub.ptr.sub.i, 2
  %cmp.not.i.i.i.i = icmp eq i64 %sub.ptr.sub.i, 0
  br i1 %cmp.not.i.i.i.i, label %cond.true.i.i.i.i206.thread, label %cond.true.i.i.i.i

cond.true.i.i.i.i206.thread:                      ; preds = %entry
  %_M_start.i150554 = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 5, i32 0, i32 0, i32 0
  %_M_start.i158555 = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 6, i32 0, i32 0, i32 0
  br label %for.body.i.i.preheader.i.i.i.i.i211

cond.true.i.i.i.i:                                ; preds = %entry
  %cmp.i.i.i.i.i.i = icmp ugt i64 %sub.ptr.sub.i, 9223372036854775806
  br i1 %cmp.i.i.i.i.i.i, label %if.then.i.i.i.i.i.i, label %for.body.i.i.preheader.i.i.i.i.i

if.then.i.i.i.i.i.i:                              ; preds = %cond.true.i.i.i.i
  tail call void @_ZSt17__throw_bad_allocv() #29
  unreachable

for.body.i.i.preheader.i.i.i.i.i:                 ; preds = %cond.true.i.i.i.i
  %mul.i.i.i.i.i.i = shl nuw i64 %sub.ptr.sub.i, 1
  %call2.i.i.i.i1.i.i118 = tail call noalias noundef nonnull i8* @_Znwm(i64 noundef %mul.i.i.i.i.i.i) #30
  %2 = bitcast i8* %call2.i.i.i.i1.i.i118 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %call2.i.i.i.i1.i.i118, i8 0, i64 %mul.i.i.i.i.i.i, i1 false)
  %call2.i.i.i.i1.i.i132 = invoke noalias noundef nonnull i8* @_Znwm(i64 noundef %mul.i.i.i.i.i.i) #30
          to label %for.body.preheader unwind label %ehcleanup213.thread

for.body.preheader:                               ; preds = %for.body.i.i.preheader.i.i.i.i.i
  %3 = bitcast i8* %call2.i.i.i.i1.i.i132 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %call2.i.i.i.i1.i.i132, i8 0, i64 %mul.i.i.i.i.i.i, i1 false)
  %_M_start.i149 = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load i32*, i32** %_M_start.i149, align 8
  %_M_start.i150 = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 5, i32 0, i32 0, i32 0
  %5 = load i32*, i32** %_M_start.i150, align 8
  %_M_start.i158 = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 6, i32 0, i32 0, i32 0
  %6 = load double*, double** %_M_start.i158, align 8
  %umax = call i64 @llvm.umax.i64(i64 %sub.ptr.div.i, i64 1)
  br label %for.body

for.cond.cleanup:                                 ; preds = %invoke.cont40
  %conv71 = sext i32 %add66 to i64
  %cmp.not.i.i.i.i134 = icmp eq i32 %add66, 0
  br i1 %cmp.not.i.i.i.i134, label %invoke.cont80, label %cond.true.i.i.i.i137

cond.true.i.i.i.i137:                             ; preds = %for.cond.cleanup
  %cmp.i.i.i.i.i.i136 = icmp slt i32 %add66, 0
  br i1 %cmp.i.i.i.i.i.i136, label %if.then.i.i.i.i.i.i138, label %for.body.i.i.preheader.i.i.i.i.i142

if.then.i.i.i.i.i.i138:                           ; preds = %cond.true.i.i.i.i137
  invoke void @_ZSt17__throw_bad_allocv() #29
          to label %.noexc145 unwind label %ehcleanup210.thread

.noexc145:                                        ; preds = %if.then.i.i.i.i.i.i138
  unreachable

for.body.i.i.preheader.i.i.i.i.i142:              ; preds = %cond.true.i.i.i.i137
  %mul.i.i.i.i.i.i139 = shl nuw nsw i64 %conv71, 2
  %call2.i.i.i.i1.i.i147 = invoke noalias noundef nonnull i8* @_Znwm(i64 noundef %mul.i.i.i.i.i.i139) #30
          to label %for.body.i.i.preheader.i.i.i.i.i197 unwind label %ehcleanup210.thread

ehcleanup213.thread:                              ; preds = %for.body.i.i.preheader.i.i.i.i.i
  %7 = landingpad { i8*, i32 }
          cleanup
  br label %if.then.i.i.i323

for.body:                                         ; preds = %for.body.preheader, %invoke.cont40
  %num_extern_nz.0505 = phi i32 [ %add66, %invoke.cont40 ], [ 0, %for.body.preheader ]
  %i.0504 = phi i64 [ %add, %invoke.cont40 ], [ 0, %for.body.preheader ]
  %add.ptr.i = getelementptr inbounds i32, i32* %4, i64 %i.0504
  %8 = load i32, i32* %add.ptr.i, align 4, !tbaa !16
  %conv = sext i32 %8 to i64
  %add.ptr.i151 = getelementptr inbounds i32, i32* %5, i64 %conv
  %add = add nuw i64 %i.0504, 1
  %add.ptr.i153 = getelementptr inbounds i32, i32* %4, i64 %add
  %9 = load i32, i32* %add.ptr.i153, align 4, !tbaa !16
  %conv10 = sext i32 %9 to i64
  %add.ptr.i155 = getelementptr inbounds i32, i32* %5, i64 %conv10
  %add.ptr.i159 = getelementptr inbounds double, double* %6, i64 %conv
  %mul18 = shl i64 %i.0504, 1
  %add.ptr.i163 = getelementptr inbounds i32, i32* %2, i64 %mul18
  store i32 %8, i32* %add.ptr.i163, align 4, !tbaa !16
  %10 = load i32, i32* %add.ptr.i153, align 4, !tbaa !16
  %add24 = or i64 %mul18, 1
  %add.ptr.i167 = getelementptr inbounds i32, i32* %2, i64 %add24
  store i32 %10, i32* %add.ptr.i167, align 4, !tbaa !16
  %11 = load i32, i32* %add.ptr.i153, align 4, !tbaa !16
  %add.ptr.i171 = getelementptr inbounds i32, i32* %3, i64 %mul18
  store i32 %11, i32* %add.ptr.i171, align 4, !tbaa !16
  %12 = load i32, i32* %add.ptr.i153, align 4, !tbaa !16
  %add.ptr.i175 = getelementptr inbounds i32, i32* %3, i64 %add24
  store i32 %12, i32* %add.ptr.i175, align 4, !tbaa !16
  %sub.ptr.lhs.cast = ptrtoint i32* %add.ptr.i155 to i64
  %sub.ptr.rhs.cast = ptrtoint i32* %add.ptr.i151 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = ashr i64 %sub.ptr.sub, 2
  %cmp26.i = icmp sgt i64 %sub.ptr.sub, 4
  br i1 %cmp26.i, label %for.body.i.preheader, label %_ZN6miniFE20sort_with_companionsIidEEvlPT_PT0_.exit

for.body.i.preheader:                             ; preds = %for.body
  %13 = add nsw i64 %sub.ptr.div, -1
  %xtraiter = and i64 %13, 1
  %14 = icmp eq i64 %sub.ptr.div, 2
  br i1 %14, label %_ZN6miniFE20sort_with_companionsIidEEvlPT_PT0_.exit.loopexit.unr-lcssa, label %for.body.i.preheader.new

for.body.i.preheader.new:                         ; preds = %for.body.i.preheader
  %unroll_iter = and i64 %13, -2
  br label %for.body.i

for.body.i:                                       ; preds = %while.end.i.1, %for.body.i.preheader.new
  %i.027.i = phi i64 [ 1, %for.body.i.preheader.new ], [ %inc.i.1, %while.end.i.1 ]
  %niter = phi i64 [ 0, %for.body.i.preheader.new ], [ %niter.next.1, %while.end.i.1 ]
  %arrayidx.i = getelementptr inbounds i32, i32* %add.ptr.i151, i64 %i.027.i
  %15 = load i32, i32* %arrayidx.i, align 4, !tbaa !16
  %arrayidx1.i = getelementptr inbounds double, double* %add.ptr.i159, i64 %i.027.i
  %16 = load double, double* %arrayidx1.i, align 8, !tbaa !84
  br label %land.rhs.i

land.rhs.i:                                       ; preds = %while.body.i, %for.body.i
  %j.025.i = phi i64 [ %i.027.i, %for.body.i ], [ %sub.i, %while.body.i ]
  %sub.i = add nsw i64 %j.025.i, -1
  %arrayidx3.i = getelementptr inbounds i32, i32* %add.ptr.i151, i64 %sub.i
  %17 = load i32, i32* %arrayidx3.i, align 4, !tbaa !16
  %cmp5.i = icmp sgt i32 %17, %15
  br i1 %cmp5.i, label %while.body.i, label %while.end.i

while.body.i:                                     ; preds = %land.rhs.i
  %arrayidx8.i = getelementptr inbounds i32, i32* %add.ptr.i151, i64 %j.025.i
  store i32 %17, i32* %arrayidx8.i, align 4, !tbaa !16
  %arrayidx10.i = getelementptr inbounds double, double* %add.ptr.i159, i64 %sub.i
  %18 = load double, double* %arrayidx10.i, align 8, !tbaa !84
  %arrayidx11.i = getelementptr inbounds double, double* %add.ptr.i159, i64 %j.025.i
  store double %18, double* %arrayidx11.i, align 8, !tbaa !84
  %cmp2.i = icmp sgt i64 %j.025.i, 1
  br i1 %cmp2.i, label %land.rhs.i, label %while.end.i, !llvm.loop !117

while.end.i:                                      ; preds = %while.body.i, %land.rhs.i
  %j.0.lcssa.i = phi i64 [ 0, %while.body.i ], [ %j.025.i, %land.rhs.i ]
  %arrayidx14.i = getelementptr inbounds i32, i32* %add.ptr.i151, i64 %j.0.lcssa.i
  store i32 %15, i32* %arrayidx14.i, align 4, !tbaa !16
  %arrayidx15.i = getelementptr inbounds double, double* %add.ptr.i159, i64 %j.0.lcssa.i
  store double %16, double* %arrayidx15.i, align 8, !tbaa !84
  %inc.i = add nuw nsw i64 %i.027.i, 1
  %arrayidx.i.1 = getelementptr inbounds i32, i32* %add.ptr.i151, i64 %inc.i
  %19 = load i32, i32* %arrayidx.i.1, align 4, !tbaa !16
  %arrayidx1.i.1 = getelementptr inbounds double, double* %add.ptr.i159, i64 %inc.i
  %20 = load double, double* %arrayidx1.i.1, align 8, !tbaa !84
  br label %land.rhs.i.1

land.rhs.i.1:                                     ; preds = %while.body.i.1, %while.end.i
  %j.025.i.1 = phi i64 [ %inc.i, %while.end.i ], [ %sub.i.1, %while.body.i.1 ]
  %sub.i.1 = add nsw i64 %j.025.i.1, -1
  %arrayidx3.i.1 = getelementptr inbounds i32, i32* %add.ptr.i151, i64 %sub.i.1
  %21 = load i32, i32* %arrayidx3.i.1, align 4, !tbaa !16
  %cmp5.i.1 = icmp sgt i32 %21, %19
  br i1 %cmp5.i.1, label %while.body.i.1, label %while.end.i.1

while.body.i.1:                                   ; preds = %land.rhs.i.1
  %arrayidx8.i.1 = getelementptr inbounds i32, i32* %add.ptr.i151, i64 %j.025.i.1
  store i32 %21, i32* %arrayidx8.i.1, align 4, !tbaa !16
  %arrayidx10.i.1 = getelementptr inbounds double, double* %add.ptr.i159, i64 %sub.i.1
  %22 = load double, double* %arrayidx10.i.1, align 8, !tbaa !84
  %arrayidx11.i.1 = getelementptr inbounds double, double* %add.ptr.i159, i64 %j.025.i.1
  store double %22, double* %arrayidx11.i.1, align 8, !tbaa !84
  %cmp2.i.1 = icmp sgt i64 %j.025.i.1, 1
  br i1 %cmp2.i.1, label %land.rhs.i.1, label %while.end.i.1, !llvm.loop !117

while.end.i.1:                                    ; preds = %while.body.i.1, %land.rhs.i.1
  %j.0.lcssa.i.1 = phi i64 [ 0, %while.body.i.1 ], [ %j.025.i.1, %land.rhs.i.1 ]
  %arrayidx14.i.1 = getelementptr inbounds i32, i32* %add.ptr.i151, i64 %j.0.lcssa.i.1
  store i32 %19, i32* %arrayidx14.i.1, align 4, !tbaa !16
  %arrayidx15.i.1 = getelementptr inbounds double, double* %add.ptr.i159, i64 %j.0.lcssa.i.1
  store double %20, double* %arrayidx15.i.1, align 8, !tbaa !84
  %inc.i.1 = add nuw nsw i64 %i.027.i, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %_ZN6miniFE20sort_with_companionsIidEEvlPT_PT0_.exit.loopexit.unr-lcssa, label %for.body.i, !llvm.loop !118

_ZN6miniFE20sort_with_companionsIidEEvlPT_PT0_.exit.loopexit.unr-lcssa: ; preds = %while.end.i.1, %for.body.i.preheader
  %i.027.i.unr = phi i64 [ 1, %for.body.i.preheader ], [ %inc.i.1, %while.end.i.1 ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %_ZN6miniFE20sort_with_companionsIidEEvlPT_PT0_.exit, label %for.body.i.epil

for.body.i.epil:                                  ; preds = %_ZN6miniFE20sort_with_companionsIidEEvlPT_PT0_.exit.loopexit.unr-lcssa
  %arrayidx.i.epil = getelementptr inbounds i32, i32* %add.ptr.i151, i64 %i.027.i.unr
  %23 = load i32, i32* %arrayidx.i.epil, align 4, !tbaa !16
  %arrayidx1.i.epil = getelementptr inbounds double, double* %add.ptr.i159, i64 %i.027.i.unr
  %24 = load double, double* %arrayidx1.i.epil, align 8, !tbaa !84
  br label %land.rhs.i.epil

land.rhs.i.epil:                                  ; preds = %while.body.i.epil, %for.body.i.epil
  %j.025.i.epil = phi i64 [ %i.027.i.unr, %for.body.i.epil ], [ %sub.i.epil, %while.body.i.epil ]
  %sub.i.epil = add nsw i64 %j.025.i.epil, -1
  %arrayidx3.i.epil = getelementptr inbounds i32, i32* %add.ptr.i151, i64 %sub.i.epil
  %25 = load i32, i32* %arrayidx3.i.epil, align 4, !tbaa !16
  %cmp5.i.epil = icmp sgt i32 %25, %23
  br i1 %cmp5.i.epil, label %while.body.i.epil, label %while.end.i.epil

while.body.i.epil:                                ; preds = %land.rhs.i.epil
  %arrayidx8.i.epil = getelementptr inbounds i32, i32* %add.ptr.i151, i64 %j.025.i.epil
  store i32 %25, i32* %arrayidx8.i.epil, align 4, !tbaa !16
  %arrayidx10.i.epil = getelementptr inbounds double, double* %add.ptr.i159, i64 %sub.i.epil
  %26 = load double, double* %arrayidx10.i.epil, align 8, !tbaa !84
  %arrayidx11.i.epil = getelementptr inbounds double, double* %add.ptr.i159, i64 %j.025.i.epil
  store double %26, double* %arrayidx11.i.epil, align 8, !tbaa !84
  %cmp2.i.epil = icmp sgt i64 %j.025.i.epil, 1
  br i1 %cmp2.i.epil, label %land.rhs.i.epil, label %while.end.i.epil, !llvm.loop !117

while.end.i.epil:                                 ; preds = %while.body.i.epil, %land.rhs.i.epil
  %j.0.lcssa.i.epil = phi i64 [ 0, %while.body.i.epil ], [ %j.025.i.epil, %land.rhs.i.epil ]
  %arrayidx14.i.epil = getelementptr inbounds i32, i32* %add.ptr.i151, i64 %j.0.lcssa.i.epil
  store i32 %23, i32* %arrayidx14.i.epil, align 4, !tbaa !16
  %arrayidx15.i.epil = getelementptr inbounds double, double* %add.ptr.i159, i64 %j.0.lcssa.i.epil
  store double %24, double* %arrayidx15.i.epil, align 8, !tbaa !84
  br label %_ZN6miniFE20sort_with_companionsIidEEvlPT_PT0_.exit

_ZN6miniFE20sort_with_companionsIidEEvlPT_PT0_.exit: ; preds = %while.end.i.epil, %_ZN6miniFE20sort_with_companionsIidEEvlPT_PT0_.exit.loopexit.unr-lcssa, %for.body
  %cmp15.i.i = icmp sgt i64 %sub.ptr.sub, 0
  br i1 %cmp15.i.i, label %while.body.preheader.i.i, label %invoke.cont40

while.body.preheader.i.i:                         ; preds = %_ZN6miniFE20sort_with_companionsIidEEvlPT_PT0_.exit
  %sub.ptr.div.i.i18.i.i = lshr exact i64 %sub.ptr.sub, 2
  br label %while.body.i.i

while.body.i.i:                                   ; preds = %while.body.i.i, %while.body.preheader.i.i
  %__first.addr.017.i.i = phi i32* [ %__first.addr.1.i.i, %while.body.i.i ], [ %add.ptr.i151, %while.body.preheader.i.i ]
  %__len.016.i.i = phi i64 [ %__len.1.i.i, %while.body.i.i ], [ %sub.ptr.div.i.i18.i.i, %while.body.preheader.i.i ]
  %shr14.i.i = lshr i64 %__len.016.i.i, 1
  %incdec.ptr4.sink.i.i.i.i = getelementptr inbounds i32, i32* %__first.addr.017.i.i, i64 %shr14.i.i
  %27 = load i32, i32* %incdec.ptr4.sink.i.i.i.i, align 4, !tbaa !16
  %conv.i.i.i = sext i32 %27 to i64
  %cmp.i.i.i = icmp ugt i64 %sub.ptr.div.i, %conv.i.i.i
  %incdec.ptr.i.i = getelementptr inbounds i32, i32* %incdec.ptr4.sink.i.i.i.i, i64 1
  %28 = xor i64 %shr14.i.i, -1
  %sub2.i.i = add i64 %__len.016.i.i, %28
  %__len.1.i.i = select i1 %cmp.i.i.i, i64 %sub2.i.i, i64 %shr14.i.i
  %__first.addr.1.i.i = select i1 %cmp.i.i.i, i32* %incdec.ptr.i.i, i32* %__first.addr.017.i.i
  %cmp.i.i = icmp sgt i64 %__len.1.i.i, 0
  br i1 %cmp.i.i, label %while.body.i.i, label %invoke.cont40, !llvm.loop !119

invoke.cont40:                                    ; preds = %while.body.i.i, %_ZN6miniFE20sort_with_companionsIidEEvlPT_PT0_.exit
  %__first.addr.0.lcssa.i.i = phi i32* [ %add.ptr.i151, %_ZN6miniFE20sort_with_companionsIidEEvlPT_PT0_.exit ], [ %__first.addr.1.i.i, %while.body.i.i ]
  %29 = load i32, i32* %add.ptr.i, align 4, !tbaa !16
  %idx.ext = sext i32 %29 to i64
  %add.ptr = getelementptr inbounds i32, i32* %__first.addr.0.lcssa.i.i, i64 %idx.ext
  %sub.ptr.lhs.cast44 = ptrtoint i32* %add.ptr to i64
  %sub.ptr.sub46 = sub i64 %sub.ptr.lhs.cast44, %sub.ptr.rhs.cast
  %30 = lshr exact i64 %sub.ptr.sub46, 2
  %conv48 = trunc i64 %30 to i32
  store i32 %conv48, i32* %add.ptr.i167, align 4, !tbaa !16
  store i32 %conv48, i32* %add.ptr.i171, align 4, !tbaa !16
  %31 = load i32, i32* %add.ptr.i175, align 4, !tbaa !16
  %sub65 = add i32 %31, %num_extern_nz.0505
  %add66 = sub i32 %sub65, %conv48
  %exitcond.not = icmp eq i64 %add, %umax
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body, !llvm.loop !120

for.body.i.i.preheader.i.i.i.i.i197:              ; preds = %for.body.i.i.preheader.i.i.i.i.i142
  %32 = bitcast i8* %call2.i.i.i.i1.i.i147 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %call2.i.i.i.i1.i.i147, i8 0, i64 %mul.i.i.i.i.i.i139, i1 false)
  %mul.i.i.i.i.i.i194 = shl nuw nsw i64 %conv71, 3
  %call2.i.i.i.i1.i.i202 = invoke noalias noundef nonnull i8* @_Znwm(i64 noundef %mul.i.i.i.i.i.i194) #30
          to label %call2.i.i.i.i1.i.i.noexc201 unwind label %ehcleanup207.thread

call2.i.i.i.i1.i.i.noexc201:                      ; preds = %for.body.i.i.preheader.i.i.i.i.i197
  %add.ptr.i.i.i140 = getelementptr i32, i32* %32, i64 %conv71
  %33 = bitcast i8* %call2.i.i.i.i1.i.i202 to double*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %call2.i.i.i.i1.i.i202, i8 0, i64 %mul.i.i.i.i.i.i194, i1 false)
  %phi.cast = ptrtoint i32* %add.ptr.i.i.i140 to i64
  br label %invoke.cont80

invoke.cont80:                                    ; preds = %call2.i.i.i.i1.i.i.noexc201, %for.cond.cleanup
  %__first.addr.0.lcssa.i.i.i.i.i.i.i143479 = phi i64 [ %phi.cast, %call2.i.i.i.i1.i.i.noexc201 ], [ 0, %for.cond.cleanup ]
  %ext_cols.sroa.0.0472 = phi i32* [ %32, %call2.i.i.i.i1.i.i.noexc201 ], [ null, %for.cond.cleanup ]
  %ext_coefs.sroa.0.0 = phi double* [ %33, %call2.i.i.i.i1.i.i.noexc201 ], [ null, %for.cond.cleanup ]
  %add83 = add nsw i64 %sub.ptr.div.i, 1
  %cmp.not.i.i.i.i203 = icmp eq i64 %add83, 0
  br i1 %cmp.not.i.i.i.i203, label %invoke.cont86, label %cond.true.i.i.i.i206

cond.true.i.i.i.i206:                             ; preds = %invoke.cont80
  %cmp.i.i.i.i.i.i205 = icmp ugt i64 %add83, 4611686018427387903
  br i1 %cmp.i.i.i.i.i.i205, label %if.then.i.i.i.i.i.i207, label %for.body.i.i.preheader.i.i.i.i.i211

if.then.i.i.i.i.i.i207:                           ; preds = %cond.true.i.i.i.i206
  invoke void @_ZSt17__throw_bad_allocv() #29
          to label %.noexc214 unwind label %lpad85

.noexc214:                                        ; preds = %if.then.i.i.i.i.i.i207
  unreachable

for.body.i.i.preheader.i.i.i.i.i211:              ; preds = %cond.true.i.i.i.i206.thread, %cond.true.i.i.i.i206
  %tmp_row_offsets.sroa.0.0458556586596639 = phi i32* [ null, %cond.true.i.i.i.i206.thread ], [ %2, %cond.true.i.i.i.i206 ]
  %tmp_row_offsets_external.sroa.0.0564585598638 = phi i32* [ null, %cond.true.i.i.i.i206.thread ], [ %3, %cond.true.i.i.i.i206 ]
  %_M_start.i150572584600637 = phi i32** [ %_M_start.i150554, %cond.true.i.i.i.i206.thread ], [ %_M_start.i150, %cond.true.i.i.i.i206 ]
  %_M_start.i158574583602636 = phi double** [ %_M_start.i158555, %cond.true.i.i.i.i206.thread ], [ %_M_start.i158, %cond.true.i.i.i.i206 ]
  %__first.addr.0.lcssa.i.i.i.i.i.i.i143479604635 = phi i64 [ 0, %cond.true.i.i.i.i206.thread ], [ %__first.addr.0.lcssa.i.i.i.i.i.i.i143479, %cond.true.i.i.i.i206 ]
  %ext_cols.sroa.0.0472606634 = phi i32* [ null, %cond.true.i.i.i.i206.thread ], [ %ext_cols.sroa.0.0472, %cond.true.i.i.i.i206 ]
  %ext_coefs.sroa.0.0613633 = phi double* [ null, %cond.true.i.i.i.i206.thread ], [ %ext_coefs.sroa.0.0, %cond.true.i.i.i.i206 ]
  %add83620632 = phi i64 [ 1, %cond.true.i.i.i.i206.thread ], [ %add83, %cond.true.i.i.i.i206 ]
  %mul.i.i.i.i.i.i208 = shl nuw i64 %add83620632, 2
  %call2.i.i.i.i1.i.i216 = invoke noalias noundef nonnull i8* @_Znwm(i64 noundef %mul.i.i.i.i.i.i208) #30
          to label %call2.i.i.i.i1.i.i.noexc215 unwind label %lpad85

call2.i.i.i.i1.i.i.noexc215:                      ; preds = %for.body.i.i.preheader.i.i.i.i.i211
  %34 = bitcast i8* %call2.i.i.i.i1.i.i216 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %call2.i.i.i.i1.i.i216, i8 0, i64 %mul.i.i.i.i.i.i208, i1 false)
  br label %invoke.cont86

invoke.cont86:                                    ; preds = %call2.i.i.i.i1.i.i.noexc215, %invoke.cont80
  %add83621 = phi i64 [ %add83620632, %call2.i.i.i.i1.i.i.noexc215 ], [ 0, %invoke.cont80 ]
  %ext_coefs.sroa.0.0614 = phi double* [ %ext_coefs.sroa.0.0613633, %call2.i.i.i.i1.i.i.noexc215 ], [ %ext_coefs.sroa.0.0, %invoke.cont80 ]
  %ext_cols.sroa.0.0472607 = phi i32* [ %ext_cols.sroa.0.0472606634, %call2.i.i.i.i1.i.i.noexc215 ], [ %ext_cols.sroa.0.0472, %invoke.cont80 ]
  %__first.addr.0.lcssa.i.i.i.i.i.i.i143479605 = phi i64 [ %__first.addr.0.lcssa.i.i.i.i.i.i.i143479604635, %call2.i.i.i.i1.i.i.noexc215 ], [ %__first.addr.0.lcssa.i.i.i.i.i.i.i143479, %invoke.cont80 ]
  %_M_start.i158574583603 = phi double** [ %_M_start.i158574583602636, %call2.i.i.i.i1.i.i.noexc215 ], [ %_M_start.i158, %invoke.cont80 ]
  %_M_start.i150572584601 = phi i32** [ %_M_start.i150572584600637, %call2.i.i.i.i1.i.i.noexc215 ], [ %_M_start.i150, %invoke.cont80 ]
  %tmp_row_offsets_external.sroa.0.0564585599 = phi i32* [ %tmp_row_offsets_external.sroa.0.0564585598638, %call2.i.i.i.i1.i.i.noexc215 ], [ %3, %invoke.cont80 ]
  %tmp_row_offsets.sroa.0.0458556586597 = phi i32* [ %tmp_row_offsets.sroa.0.0458556586596639, %call2.i.i.i.i1.i.i.noexc215 ], [ %2, %invoke.cont80 ]
  %ext_offsets.sroa.0.0 = phi i32* [ %34, %call2.i.i.i.i1.i.i.noexc215 ], [ null, %invoke.cont80 ]
  %35 = load i32*, i32** %_M_start.i150572584601, align 8
  %36 = load double*, double** %_M_start.i158574583603, align 8
  br i1 %cmp.not.i.i.i.i, label %for.cond.cleanup93, label %for.body94.preheader

for.body94.preheader:                             ; preds = %invoke.cont86
  %umax535 = call i64 @llvm.umax.i64(i64 %sub.ptr.div.i, i64 1)
  br label %for.body94

for.cond.cleanup93:                               ; preds = %for.cond.cleanup103, %invoke.cont86
  %offset89.0.lcssa = phi i32 [ 0, %invoke.cont86 ], [ %offset89.1.lcssa, %for.cond.cleanup103 ]
  %add.ptr.i219 = getelementptr inbounds i32, i32* %ext_offsets.sroa.0.0, i64 %sub.ptr.div.i
  store i32 %offset89.0.lcssa, i32* %add.ptr.i219, align 4, !tbaa !16
  %row_offsets123 = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 3
  %_M_finish.i.i220 = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 3, i32 0, i32 0, i32 1
  %37 = load i32*, i32** %_M_finish.i.i220, align 8, !tbaa !71
  %_M_start.i.i = getelementptr inbounds %"class.std::vector.15", %"class.std::vector.15"* %row_offsets123, i64 0, i32 0, i32 0, i32 0
  %38 = load i32*, i32** %_M_start.i.i, align 8, !tbaa !74
  %sub.ptr.lhs.cast.i.i = ptrtoint i32* %37 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i32* %38 to i64
  %sub.ptr.sub.i.i = sub i64 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  %sub.ptr.div.i.i = ashr exact i64 %sub.ptr.sub.i.i, 2
  %cmp.i = icmp ugt i64 %add83621, %sub.ptr.div.i.i
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %for.cond.cleanup93
  %sub.i221 = sub nsw i64 %add83621, %sub.ptr.div.i.i
  invoke void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(%"class.std::vector.15"* noundef nonnull align 8 dereferenceable(24) %row_offsets123, i64 noundef %sub.i221)
          to label %if.then.i._ZNSt6vectorIiSaIiEE6resizeEm.exit_crit_edge unwind label %lpad125.thread

if.then.i._ZNSt6vectorIiSaIiEE6resizeEm.exit_crit_edge: ; preds = %if.then.i
  %.pre = load i32*, i32** %_M_start.i.i, align 8
  br label %_ZNSt6vectorIiSaIiEE6resizeEm.exit

lpad125.thread:                                   ; preds = %if.then.i
  %39 = landingpad { i8*, i32 }
          cleanup
  br label %if.then.i.i.i

if.else.i:                                        ; preds = %for.cond.cleanup93
  %cmp4.i = icmp ult i64 %add83621, %sub.ptr.div.i.i
  br i1 %cmp4.i, label %if.then5.i, label %_ZNSt6vectorIiSaIiEE6resizeEm.exit

if.then5.i:                                       ; preds = %if.else.i
  %add.ptr.i222 = getelementptr inbounds i32, i32* %38, i64 %add83621
  %tobool.not.i.i = icmp eq i32* %37, %add.ptr.i222
  br i1 %tobool.not.i.i, label %_ZNSt6vectorIiSaIiEE6resizeEm.exit, label %invoke.cont.i.i

invoke.cont.i.i:                                  ; preds = %if.then5.i
  store i32* %add.ptr.i222, i32** %_M_finish.i.i220, align 8, !tbaa !71
  br label %_ZNSt6vectorIiSaIiEE6resizeEm.exit

_ZNSt6vectorIiSaIiEE6resizeEm.exit:               ; preds = %if.then.i._ZNSt6vectorIiSaIiEE6resizeEm.exit_crit_edge, %if.else.i, %if.then5.i, %invoke.cont.i.i
  %40 = phi i32* [ %.pre, %if.then.i._ZNSt6vectorIiSaIiEE6resizeEm.exit_crit_edge ], [ %38, %if.else.i ], [ %38, %if.then5.i ], [ %38, %invoke.cont.i.i ]
  br i1 %cmp.not.i.i.i.i, label %for.cond.cleanup130, label %for.body131.preheader

for.body131.preheader:                            ; preds = %_ZNSt6vectorIiSaIiEE6resizeEm.exit
  %umax544 = call i64 @llvm.umax.i64(i64 %sub.ptr.div.i, i64 1)
  %xtraiter729 = and i64 %umax544, 1
  %41 = icmp ult i64 %sub.ptr.sub.i, 8
  br i1 %41, label %for.cond.cleanup130.loopexit.unr-lcssa, label %for.body131.preheader.new

for.body131.preheader.new:                        ; preds = %for.body131.preheader
  %unroll_iter732 = and i64 %umax544, -2
  br label %for.body131

ehcleanup210.thread:                              ; preds = %if.then.i.i.i.i.i.i138, %for.body.i.i.preheader.i.i.i.i.i142
  %42 = landingpad { i8*, i32 }
          cleanup
  br label %if.then.i.i.i319

ehcleanup207.thread:                              ; preds = %for.body.i.i.preheader.i.i.i.i.i197
  %43 = landingpad { i8*, i32 }
          cleanup
  br label %if.then.i.i.i315

lpad85:                                           ; preds = %for.body.i.i.preheader.i.i.i.i.i211, %if.then.i.i.i.i.i.i207
  %ext_coefs.sroa.0.0619 = phi double* [ %ext_coefs.sroa.0.0613633, %for.body.i.i.preheader.i.i.i.i.i211 ], [ %ext_coefs.sroa.0.0, %if.then.i.i.i.i.i.i207 ]
  %ext_cols.sroa.0.0472612 = phi i32* [ %ext_cols.sroa.0.0472606634, %for.body.i.i.preheader.i.i.i.i.i211 ], [ %ext_cols.sroa.0.0472, %if.then.i.i.i.i.i.i207 ]
  %tmp_row_offsets_external.sroa.0.0570 = phi i32* [ %tmp_row_offsets_external.sroa.0.0564585598638, %for.body.i.i.preheader.i.i.i.i.i211 ], [ %3, %if.then.i.i.i.i.i.i207 ]
  %tmp_row_offsets.sroa.0.0458562 = phi i32* [ %tmp_row_offsets.sroa.0.0458556586596639, %for.body.i.i.preheader.i.i.i.i.i211 ], [ %2, %if.then.i.i.i.i.i.i207 ]
  %44 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup205

for.body94:                                       ; preds = %for.body94.preheader, %for.cond.cleanup103
  %i90.0512 = phi i64 [ %inc120, %for.cond.cleanup103 ], [ 0, %for.body94.preheader ]
  %offset89.0511 = phi i32 [ %offset89.1.lcssa, %for.cond.cleanup103 ], [ 0, %for.body94.preheader ]
  %add.ptr.i225 = getelementptr inbounds i32, i32* %ext_offsets.sroa.0.0, i64 %i90.0512
  store i32 %offset89.0511, i32* %add.ptr.i225, align 4, !tbaa !16
  %mul96 = shl i64 %i90.0512, 1
  %add.ptr.i227 = getelementptr inbounds i32, i32* %tmp_row_offsets_external.sroa.0.0564585599, i64 %mul96
  %45 = load i32, i32* %add.ptr.i227, align 4, !tbaa !16
  %add100 = or i64 %mul96, 1
  %add.ptr.i229 = getelementptr inbounds i32, i32* %tmp_row_offsets_external.sroa.0.0564585599, i64 %add100
  %46 = load i32, i32* %add.ptr.i229, align 4, !tbaa !16
  %cmp102506 = icmp slt i32 %45, %46
  br i1 %cmp102506, label %for.body104.preheader, label %for.cond.cleanup103

for.body104.preheader:                            ; preds = %for.body94
  %47 = sext i32 %45 to i64
  %48 = sext i32 %offset89.0511 to i64
  %wide.trip.count = sext i32 %46 to i64
  %49 = sub nsw i64 %wide.trip.count, %47
  %min.iters.check = icmp ult i64 %49, 8
  br i1 %min.iters.check, label %for.body104.preheader721, label %vector.memcheck

vector.memcheck:                                  ; preds = %for.body104.preheader
  %scevgep = getelementptr i32, i32* %ext_cols.sroa.0.0472607, i64 %48
  %50 = add nsw i64 %48, %wide.trip.count
  %51 = sub nsw i64 %50, %47
  %scevgep650 = getelementptr i32, i32* %ext_cols.sroa.0.0472607, i64 %51
  %scevgep652 = getelementptr i32, i32* %35, i64 %47
  %scevgep654 = getelementptr i32, i32* %35, i64 %wide.trip.count
  %scevgep656 = getelementptr double, double* %ext_coefs.sroa.0.0614, i64 %48
  %scevgep658 = getelementptr double, double* %ext_coefs.sroa.0.0614, i64 %51
  %scevgep660 = getelementptr double, double* %36, i64 %47
  %scevgep662 = getelementptr double, double* %36, i64 %wide.trip.count
  %bound0 = icmp ult i32* %scevgep, %scevgep654
  %bound1 = icmp ult i32* %scevgep652, %scevgep650
  %found.conflict = and i1 %bound0, %bound1
  %bound0664 = icmp ult double* %scevgep656, %scevgep662
  %bound1665 = icmp ult double* %scevgep660, %scevgep658
  %found.conflict666 = and i1 %bound0664, %bound1665
  %conflict.rdx = or i1 %found.conflict, %found.conflict666
  br i1 %conflict.rdx, label %for.body104.preheader721, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.vec = and i64 %49, -8
  %ind.end = add nsw i64 %n.vec, %48
  %ind.end668 = add nsw i64 %n.vec, %47
  %52 = add nsw i64 %n.vec, -8
  %53 = lshr exact i64 %52, 3
  %54 = add nuw nsw i64 %53, 1
  %xtraiter723 = and i64 %54, 1
  %55 = icmp eq i64 %52, 0
  br i1 %55, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter725 = and i64 %54, 4611686018427387902
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.1, %vector.body ]
  %niter726 = phi i64 [ 0, %vector.ph.new ], [ %niter726.next.1, %vector.body ]
  %offset.idx = add i64 %index, %48
  %offset.idx669 = add i64 %index, %47
  %56 = getelementptr inbounds i32, i32* %35, i64 %offset.idx669
  %57 = bitcast i32* %56 to <2 x i32>*
  %wide.load = load <2 x i32>, <2 x i32>* %57, align 4, !tbaa !16, !alias.scope !121
  %58 = getelementptr inbounds i32, i32* %56, i64 2
  %59 = bitcast i32* %58 to <2 x i32>*
  %wide.load670 = load <2 x i32>, <2 x i32>* %59, align 4, !tbaa !16, !alias.scope !121
  %60 = getelementptr inbounds i32, i32* %56, i64 4
  %61 = bitcast i32* %60 to <2 x i32>*
  %wide.load671 = load <2 x i32>, <2 x i32>* %61, align 4, !tbaa !16, !alias.scope !121
  %62 = getelementptr inbounds i32, i32* %56, i64 6
  %63 = bitcast i32* %62 to <2 x i32>*
  %wide.load672 = load <2 x i32>, <2 x i32>* %63, align 4, !tbaa !16, !alias.scope !121
  %64 = getelementptr inbounds i32, i32* %ext_cols.sroa.0.0472607, i64 %offset.idx
  %65 = bitcast i32* %64 to <2 x i32>*
  store <2 x i32> %wide.load, <2 x i32>* %65, align 4, !tbaa !16, !alias.scope !124, !noalias !121
  %66 = getelementptr inbounds i32, i32* %64, i64 2
  %67 = bitcast i32* %66 to <2 x i32>*
  store <2 x i32> %wide.load670, <2 x i32>* %67, align 4, !tbaa !16, !alias.scope !124, !noalias !121
  %68 = getelementptr inbounds i32, i32* %64, i64 4
  %69 = bitcast i32* %68 to <2 x i32>*
  store <2 x i32> %wide.load671, <2 x i32>* %69, align 4, !tbaa !16, !alias.scope !124, !noalias !121
  %70 = getelementptr inbounds i32, i32* %64, i64 6
  %71 = bitcast i32* %70 to <2 x i32>*
  store <2 x i32> %wide.load672, <2 x i32>* %71, align 4, !tbaa !16, !alias.scope !124, !noalias !121
  %72 = getelementptr inbounds double, double* %36, i64 %offset.idx669
  %73 = bitcast double* %72 to <2 x double>*
  %wide.load673 = load <2 x double>, <2 x double>* %73, align 8, !tbaa !84, !alias.scope !126
  %74 = getelementptr inbounds double, double* %72, i64 2
  %75 = bitcast double* %74 to <2 x double>*
  %wide.load674 = load <2 x double>, <2 x double>* %75, align 8, !tbaa !84, !alias.scope !126
  %76 = getelementptr inbounds double, double* %72, i64 4
  %77 = bitcast double* %76 to <2 x double>*
  %wide.load675 = load <2 x double>, <2 x double>* %77, align 8, !tbaa !84, !alias.scope !126
  %78 = getelementptr inbounds double, double* %72, i64 6
  %79 = bitcast double* %78 to <2 x double>*
  %wide.load676 = load <2 x double>, <2 x double>* %79, align 8, !tbaa !84, !alias.scope !126
  %80 = getelementptr inbounds double, double* %ext_coefs.sroa.0.0614, i64 %offset.idx
  %81 = bitcast double* %80 to <2 x double>*
  store <2 x double> %wide.load673, <2 x double>* %81, align 8, !tbaa !84, !alias.scope !128, !noalias !126
  %82 = getelementptr inbounds double, double* %80, i64 2
  %83 = bitcast double* %82 to <2 x double>*
  store <2 x double> %wide.load674, <2 x double>* %83, align 8, !tbaa !84, !alias.scope !128, !noalias !126
  %84 = getelementptr inbounds double, double* %80, i64 4
  %85 = bitcast double* %84 to <2 x double>*
  store <2 x double> %wide.load675, <2 x double>* %85, align 8, !tbaa !84, !alias.scope !128, !noalias !126
  %86 = getelementptr inbounds double, double* %80, i64 6
  %87 = bitcast double* %86 to <2 x double>*
  store <2 x double> %wide.load676, <2 x double>* %87, align 8, !tbaa !84, !alias.scope !128, !noalias !126
  %index.next = or i64 %index, 8
  %offset.idx.1 = add i64 %index.next, %48
  %offset.idx669.1 = add i64 %index.next, %47
  %88 = getelementptr inbounds i32, i32* %35, i64 %offset.idx669.1
  %89 = bitcast i32* %88 to <2 x i32>*
  %wide.load.1 = load <2 x i32>, <2 x i32>* %89, align 4, !tbaa !16, !alias.scope !121
  %90 = getelementptr inbounds i32, i32* %88, i64 2
  %91 = bitcast i32* %90 to <2 x i32>*
  %wide.load670.1 = load <2 x i32>, <2 x i32>* %91, align 4, !tbaa !16, !alias.scope !121
  %92 = getelementptr inbounds i32, i32* %88, i64 4
  %93 = bitcast i32* %92 to <2 x i32>*
  %wide.load671.1 = load <2 x i32>, <2 x i32>* %93, align 4, !tbaa !16, !alias.scope !121
  %94 = getelementptr inbounds i32, i32* %88, i64 6
  %95 = bitcast i32* %94 to <2 x i32>*
  %wide.load672.1 = load <2 x i32>, <2 x i32>* %95, align 4, !tbaa !16, !alias.scope !121
  %96 = getelementptr inbounds i32, i32* %ext_cols.sroa.0.0472607, i64 %offset.idx.1
  %97 = bitcast i32* %96 to <2 x i32>*
  store <2 x i32> %wide.load.1, <2 x i32>* %97, align 4, !tbaa !16, !alias.scope !124, !noalias !121
  %98 = getelementptr inbounds i32, i32* %96, i64 2
  %99 = bitcast i32* %98 to <2 x i32>*
  store <2 x i32> %wide.load670.1, <2 x i32>* %99, align 4, !tbaa !16, !alias.scope !124, !noalias !121
  %100 = getelementptr inbounds i32, i32* %96, i64 4
  %101 = bitcast i32* %100 to <2 x i32>*
  store <2 x i32> %wide.load671.1, <2 x i32>* %101, align 4, !tbaa !16, !alias.scope !124, !noalias !121
  %102 = getelementptr inbounds i32, i32* %96, i64 6
  %103 = bitcast i32* %102 to <2 x i32>*
  store <2 x i32> %wide.load672.1, <2 x i32>* %103, align 4, !tbaa !16, !alias.scope !124, !noalias !121
  %104 = getelementptr inbounds double, double* %36, i64 %offset.idx669.1
  %105 = bitcast double* %104 to <2 x double>*
  %wide.load673.1 = load <2 x double>, <2 x double>* %105, align 8, !tbaa !84, !alias.scope !126
  %106 = getelementptr inbounds double, double* %104, i64 2
  %107 = bitcast double* %106 to <2 x double>*
  %wide.load674.1 = load <2 x double>, <2 x double>* %107, align 8, !tbaa !84, !alias.scope !126
  %108 = getelementptr inbounds double, double* %104, i64 4
  %109 = bitcast double* %108 to <2 x double>*
  %wide.load675.1 = load <2 x double>, <2 x double>* %109, align 8, !tbaa !84, !alias.scope !126
  %110 = getelementptr inbounds double, double* %104, i64 6
  %111 = bitcast double* %110 to <2 x double>*
  %wide.load676.1 = load <2 x double>, <2 x double>* %111, align 8, !tbaa !84, !alias.scope !126
  %112 = getelementptr inbounds double, double* %ext_coefs.sroa.0.0614, i64 %offset.idx.1
  %113 = bitcast double* %112 to <2 x double>*
  store <2 x double> %wide.load673.1, <2 x double>* %113, align 8, !tbaa !84, !alias.scope !128, !noalias !126
  %114 = getelementptr inbounds double, double* %112, i64 2
  %115 = bitcast double* %114 to <2 x double>*
  store <2 x double> %wide.load674.1, <2 x double>* %115, align 8, !tbaa !84, !alias.scope !128, !noalias !126
  %116 = getelementptr inbounds double, double* %112, i64 4
  %117 = bitcast double* %116 to <2 x double>*
  store <2 x double> %wide.load675.1, <2 x double>* %117, align 8, !tbaa !84, !alias.scope !128, !noalias !126
  %118 = getelementptr inbounds double, double* %112, i64 6
  %119 = bitcast double* %118 to <2 x double>*
  store <2 x double> %wide.load676.1, <2 x double>* %119, align 8, !tbaa !84, !alias.scope !128, !noalias !126
  %index.next.1 = add nuw i64 %index, 16
  %niter726.next.1 = add i64 %niter726, 2
  %niter726.ncmp.1 = icmp eq i64 %niter726.next.1, %unroll_iter725
  br i1 %niter726.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !130

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  %lcmp.mod724.not = icmp eq i64 %xtraiter723, 0
  br i1 %lcmp.mod724.not, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %offset.idx.epil = add i64 %index.unr, %48
  %offset.idx669.epil = add i64 %index.unr, %47
  %120 = getelementptr inbounds i32, i32* %35, i64 %offset.idx669.epil
  %121 = bitcast i32* %120 to <2 x i32>*
  %wide.load.epil = load <2 x i32>, <2 x i32>* %121, align 4, !tbaa !16, !alias.scope !121
  %122 = getelementptr inbounds i32, i32* %120, i64 2
  %123 = bitcast i32* %122 to <2 x i32>*
  %wide.load670.epil = load <2 x i32>, <2 x i32>* %123, align 4, !tbaa !16, !alias.scope !121
  %124 = getelementptr inbounds i32, i32* %120, i64 4
  %125 = bitcast i32* %124 to <2 x i32>*
  %wide.load671.epil = load <2 x i32>, <2 x i32>* %125, align 4, !tbaa !16, !alias.scope !121
  %126 = getelementptr inbounds i32, i32* %120, i64 6
  %127 = bitcast i32* %126 to <2 x i32>*
  %wide.load672.epil = load <2 x i32>, <2 x i32>* %127, align 4, !tbaa !16, !alias.scope !121
  %128 = getelementptr inbounds i32, i32* %ext_cols.sroa.0.0472607, i64 %offset.idx.epil
  %129 = bitcast i32* %128 to <2 x i32>*
  store <2 x i32> %wide.load.epil, <2 x i32>* %129, align 4, !tbaa !16, !alias.scope !124, !noalias !121
  %130 = getelementptr inbounds i32, i32* %128, i64 2
  %131 = bitcast i32* %130 to <2 x i32>*
  store <2 x i32> %wide.load670.epil, <2 x i32>* %131, align 4, !tbaa !16, !alias.scope !124, !noalias !121
  %132 = getelementptr inbounds i32, i32* %128, i64 4
  %133 = bitcast i32* %132 to <2 x i32>*
  store <2 x i32> %wide.load671.epil, <2 x i32>* %133, align 4, !tbaa !16, !alias.scope !124, !noalias !121
  %134 = getelementptr inbounds i32, i32* %128, i64 6
  %135 = bitcast i32* %134 to <2 x i32>*
  store <2 x i32> %wide.load672.epil, <2 x i32>* %135, align 4, !tbaa !16, !alias.scope !124, !noalias !121
  %136 = getelementptr inbounds double, double* %36, i64 %offset.idx669.epil
  %137 = bitcast double* %136 to <2 x double>*
  %wide.load673.epil = load <2 x double>, <2 x double>* %137, align 8, !tbaa !84, !alias.scope !126
  %138 = getelementptr inbounds double, double* %136, i64 2
  %139 = bitcast double* %138 to <2 x double>*
  %wide.load674.epil = load <2 x double>, <2 x double>* %139, align 8, !tbaa !84, !alias.scope !126
  %140 = getelementptr inbounds double, double* %136, i64 4
  %141 = bitcast double* %140 to <2 x double>*
  %wide.load675.epil = load <2 x double>, <2 x double>* %141, align 8, !tbaa !84, !alias.scope !126
  %142 = getelementptr inbounds double, double* %136, i64 6
  %143 = bitcast double* %142 to <2 x double>*
  %wide.load676.epil = load <2 x double>, <2 x double>* %143, align 8, !tbaa !84, !alias.scope !126
  %144 = getelementptr inbounds double, double* %ext_coefs.sroa.0.0614, i64 %offset.idx.epil
  %145 = bitcast double* %144 to <2 x double>*
  store <2 x double> %wide.load673.epil, <2 x double>* %145, align 8, !tbaa !84, !alias.scope !128, !noalias !126
  %146 = getelementptr inbounds double, double* %144, i64 2
  %147 = bitcast double* %146 to <2 x double>*
  store <2 x double> %wide.load674.epil, <2 x double>* %147, align 8, !tbaa !84, !alias.scope !128, !noalias !126
  %148 = getelementptr inbounds double, double* %144, i64 4
  %149 = bitcast double* %148 to <2 x double>*
  store <2 x double> %wide.load675.epil, <2 x double>* %149, align 8, !tbaa !84, !alias.scope !128, !noalias !126
  %150 = getelementptr inbounds double, double* %144, i64 6
  %151 = bitcast double* %150 to <2 x double>*
  store <2 x double> %wide.load676.epil, <2 x double>* %151, align 8, !tbaa !84, !alias.scope !128, !noalias !126
  br label %middle.block

middle.block:                                     ; preds = %middle.block.unr-lcssa, %vector.body.epil
  %cmp.n = icmp eq i64 %49, %n.vec
  br i1 %cmp.n, label %for.cond.cleanup103.loopexit, label %for.body104.preheader721

for.body104.preheader721:                         ; preds = %vector.memcheck, %for.body104.preheader, %middle.block
  %indvars.iv529.ph = phi i64 [ %48, %vector.memcheck ], [ %48, %for.body104.preheader ], [ %ind.end, %middle.block ]
  %indvars.iv.ph = phi i64 [ %47, %vector.memcheck ], [ %47, %for.body104.preheader ], [ %ind.end668, %middle.block ]
  %152 = sub nsw i64 %wide.trip.count, %indvars.iv.ph
  %153 = xor i64 %indvars.iv.ph, -1
  %154 = add nsw i64 %153, %wide.trip.count
  %xtraiter727 = and i64 %152, 3
  %lcmp.mod728.not = icmp eq i64 %xtraiter727, 0
  br i1 %lcmp.mod728.not, label %for.body104.prol.loopexit, label %for.body104.prol

for.body104.prol:                                 ; preds = %for.body104.preheader721, %for.body104.prol
  %indvars.iv529.prol = phi i64 [ %indvars.iv.next530.prol, %for.body104.prol ], [ %indvars.iv529.ph, %for.body104.preheader721 ]
  %indvars.iv.prol = phi i64 [ %indvars.iv.next.prol, %for.body104.prol ], [ %indvars.iv.ph, %for.body104.preheader721 ]
  %prol.iter = phi i64 [ %prol.iter.next, %for.body104.prol ], [ 0, %for.body104.preheader721 ]
  %add.ptr.i231.prol = getelementptr inbounds i32, i32* %35, i64 %indvars.iv.prol
  %155 = load i32, i32* %add.ptr.i231.prol, align 4, !tbaa !16
  %add.ptr.i233.prol = getelementptr inbounds i32, i32* %ext_cols.sroa.0.0472607, i64 %indvars.iv529.prol
  store i32 %155, i32* %add.ptr.i233.prol, align 4, !tbaa !16
  %add.ptr.i235.prol = getelementptr inbounds double, double* %36, i64 %indvars.iv.prol
  %156 = load double, double* %add.ptr.i235.prol, align 8, !tbaa !84
  %indvars.iv.next530.prol = add nsw i64 %indvars.iv529.prol, 1
  %add.ptr.i237.prol = getelementptr inbounds double, double* %ext_coefs.sroa.0.0614, i64 %indvars.iv529.prol
  store double %156, double* %add.ptr.i237.prol, align 8, !tbaa !84
  %indvars.iv.next.prol = add nsw i64 %indvars.iv.prol, 1
  %prol.iter.next = add i64 %prol.iter, 1
  %prol.iter.cmp.not = icmp eq i64 %prol.iter.next, %xtraiter727
  br i1 %prol.iter.cmp.not, label %for.body104.prol.loopexit, label %for.body104.prol, !llvm.loop !132

for.body104.prol.loopexit:                        ; preds = %for.body104.prol, %for.body104.preheader721
  %indvars.iv.next530.lcssa722.unr = phi i64 [ undef, %for.body104.preheader721 ], [ %indvars.iv.next530.prol, %for.body104.prol ]
  %indvars.iv529.unr = phi i64 [ %indvars.iv529.ph, %for.body104.preheader721 ], [ %indvars.iv.next530.prol, %for.body104.prol ]
  %indvars.iv.unr = phi i64 [ %indvars.iv.ph, %for.body104.preheader721 ], [ %indvars.iv.next.prol, %for.body104.prol ]
  %157 = icmp ult i64 %154, 3
  br i1 %157, label %for.cond.cleanup103.loopexit, label %for.body104

for.cond.cleanup103.loopexit:                     ; preds = %for.body104.prol.loopexit, %for.body104, %middle.block
  %indvars.iv.next530.lcssa = phi i64 [ %ind.end, %middle.block ], [ %indvars.iv.next530.lcssa722.unr, %for.body104.prol.loopexit ], [ %indvars.iv.next530.3, %for.body104 ]
  %158 = trunc i64 %indvars.iv.next530.lcssa to i32
  br label %for.cond.cleanup103

for.cond.cleanup103:                              ; preds = %for.cond.cleanup103.loopexit, %for.body94
  %offset89.1.lcssa = phi i32 [ %offset89.0511, %for.body94 ], [ %158, %for.cond.cleanup103.loopexit ]
  %inc120 = add nuw i64 %i90.0512, 1
  %exitcond536.not = icmp eq i64 %inc120, %umax535
  br i1 %exitcond536.not, label %for.cond.cleanup93, label %for.body94, !llvm.loop !133

for.body104:                                      ; preds = %for.body104.prol.loopexit, %for.body104
  %indvars.iv529 = phi i64 [ %indvars.iv.next530.3, %for.body104 ], [ %indvars.iv529.unr, %for.body104.prol.loopexit ]
  %indvars.iv = phi i64 [ %indvars.iv.next.3, %for.body104 ], [ %indvars.iv.unr, %for.body104.prol.loopexit ]
  %add.ptr.i231 = getelementptr inbounds i32, i32* %35, i64 %indvars.iv
  %159 = load i32, i32* %add.ptr.i231, align 4, !tbaa !16
  %add.ptr.i233 = getelementptr inbounds i32, i32* %ext_cols.sroa.0.0472607, i64 %indvars.iv529
  store i32 %159, i32* %add.ptr.i233, align 4, !tbaa !16
  %add.ptr.i235 = getelementptr inbounds double, double* %36, i64 %indvars.iv
  %160 = load double, double* %add.ptr.i235, align 8, !tbaa !84
  %indvars.iv.next530 = add nsw i64 %indvars.iv529, 1
  %add.ptr.i237 = getelementptr inbounds double, double* %ext_coefs.sroa.0.0614, i64 %indvars.iv529
  store double %160, double* %add.ptr.i237, align 8, !tbaa !84
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %add.ptr.i231.1 = getelementptr inbounds i32, i32* %35, i64 %indvars.iv.next
  %161 = load i32, i32* %add.ptr.i231.1, align 4, !tbaa !16
  %add.ptr.i233.1 = getelementptr inbounds i32, i32* %ext_cols.sroa.0.0472607, i64 %indvars.iv.next530
  store i32 %161, i32* %add.ptr.i233.1, align 4, !tbaa !16
  %add.ptr.i235.1 = getelementptr inbounds double, double* %36, i64 %indvars.iv.next
  %162 = load double, double* %add.ptr.i235.1, align 8, !tbaa !84
  %indvars.iv.next530.1 = add nsw i64 %indvars.iv529, 2
  %add.ptr.i237.1 = getelementptr inbounds double, double* %ext_coefs.sroa.0.0614, i64 %indvars.iv.next530
  store double %162, double* %add.ptr.i237.1, align 8, !tbaa !84
  %indvars.iv.next.1 = add nsw i64 %indvars.iv, 2
  %add.ptr.i231.2 = getelementptr inbounds i32, i32* %35, i64 %indvars.iv.next.1
  %163 = load i32, i32* %add.ptr.i231.2, align 4, !tbaa !16
  %add.ptr.i233.2 = getelementptr inbounds i32, i32* %ext_cols.sroa.0.0472607, i64 %indvars.iv.next530.1
  store i32 %163, i32* %add.ptr.i233.2, align 4, !tbaa !16
  %add.ptr.i235.2 = getelementptr inbounds double, double* %36, i64 %indvars.iv.next.1
  %164 = load double, double* %add.ptr.i235.2, align 8, !tbaa !84
  %indvars.iv.next530.2 = add nsw i64 %indvars.iv529, 3
  %add.ptr.i237.2 = getelementptr inbounds double, double* %ext_coefs.sroa.0.0614, i64 %indvars.iv.next530.1
  store double %164, double* %add.ptr.i237.2, align 8, !tbaa !84
  %indvars.iv.next.2 = add nsw i64 %indvars.iv, 3
  %add.ptr.i231.3 = getelementptr inbounds i32, i32* %35, i64 %indvars.iv.next.2
  %165 = load i32, i32* %add.ptr.i231.3, align 4, !tbaa !16
  %add.ptr.i233.3 = getelementptr inbounds i32, i32* %ext_cols.sroa.0.0472607, i64 %indvars.iv.next530.2
  store i32 %165, i32* %add.ptr.i233.3, align 4, !tbaa !16
  %add.ptr.i235.3 = getelementptr inbounds double, double* %36, i64 %indvars.iv.next.2
  %166 = load double, double* %add.ptr.i235.3, align 8, !tbaa !84
  %indvars.iv.next530.3 = add nsw i64 %indvars.iv529, 4
  %add.ptr.i237.3 = getelementptr inbounds double, double* %ext_coefs.sroa.0.0614, i64 %indvars.iv.next530.2
  store double %166, double* %add.ptr.i237.3, align 8, !tbaa !84
  %indvars.iv.next.3 = add nsw i64 %indvars.iv, 4
  %exitcond534.not.3 = icmp eq i64 %indvars.iv.next.3, %wide.trip.count
  br i1 %exitcond534.not.3, label %for.cond.cleanup103.loopexit, label %for.body104, !llvm.loop !134

for.cond.cleanup130.loopexit.unr-lcssa:           ; preds = %for.cond.cleanup142.1, %for.body131.preheader
  %offset89.3.lcssa.lcssa.ph = phi i32 [ undef, %for.body131.preheader ], [ %offset89.3.lcssa.1, %for.cond.cleanup142.1 ]
  %i127.0520.unr = phi i64 [ 0, %for.body131.preheader ], [ %inc161.1, %for.cond.cleanup142.1 ]
  %offset89.2519.unr = phi i32 [ 0, %for.body131.preheader ], [ %offset89.3.lcssa.1, %for.cond.cleanup142.1 ]
  %lcmp.mod730.not = icmp eq i64 %xtraiter729, 0
  br i1 %lcmp.mod730.not, label %for.cond.cleanup130, label %for.body131.epil

for.body131.epil:                                 ; preds = %for.cond.cleanup130.loopexit.unr-lcssa
  %add.ptr.i242.epil = getelementptr inbounds i32, i32* %40, i64 %i127.0520.unr
  store i32 %offset89.2519.unr, i32* %add.ptr.i242.epil, align 4, !tbaa !16
  %mul135.epil = shl i64 %i127.0520.unr, 1
  %add.ptr.i244.epil = getelementptr inbounds i32, i32* %tmp_row_offsets.sroa.0.0458556586597, i64 %mul135.epil
  %167 = load i32, i32* %add.ptr.i244.epil, align 4, !tbaa !16
  %add139.epil = or i64 %mul135.epil, 1
  %add.ptr.i246.epil = getelementptr inbounds i32, i32* %tmp_row_offsets.sroa.0.0458556586597, i64 %add139.epil
  %168 = load i32*, i32** %_M_start.i150572584601, align 8
  %169 = load double*, double** %_M_start.i158574583603, align 8
  %170 = load i32, i32* %add.ptr.i246.epil, align 4, !tbaa !16
  %cmp141514.epil = icmp slt i32 %167, %170
  br i1 %cmp141514.epil, label %for.body143.preheader.epil, label %for.cond.cleanup130

for.body143.preheader.epil:                       ; preds = %for.body131.epil
  %171 = sext i32 %167 to i64
  %172 = sext i32 %offset89.2519.unr to i64
  br label %for.body143.epil

for.body143.epil:                                 ; preds = %for.body143.epil, %for.body143.preheader.epil
  %indvars.iv539.epil = phi i64 [ %172, %for.body143.preheader.epil ], [ %indvars.iv.next540.epil, %for.body143.epil ]
  %indvars.iv537.epil = phi i64 [ %171, %for.body143.preheader.epil ], [ %indvars.iv.next538.epil, %for.body143.epil ]
  %add.ptr.i248.epil = getelementptr inbounds i32, i32* %168, i64 %indvars.iv537.epil
  %173 = load i32, i32* %add.ptr.i248.epil, align 4, !tbaa !16
  %add.ptr.i250.epil = getelementptr inbounds i32, i32* %168, i64 %indvars.iv539.epil
  store i32 %173, i32* %add.ptr.i250.epil, align 4, !tbaa !16
  %add.ptr.i252.epil = getelementptr inbounds double, double* %169, i64 %indvars.iv537.epil
  %174 = load double, double* %add.ptr.i252.epil, align 8, !tbaa !84
  %indvars.iv.next540.epil = add nsw i64 %indvars.iv539.epil, 1
  %add.ptr.i254.epil = getelementptr inbounds double, double* %169, i64 %indvars.iv539.epil
  store double %174, double* %add.ptr.i254.epil, align 8, !tbaa !84
  %indvars.iv.next538.epil = add nsw i64 %indvars.iv537.epil, 1
  %175 = load i32, i32* %add.ptr.i246.epil, align 4, !tbaa !16
  %176 = sext i32 %175 to i64
  %cmp141.epil = icmp slt i64 %indvars.iv.next538.epil, %176
  br i1 %cmp141.epil, label %for.body143.epil, label %for.cond.cleanup142.loopexit.epil, !llvm.loop !135

for.cond.cleanup142.loopexit.epil:                ; preds = %for.body143.epil
  %177 = trunc i64 %indvars.iv.next540.epil to i32
  br label %for.cond.cleanup130

for.cond.cleanup130:                              ; preds = %for.cond.cleanup130.loopexit.unr-lcssa, %for.cond.cleanup142.loopexit.epil, %for.body131.epil, %_ZNSt6vectorIiSaIiEE6resizeEm.exit
  %offset89.2.lcssa = phi i32 [ 0, %_ZNSt6vectorIiSaIiEE6resizeEm.exit ], [ %offset89.3.lcssa.lcssa.ph, %for.cond.cleanup130.loopexit.unr-lcssa ], [ %offset89.2519.unr, %for.body131.epil ], [ %177, %for.cond.cleanup142.loopexit.epil ]
  %add.ptr.i239 = getelementptr inbounds i32, i32* %40, i64 %sub.ptr.div.i
  store i32 %offset89.2.lcssa, i32* %add.ptr.i239, align 4, !tbaa !16
  %conv168 = sext i32 %offset89.2.lcssa to i64
  %sub.ptr.rhs.cast.i258 = ptrtoint i32* %ext_cols.sroa.0.0472607 to i64
  %sub.ptr.sub.i259 = sub i64 %__first.addr.0.lcssa.i.i.i.i.i.i.i143479605, %sub.ptr.rhs.cast.i258
  %sub.ptr.div.i260 = ashr i64 %sub.ptr.sub.i259, 2
  %add170 = add nsw i64 %sub.ptr.div.i260, %conv168
  %178 = load i32*, i32** %_M_start.i150572584601, align 8
  %179 = load double*, double** %_M_start.i158574583603, align 8
  %cmp171523 = icmp ugt i64 %add170, %conv168
  br i1 %cmp171523, label %for.body173.preheader, label %for.cond.cleanup172

for.body173.preheader:                            ; preds = %for.cond.cleanup130
  %min.iters.check702 = icmp ult i64 %sub.ptr.sub.i259, 32
  br i1 %min.iters.check702, label %for.body173.preheader720, label %vector.memcheck677

vector.memcheck677:                               ; preds = %for.body173.preheader
  %scevgep678 = getelementptr i32, i32* %178, i64 %conv168
  %scevgep680 = getelementptr i32, i32* %178, i64 %add170
  %scevgep683 = getelementptr i32, i32* %ext_cols.sroa.0.0472607, i64 %sub.ptr.div.i260
  %scevgep685 = getelementptr double, double* %179, i64 %conv168
  %scevgep687 = getelementptr double, double* %179, i64 %add170
  %scevgep690 = getelementptr double, double* %ext_coefs.sroa.0.0614, i64 %sub.ptr.div.i260
  %bound0692 = icmp ult i32* %scevgep678, %scevgep683
  %bound1693 = icmp ult i32* %ext_cols.sroa.0.0472607, %scevgep680
  %found.conflict694 = and i1 %bound0692, %bound1693
  %bound0695 = icmp ult double* %scevgep685, %scevgep690
  %bound1696 = icmp ult double* %ext_coefs.sroa.0.0614, %scevgep687
  %found.conflict697 = and i1 %bound0695, %bound1696
  %conflict.rdx698 = or i1 %found.conflict694, %found.conflict697
  br i1 %conflict.rdx698, label %for.body173.preheader720, label %vector.ph703

vector.ph703:                                     ; preds = %vector.memcheck677
  %n.vec705 = and i64 %sub.ptr.div.i260, -8
  %ind.end707 = add nsw i64 %n.vec705, %conv168
  %180 = add nsw i64 %n.vec705, -8
  %181 = lshr exact i64 %180, 3
  %182 = add nuw nsw i64 %181, 1
  %xtraiter734 = and i64 %182, 1
  %183 = icmp eq i64 %180, 0
  br i1 %183, label %middle.block699.unr-lcssa, label %vector.ph703.new

vector.ph703.new:                                 ; preds = %vector.ph703
  %unroll_iter736 = and i64 %182, 4611686018427387902
  br label %vector.body701

vector.body701:                                   ; preds = %vector.body701, %vector.ph703.new
  %index709 = phi i64 [ 0, %vector.ph703.new ], [ %index.next719.1, %vector.body701 ]
  %niter737 = phi i64 [ 0, %vector.ph703.new ], [ %niter737.next.1, %vector.body701 ]
  %offset.idx710 = add i64 %index709, %conv168
  %184 = getelementptr inbounds i32, i32* %ext_cols.sroa.0.0472607, i64 %index709
  %185 = bitcast i32* %184 to <2 x i32>*
  %wide.load711 = load <2 x i32>, <2 x i32>* %185, align 4, !tbaa !16, !alias.scope !136
  %186 = getelementptr inbounds i32, i32* %184, i64 2
  %187 = bitcast i32* %186 to <2 x i32>*
  %wide.load712 = load <2 x i32>, <2 x i32>* %187, align 4, !tbaa !16, !alias.scope !136
  %188 = getelementptr inbounds i32, i32* %184, i64 4
  %189 = bitcast i32* %188 to <2 x i32>*
  %wide.load713 = load <2 x i32>, <2 x i32>* %189, align 4, !tbaa !16, !alias.scope !136
  %190 = getelementptr inbounds i32, i32* %184, i64 6
  %191 = bitcast i32* %190 to <2 x i32>*
  %wide.load714 = load <2 x i32>, <2 x i32>* %191, align 4, !tbaa !16, !alias.scope !136
  %192 = getelementptr inbounds i32, i32* %178, i64 %offset.idx710
  %193 = bitcast i32* %192 to <2 x i32>*
  store <2 x i32> %wide.load711, <2 x i32>* %193, align 4, !tbaa !16, !alias.scope !139, !noalias !136
  %194 = getelementptr inbounds i32, i32* %192, i64 2
  %195 = bitcast i32* %194 to <2 x i32>*
  store <2 x i32> %wide.load712, <2 x i32>* %195, align 4, !tbaa !16, !alias.scope !139, !noalias !136
  %196 = getelementptr inbounds i32, i32* %192, i64 4
  %197 = bitcast i32* %196 to <2 x i32>*
  store <2 x i32> %wide.load713, <2 x i32>* %197, align 4, !tbaa !16, !alias.scope !139, !noalias !136
  %198 = getelementptr inbounds i32, i32* %192, i64 6
  %199 = bitcast i32* %198 to <2 x i32>*
  store <2 x i32> %wide.load714, <2 x i32>* %199, align 4, !tbaa !16, !alias.scope !139, !noalias !136
  %200 = getelementptr inbounds double, double* %ext_coefs.sroa.0.0614, i64 %index709
  %201 = bitcast double* %200 to <2 x double>*
  %wide.load715 = load <2 x double>, <2 x double>* %201, align 8, !tbaa !84, !alias.scope !141
  %202 = getelementptr inbounds double, double* %200, i64 2
  %203 = bitcast double* %202 to <2 x double>*
  %wide.load716 = load <2 x double>, <2 x double>* %203, align 8, !tbaa !84, !alias.scope !141
  %204 = getelementptr inbounds double, double* %200, i64 4
  %205 = bitcast double* %204 to <2 x double>*
  %wide.load717 = load <2 x double>, <2 x double>* %205, align 8, !tbaa !84, !alias.scope !141
  %206 = getelementptr inbounds double, double* %200, i64 6
  %207 = bitcast double* %206 to <2 x double>*
  %wide.load718 = load <2 x double>, <2 x double>* %207, align 8, !tbaa !84, !alias.scope !141
  %208 = getelementptr inbounds double, double* %179, i64 %offset.idx710
  %209 = bitcast double* %208 to <2 x double>*
  store <2 x double> %wide.load715, <2 x double>* %209, align 8, !tbaa !84, !alias.scope !143, !noalias !141
  %210 = getelementptr inbounds double, double* %208, i64 2
  %211 = bitcast double* %210 to <2 x double>*
  store <2 x double> %wide.load716, <2 x double>* %211, align 8, !tbaa !84, !alias.scope !143, !noalias !141
  %212 = getelementptr inbounds double, double* %208, i64 4
  %213 = bitcast double* %212 to <2 x double>*
  store <2 x double> %wide.load717, <2 x double>* %213, align 8, !tbaa !84, !alias.scope !143, !noalias !141
  %214 = getelementptr inbounds double, double* %208, i64 6
  %215 = bitcast double* %214 to <2 x double>*
  store <2 x double> %wide.load718, <2 x double>* %215, align 8, !tbaa !84, !alias.scope !143, !noalias !141
  %index.next719 = or i64 %index709, 8
  %offset.idx710.1 = add i64 %index.next719, %conv168
  %216 = getelementptr inbounds i32, i32* %ext_cols.sroa.0.0472607, i64 %index.next719
  %217 = bitcast i32* %216 to <2 x i32>*
  %wide.load711.1 = load <2 x i32>, <2 x i32>* %217, align 4, !tbaa !16, !alias.scope !136
  %218 = getelementptr inbounds i32, i32* %216, i64 2
  %219 = bitcast i32* %218 to <2 x i32>*
  %wide.load712.1 = load <2 x i32>, <2 x i32>* %219, align 4, !tbaa !16, !alias.scope !136
  %220 = getelementptr inbounds i32, i32* %216, i64 4
  %221 = bitcast i32* %220 to <2 x i32>*
  %wide.load713.1 = load <2 x i32>, <2 x i32>* %221, align 4, !tbaa !16, !alias.scope !136
  %222 = getelementptr inbounds i32, i32* %216, i64 6
  %223 = bitcast i32* %222 to <2 x i32>*
  %wide.load714.1 = load <2 x i32>, <2 x i32>* %223, align 4, !tbaa !16, !alias.scope !136
  %224 = getelementptr inbounds i32, i32* %178, i64 %offset.idx710.1
  %225 = bitcast i32* %224 to <2 x i32>*
  store <2 x i32> %wide.load711.1, <2 x i32>* %225, align 4, !tbaa !16, !alias.scope !139, !noalias !136
  %226 = getelementptr inbounds i32, i32* %224, i64 2
  %227 = bitcast i32* %226 to <2 x i32>*
  store <2 x i32> %wide.load712.1, <2 x i32>* %227, align 4, !tbaa !16, !alias.scope !139, !noalias !136
  %228 = getelementptr inbounds i32, i32* %224, i64 4
  %229 = bitcast i32* %228 to <2 x i32>*
  store <2 x i32> %wide.load713.1, <2 x i32>* %229, align 4, !tbaa !16, !alias.scope !139, !noalias !136
  %230 = getelementptr inbounds i32, i32* %224, i64 6
  %231 = bitcast i32* %230 to <2 x i32>*
  store <2 x i32> %wide.load714.1, <2 x i32>* %231, align 4, !tbaa !16, !alias.scope !139, !noalias !136
  %232 = getelementptr inbounds double, double* %ext_coefs.sroa.0.0614, i64 %index.next719
  %233 = bitcast double* %232 to <2 x double>*
  %wide.load715.1 = load <2 x double>, <2 x double>* %233, align 8, !tbaa !84, !alias.scope !141
  %234 = getelementptr inbounds double, double* %232, i64 2
  %235 = bitcast double* %234 to <2 x double>*
  %wide.load716.1 = load <2 x double>, <2 x double>* %235, align 8, !tbaa !84, !alias.scope !141
  %236 = getelementptr inbounds double, double* %232, i64 4
  %237 = bitcast double* %236 to <2 x double>*
  %wide.load717.1 = load <2 x double>, <2 x double>* %237, align 8, !tbaa !84, !alias.scope !141
  %238 = getelementptr inbounds double, double* %232, i64 6
  %239 = bitcast double* %238 to <2 x double>*
  %wide.load718.1 = load <2 x double>, <2 x double>* %239, align 8, !tbaa !84, !alias.scope !141
  %240 = getelementptr inbounds double, double* %179, i64 %offset.idx710.1
  %241 = bitcast double* %240 to <2 x double>*
  store <2 x double> %wide.load715.1, <2 x double>* %241, align 8, !tbaa !84, !alias.scope !143, !noalias !141
  %242 = getelementptr inbounds double, double* %240, i64 2
  %243 = bitcast double* %242 to <2 x double>*
  store <2 x double> %wide.load716.1, <2 x double>* %243, align 8, !tbaa !84, !alias.scope !143, !noalias !141
  %244 = getelementptr inbounds double, double* %240, i64 4
  %245 = bitcast double* %244 to <2 x double>*
  store <2 x double> %wide.load717.1, <2 x double>* %245, align 8, !tbaa !84, !alias.scope !143, !noalias !141
  %246 = getelementptr inbounds double, double* %240, i64 6
  %247 = bitcast double* %246 to <2 x double>*
  store <2 x double> %wide.load718.1, <2 x double>* %247, align 8, !tbaa !84, !alias.scope !143, !noalias !141
  %index.next719.1 = add nuw i64 %index709, 16
  %niter737.next.1 = add i64 %niter737, 2
  %niter737.ncmp.1 = icmp eq i64 %niter737.next.1, %unroll_iter736
  br i1 %niter737.ncmp.1, label %middle.block699.unr-lcssa, label %vector.body701, !llvm.loop !145

middle.block699.unr-lcssa:                        ; preds = %vector.body701, %vector.ph703
  %index709.unr = phi i64 [ 0, %vector.ph703 ], [ %index.next719.1, %vector.body701 ]
  %lcmp.mod735.not = icmp eq i64 %xtraiter734, 0
  br i1 %lcmp.mod735.not, label %middle.block699, label %vector.body701.epil

vector.body701.epil:                              ; preds = %middle.block699.unr-lcssa
  %offset.idx710.epil = add i64 %index709.unr, %conv168
  %248 = getelementptr inbounds i32, i32* %ext_cols.sroa.0.0472607, i64 %index709.unr
  %249 = bitcast i32* %248 to <2 x i32>*
  %wide.load711.epil = load <2 x i32>, <2 x i32>* %249, align 4, !tbaa !16, !alias.scope !136
  %250 = getelementptr inbounds i32, i32* %248, i64 2
  %251 = bitcast i32* %250 to <2 x i32>*
  %wide.load712.epil = load <2 x i32>, <2 x i32>* %251, align 4, !tbaa !16, !alias.scope !136
  %252 = getelementptr inbounds i32, i32* %248, i64 4
  %253 = bitcast i32* %252 to <2 x i32>*
  %wide.load713.epil = load <2 x i32>, <2 x i32>* %253, align 4, !tbaa !16, !alias.scope !136
  %254 = getelementptr inbounds i32, i32* %248, i64 6
  %255 = bitcast i32* %254 to <2 x i32>*
  %wide.load714.epil = load <2 x i32>, <2 x i32>* %255, align 4, !tbaa !16, !alias.scope !136
  %256 = getelementptr inbounds i32, i32* %178, i64 %offset.idx710.epil
  %257 = bitcast i32* %256 to <2 x i32>*
  store <2 x i32> %wide.load711.epil, <2 x i32>* %257, align 4, !tbaa !16, !alias.scope !139, !noalias !136
  %258 = getelementptr inbounds i32, i32* %256, i64 2
  %259 = bitcast i32* %258 to <2 x i32>*
  store <2 x i32> %wide.load712.epil, <2 x i32>* %259, align 4, !tbaa !16, !alias.scope !139, !noalias !136
  %260 = getelementptr inbounds i32, i32* %256, i64 4
  %261 = bitcast i32* %260 to <2 x i32>*
  store <2 x i32> %wide.load713.epil, <2 x i32>* %261, align 4, !tbaa !16, !alias.scope !139, !noalias !136
  %262 = getelementptr inbounds i32, i32* %256, i64 6
  %263 = bitcast i32* %262 to <2 x i32>*
  store <2 x i32> %wide.load714.epil, <2 x i32>* %263, align 4, !tbaa !16, !alias.scope !139, !noalias !136
  %264 = getelementptr inbounds double, double* %ext_coefs.sroa.0.0614, i64 %index709.unr
  %265 = bitcast double* %264 to <2 x double>*
  %wide.load715.epil = load <2 x double>, <2 x double>* %265, align 8, !tbaa !84, !alias.scope !141
  %266 = getelementptr inbounds double, double* %264, i64 2
  %267 = bitcast double* %266 to <2 x double>*
  %wide.load716.epil = load <2 x double>, <2 x double>* %267, align 8, !tbaa !84, !alias.scope !141
  %268 = getelementptr inbounds double, double* %264, i64 4
  %269 = bitcast double* %268 to <2 x double>*
  %wide.load717.epil = load <2 x double>, <2 x double>* %269, align 8, !tbaa !84, !alias.scope !141
  %270 = getelementptr inbounds double, double* %264, i64 6
  %271 = bitcast double* %270 to <2 x double>*
  %wide.load718.epil = load <2 x double>, <2 x double>* %271, align 8, !tbaa !84, !alias.scope !141
  %272 = getelementptr inbounds double, double* %179, i64 %offset.idx710.epil
  %273 = bitcast double* %272 to <2 x double>*
  store <2 x double> %wide.load715.epil, <2 x double>* %273, align 8, !tbaa !84, !alias.scope !143, !noalias !141
  %274 = getelementptr inbounds double, double* %272, i64 2
  %275 = bitcast double* %274 to <2 x double>*
  store <2 x double> %wide.load716.epil, <2 x double>* %275, align 8, !tbaa !84, !alias.scope !143, !noalias !141
  %276 = getelementptr inbounds double, double* %272, i64 4
  %277 = bitcast double* %276 to <2 x double>*
  store <2 x double> %wide.load717.epil, <2 x double>* %277, align 8, !tbaa !84, !alias.scope !143, !noalias !141
  %278 = getelementptr inbounds double, double* %272, i64 6
  %279 = bitcast double* %278 to <2 x double>*
  store <2 x double> %wide.load718.epil, <2 x double>* %279, align 8, !tbaa !84, !alias.scope !143, !noalias !141
  br label %middle.block699

middle.block699:                                  ; preds = %middle.block699.unr-lcssa, %vector.body701.epil
  %cmp.n708 = icmp eq i64 %sub.ptr.div.i260, %n.vec705
  br i1 %cmp.n708, label %for.cond.cleanup172, label %for.body173.preheader720

for.body173.preheader720:                         ; preds = %vector.memcheck677, %for.body173.preheader, %middle.block699
  %indvars.iv546.ph = phi i64 [ %conv168, %vector.memcheck677 ], [ %conv168, %for.body173.preheader ], [ %ind.end707, %middle.block699 ]
  br label %for.body173

lpad125:                                          ; preds = %if.then.i269
  %280 = landingpad { i8*, i32 }
          cleanup
  %tobool.not.i.i.i = icmp eq i32* %ext_offsets.sroa.0.0, null
  br i1 %tobool.not.i.i.i, label %ehcleanup205, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %lpad125.thread, %lpad125
  %281 = phi { i8*, i32 } [ %39, %lpad125.thread ], [ %280, %lpad125 ]
  %282 = bitcast i32* %ext_offsets.sroa.0.0 to i8*
  tail call void @_ZdlPv(i8* noundef nonnull %282) #8
  br label %ehcleanup205

for.body131:                                      ; preds = %for.cond.cleanup142.1, %for.body131.preheader.new
  %i127.0520 = phi i64 [ 0, %for.body131.preheader.new ], [ %inc161.1, %for.cond.cleanup142.1 ]
  %offset89.2519 = phi i32 [ 0, %for.body131.preheader.new ], [ %offset89.3.lcssa.1, %for.cond.cleanup142.1 ]
  %niter733 = phi i64 [ 0, %for.body131.preheader.new ], [ %niter733.next.1, %for.cond.cleanup142.1 ]
  %add.ptr.i242 = getelementptr inbounds i32, i32* %40, i64 %i127.0520
  store i32 %offset89.2519, i32* %add.ptr.i242, align 4, !tbaa !16
  %mul135 = shl i64 %i127.0520, 1
  %add.ptr.i244 = getelementptr inbounds i32, i32* %tmp_row_offsets.sroa.0.0458556586597, i64 %mul135
  %283 = load i32, i32* %add.ptr.i244, align 4, !tbaa !16
  %add139 = or i64 %mul135, 1
  %add.ptr.i246 = getelementptr inbounds i32, i32* %tmp_row_offsets.sroa.0.0458556586597, i64 %add139
  %284 = load i32*, i32** %_M_start.i150572584601, align 8
  %285 = load double*, double** %_M_start.i158574583603, align 8
  %286 = load i32, i32* %add.ptr.i246, align 4, !tbaa !16
  %cmp141514 = icmp slt i32 %283, %286
  br i1 %cmp141514, label %for.body143.preheader, label %for.cond.cleanup142

for.body143.preheader:                            ; preds = %for.body131
  %287 = sext i32 %283 to i64
  %288 = sext i32 %offset89.2519 to i64
  br label %for.body143

for.cond.cleanup142.loopexit:                     ; preds = %for.body143
  %289 = trunc i64 %indvars.iv.next540 to i32
  br label %for.cond.cleanup142

for.cond.cleanup142:                              ; preds = %for.cond.cleanup142.loopexit, %for.body131
  %offset89.3.lcssa = phi i32 [ %offset89.2519, %for.body131 ], [ %289, %for.cond.cleanup142.loopexit ]
  %inc161 = or i64 %i127.0520, 1
  %add.ptr.i242.1 = getelementptr inbounds i32, i32* %40, i64 %inc161
  store i32 %offset89.3.lcssa, i32* %add.ptr.i242.1, align 4, !tbaa !16
  %mul135.1 = shl i64 %inc161, 1
  %add.ptr.i244.1 = getelementptr inbounds i32, i32* %tmp_row_offsets.sroa.0.0458556586597, i64 %mul135.1
  %290 = load i32, i32* %add.ptr.i244.1, align 4, !tbaa !16
  %add139.1 = or i64 %mul135.1, 1
  %add.ptr.i246.1 = getelementptr inbounds i32, i32* %tmp_row_offsets.sroa.0.0458556586597, i64 %add139.1
  %291 = load i32*, i32** %_M_start.i150572584601, align 8
  %292 = load double*, double** %_M_start.i158574583603, align 8
  %293 = load i32, i32* %add.ptr.i246.1, align 4, !tbaa !16
  %cmp141514.1 = icmp slt i32 %290, %293
  br i1 %cmp141514.1, label %for.body143.preheader.1, label %for.cond.cleanup142.1

for.body143.preheader.1:                          ; preds = %for.cond.cleanup142
  %294 = sext i32 %290 to i64
  %295 = sext i32 %offset89.3.lcssa to i64
  br label %for.body143.1

for.body143.1:                                    ; preds = %for.body143.1, %for.body143.preheader.1
  %indvars.iv539.1 = phi i64 [ %295, %for.body143.preheader.1 ], [ %indvars.iv.next540.1, %for.body143.1 ]
  %indvars.iv537.1 = phi i64 [ %294, %for.body143.preheader.1 ], [ %indvars.iv.next538.1, %for.body143.1 ]
  %add.ptr.i248.1 = getelementptr inbounds i32, i32* %291, i64 %indvars.iv537.1
  %296 = load i32, i32* %add.ptr.i248.1, align 4, !tbaa !16
  %add.ptr.i250.1 = getelementptr inbounds i32, i32* %291, i64 %indvars.iv539.1
  store i32 %296, i32* %add.ptr.i250.1, align 4, !tbaa !16
  %add.ptr.i252.1 = getelementptr inbounds double, double* %292, i64 %indvars.iv537.1
  %297 = load double, double* %add.ptr.i252.1, align 8, !tbaa !84
  %indvars.iv.next540.1 = add nsw i64 %indvars.iv539.1, 1
  %add.ptr.i254.1 = getelementptr inbounds double, double* %292, i64 %indvars.iv539.1
  store double %297, double* %add.ptr.i254.1, align 8, !tbaa !84
  %indvars.iv.next538.1 = add nsw i64 %indvars.iv537.1, 1
  %298 = load i32, i32* %add.ptr.i246.1, align 4, !tbaa !16
  %299 = sext i32 %298 to i64
  %cmp141.1 = icmp slt i64 %indvars.iv.next538.1, %299
  br i1 %cmp141.1, label %for.body143.1, label %for.cond.cleanup142.loopexit.1, !llvm.loop !135

for.cond.cleanup142.loopexit.1:                   ; preds = %for.body143.1
  %300 = trunc i64 %indvars.iv.next540.1 to i32
  br label %for.cond.cleanup142.1

for.cond.cleanup142.1:                            ; preds = %for.cond.cleanup142.loopexit.1, %for.cond.cleanup142
  %offset89.3.lcssa.1 = phi i32 [ %offset89.3.lcssa, %for.cond.cleanup142 ], [ %300, %for.cond.cleanup142.loopexit.1 ]
  %inc161.1 = add nuw i64 %i127.0520, 2
  %niter733.next.1 = add i64 %niter733, 2
  %niter733.ncmp.1 = icmp eq i64 %niter733.next.1, %unroll_iter732
  br i1 %niter733.ncmp.1, label %for.cond.cleanup130.loopexit.unr-lcssa, label %for.body131, !llvm.loop !146

for.body143:                                      ; preds = %for.body143.preheader, %for.body143
  %indvars.iv539 = phi i64 [ %288, %for.body143.preheader ], [ %indvars.iv.next540, %for.body143 ]
  %indvars.iv537 = phi i64 [ %287, %for.body143.preheader ], [ %indvars.iv.next538, %for.body143 ]
  %add.ptr.i248 = getelementptr inbounds i32, i32* %284, i64 %indvars.iv537
  %301 = load i32, i32* %add.ptr.i248, align 4, !tbaa !16
  %add.ptr.i250 = getelementptr inbounds i32, i32* %284, i64 %indvars.iv539
  store i32 %301, i32* %add.ptr.i250, align 4, !tbaa !16
  %add.ptr.i252 = getelementptr inbounds double, double* %285, i64 %indvars.iv537
  %302 = load double, double* %add.ptr.i252, align 8, !tbaa !84
  %indvars.iv.next540 = add nsw i64 %indvars.iv539, 1
  %add.ptr.i254 = getelementptr inbounds double, double* %285, i64 %indvars.iv539
  store double %302, double* %add.ptr.i254, align 8, !tbaa !84
  %indvars.iv.next538 = add nsw i64 %indvars.iv537, 1
  %303 = load i32, i32* %add.ptr.i246, align 4, !tbaa !16
  %304 = sext i32 %303 to i64
  %cmp141 = icmp slt i64 %indvars.iv.next538, %304
  br i1 %cmp141, label %for.body143, label %for.cond.cleanup142.loopexit, !llvm.loop !135

for.cond.cleanup172:                              ; preds = %for.body173, %middle.block699, %for.cond.cleanup130
  %row_offsets_external = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 4
  %_M_finish.i.i261 = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 4, i32 0, i32 0, i32 1
  %305 = load i32*, i32** %_M_finish.i.i261, align 8, !tbaa !71
  %_M_start.i.i262 = getelementptr inbounds %"class.std::vector.15", %"class.std::vector.15"* %row_offsets_external, i64 0, i32 0, i32 0, i32 0
  %306 = load i32*, i32** %_M_start.i.i262, align 8, !tbaa !74
  %sub.ptr.lhs.cast.i.i263 = ptrtoint i32* %305 to i64
  %sub.ptr.rhs.cast.i.i264 = ptrtoint i32* %306 to i64
  %sub.ptr.sub.i.i265 = sub i64 %sub.ptr.lhs.cast.i.i263, %sub.ptr.rhs.cast.i.i264
  %sub.ptr.div.i.i266 = ashr exact i64 %sub.ptr.sub.i.i265, 2
  %cmp.i267 = icmp ugt i64 %add83621, %sub.ptr.div.i.i266
  br i1 %cmp.i267, label %if.then.i269, label %if.else.i271

if.then.i269:                                     ; preds = %for.cond.cleanup172
  %sub.i268 = sub nsw i64 %add83621, %sub.ptr.div.i.i266
  invoke void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(%"class.std::vector.15"* noundef nonnull align 8 dereferenceable(24) %row_offsets_external, i64 noundef %sub.i268)
          to label %if.then.i269._ZNSt6vectorIiSaIiEE6resizeEm.exit277_crit_edge unwind label %lpad125

if.then.i269._ZNSt6vectorIiSaIiEE6resizeEm.exit277_crit_edge: ; preds = %if.then.i269
  %.pre550 = load i32*, i32** %_M_start.i.i262, align 8, !tbaa !74
  br label %_ZNSt6vectorIiSaIiEE6resizeEm.exit277

if.else.i271:                                     ; preds = %for.cond.cleanup172
  %cmp4.i270 = icmp ult i64 %add83621, %sub.ptr.div.i.i266
  br i1 %cmp4.i270, label %if.then5.i274, label %_ZNSt6vectorIiSaIiEE6resizeEm.exit277

if.then5.i274:                                    ; preds = %if.else.i271
  %add.ptr.i272 = getelementptr inbounds i32, i32* %306, i64 %add83621
  %tobool.not.i.i273 = icmp eq i32* %305, %add.ptr.i272
  br i1 %tobool.not.i.i273, label %_ZNSt6vectorIiSaIiEE6resizeEm.exit277, label %invoke.cont.i.i275

invoke.cont.i.i275:                               ; preds = %if.then5.i274
  store i32* %add.ptr.i272, i32** %_M_finish.i.i261, align 8, !tbaa !71
  br label %_ZNSt6vectorIiSaIiEE6resizeEm.exit277

_ZNSt6vectorIiSaIiEE6resizeEm.exit277:            ; preds = %if.then.i269._ZNSt6vectorIiSaIiEE6resizeEm.exit277_crit_edge, %if.else.i271, %if.then5.i274, %invoke.cont.i.i275
  %307 = phi i32* [ %.pre550, %if.then.i269._ZNSt6vectorIiSaIiEE6resizeEm.exit277_crit_edge ], [ %306, %if.else.i271 ], [ %306, %if.then5.i274 ], [ %306, %invoke.cont.i.i275 ]
  br label %for.body195

for.body173:                                      ; preds = %for.body173.preheader720, %for.body173
  %indvars.iv546 = phi i64 [ %indvars.iv.next547, %for.body173 ], [ %indvars.iv546.ph, %for.body173.preheader720 ]
  %308 = sub nsw i64 %indvars.iv546, %conv168
  %add.ptr.i279 = getelementptr inbounds i32, i32* %ext_cols.sroa.0.0472607, i64 %308
  %309 = load i32, i32* %add.ptr.i279, align 4, !tbaa !16
  %add.ptr.i281 = getelementptr inbounds i32, i32* %178, i64 %indvars.iv546
  store i32 %309, i32* %add.ptr.i281, align 4, !tbaa !16
  %add.ptr.i283 = getelementptr inbounds double, double* %ext_coefs.sroa.0.0614, i64 %308
  %310 = load double, double* %add.ptr.i283, align 8, !tbaa !84
  %add.ptr.i285 = getelementptr inbounds double, double* %179, i64 %indvars.iv546
  store double %310, double* %add.ptr.i285, align 8, !tbaa !84
  %indvars.iv.next547 = add i64 %indvars.iv546, 1
  %cmp171 = icmp ugt i64 %add170, %indvars.iv.next547
  br i1 %cmp171, label %for.body173, label %for.cond.cleanup172, !llvm.loop !147

_ZNSt6vectorIiSaIiEED2Ev.exit289:                 ; preds = %for.body195
  %311 = bitcast i32* %ext_offsets.sroa.0.0 to i8*
  tail call void @_ZdlPv(i8* noundef nonnull %311) #8
  %tobool.not.i.i.i291 = icmp eq double* %ext_coefs.sroa.0.0614, null
  br i1 %tobool.not.i.i.i291, label %_ZNSt6vectorIdSaIdEED2Ev.exit, label %if.then.i.i.i292

if.then.i.i.i292:                                 ; preds = %_ZNSt6vectorIiSaIiEED2Ev.exit289
  %312 = bitcast double* %ext_coefs.sroa.0.0614 to i8*
  tail call void @_ZdlPv(i8* noundef nonnull %312) #8
  br label %_ZNSt6vectorIdSaIdEED2Ev.exit

_ZNSt6vectorIdSaIdEED2Ev.exit:                    ; preds = %_ZNSt6vectorIiSaIiEED2Ev.exit289, %if.then.i.i.i292
  %tobool.not.i.i.i294 = icmp eq i32* %ext_cols.sroa.0.0472607, null
  br i1 %tobool.not.i.i.i294, label %_ZNSt6vectorIiSaIiEED2Ev.exit296, label %if.then.i.i.i295

if.then.i.i.i295:                                 ; preds = %_ZNSt6vectorIdSaIdEED2Ev.exit
  %313 = bitcast i32* %ext_cols.sroa.0.0472607 to i8*
  tail call void @_ZdlPv(i8* noundef nonnull %313) #8
  br label %_ZNSt6vectorIiSaIiEED2Ev.exit296

_ZNSt6vectorIiSaIiEED2Ev.exit296:                 ; preds = %_ZNSt6vectorIdSaIdEED2Ev.exit, %if.then.i.i.i295
  %tobool.not.i.i.i298 = icmp eq i32* %tmp_row_offsets_external.sroa.0.0564585599, null
  br i1 %tobool.not.i.i.i298, label %_ZNSt6vectorIiSaIiEED2Ev.exit300, label %if.then.i.i.i299

if.then.i.i.i299:                                 ; preds = %_ZNSt6vectorIiSaIiEED2Ev.exit296
  %314 = bitcast i32* %tmp_row_offsets_external.sroa.0.0564585599 to i8*
  tail call void @_ZdlPv(i8* noundef nonnull %314) #8
  br label %_ZNSt6vectorIiSaIiEED2Ev.exit300

_ZNSt6vectorIiSaIiEED2Ev.exit300:                 ; preds = %_ZNSt6vectorIiSaIiEED2Ev.exit296, %if.then.i.i.i299
  %tobool.not.i.i.i302 = icmp eq i32* %tmp_row_offsets.sroa.0.0458556586597, null
  br i1 %tobool.not.i.i.i302, label %_ZNSt6vectorIiSaIiEED2Ev.exit304, label %if.then.i.i.i303

if.then.i.i.i303:                                 ; preds = %_ZNSt6vectorIiSaIiEED2Ev.exit300
  %315 = bitcast i32* %tmp_row_offsets.sroa.0.0458556586597 to i8*
  tail call void @_ZdlPv(i8* noundef nonnull %315) #8
  br label %_ZNSt6vectorIiSaIiEED2Ev.exit304

_ZNSt6vectorIiSaIiEED2Ev.exit304:                 ; preds = %_ZNSt6vectorIiSaIiEED2Ev.exit300, %if.then.i.i.i303
  ret void

for.body195:                                      ; preds = %_ZNSt6vectorIiSaIiEE6resizeEm.exit277, %for.body195
  %i191.0526 = phi i64 [ 0, %_ZNSt6vectorIiSaIiEE6resizeEm.exit277 ], [ %inc201, %for.body195 ]
  %add.ptr.i306 = getelementptr inbounds i32, i32* %ext_offsets.sroa.0.0, i64 %i191.0526
  %316 = load i32, i32* %add.ptr.i306, align 4, !tbaa !16
  %add197 = add nsw i32 %316, %offset89.2.lcssa
  %add.ptr.i308 = getelementptr inbounds i32, i32* %307, i64 %i191.0526
  store i32 %add197, i32* %add.ptr.i308, align 4, !tbaa !16
  %inc201 = add i64 %i191.0526, 1
  %cmp193.not = icmp ugt i64 %inc201, %sub.ptr.div.i
  br i1 %cmp193.not, label %_ZNSt6vectorIiSaIiEED2Ev.exit289, label %for.body195, !llvm.loop !148

ehcleanup205:                                     ; preds = %if.then.i.i.i, %lpad125, %lpad85
  %ext_coefs.sroa.0.0617 = phi double* [ %ext_coefs.sroa.0.0619, %lpad85 ], [ %ext_coefs.sroa.0.0614, %lpad125 ], [ %ext_coefs.sroa.0.0614, %if.then.i.i.i ]
  %ext_cols.sroa.0.0472610 = phi i32* [ %ext_cols.sroa.0.0472612, %lpad85 ], [ %ext_cols.sroa.0.0472607, %lpad125 ], [ %ext_cols.sroa.0.0472607, %if.then.i.i.i ]
  %tmp_row_offsets_external.sroa.0.0568 = phi i32* [ %tmp_row_offsets_external.sroa.0.0570, %lpad85 ], [ %tmp_row_offsets_external.sroa.0.0564585599, %lpad125 ], [ %tmp_row_offsets_external.sroa.0.0564585599, %if.then.i.i.i ]
  %tmp_row_offsets.sroa.0.0458560 = phi i32* [ %tmp_row_offsets.sroa.0.0458562, %lpad85 ], [ %tmp_row_offsets.sroa.0.0458556586597, %lpad125 ], [ %tmp_row_offsets.sroa.0.0458556586597, %if.then.i.i.i ]
  %.pn = phi { i8*, i32 } [ %44, %lpad85 ], [ %280, %lpad125 ], [ %281, %if.then.i.i.i ]
  %tobool.not.i.i.i310 = icmp eq double* %ext_coefs.sroa.0.0617, null
  br i1 %tobool.not.i.i.i310, label %ehcleanup207, label %if.then.i.i.i311

if.then.i.i.i311:                                 ; preds = %ehcleanup205
  %317 = bitcast double* %ext_coefs.sroa.0.0617 to i8*
  tail call void @_ZdlPv(i8* noundef nonnull %317) #8
  br label %ehcleanup207

ehcleanup207:                                     ; preds = %if.then.i.i.i311, %ehcleanup205
  %tobool.not.i.i.i314 = icmp eq i32* %ext_cols.sroa.0.0472610, null
  br i1 %tobool.not.i.i.i314, label %ehcleanup210, label %if.then.i.i.i315

if.then.i.i.i315:                                 ; preds = %ehcleanup207.thread, %ehcleanup207
  %tmp_row_offsets_external.sroa.0.0567 = phi i32* [ %3, %ehcleanup207.thread ], [ %tmp_row_offsets_external.sroa.0.0568, %ehcleanup207 ]
  %tmp_row_offsets.sroa.0.0458559 = phi i32* [ %2, %ehcleanup207.thread ], [ %tmp_row_offsets.sroa.0.0458560, %ehcleanup207 ]
  %.pn.pn495 = phi { i8*, i32 } [ %43, %ehcleanup207.thread ], [ %.pn, %ehcleanup207 ]
  %ext_cols.sroa.0.0474492 = phi i32* [ %32, %ehcleanup207.thread ], [ %ext_cols.sroa.0.0472610, %ehcleanup207 ]
  %318 = bitcast i32* %ext_cols.sroa.0.0474492 to i8*
  tail call void @_ZdlPv(i8* noundef nonnull %318) #8
  br label %ehcleanup210

ehcleanup210:                                     ; preds = %ehcleanup207, %if.then.i.i.i315
  %tmp_row_offsets_external.sroa.0.0566 = phi i32* [ %tmp_row_offsets_external.sroa.0.0568, %ehcleanup207 ], [ %tmp_row_offsets_external.sroa.0.0567, %if.then.i.i.i315 ]
  %tmp_row_offsets.sroa.0.0458558 = phi i32* [ %tmp_row_offsets.sroa.0.0458560, %ehcleanup207 ], [ %tmp_row_offsets.sroa.0.0458559, %if.then.i.i.i315 ]
  %.pn111 = phi { i8*, i32 } [ %.pn, %ehcleanup207 ], [ %.pn.pn495, %if.then.i.i.i315 ]
  %tobool.not.i.i.i318 = icmp eq i32* %tmp_row_offsets_external.sroa.0.0566, null
  br i1 %tobool.not.i.i.i318, label %ehcleanup213, label %if.then.i.i.i319

if.then.i.i.i319:                                 ; preds = %ehcleanup210.thread, %ehcleanup210
  %.pn111647 = phi { i8*, i32 } [ %42, %ehcleanup210.thread ], [ %.pn111, %ehcleanup210 ]
  %tmp_row_offsets.sroa.0.0458558645 = phi i32* [ %2, %ehcleanup210.thread ], [ %tmp_row_offsets.sroa.0.0458558, %ehcleanup210 ]
  %tmp_row_offsets_external.sroa.0.0566644 = phi i32* [ %3, %ehcleanup210.thread ], [ %tmp_row_offsets_external.sroa.0.0566, %ehcleanup210 ]
  %319 = bitcast i32* %tmp_row_offsets_external.sroa.0.0566644 to i8*
  tail call void @_ZdlPv(i8* noundef nonnull %319) #8
  br label %ehcleanup213

ehcleanup213:                                     ; preds = %if.then.i.i.i319, %ehcleanup210
  %.pn111648 = phi { i8*, i32 } [ %.pn111647, %if.then.i.i.i319 ], [ %.pn111, %ehcleanup210 ]
  %tmp_row_offsets.sroa.0.0458558646 = phi i32* [ %tmp_row_offsets.sroa.0.0458558645, %if.then.i.i.i319 ], [ %tmp_row_offsets.sroa.0.0458558, %ehcleanup210 ]
  %tobool.not.i.i.i322 = icmp eq i32* %tmp_row_offsets.sroa.0.0458558646, null
  br i1 %tobool.not.i.i.i322, label %ehcleanup215, label %if.then.i.i.i323

if.then.i.i.i323:                                 ; preds = %ehcleanup213.thread, %ehcleanup213
  %.pn111.pn501 = phi { i8*, i32 } [ %7, %ehcleanup213.thread ], [ %.pn111648, %ehcleanup213 ]
  %tmp_row_offsets.sroa.0.0460500 = phi i32* [ %2, %ehcleanup213.thread ], [ %tmp_row_offsets.sroa.0.0458558646, %ehcleanup213 ]
  %320 = bitcast i32* %tmp_row_offsets.sroa.0.0460500 to i8*
  tail call void @_ZdlPv(i8* noundef nonnull %320) #8
  br label %ehcleanup215

ehcleanup215:                                     ; preds = %if.then.i.i.i323, %ehcleanup213
  %.pn111.pn.pn = phi { i8*, i32 } [ %.pn111648, %ehcleanup213 ], [ %.pn111.pn501, %if.then.i.i.i323 ]
  resume { i8*, i32 } %.pn111.pn.pn
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN6miniFE8cg_solveINS_9CSRMatrixIdiiEENS_6VectorIdiiEENS_14matvec_overlapIS2_S4_EEEEvRT_RKT0_RS9_T1_NS7_16LocalOrdinalTypeERNS_10TypeTraitsINS7_10ScalarTypeEE14magnitude_typeERSE_SJ_Pd(%"struct.miniFE::CSRMatrix"* noundef nonnull align 8 dereferenceable(132) %A, %"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %b, %"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %x, i8 %matvec.coerce, i32 noundef signext %max_iter, double* noundef nonnull align 8 dereferenceable(8) %tolerance, i32* noundef nonnull align 4 dereferenceable(4) %num_iters, double* noundef nonnull align 8 dereferenceable(8) %normr, double* noundef %my_cg_times) local_unnamed_addr #11 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %result.i284 = alloca double, align 8
  %.offload_baseptrs.i285 = alloca [3 x i8*], align 8
  %.offload_ptrs.i286 = alloca [3 x i8*], align 8
  %.offload_baseptrs.i275 = alloca [3 x i8*], align 8
  %.offload_ptrs.i276 = alloca [3 x i8*], align 8
  %result.i = alloca double, align 8
  %.offload_baseptrs.i = alloca [3 x i8*], align 8
  %.offload_ptrs.i = alloca [3 x i8*], align 8
  %r = alloca %"struct.miniFE::Vector", align 8
  %p = alloca %"struct.miniFE::Vector", align 8
  %Ap = alloca %"struct.miniFE::Vector", align 8
  %.offload_baseptrs = alloca [8 x i8*], align 8
  %.offload_ptrs = alloca [8 x i8*], align 8
  %.offload_sizes = alloca [8 x i64], align 8
  %call = tail call contract noundef double @_ZN6miniFE7mytimerEv()
  %has_local_indices = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 0
  %0 = load i8, i8* %has_local_indices, align 8, !tbaa !67, !range !51
  %tobool.not = icmp eq i8 %0, 0
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call1.i = tail call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i8* noundef nonnull getelementptr inbounds ([93 x i8], [93 x i8]* @.str.91, i64 0, i64 0), i64 noundef 92)
  %call1.i156 = tail call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i8* noundef nonnull getelementptr inbounds ([79 x i8], [79 x i8]* @.str.92, i64 0, i64 0), i64 noundef 78)
  %vtable.i = load i8*, i8** bitcast (%"class.std::basic_ostream"* @_ZSt4cerr to i8**), align 8, !tbaa !32
  %vbase.offset.ptr.i = getelementptr i8, i8* %vtable.i, i64 -24
  %1 = bitcast i8* %vbase.offset.ptr.i to i64*
  %vbase.offset.i = load i64, i64* %1, align 8
  %add.ptr.i = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cerr to i8*), i64 %vbase.offset.i
  %_M_ctype.i.i = getelementptr inbounds i8, i8* %add.ptr.i, i64 240
  %2 = bitcast i8* %_M_ctype.i.i to %"class.std::ctype"**
  %3 = load %"class.std::ctype"*, %"class.std::ctype"** %2, align 8, !tbaa !34
  %tobool.not.i.i.i = icmp eq %"class.std::ctype"* %3, null
  br i1 %tobool.not.i.i.i, label %if.then.i.i.i, label %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i

if.then.i.i.i:                                    ; preds = %if.then
  tail call void @_ZSt16__throw_bad_castv() #29
  unreachable

_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i: ; preds = %if.then
  %_M_widen_ok.i.i.i = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %3, i64 0, i32 8
  %4 = load i8, i8* %_M_widen_ok.i.i.i, align 8, !tbaa !37
  %tobool.not.i1.i.i = icmp eq i8 %4, 0
  br i1 %tobool.not.i1.i.i, label %if.end.i.i.i, label %if.then.i2.i.i

if.then.i2.i.i:                                   ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
  %arrayidx.i.i.i = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %3, i64 0, i32 9, i64 10
  %5 = load i8, i8* %arrayidx.i.i.i, align 1, !tbaa !39
  br label %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit

if.end.i.i.i:                                     ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
  tail call void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %3)
  %6 = bitcast %"class.std::ctype"* %3 to i8 (%"class.std::ctype"*, i8)***
  %vtable.i.i.i = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %6, align 8, !tbaa !32
  %vfn.i.i.i = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vtable.i.i.i, i64 6
  %7 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vfn.i.i.i, align 8
  %call.i.i.i = tail call noundef zeroext i8 %7(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %3, i8 noundef zeroext 10)
  br label %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit

_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit: ; preds = %if.then.i2.i.i, %if.end.i.i.i
  %retval.0.i.i.i = phi i8 [ %5, %if.then.i2.i.i ], [ %call.i.i.i, %if.end.i.i.i ]
  %call1.i379 = tail call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i8 noundef zeroext %retval.0.i.i.i)
  %call.i.i380 = tail call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call1.i379)
  br label %cleanup228

if.end:                                           ; preds = %entry
  %_M_finish.i = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 2, i32 0, i32 0, i32 1
  %8 = load i32*, i32** %_M_finish.i, align 8, !tbaa !71
  %_M_start.i = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load i32*, i32** %_M_start.i, align 8, !tbaa !74
  %sub.ptr.lhs.cast.i = ptrtoint i32* %8 to i64
  %sub.ptr.rhs.cast.i = ptrtoint i32* %9 to i64
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %10 = lshr exact i64 %sub.ptr.sub.i, 2
  %num_cols = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 7
  %11 = load i32, i32* %num_cols, align 8, !tbaa !83
  %12 = bitcast %"struct.miniFE::Vector"* %r to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #8
  %startIndex = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %b, i64 0, i32 0
  %13 = load i32, i32* %startIndex, align 8, !tbaa !75
  %conv = trunc i64 %10 to i32
  %startIndex.i = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %r, i64 0, i32 0
  store i32 %13, i32* %startIndex.i, align 8, !tbaa !75
  %local_size.i = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %r, i64 0, i32 1
  store i32 %conv, i32* %local_size.i, align 4, !tbaa !77
  %coefs.i = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %r, i64 0, i32 2
  %sext = shl i64 %sub.ptr.sub.i, 30
  %conv.i = ashr i64 %sext, 32
  %cmp.not.i.i.i.i.i = icmp eq i32 %conv, 0
  br i1 %cmp.not.i.i.i.i.i, label %_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_.exit.thread.i.i, label %cond.true.i.i.i.i.i

_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_.exit.thread.i.i: ; preds = %if.end
  %14 = bitcast %"class.std::vector.20"* %coefs.i to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %14, i8 0, i64 24, i1 false)
  br label %_ZN6miniFE6VectorIdiiEC2Eii.exit

cond.true.i.i.i.i.i:                              ; preds = %if.end
  %cmp.i.i.i.i.i.i.i = icmp slt i32 %conv, 0
  br i1 %cmp.i.i.i.i.i.i.i, label %if.then.i.i.i.i.i.i.i, label %for.body.i.i.preheader.i.i.i.i.i.i

if.then.i.i.i.i.i.i.i:                            ; preds = %cond.true.i.i.i.i.i
  tail call void @_ZSt17__throw_bad_allocv() #29
  unreachable

for.body.i.i.preheader.i.i.i.i.i.i:               ; preds = %cond.true.i.i.i.i.i
  %mul.i.i.i.i.i.i.i = shl nuw nsw i64 %conv.i, 3
  %call2.i.i.i.i1.i.i1.i = tail call noalias noundef nonnull i8* @_Znwm(i64 noundef %mul.i.i.i.i.i.i.i) #30
  %15 = bitcast i8* %call2.i.i.i.i1.i.i1.i to double*
  %16 = bitcast %"class.std::vector.20"* %coefs.i to i8**
  store i8* %call2.i.i.i.i1.i.i1.i, i8** %16, align 8, !tbaa !78
  %add.ptr.i.i.i.i = getelementptr double, double* %15, i64 %conv.i
  %_M_end_of_storage.i.i.i.i = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %r, i64 0, i32 2, i32 0, i32 0, i32 2
  store double* %add.ptr.i.i.i.i, double** %_M_end_of_storage.i.i.i.i, align 8, !tbaa !81
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %call2.i.i.i.i1.i.i1.i, i8 0, i64 %mul.i.i.i.i.i.i.i, i1 false)
  br label %_ZN6miniFE6VectorIdiiEC2Eii.exit

_ZN6miniFE6VectorIdiiEC2Eii.exit:                 ; preds = %_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_.exit.thread.i.i, %for.body.i.i.preheader.i.i.i.i.i.i
  %__first.addr.0.lcssa.i.i.i.i.i.i.i.i = phi double* [ %add.ptr.i.i.i.i, %for.body.i.i.preheader.i.i.i.i.i.i ], [ null, %_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_.exit.thread.i.i ]
  %_M_finish.i.i.i = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %r, i64 0, i32 2, i32 0, i32 0, i32 1
  store double* %__first.addr.0.lcssa.i.i.i.i.i.i.i.i, double** %_M_finish.i.i.i, align 8, !tbaa !82
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull @3, i32 1, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, %"struct.miniFE::Vector"*)* @.omp_outlined..76 to void (i32*, i32*, ...)*), %"struct.miniFE::Vector"* nonnull %r)
  %17 = bitcast %"struct.miniFE::Vector"* %p to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #8
  %startIndex.i157 = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %p, i64 0, i32 0
  store i32 0, i32* %startIndex.i157, align 8, !tbaa !75
  %local_size.i158 = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %p, i64 0, i32 1
  store i32 %11, i32* %local_size.i158, align 4, !tbaa !77
  %coefs.i159 = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %p, i64 0, i32 2
  %conv.i160 = sext i32 %11 to i64
  %18 = bitcast %"class.std::vector.20"* %coefs.i159 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %18, i8 0, i64 24, i1 false) #8
  %cmp.not.i.i.i.i.i161 = icmp eq i32 %11, 0
  br i1 %cmp.not.i.i.i.i.i161, label %_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_.exit.thread.i.i162, label %cond.true.i.i.i.i.i164

_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_.exit.thread.i.i162: ; preds = %_ZN6miniFE6VectorIdiiEC2Eii.exit
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %18, i8 0, i64 24, i1 false)
  br label %invoke.cont

cond.true.i.i.i.i.i164:                           ; preds = %_ZN6miniFE6VectorIdiiEC2Eii.exit
  %cmp.i.i.i.i.i.i.i163 = icmp slt i32 %11, 0
  br i1 %cmp.i.i.i.i.i.i.i163, label %if.then.i.i.i.i.i.i.i165, label %for.body.i.i.preheader.i.i.i.i.i.i170

if.then.i.i.i.i.i.i.i165:                         ; preds = %cond.true.i.i.i.i.i164
  invoke void @_ZSt17__throw_bad_allocv() #29
          to label %.noexc unwind label %lpad

.noexc:                                           ; preds = %if.then.i.i.i.i.i.i.i165
  unreachable

for.body.i.i.preheader.i.i.i.i.i.i170:            ; preds = %cond.true.i.i.i.i.i164
  %mul.i.i.i.i.i.i.i166 = shl nuw nsw i64 %conv.i160, 3
  %call2.i.i.i.i1.i.i1.i167173 = invoke noalias noundef nonnull i8* @_Znwm(i64 noundef %mul.i.i.i.i.i.i.i166) #30
          to label %call2.i.i.i.i1.i.i1.i167.noexc unwind label %lpad

call2.i.i.i.i1.i.i1.i167.noexc:                   ; preds = %for.body.i.i.preheader.i.i.i.i.i.i170
  %19 = bitcast i8* %call2.i.i.i.i1.i.i1.i167173 to double*
  %20 = bitcast %"class.std::vector.20"* %coefs.i159 to i8**
  store i8* %call2.i.i.i.i1.i.i1.i167173, i8** %20, align 8, !tbaa !78
  %add.ptr.i.i.i.i168 = getelementptr double, double* %19, i64 %conv.i160
  %_M_end_of_storage.i.i.i.i169 = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %p, i64 0, i32 2, i32 0, i32 0, i32 2
  store double* %add.ptr.i.i.i.i168, double** %_M_end_of_storage.i.i.i.i169, align 8, !tbaa !81
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %call2.i.i.i.i1.i.i1.i167173, i8 0, i64 %mul.i.i.i.i.i.i.i166, i1 false)
  br label %invoke.cont

invoke.cont:                                      ; preds = %call2.i.i.i.i1.i.i1.i167.noexc, %_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_.exit.thread.i.i162
  %__first.addr.0.lcssa.i.i.i.i.i.i.i.i171 = phi double* [ %add.ptr.i.i.i.i168, %call2.i.i.i.i1.i.i1.i167.noexc ], [ null, %_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_.exit.thread.i.i162 ]
  %_M_finish.i.i.i172 = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %p, i64 0, i32 2, i32 0, i32 0, i32 1
  store double* %__first.addr.0.lcssa.i.i.i.i.i.i.i.i171, double** %_M_finish.i.i.i172, align 8, !tbaa !82
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull @3, i32 1, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, %"struct.miniFE::Vector"*)* @.omp_outlined..76 to void (i32*, i32*, ...)*), %"struct.miniFE::Vector"* nonnull %p)
  %21 = bitcast %"struct.miniFE::Vector"* %Ap to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #8
  %22 = load i32, i32* %startIndex, align 8, !tbaa !75
  %startIndex.i175 = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %Ap, i64 0, i32 0
  store i32 %22, i32* %startIndex.i175, align 8, !tbaa !75
  %local_size.i176 = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %Ap, i64 0, i32 1
  store i32 %conv, i32* %local_size.i176, align 4, !tbaa !77
  %coefs.i177 = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %Ap, i64 0, i32 2
  %23 = bitcast %"class.std::vector.20"* %coefs.i177 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %23, i8 0, i64 24, i1 false) #8
  br i1 %cmp.not.i.i.i.i.i, label %_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_.exit.thread.i.i180, label %for.body.i.i.preheader.i.i.i.i.i.i188

_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_.exit.thread.i.i180: ; preds = %invoke.cont
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %23, i8 0, i64 24, i1 false)
  br label %invoke.cont8

for.body.i.i.preheader.i.i.i.i.i.i188:            ; preds = %invoke.cont
  %mul.i.i.i.i.i.i.i184 = shl nuw nsw i64 %conv.i, 3
  %call2.i.i.i.i1.i.i1.i185192 = invoke noalias noundef nonnull i8* @_Znwm(i64 noundef %mul.i.i.i.i.i.i.i184) #30
          to label %call2.i.i.i.i1.i.i1.i185.noexc unwind label %lpad7

call2.i.i.i.i1.i.i1.i185.noexc:                   ; preds = %for.body.i.i.preheader.i.i.i.i.i.i188
  %24 = bitcast i8* %call2.i.i.i.i1.i.i1.i185192 to double*
  %25 = bitcast %"class.std::vector.20"* %coefs.i177 to i8**
  store i8* %call2.i.i.i.i1.i.i1.i185192, i8** %25, align 8, !tbaa !78
  %add.ptr.i.i.i.i186 = getelementptr double, double* %24, i64 %conv.i
  %_M_end_of_storage.i.i.i.i187 = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %Ap, i64 0, i32 2, i32 0, i32 0, i32 2
  store double* %add.ptr.i.i.i.i186, double** %_M_end_of_storage.i.i.i.i187, align 8, !tbaa !81
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %call2.i.i.i.i1.i.i1.i185192, i8 0, i64 %mul.i.i.i.i.i.i.i184, i1 false)
  br label %invoke.cont8

invoke.cont8:                                     ; preds = %call2.i.i.i.i1.i.i1.i185.noexc, %_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_.exit.thread.i.i180
  %__first.addr.0.lcssa.i.i.i.i.i.i.i.i189 = phi double* [ %add.ptr.i.i.i.i186, %call2.i.i.i.i1.i.i1.i185.noexc ], [ null, %_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_.exit.thread.i.i180 ]
  %_M_finish.i.i.i190 = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %Ap, i64 0, i32 2, i32 0, i32 0, i32 1
  store double* %__first.addr.0.lcssa.i.i.i.i.i.i.i.i189, double** %_M_finish.i.i.i190, align 8, !tbaa !82
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull @3, i32 1, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, %"struct.miniFE::Vector"*)* @.omp_outlined..76 to void (i32*, i32*, ...)*), %"struct.miniFE::Vector"* nonnull %Ap)
  store double 0.000000e+00, double* %normr, align 8, !tbaa !84
  %div = sdiv i32 %max_iter, 10
  %26 = icmp slt i32 %div, 50
  %spec.store.select = select i1 %26, i32 %div, i32 50
  %27 = icmp sgt i32 %spec.store.select, 1
  %spec.store.select1 = select i1 %27, i32 %spec.store.select, i32 1
  %_M_finish.i194 = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %x, i64 0, i32 2, i32 0, i32 0, i32 1
  %_M_start.i195 = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %x, i64 0, i32 2, i32 0, i32 0, i32 0
  %28 = load double*, double** %_M_start.i195, align 8, !tbaa !78
  %_M_finish.i200 = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 5, i32 0, i32 0, i32 1
  %_M_start.i201 = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 5, i32 0, i32 0, i32 0
  %29 = load i32*, i32** %_M_start.i201, align 8, !tbaa !74
  %_M_start.i206 = getelementptr inbounds %"class.std::vector.20", %"class.std::vector.20"* %coefs.i, i64 0, i32 0, i32 0, i32 0
  %30 = load double*, double** %_M_start.i206, align 8, !tbaa !78
  %_M_start.i207 = getelementptr inbounds %"class.std::vector.20", %"class.std::vector.20"* %coefs.i159, i64 0, i32 0, i32 0, i32 0
  %31 = load double*, double** %_M_start.i207, align 8, !tbaa !78
  %_M_start.i208 = getelementptr inbounds %"class.std::vector.20", %"class.std::vector.20"* %coefs.i177, i64 0, i32 0, i32 0, i32 0
  %32 = load double*, double** %_M_start.i208, align 8, !tbaa !78
  %_M_start.i210 = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %b, i64 0, i32 2, i32 0, i32 0, i32 0
  %33 = load double*, double** %_M_start.i210, align 8, !tbaa !78
  %_M_start.i211 = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 3, i32 0, i32 0, i32 0
  %34 = load i32*, i32** %_M_start.i211, align 8, !tbaa !74
  %_M_start.i213 = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 6, i32 0, i32 0, i32 0
  %35 = load double*, double** %_M_start.i213, align 8, !tbaa !78
  %36 = load i8*, i8** @__omp_adaptation_miniFE, align 8
  call void @__apollo_region_end(i8* %36)
  %37 = load double*, double** %_M_finish.i.i.i, align 8, !tbaa !82
  %38 = load double*, double** %_M_start.i206, align 8, !tbaa !78
  %sub.ptr.lhs.cast.i216 = ptrtoint double* %37 to i64
  %sub.ptr.rhs.cast.i217 = ptrtoint double* %38 to i64
  %sub.ptr.sub.i218 = sub i64 %sub.ptr.lhs.cast.i216, %sub.ptr.rhs.cast.i217
  %39 = load double*, double** %_M_finish.i.i.i172, align 8, !tbaa !82
  %40 = load double*, double** %_M_start.i207, align 8, !tbaa !78
  %sub.ptr.lhs.cast.i222 = ptrtoint double* %39 to i64
  %sub.ptr.rhs.cast.i223 = ptrtoint double* %40 to i64
  %sub.ptr.sub.i224 = sub i64 %sub.ptr.lhs.cast.i222, %sub.ptr.rhs.cast.i223
  %41 = load double*, double** %_M_finish.i.i.i190, align 8, !tbaa !82
  %42 = load double*, double** %_M_start.i208, align 8, !tbaa !78
  %sub.ptr.lhs.cast.i228 = ptrtoint double* %41 to i64
  %sub.ptr.rhs.cast.i229 = ptrtoint double* %42 to i64
  %sub.ptr.sub.i230 = sub i64 %sub.ptr.lhs.cast.i228, %sub.ptr.rhs.cast.i229
  %_M_finish.i232 = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %b, i64 0, i32 2, i32 0, i32 0, i32 1
  %43 = load double*, double** %_M_finish.i232, align 8, !tbaa !82
  %44 = load double*, double** %_M_start.i210, align 8, !tbaa !78
  %sub.ptr.lhs.cast.i234 = ptrtoint double* %43 to i64
  %sub.ptr.rhs.cast.i235 = ptrtoint double* %44 to i64
  %sub.ptr.sub.i236 = sub i64 %sub.ptr.lhs.cast.i234, %sub.ptr.rhs.cast.i235
  %_M_finish.i238 = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 3, i32 0, i32 0, i32 1
  %45 = load i32*, i32** %_M_finish.i238, align 8, !tbaa !71
  %46 = load i32*, i32** %_M_start.i211, align 8, !tbaa !74
  %sub.ptr.lhs.cast.i240 = ptrtoint i32* %45 to i64
  %sub.ptr.rhs.cast.i241 = ptrtoint i32* %46 to i64
  %sub.ptr.sub.i242 = sub i64 %sub.ptr.lhs.cast.i240, %sub.ptr.rhs.cast.i241
  %47 = load i32*, i32** %_M_finish.i200, align 8, !tbaa !71
  %48 = load i32*, i32** %_M_start.i201, align 8, !tbaa !74
  %sub.ptr.lhs.cast.i246 = ptrtoint i32* %47 to i64
  %sub.ptr.rhs.cast.i247 = ptrtoint i32* %48 to i64
  %sub.ptr.sub.i248 = sub i64 %sub.ptr.lhs.cast.i246, %sub.ptr.rhs.cast.i247
  %_M_finish.i250 = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 6, i32 0, i32 0, i32 1
  %49 = load double*, double** %_M_finish.i250, align 8, !tbaa !82
  %50 = load double*, double** %_M_start.i213, align 8, !tbaa !78
  %sub.ptr.lhs.cast.i252 = ptrtoint double* %49 to i64
  %sub.ptr.rhs.cast.i253 = ptrtoint double* %50 to i64
  %sub.ptr.sub.i254 = sub i64 %sub.ptr.lhs.cast.i252, %sub.ptr.rhs.cast.i253
  %51 = load double*, double** %_M_finish.i194, align 8, !tbaa !82
  %52 = load double*, double** %_M_start.i195, align 8, !tbaa !78
  %sub.ptr.lhs.cast.i258 = ptrtoint double* %51 to i64
  %sub.ptr.rhs.cast.i259 = ptrtoint double* %52 to i64
  %sub.ptr.sub.i260 = sub i64 %sub.ptr.lhs.cast.i258, %sub.ptr.rhs.cast.i259
  %53 = getelementptr inbounds [8 x i8*], [8 x i8*]* %.offload_baseptrs, i64 0, i64 0
  %54 = bitcast [8 x i8*]* %.offload_baseptrs to double**
  store double* %30, double** %54, align 8
  %55 = getelementptr inbounds [8 x i8*], [8 x i8*]* %.offload_ptrs, i64 0, i64 0
  %56 = bitcast [8 x i8*]* %.offload_ptrs to double**
  store double* %30, double** %56, align 8
  %57 = getelementptr inbounds [8 x i64], [8 x i64]* %.offload_sizes, i64 0, i64 0
  store i64 %sub.ptr.sub.i218, i64* %57, align 8
  %58 = getelementptr inbounds [8 x i8*], [8 x i8*]* %.offload_baseptrs, i64 0, i64 1
  %59 = bitcast i8** %58 to double**
  store double* %31, double** %59, align 8
  %60 = getelementptr inbounds [8 x i8*], [8 x i8*]* %.offload_ptrs, i64 0, i64 1
  %61 = bitcast i8** %60 to double**
  store double* %31, double** %61, align 8
  %62 = getelementptr inbounds [8 x i64], [8 x i64]* %.offload_sizes, i64 0, i64 1
  store i64 %sub.ptr.sub.i224, i64* %62, align 8
  %63 = getelementptr inbounds [8 x i8*], [8 x i8*]* %.offload_baseptrs, i64 0, i64 2
  %64 = bitcast i8** %63 to double**
  store double* %32, double** %64, align 8
  %65 = getelementptr inbounds [8 x i8*], [8 x i8*]* %.offload_ptrs, i64 0, i64 2
  %66 = bitcast i8** %65 to double**
  store double* %32, double** %66, align 8
  %67 = getelementptr inbounds [8 x i64], [8 x i64]* %.offload_sizes, i64 0, i64 2
  store i64 %sub.ptr.sub.i230, i64* %67, align 8
  %68 = getelementptr inbounds [8 x i8*], [8 x i8*]* %.offload_baseptrs, i64 0, i64 3
  %69 = bitcast i8** %68 to double**
  store double* %33, double** %69, align 8
  %70 = getelementptr inbounds [8 x i8*], [8 x i8*]* %.offload_ptrs, i64 0, i64 3
  %71 = bitcast i8** %70 to double**
  store double* %33, double** %71, align 8
  %72 = getelementptr inbounds [8 x i64], [8 x i64]* %.offload_sizes, i64 0, i64 3
  store i64 %sub.ptr.sub.i236, i64* %72, align 8
  %73 = getelementptr inbounds [8 x i8*], [8 x i8*]* %.offload_baseptrs, i64 0, i64 4
  %74 = bitcast i8** %73 to i32**
  store i32* %34, i32** %74, align 8
  %75 = getelementptr inbounds [8 x i8*], [8 x i8*]* %.offload_ptrs, i64 0, i64 4
  %76 = bitcast i8** %75 to i32**
  store i32* %34, i32** %76, align 8
  %77 = getelementptr inbounds [8 x i64], [8 x i64]* %.offload_sizes, i64 0, i64 4
  store i64 %sub.ptr.sub.i242, i64* %77, align 8
  %78 = getelementptr inbounds [8 x i8*], [8 x i8*]* %.offload_baseptrs, i64 0, i64 5
  %79 = bitcast i8** %78 to i32**
  store i32* %29, i32** %79, align 8
  %80 = getelementptr inbounds [8 x i8*], [8 x i8*]* %.offload_ptrs, i64 0, i64 5
  %81 = bitcast i8** %80 to i32**
  store i32* %29, i32** %81, align 8
  %82 = getelementptr inbounds [8 x i64], [8 x i64]* %.offload_sizes, i64 0, i64 5
  store i64 %sub.ptr.sub.i248, i64* %82, align 8
  %83 = getelementptr inbounds [8 x i8*], [8 x i8*]* %.offload_baseptrs, i64 0, i64 6
  %84 = bitcast i8** %83 to double**
  store double* %35, double** %84, align 8
  %85 = getelementptr inbounds [8 x i8*], [8 x i8*]* %.offload_ptrs, i64 0, i64 6
  %86 = bitcast i8** %85 to double**
  store double* %35, double** %86, align 8
  %87 = getelementptr inbounds [8 x i64], [8 x i64]* %.offload_sizes, i64 0, i64 6
  store i64 %sub.ptr.sub.i254, i64* %87, align 8
  %88 = getelementptr inbounds [8 x i8*], [8 x i8*]* %.offload_baseptrs, i64 0, i64 7
  %89 = bitcast i8** %88 to double**
  store double* %28, double** %89, align 8
  %90 = getelementptr inbounds [8 x i8*], [8 x i8*]* %.offload_ptrs, i64 0, i64 7
  %91 = bitcast i8** %90 to double**
  store double* %28, double** %91, align 8
  %92 = getelementptr inbounds [8 x i64], [8 x i64]* %.offload_sizes, i64 0, i64 7
  store i64 %sub.ptr.sub.i260, i64* %92, align 8
  call void @__tgt_target_data_begin_mapper(%struct.ident_t* nonnull @3, i64 -1, i32 8, i8** nonnull %53, i8** nonnull %55, i64* nonnull %57, i64* getelementptr inbounds ([8 x i64], [8 x i64]* @.offload_maptypes.144, i64 0, i64 0), i8** null, i8** null)
  %call62 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %invoke.cont61 unwind label %lpad60

lpad:                                             ; preds = %for.body.i.i.preheader.i.i.i.i.i.i170, %if.then.i.i.i.i.i.i.i165
  %93 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup223

lpad7:                                            ; preds = %for.body.i.i.preheader.i.i.i.i.i.i188
  %94 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup221

invoke.cont61:                                    ; preds = %invoke.cont8
  call void @_ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3_(double noundef 1.000000e+00, %"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %x, double noundef 0.000000e+00, %"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %x, %"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %p)
  %call65 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %invoke.cont64 unwind label %lpad60

invoke.cont64:                                    ; preds = %invoke.cont61
  %sub = fsub contract double %call65, %call62
  %add = fadd contract double %sub, 0.000000e+00
  %call67 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %invoke.cont66 unwind label %lpad60

invoke.cont66:                                    ; preds = %invoke.cont64
  %95 = load i32*, i32** %_M_finish.i, align 8, !tbaa !71
  %96 = load i32*, i32** %_M_start.i, align 8, !tbaa !74
  %sub.ptr.lhs.cast.i.i = ptrtoint i32* %95 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i32* %96 to i64
  %sub.ptr.sub.i.i = sub i64 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  %97 = lshr exact i64 %sub.ptr.sub.i.i, 2
  %conv.i262 = trunc i64 %97 to i32
  %98 = load i32*, i32** %_M_start.i211, align 8, !tbaa !74
  %99 = load i32*, i32** %_M_start.i201, align 8, !tbaa !74
  %100 = load double*, double** %_M_start.i213, align 8, !tbaa !78
  %_M_start.i28.i = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %p, i64 0, i32 2, i32 0, i32 0, i32 0
  %101 = load double*, double** %_M_start.i28.i, align 8, !tbaa !78
  %_M_start.i29.i = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %Ap, i64 0, i32 2, i32 0, i32 0, i32 0
  %102 = load double*, double** %_M_start.i29.i, align 8, !tbaa !78
  %cmp34.i = icmp sgt i32 %conv.i262, 0
  br i1 %cmp34.i, label %for.body.preheader.i, label %_ZN6miniFE14matvec_overlapINS_9CSRMatrixIdiiEENS_6VectorIdiiEEEclERS2_RS4_S7_.exit

for.body.preheader.i:                             ; preds = %invoke.cont66
  %wide.trip.count40.i = and i64 %97, 4294967295
  %.pre.i = load i32, i32* %98, align 4, !tbaa !16
  br label %for.body.i

for.body.i:                                       ; preds = %for.cond.cleanup14.i, %for.body.preheader.i
  %103 = phi i32 [ %.pre.i, %for.body.preheader.i ], [ %105, %for.cond.cleanup14.i ]
  %indvars.iv37.i = phi i64 [ 0, %for.body.preheader.i ], [ %indvars.iv.next38.i, %for.cond.cleanup14.i ]
  %arrayidx.i = getelementptr inbounds double, double* %102, i64 %indvars.iv37.i
  %104 = load double, double* %arrayidx.i, align 8, !tbaa !84
  %mul.i = fmul contract double %104, 0.000000e+00
  %indvars.iv.next38.i = add nuw nsw i64 %indvars.iv37.i, 1
  %arrayidx12.i = getelementptr inbounds i32, i32* %98, i64 %indvars.iv.next38.i
  %105 = load i32, i32* %arrayidx12.i, align 4, !tbaa !16
  %cmp1330.i = icmp slt i32 %103, %105
  br i1 %cmp1330.i, label %for.body15.preheader.i, label %for.cond.cleanup14.i

for.body15.preheader.i:                           ; preds = %for.body.i
  %106 = sext i32 %103 to i64
  %wide.trip.count.i = sext i32 %105 to i64
  %107 = sub nsw i64 %wide.trip.count.i, %106
  %108 = xor i64 %106, -1
  %109 = add nsw i64 %108, %wide.trip.count.i
  %xtraiter = and i64 %107, 3
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.body15.i.prol.loopexit, label %for.body15.i.prol

for.body15.i.prol:                                ; preds = %for.body15.preheader.i, %for.body15.i.prol
  %indvars.iv.i.prol = phi i64 [ %indvars.iv.next.i.prol, %for.body15.i.prol ], [ %106, %for.body15.preheader.i ]
  %sum.031.i.prol = phi double [ %add23.i.prol, %for.body15.i.prol ], [ %mul.i, %for.body15.preheader.i ]
  %prol.iter = phi i64 [ %prol.iter.next, %for.body15.i.prol ], [ 0, %for.body15.preheader.i ]
  %arrayidx17.i.prol = getelementptr inbounds double, double* %100, i64 %indvars.iv.i.prol
  %110 = load double, double* %arrayidx17.i.prol, align 8, !tbaa !84
  %arrayidx19.i.prol = getelementptr inbounds i32, i32* %99, i64 %indvars.iv.i.prol
  %111 = load i32, i32* %arrayidx19.i.prol, align 4, !tbaa !16
  %idxprom20.i.prol = sext i32 %111 to i64
  %arrayidx21.i.prol = getelementptr inbounds double, double* %101, i64 %idxprom20.i.prol
  %112 = load double, double* %arrayidx21.i.prol, align 8, !tbaa !84
  %mul22.i.prol = fmul contract double %110, %112
  %add23.i.prol = fadd contract double %sum.031.i.prol, %mul22.i.prol
  %indvars.iv.next.i.prol = add nsw i64 %indvars.iv.i.prol, 1
  %prol.iter.next = add i64 %prol.iter, 1
  %prol.iter.cmp.not = icmp eq i64 %prol.iter.next, %xtraiter
  br i1 %prol.iter.cmp.not, label %for.body15.i.prol.loopexit, label %for.body15.i.prol, !llvm.loop !149

for.body15.i.prol.loopexit:                       ; preds = %for.body15.i.prol, %for.body15.preheader.i
  %add23.i.lcssa.unr = phi double [ undef, %for.body15.preheader.i ], [ %add23.i.prol, %for.body15.i.prol ]
  %indvars.iv.i.unr = phi i64 [ %106, %for.body15.preheader.i ], [ %indvars.iv.next.i.prol, %for.body15.i.prol ]
  %sum.031.i.unr = phi double [ %mul.i, %for.body15.preheader.i ], [ %add23.i.prol, %for.body15.i.prol ]
  %113 = icmp ult i64 %109, 3
  br i1 %113, label %for.cond.cleanup14.i, label %for.body15.i

for.cond.cleanup14.i:                             ; preds = %for.body15.i.prol.loopexit, %for.body15.i, %for.body.i
  %sum.0.lcssa.i = phi double [ %mul.i, %for.body.i ], [ %add23.i.lcssa.unr, %for.body15.i.prol.loopexit ], [ %add23.i.3, %for.body15.i ]
  store double %sum.0.lcssa.i, double* %arrayidx.i, align 8, !tbaa !84
  %exitcond41.not.i = icmp eq i64 %indvars.iv.next38.i, %wide.trip.count40.i
  br i1 %exitcond41.not.i, label %_ZN6miniFE14matvec_overlapINS_9CSRMatrixIdiiEENS_6VectorIdiiEEEclERS2_RS4_S7_.exit, label %for.body.i, !llvm.loop !150

for.body15.i:                                     ; preds = %for.body15.i.prol.loopexit, %for.body15.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i.3, %for.body15.i ], [ %indvars.iv.i.unr, %for.body15.i.prol.loopexit ]
  %sum.031.i = phi double [ %add23.i.3, %for.body15.i ], [ %sum.031.i.unr, %for.body15.i.prol.loopexit ]
  %arrayidx17.i = getelementptr inbounds double, double* %100, i64 %indvars.iv.i
  %114 = load double, double* %arrayidx17.i, align 8, !tbaa !84
  %arrayidx19.i = getelementptr inbounds i32, i32* %99, i64 %indvars.iv.i
  %115 = load i32, i32* %arrayidx19.i, align 4, !tbaa !16
  %idxprom20.i = sext i32 %115 to i64
  %arrayidx21.i = getelementptr inbounds double, double* %101, i64 %idxprom20.i
  %116 = load double, double* %arrayidx21.i, align 8, !tbaa !84
  %mul22.i = fmul contract double %114, %116
  %add23.i = fadd contract double %sum.031.i, %mul22.i
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, 1
  %arrayidx17.i.1 = getelementptr inbounds double, double* %100, i64 %indvars.iv.next.i
  %117 = load double, double* %arrayidx17.i.1, align 8, !tbaa !84
  %arrayidx19.i.1 = getelementptr inbounds i32, i32* %99, i64 %indvars.iv.next.i
  %118 = load i32, i32* %arrayidx19.i.1, align 4, !tbaa !16
  %idxprom20.i.1 = sext i32 %118 to i64
  %arrayidx21.i.1 = getelementptr inbounds double, double* %101, i64 %idxprom20.i.1
  %119 = load double, double* %arrayidx21.i.1, align 8, !tbaa !84
  %mul22.i.1 = fmul contract double %117, %119
  %add23.i.1 = fadd contract double %add23.i, %mul22.i.1
  %indvars.iv.next.i.1 = add nsw i64 %indvars.iv.i, 2
  %arrayidx17.i.2 = getelementptr inbounds double, double* %100, i64 %indvars.iv.next.i.1
  %120 = load double, double* %arrayidx17.i.2, align 8, !tbaa !84
  %arrayidx19.i.2 = getelementptr inbounds i32, i32* %99, i64 %indvars.iv.next.i.1
  %121 = load i32, i32* %arrayidx19.i.2, align 4, !tbaa !16
  %idxprom20.i.2 = sext i32 %121 to i64
  %arrayidx21.i.2 = getelementptr inbounds double, double* %101, i64 %idxprom20.i.2
  %122 = load double, double* %arrayidx21.i.2, align 8, !tbaa !84
  %mul22.i.2 = fmul contract double %120, %122
  %add23.i.2 = fadd contract double %add23.i.1, %mul22.i.2
  %indvars.iv.next.i.2 = add nsw i64 %indvars.iv.i, 3
  %arrayidx17.i.3 = getelementptr inbounds double, double* %100, i64 %indvars.iv.next.i.2
  %123 = load double, double* %arrayidx17.i.3, align 8, !tbaa !84
  %arrayidx19.i.3 = getelementptr inbounds i32, i32* %99, i64 %indvars.iv.next.i.2
  %124 = load i32, i32* %arrayidx19.i.3, align 4, !tbaa !16
  %idxprom20.i.3 = sext i32 %124 to i64
  %arrayidx21.i.3 = getelementptr inbounds double, double* %101, i64 %idxprom20.i.3
  %125 = load double, double* %arrayidx21.i.3, align 8, !tbaa !84
  %mul22.i.3 = fmul contract double %123, %125
  %add23.i.3 = fadd contract double %add23.i.2, %mul22.i.3
  %indvars.iv.next.i.3 = add nsw i64 %indvars.iv.i, 4
  %exitcond.not.i.3 = icmp eq i64 %indvars.iv.next.i.3, %wide.trip.count.i
  br i1 %exitcond.not.i.3, label %for.cond.cleanup14.i, label %for.body15.i, !llvm.loop !151

_ZN6miniFE14matvec_overlapINS_9CSRMatrixIdiiEENS_6VectorIdiiEEEclERS2_RS4_S7_.exit: ; preds = %for.cond.cleanup14.i, %invoke.cont66
  %call70 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %invoke.cont69 unwind label %lpad60

invoke.cont69:                                    ; preds = %_ZN6miniFE14matvec_overlapINS_9CSRMatrixIdiiEENS_6VectorIdiiEEEclERS2_RS4_S7_.exit
  %sub71 = fsub contract double %call70, %call67
  %add72 = fadd contract double %sub71, 0.000000e+00
  %call74 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %invoke.cont73 unwind label %lpad60

invoke.cont73:                                    ; preds = %invoke.cont69
  call void @_ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3_(double noundef 1.000000e+00, %"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %b, double noundef -1.000000e+00, %"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %Ap, %"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %r)
  %call77 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %invoke.cont76 unwind label %lpad60

invoke.cont76:                                    ; preds = %invoke.cont73
  %sub78 = fsub contract double %call77, %call74
  %add79 = fadd contract double %add, %sub78
  %call81 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %invoke.cont80 unwind label %lpad60

invoke.cont80:                                    ; preds = %invoke.cont76
  %126 = bitcast [3 x i8*]* %.offload_baseptrs.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %126)
  %127 = bitcast [3 x i8*]* %.offload_ptrs.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %127)
  %128 = load double*, double** %_M_finish.i.i.i, align 8, !tbaa !82
  %_M_start.i.i264 = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %r, i64 0, i32 2, i32 0, i32 0, i32 0
  %129 = load double*, double** %_M_start.i.i264, align 8, !tbaa !78
  %sub.ptr.lhs.cast.i.i265 = ptrtoint double* %128 to i64
  %sub.ptr.rhs.cast.i.i266 = ptrtoint double* %129 to i64
  %sub.ptr.sub.i.i267 = sub i64 %sub.ptr.lhs.cast.i.i265, %sub.ptr.rhs.cast.i.i266
  %130 = lshr exact i64 %sub.ptr.sub.i.i267, 3
  %131 = bitcast double* %result.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %131) #8
  store double 0.000000e+00, double* %result.i, align 8, !tbaa !84
  %n.casted.sroa.0.0.insert.ext.i = and i64 %130, 4294967295
  %132 = getelementptr inbounds [3 x i8*], [3 x i8*]* %.offload_baseptrs.i, i64 0, i64 0
  %133 = bitcast [3 x i8*]* %.offload_baseptrs.i to i64*
  store i64 %n.casted.sroa.0.0.insert.ext.i, i64* %133, align 8
  %134 = getelementptr inbounds [3 x i8*], [3 x i8*]* %.offload_ptrs.i, i64 0, i64 0
  %135 = bitcast [3 x i8*]* %.offload_ptrs.i to i64*
  store i64 %n.casted.sroa.0.0.insert.ext.i, i64* %135, align 8
  %136 = getelementptr inbounds [3 x i8*], [3 x i8*]* %.offload_baseptrs.i, i64 0, i64 1
  %137 = bitcast i8** %136 to double**
  store double* %result.i, double** %137, align 8
  %138 = getelementptr inbounds [3 x i8*], [3 x i8*]* %.offload_ptrs.i, i64 0, i64 1
  %139 = bitcast i8** %138 to double**
  store double* %result.i, double** %139, align 8
  %140 = getelementptr inbounds [3 x i8*], [3 x i8*]* %.offload_baseptrs.i, i64 0, i64 2
  %141 = bitcast i8** %140 to double**
  store double* %129, double** %141, align 8
  %142 = getelementptr inbounds [3 x i8*], [3 x i8*]* %.offload_ptrs.i, i64 0, i64 2
  %143 = bitcast i8** %142 to double**
  store double* %129, double** %143, align 8
  call void @__kmpc_push_target_tripcount_mapper(%struct.ident_t* nonnull @3, i64 -1, i64 %n.casted.sroa.0.0.insert.ext.i) #8
  %144 = call i32 @__tgt_target_teams_mapper(%struct.ident_t* nonnull @3, i64 -1, i8* nonnull @.__omp_offloading_31_355dd0b__ZN6miniFE6dot_r2INS_6VectorIdiiEEEENS_10TypeTraitsINT_10ScalarTypeEE14magnitude_typeERKS4__l289.region_id, i32 3, i8** nonnull %132, i8** nonnull %134, i64* getelementptr inbounds ([3 x i64], [3 x i64]* @.offload_sizes.116, i64 0, i64 0), i64* getelementptr inbounds ([3 x i64], [3 x i64]* @.offload_maptypes.117, i64 0, i64 0), i8** null, i8** null, i32 0, i32 0) #8
  %.not.i = icmp eq i32 %144, 0
  br i1 %.not.i, label %_ZN6miniFE6dot_r2INS_6VectorIdiiEEEENS_10TypeTraitsINT_10ScalarTypeEE14magnitude_typeERKS4_.exit, label %omp_offload.failed.i

omp_offload.failed.i:                             ; preds = %invoke.cont80
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_teams(%struct.ident_t* nonnull @3, i32 3, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, double*, double*)* @.omp_outlined..112 to void (i32*, i32*, ...)*), i64 %n.casted.sroa.0.0.insert.ext.i, double* nonnull %result.i, double* %129) #8
  br label %_ZN6miniFE6dot_r2INS_6VectorIdiiEEEENS_10TypeTraitsINT_10ScalarTypeEE14magnitude_typeERKS4_.exit

_ZN6miniFE6dot_r2INS_6VectorIdiiEEEENS_10TypeTraitsINT_10ScalarTypeEE14magnitude_typeERKS4_.exit: ; preds = %invoke.cont80, %omp_offload.failed.i
  %145 = load double, double* %result.i, align 8, !tbaa !84
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %131) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %126)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %127)
  %call85 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %invoke.cont84 unwind label %lpad60

invoke.cont84:                                    ; preds = %_ZN6miniFE6dot_r2INS_6VectorIdiiEEEENS_10TypeTraitsINT_10ScalarTypeEE14magnitude_typeERKS4_.exit
  %sub86 = fsub contract double %call85, %call81
  %add87 = fadd contract double %sub86, 0.000000e+00
  %call88 = call contract double @sqrt(double noundef %145) #8
  store double %call88, double* %normr, align 8, !tbaa !84
  %call1.i269270 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i8* noundef nonnull getelementptr inbounds ([20 x i8], [20 x i8]* @.str.93, i64 0, i64 0), i64 noundef 19)
          to label %invoke.cont91 unwind label %lpad60

invoke.cont91:                                    ; preds = %invoke.cont84
  %146 = load double, double* %normr, align 8, !tbaa !84
  %call.i271272 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIdEERSoT_(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, double noundef %146)
          to label %invoke.cont93 unwind label %lpad60

invoke.cont93:                                    ; preds = %invoke.cont91
  %147 = bitcast %"class.std::basic_ostream"* %call.i271272 to i8**
  %vtable.i381 = load i8*, i8** %147, align 8, !tbaa !32
  %vbase.offset.ptr.i382 = getelementptr i8, i8* %vtable.i381, i64 -24
  %148 = bitcast i8* %vbase.offset.ptr.i382 to i64*
  %vbase.offset.i383 = load i64, i64* %148, align 8
  %149 = bitcast %"class.std::basic_ostream"* %call.i271272 to i8*
  %add.ptr.i384 = getelementptr inbounds i8, i8* %149, i64 %vbase.offset.i383
  %_M_ctype.i.i385 = getelementptr inbounds i8, i8* %add.ptr.i384, i64 240
  %150 = bitcast i8* %_M_ctype.i.i385 to %"class.std::ctype"**
  %151 = load %"class.std::ctype"*, %"class.std::ctype"** %150, align 8, !tbaa !34
  %tobool.not.i.i.i386 = icmp eq %"class.std::ctype"* %151, null
  br i1 %tobool.not.i.i.i386, label %if.then.i.i.i387, label %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i390

if.then.i.i.i387:                                 ; preds = %invoke.cont93
  invoke void @_ZSt16__throw_bad_castv() #29
          to label %.noexc400 unwind label %lpad60

.noexc400:                                        ; preds = %if.then.i.i.i387
  unreachable

_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i390: ; preds = %invoke.cont93
  %_M_widen_ok.i.i.i388 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %151, i64 0, i32 8
  %152 = load i8, i8* %_M_widen_ok.i.i.i388, align 8, !tbaa !37
  %tobool.not.i1.i.i389 = icmp eq i8 %152, 0
  br i1 %tobool.not.i1.i.i389, label %if.end.i.i.i396, label %if.then.i2.i.i392

if.then.i2.i.i392:                                ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i390
  %arrayidx.i.i.i391 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %151, i64 0, i32 9, i64 10
  %153 = load i8, i8* %arrayidx.i.i.i391, align 1, !tbaa !39
  br label %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i

if.end.i.i.i396:                                  ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i390
  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %151)
          to label %.noexc401 unwind label %lpad60

.noexc401:                                        ; preds = %if.end.i.i.i396
  %154 = bitcast %"class.std::ctype"* %151 to i8 (%"class.std::ctype"*, i8)***
  %vtable.i.i.i393 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %154, align 8, !tbaa !32
  %vfn.i.i.i394 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vtable.i.i.i393, i64 6
  %155 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vfn.i.i.i394, align 8
  %call.i.i.i395402 = invoke noundef zeroext i8 %155(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %151, i8 noundef zeroext 10)
          to label %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i unwind label %lpad60

_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i: ; preds = %.noexc401, %if.then.i2.i.i392
  %retval.0.i.i.i397 = phi i8 [ %153, %if.then.i2.i.i392 ], [ %call.i.i.i395402, %.noexc401 ]
  %call1.i398403 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call.i271272, i8 noundef zeroext %retval.0.i.i.i397)
          to label %call1.i398.noexc unwind label %lpad60

call1.i398.noexc:                                 ; preds = %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i
  %call.i.i399404 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call1.i398403)
          to label %for.cond.preheader unwind label %lpad60

for.cond.preheader:                               ; preds = %call1.i398.noexc
  %156 = bitcast [3 x i8*]* %.offload_baseptrs.i285 to i8*
  %157 = bitcast [3 x i8*]* %.offload_ptrs.i286 to i8*
  %158 = bitcast double* %result.i284 to i8*
  %159 = getelementptr inbounds [3 x i8*], [3 x i8*]* %.offload_baseptrs.i285, i64 0, i64 0
  %160 = bitcast [3 x i8*]* %.offload_baseptrs.i285 to i64*
  %161 = getelementptr inbounds [3 x i8*], [3 x i8*]* %.offload_ptrs.i286, i64 0, i64 0
  %162 = bitcast [3 x i8*]* %.offload_ptrs.i286 to i64*
  %163 = getelementptr inbounds [3 x i8*], [3 x i8*]* %.offload_baseptrs.i285, i64 0, i64 1
  %164 = bitcast i8** %163 to double**
  %165 = getelementptr inbounds [3 x i8*], [3 x i8*]* %.offload_ptrs.i286, i64 0, i64 1
  %166 = bitcast i8** %165 to double**
  %167 = getelementptr inbounds [3 x i8*], [3 x i8*]* %.offload_baseptrs.i285, i64 0, i64 2
  %168 = bitcast i8** %167 to double**
  %169 = getelementptr inbounds [3 x i8*], [3 x i8*]* %.offload_ptrs.i286, i64 0, i64 2
  %170 = bitcast i8** %169 to double**
  %171 = bitcast [3 x i8*]* %.offload_baseptrs.i275 to i8*
  %172 = bitcast [3 x i8*]* %.offload_ptrs.i276 to i8*
  %173 = getelementptr inbounds [3 x i8*], [3 x i8*]* %.offload_baseptrs.i275, i64 0, i64 0
  %174 = bitcast [3 x i8*]* %.offload_baseptrs.i275 to i64*
  %175 = getelementptr inbounds [3 x i8*], [3 x i8*]* %.offload_ptrs.i276, i64 0, i64 0
  %176 = bitcast [3 x i8*]* %.offload_ptrs.i276 to i64*
  %177 = getelementptr inbounds [3 x i8*], [3 x i8*]* %.offload_baseptrs.i275, i64 0, i64 1
  %178 = bitcast i8** %177 to double**
  %179 = getelementptr inbounds [3 x i8*], [3 x i8*]* %.offload_ptrs.i276, i64 0, i64 1
  %180 = bitcast i8** %179 to double**
  %181 = getelementptr inbounds [3 x i8*], [3 x i8*]* %.offload_baseptrs.i275, i64 0, i64 2
  %182 = bitcast i8** %181 to double**
  %183 = getelementptr inbounds [3 x i8*], [3 x i8*]* %.offload_ptrs.i276, i64 0, i64 2
  %184 = bitcast i8** %183 to double**
  %cmp99.not483 = icmp slt i32 %max_iter, 1
  br i1 %cmp99.not483, label %cleanup193, label %land.rhs

lpad60:                                           ; preds = %call1.i398.noexc, %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i, %.noexc401, %if.end.i.i.i396, %if.then.i.i.i387, %invoke.cont91, %invoke.cont84, %_ZN6miniFE6dot_r2INS_6VectorIdiiEEEENS_10TypeTraitsINT_10ScalarTypeEE14magnitude_typeERKS4_.exit, %invoke.cont76, %invoke.cont73, %invoke.cont69, %_ZN6miniFE14matvec_overlapINS_9CSRMatrixIdiiEENS_6VectorIdiiEEEclERS2_RS4_S7_.exit, %invoke.cont64, %invoke.cont61, %invoke.cont8
  %185 = landingpad { i8*, i32 }
          catch i8* null
  br label %terminate.handler

land.rhs:                                         ; preds = %for.cond.preheader, %for.inc
  %k.0489 = phi i32 [ %inc, %for.inc ], [ 1, %for.cond.preheader ]
  %brkdown_tol.0488 = phi double [ %brkdown_tol.1, %for.inc ], [ 0x3CB0000000000000, %for.cond.preheader ]
  %tWAXPY.0487 = phi double [ %add191, %for.inc ], [ %add79, %for.cond.preheader ]
  %tDOT.0486 = phi double [ %add160, %for.inc ], [ %add87, %for.cond.preheader ]
  %tMATVEC.0485 = phi double [ %add152, %for.inc ], [ %add72, %for.cond.preheader ]
  %rtrans.0484 = phi double [ %rtrans.1, %for.inc ], [ %145, %for.cond.preheader ]
  %186 = load double, double* %normr, align 8, !tbaa !84
  %187 = load double, double* %tolerance, align 8, !tbaa !84
  %cmp100 = fcmp contract ogt double %186, %187
  br i1 %cmp100, label %for.body, label %cleanup193

for.body:                                         ; preds = %land.rhs
  %cmp101 = icmp eq i32 %k.0489, 1
  br i1 %cmp101, label %if.then102, label %if.else

if.then102:                                       ; preds = %for.body
  %call105 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %invoke.cont104 unwind label %lpad103.loopexit

invoke.cont104:                                   ; preds = %if.then102
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %171)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %172)
  %188 = load double*, double** %_M_finish.i.i.i, align 8, !tbaa !82
  %189 = load double*, double** %_M_start.i.i264, align 8, !tbaa !78
  %sub.ptr.lhs.cast.i.i279 = ptrtoint double* %188 to i64
  %sub.ptr.rhs.cast.i.i280 = ptrtoint double* %189 to i64
  %sub.ptr.sub.i.i281 = sub i64 %sub.ptr.lhs.cast.i.i279, %sub.ptr.rhs.cast.i.i280
  %190 = lshr exact i64 %sub.ptr.sub.i.i281, 3
  %191 = load double*, double** %_M_start.i28.i, align 8, !tbaa !78
  %n.casted.sroa.0.0.insert.ext.i282 = and i64 %190, 4294967295
  store i64 %n.casted.sroa.0.0.insert.ext.i282, i64* %174, align 8
  store i64 %n.casted.sroa.0.0.insert.ext.i282, i64* %176, align 8
  store double* %191, double** %178, align 8
  store double* %191, double** %180, align 8
  store double* %189, double** %182, align 8
  store double* %189, double** %184, align 8
  call void @__kmpc_push_target_tripcount_mapper(%struct.ident_t* nonnull @3, i64 -1, i64 %n.casted.sroa.0.0.insert.ext.i282) #8
  %192 = call i32 @__tgt_target_teams_mapper(%struct.ident_t* nonnull @3, i64 -1, i8* nonnull @.__omp_offloading_31_355dd0b__ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3__l157.region_id, i32 3, i8** nonnull %173, i8** nonnull %175, i64* getelementptr inbounds ([3 x i64], [3 x i64]* @.offload_sizes.120, i64 0, i64 0), i64* getelementptr inbounds ([3 x i64], [3 x i64]* @.offload_maptypes.121, i64 0, i64 0), i8** null, i8** null, i32 0, i32 0) #8
  %.not35.i = icmp eq i32 %192, 0
  br i1 %.not35.i, label %_ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3_.exit, label %omp_offload.failed.i283

omp_offload.failed.i283:                          ; preds = %invoke.cont104
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_teams(%struct.ident_t* nonnull @3, i32 3, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, double*, double*)* @.omp_outlined..97 to void (i32*, i32*, ...)*), i64 %n.casted.sroa.0.0.insert.ext.i282, double* %191, double* %189) #8
  br label %_ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3_.exit

_ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3_.exit: ; preds = %invoke.cont104, %omp_offload.failed.i283
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %171)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %172)
  %call108 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %invoke.cont107 unwind label %lpad103.loopexit

invoke.cont107:                                   ; preds = %_ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3_.exit
  %sub109 = fsub contract double %call108, %call105
  br label %if.end128

lpad103.loopexit:                                 ; preds = %if.then102, %_ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3_.exit, %if.else, %_ZN6miniFE6dot_r2INS_6VectorIdiiEEEENS_10TypeTraitsINT_10ScalarTypeEE14magnitude_typeERKS4_.exit295, %invoke.cont134, %if.then133, %invoke.cont136, %invoke.cont138, %if.end.i.i.i421, %.noexc427, %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i425, %call1.i423.noexc
  %lpad.loopexit = landingpad { i8*, i32 }
          catch i8* null
  br label %terminate.handler

lpad103.loopexit.split-lp:                        ; preds = %if.then.i.i.i412
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          catch i8* null
  br label %terminate.handler

if.else:                                          ; preds = %for.body
  %call112 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %invoke.cont111 unwind label %lpad103.loopexit

invoke.cont111:                                   ; preds = %if.else
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %156)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %157)
  %193 = load double*, double** %_M_finish.i.i.i, align 8, !tbaa !82
  %194 = load double*, double** %_M_start.i.i264, align 8, !tbaa !78
  %sub.ptr.lhs.cast.i.i289 = ptrtoint double* %193 to i64
  %sub.ptr.rhs.cast.i.i290 = ptrtoint double* %194 to i64
  %sub.ptr.sub.i.i291 = sub i64 %sub.ptr.lhs.cast.i.i289, %sub.ptr.rhs.cast.i.i290
  %195 = lshr exact i64 %sub.ptr.sub.i.i291, 3
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %158) #8
  store double 0.000000e+00, double* %result.i284, align 8, !tbaa !84
  %n.casted.sroa.0.0.insert.ext.i292 = and i64 %195, 4294967295
  store i64 %n.casted.sroa.0.0.insert.ext.i292, i64* %160, align 8
  store i64 %n.casted.sroa.0.0.insert.ext.i292, i64* %162, align 8
  store double* %result.i284, double** %164, align 8
  store double* %result.i284, double** %166, align 8
  store double* %194, double** %168, align 8
  store double* %194, double** %170, align 8
  call void @__kmpc_push_target_tripcount_mapper(%struct.ident_t* nonnull @3, i64 -1, i64 %n.casted.sroa.0.0.insert.ext.i292) #8
  %196 = call i32 @__tgt_target_teams_mapper(%struct.ident_t* nonnull @3, i64 -1, i8* nonnull @.__omp_offloading_31_355dd0b__ZN6miniFE6dot_r2INS_6VectorIdiiEEEENS_10TypeTraitsINT_10ScalarTypeEE14magnitude_typeERKS4__l289.region_id, i32 3, i8** nonnull %159, i8** nonnull %161, i64* getelementptr inbounds ([3 x i64], [3 x i64]* @.offload_sizes.116, i64 0, i64 0), i64* getelementptr inbounds ([3 x i64], [3 x i64]* @.offload_maptypes.117, i64 0, i64 0), i8** null, i8** null, i32 0, i32 0) #8
  %.not.i293 = icmp eq i32 %196, 0
  br i1 %.not.i293, label %_ZN6miniFE6dot_r2INS_6VectorIdiiEEEENS_10TypeTraitsINT_10ScalarTypeEE14magnitude_typeERKS4_.exit295, label %omp_offload.failed.i294

omp_offload.failed.i294:                          ; preds = %invoke.cont111
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_teams(%struct.ident_t* nonnull @3, i32 3, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, double*, double*)* @.omp_outlined..112 to void (i32*, i32*, ...)*), i64 %n.casted.sroa.0.0.insert.ext.i292, double* nonnull %result.i284, double* %194) #8
  br label %_ZN6miniFE6dot_r2INS_6VectorIdiiEEEENS_10TypeTraitsINT_10ScalarTypeEE14magnitude_typeERKS4_.exit295

_ZN6miniFE6dot_r2INS_6VectorIdiiEEEENS_10TypeTraitsINT_10ScalarTypeEE14magnitude_typeERKS4_.exit295: ; preds = %invoke.cont111, %omp_offload.failed.i294
  %197 = load double, double* %result.i284, align 8, !tbaa !84
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %158) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %156)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %157)
  %call116 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %invoke.cont115 unwind label %lpad103.loopexit

invoke.cont115:                                   ; preds = %_ZN6miniFE6dot_r2INS_6VectorIdiiEEEENS_10TypeTraitsINT_10ScalarTypeEE14magnitude_typeERKS4_.exit295
  %sub117 = fsub contract double %call116, %call112
  %add118 = fadd contract double %tDOT.0486, %sub117
  %call122 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %invoke.cont121 unwind label %lpad120

invoke.cont121:                                   ; preds = %invoke.cont115
  %div119 = fdiv contract double %197, %rtrans.0484
  call void @_ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3_(double noundef 1.000000e+00, %"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %r, double noundef %div119, %"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %p)
  %call125 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %invoke.cont124 unwind label %lpad120

invoke.cont124:                                   ; preds = %invoke.cont121
  %sub126 = fsub contract double %call125, %call122
  br label %if.end128

lpad120:                                          ; preds = %invoke.cont121, %invoke.cont115
  %198 = landingpad { i8*, i32 }
          catch i8* null
  br label %terminate.handler

if.end128:                                        ; preds = %invoke.cont124, %invoke.cont107
  %rtrans.1 = phi double [ %rtrans.0484, %invoke.cont107 ], [ %197, %invoke.cont124 ]
  %tDOT.1 = phi double [ %tDOT.0486, %invoke.cont107 ], [ %add118, %invoke.cont124 ]
  %sub109.pn = phi double [ %sub109, %invoke.cont107 ], [ %sub126, %invoke.cont124 ]
  %tWAXPY.1 = fadd contract double %tWAXPY.0487, %sub109.pn
  %call129 = call contract double @sqrt(double noundef %rtrans.1) #8
  store double %call129, double* %normr, align 8, !tbaa !84
  %rem = urem i32 %k.0489, %spec.store.select1
  %cmp131 = icmp eq i32 %rem, 0
  %cmp132 = icmp eq i32 %k.0489, %max_iter
  %or.cond = or i1 %cmp132, %cmp131
  br i1 %or.cond, label %if.then133, label %if.end144

if.then133:                                       ; preds = %if.end128
  %call1.i297298 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i8* noundef nonnull getelementptr inbounds ([13 x i8], [13 x i8]* @.str.94, i64 0, i64 0), i64 noundef 12)
          to label %invoke.cont134 unwind label %lpad103.loopexit

invoke.cont134:                                   ; preds = %if.then133
  %call137 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i32 noundef signext %k.0489)
          to label %invoke.cont136 unwind label %lpad103.loopexit

invoke.cont136:                                   ; preds = %invoke.cont134
  %call1.i301302 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call137, i8* noundef nonnull getelementptr inbounds ([15 x i8], [15 x i8]* @.str.95, i64 0, i64 0), i64 noundef 14)
          to label %invoke.cont138 unwind label %lpad103.loopexit

invoke.cont138:                                   ; preds = %invoke.cont136
  %199 = load double, double* %normr, align 8, !tbaa !84
  %call.i304305 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIdEERSoT_(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call137, double noundef %199)
          to label %invoke.cont140 unwind label %lpad103.loopexit

invoke.cont140:                                   ; preds = %invoke.cont138
  %200 = bitcast %"class.std::basic_ostream"* %call.i304305 to i8**
  %vtable.i406 = load i8*, i8** %200, align 8, !tbaa !32
  %vbase.offset.ptr.i407 = getelementptr i8, i8* %vtable.i406, i64 -24
  %201 = bitcast i8* %vbase.offset.ptr.i407 to i64*
  %vbase.offset.i408 = load i64, i64* %201, align 8
  %add.ptr.i409 = getelementptr inbounds %"class.std::basic_ostream", %"class.std::basic_ostream"* %call.i304305, i64 0, i32 1, i32 4
  %202 = bitcast %"class.std::basic_streambuf"** %add.ptr.i409 to i8*
  %_M_ctype.i.i410 = getelementptr inbounds i8, i8* %202, i64 %vbase.offset.i408
  %203 = bitcast i8* %_M_ctype.i.i410 to %"class.std::ctype"**
  %204 = load %"class.std::ctype"*, %"class.std::ctype"** %203, align 8, !tbaa !34
  %tobool.not.i.i.i411 = icmp eq %"class.std::ctype"* %204, null
  br i1 %tobool.not.i.i.i411, label %if.then.i.i.i412, label %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i415

if.then.i.i.i412:                                 ; preds = %invoke.cont140
  invoke void @_ZSt16__throw_bad_castv() #29
          to label %.noexc426 unwind label %lpad103.loopexit.split-lp

.noexc426:                                        ; preds = %if.then.i.i.i412
  unreachable

_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i415: ; preds = %invoke.cont140
  %_M_widen_ok.i.i.i413 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %204, i64 0, i32 8
  %205 = load i8, i8* %_M_widen_ok.i.i.i413, align 8, !tbaa !37
  %tobool.not.i1.i.i414 = icmp eq i8 %205, 0
  br i1 %tobool.not.i1.i.i414, label %if.end.i.i.i421, label %if.then.i2.i.i417

if.then.i2.i.i417:                                ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i415
  %arrayidx.i.i.i416 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %204, i64 0, i32 9, i64 10
  %206 = load i8, i8* %arrayidx.i.i.i416, align 1, !tbaa !39
  br label %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i425

if.end.i.i.i421:                                  ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i415
  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %204)
          to label %.noexc427 unwind label %lpad103.loopexit

.noexc427:                                        ; preds = %if.end.i.i.i421
  %207 = bitcast %"class.std::ctype"* %204 to i8 (%"class.std::ctype"*, i8)***
  %vtable.i.i.i418 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %207, align 8, !tbaa !32
  %vfn.i.i.i419 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vtable.i.i.i418, i64 6
  %208 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vfn.i.i.i419, align 8
  %call.i.i.i420428 = invoke noundef zeroext i8 %208(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %204, i8 noundef zeroext 10)
          to label %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i425 unwind label %lpad103.loopexit

_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i425: ; preds = %.noexc427, %if.then.i2.i.i417
  %retval.0.i.i.i422 = phi i8 [ %206, %if.then.i2.i.i417 ], [ %call.i.i.i420428, %.noexc427 ]
  %call1.i423429 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call.i304305, i8 noundef zeroext %retval.0.i.i.i422)
          to label %call1.i423.noexc unwind label %lpad103.loopexit

call1.i423.noexc:                                 ; preds = %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i425
  %call.i.i424430 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call1.i423429)
          to label %if.end144 unwind label %lpad103.loopexit

if.end144:                                        ; preds = %call1.i423.noexc, %if.end128
  %call147 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %invoke.cont146 unwind label %lpad145.loopexit

invoke.cont146:                                   ; preds = %if.end144
  %209 = load i32*, i32** %_M_finish.i, align 8, !tbaa !71
  %210 = load i32*, i32** %_M_start.i, align 8, !tbaa !74
  %sub.ptr.lhs.cast.i.i312 = ptrtoint i32* %209 to i64
  %sub.ptr.rhs.cast.i.i313 = ptrtoint i32* %210 to i64
  %sub.ptr.sub.i.i314 = sub i64 %sub.ptr.lhs.cast.i.i312, %sub.ptr.rhs.cast.i.i313
  %211 = lshr exact i64 %sub.ptr.sub.i.i314, 2
  %conv.i315 = trunc i64 %211 to i32
  %212 = load i32*, i32** %_M_start.i211, align 8, !tbaa !74
  %213 = load i32*, i32** %_M_start.i201, align 8, !tbaa !74
  %214 = load double*, double** %_M_start.i213, align 8, !tbaa !78
  %215 = load double*, double** %_M_start.i28.i, align 8, !tbaa !78
  %216 = load double*, double** %_M_start.i29.i, align 8, !tbaa !78
  %cmp34.i321 = icmp sgt i32 %conv.i315, 0
  br i1 %cmp34.i321, label %for.body.preheader.i324, label %_ZN6miniFE14matvec_overlapINS_9CSRMatrixIdiiEENS_6VectorIdiiEEEclERS2_RS4_S7_.exit348

for.body.preheader.i324:                          ; preds = %invoke.cont146
  %wide.trip.count40.i322 = and i64 %211, 4294967295
  %.pre.i323 = load i32, i32* %212, align 4, !tbaa !16
  br label %for.body.i331

for.body.i331:                                    ; preds = %for.cond.cleanup14.i336, %for.body.preheader.i324
  %217 = phi i32 [ %.pre.i323, %for.body.preheader.i324 ], [ %219, %for.cond.cleanup14.i336 ]
  %indvars.iv37.i325 = phi i64 [ 0, %for.body.preheader.i324 ], [ %indvars.iv.next38.i328, %for.cond.cleanup14.i336 ]
  %arrayidx.i326 = getelementptr inbounds double, double* %216, i64 %indvars.iv37.i325
  %218 = load double, double* %arrayidx.i326, align 8, !tbaa !84
  %mul.i327 = fmul contract double %218, 0.000000e+00
  %indvars.iv.next38.i328 = add nuw nsw i64 %indvars.iv37.i325, 1
  %arrayidx12.i329 = getelementptr inbounds i32, i32* %212, i64 %indvars.iv.next38.i328
  %219 = load i32, i32* %arrayidx12.i329, align 4, !tbaa !16
  %cmp1330.i330 = icmp slt i32 %217, %219
  br i1 %cmp1330.i330, label %for.body15.preheader.i333, label %for.cond.cleanup14.i336

for.body15.preheader.i333:                        ; preds = %for.body.i331
  %220 = sext i32 %217 to i64
  %wide.trip.count.i332 = sext i32 %219 to i64
  %221 = sub nsw i64 %wide.trip.count.i332, %220
  %222 = xor i64 %220, -1
  %223 = add nsw i64 %222, %wide.trip.count.i332
  %xtraiter504 = and i64 %221, 3
  %lcmp.mod505.not = icmp eq i64 %xtraiter504, 0
  br i1 %lcmp.mod505.not, label %for.body15.i347.prol.loopexit, label %for.body15.i347.prol

for.body15.i347.prol:                             ; preds = %for.body15.preheader.i333, %for.body15.i347.prol
  %indvars.iv.i337.prol = phi i64 [ %indvars.iv.next.i345.prol, %for.body15.i347.prol ], [ %220, %for.body15.preheader.i333 ]
  %sum.031.i338.prol = phi double [ %add23.i344.prol, %for.body15.i347.prol ], [ %mul.i327, %for.body15.preheader.i333 ]
  %prol.iter506 = phi i64 [ %prol.iter506.next, %for.body15.i347.prol ], [ 0, %for.body15.preheader.i333 ]
  %arrayidx17.i339.prol = getelementptr inbounds double, double* %214, i64 %indvars.iv.i337.prol
  %224 = load double, double* %arrayidx17.i339.prol, align 8, !tbaa !84
  %arrayidx19.i340.prol = getelementptr inbounds i32, i32* %213, i64 %indvars.iv.i337.prol
  %225 = load i32, i32* %arrayidx19.i340.prol, align 4, !tbaa !16
  %idxprom20.i341.prol = sext i32 %225 to i64
  %arrayidx21.i342.prol = getelementptr inbounds double, double* %215, i64 %idxprom20.i341.prol
  %226 = load double, double* %arrayidx21.i342.prol, align 8, !tbaa !84
  %mul22.i343.prol = fmul contract double %224, %226
  %add23.i344.prol = fadd contract double %sum.031.i338.prol, %mul22.i343.prol
  %indvars.iv.next.i345.prol = add nsw i64 %indvars.iv.i337.prol, 1
  %prol.iter506.next = add i64 %prol.iter506, 1
  %prol.iter506.cmp.not = icmp eq i64 %prol.iter506.next, %xtraiter504
  br i1 %prol.iter506.cmp.not, label %for.body15.i347.prol.loopexit, label %for.body15.i347.prol, !llvm.loop !152

for.body15.i347.prol.loopexit:                    ; preds = %for.body15.i347.prol, %for.body15.preheader.i333
  %add23.i344.lcssa.unr = phi double [ undef, %for.body15.preheader.i333 ], [ %add23.i344.prol, %for.body15.i347.prol ]
  %indvars.iv.i337.unr = phi i64 [ %220, %for.body15.preheader.i333 ], [ %indvars.iv.next.i345.prol, %for.body15.i347.prol ]
  %sum.031.i338.unr = phi double [ %mul.i327, %for.body15.preheader.i333 ], [ %add23.i344.prol, %for.body15.i347.prol ]
  %227 = icmp ult i64 %223, 3
  br i1 %227, label %for.cond.cleanup14.i336, label %for.body15.i347

for.cond.cleanup14.i336:                          ; preds = %for.body15.i347.prol.loopexit, %for.body15.i347, %for.body.i331
  %sum.0.lcssa.i334 = phi double [ %mul.i327, %for.body.i331 ], [ %add23.i344.lcssa.unr, %for.body15.i347.prol.loopexit ], [ %add23.i344.3, %for.body15.i347 ]
  store double %sum.0.lcssa.i334, double* %arrayidx.i326, align 8, !tbaa !84
  %exitcond41.not.i335 = icmp eq i64 %indvars.iv.next38.i328, %wide.trip.count40.i322
  br i1 %exitcond41.not.i335, label %_ZN6miniFE14matvec_overlapINS_9CSRMatrixIdiiEENS_6VectorIdiiEEEclERS2_RS4_S7_.exit348, label %for.body.i331, !llvm.loop !150

for.body15.i347:                                  ; preds = %for.body15.i347.prol.loopexit, %for.body15.i347
  %indvars.iv.i337 = phi i64 [ %indvars.iv.next.i345.3, %for.body15.i347 ], [ %indvars.iv.i337.unr, %for.body15.i347.prol.loopexit ]
  %sum.031.i338 = phi double [ %add23.i344.3, %for.body15.i347 ], [ %sum.031.i338.unr, %for.body15.i347.prol.loopexit ]
  %arrayidx17.i339 = getelementptr inbounds double, double* %214, i64 %indvars.iv.i337
  %228 = load double, double* %arrayidx17.i339, align 8, !tbaa !84
  %arrayidx19.i340 = getelementptr inbounds i32, i32* %213, i64 %indvars.iv.i337
  %229 = load i32, i32* %arrayidx19.i340, align 4, !tbaa !16
  %idxprom20.i341 = sext i32 %229 to i64
  %arrayidx21.i342 = getelementptr inbounds double, double* %215, i64 %idxprom20.i341
  %230 = load double, double* %arrayidx21.i342, align 8, !tbaa !84
  %mul22.i343 = fmul contract double %228, %230
  %add23.i344 = fadd contract double %sum.031.i338, %mul22.i343
  %indvars.iv.next.i345 = add nsw i64 %indvars.iv.i337, 1
  %arrayidx17.i339.1 = getelementptr inbounds double, double* %214, i64 %indvars.iv.next.i345
  %231 = load double, double* %arrayidx17.i339.1, align 8, !tbaa !84
  %arrayidx19.i340.1 = getelementptr inbounds i32, i32* %213, i64 %indvars.iv.next.i345
  %232 = load i32, i32* %arrayidx19.i340.1, align 4, !tbaa !16
  %idxprom20.i341.1 = sext i32 %232 to i64
  %arrayidx21.i342.1 = getelementptr inbounds double, double* %215, i64 %idxprom20.i341.1
  %233 = load double, double* %arrayidx21.i342.1, align 8, !tbaa !84
  %mul22.i343.1 = fmul contract double %231, %233
  %add23.i344.1 = fadd contract double %add23.i344, %mul22.i343.1
  %indvars.iv.next.i345.1 = add nsw i64 %indvars.iv.i337, 2
  %arrayidx17.i339.2 = getelementptr inbounds double, double* %214, i64 %indvars.iv.next.i345.1
  %234 = load double, double* %arrayidx17.i339.2, align 8, !tbaa !84
  %arrayidx19.i340.2 = getelementptr inbounds i32, i32* %213, i64 %indvars.iv.next.i345.1
  %235 = load i32, i32* %arrayidx19.i340.2, align 4, !tbaa !16
  %idxprom20.i341.2 = sext i32 %235 to i64
  %arrayidx21.i342.2 = getelementptr inbounds double, double* %215, i64 %idxprom20.i341.2
  %236 = load double, double* %arrayidx21.i342.2, align 8, !tbaa !84
  %mul22.i343.2 = fmul contract double %234, %236
  %add23.i344.2 = fadd contract double %add23.i344.1, %mul22.i343.2
  %indvars.iv.next.i345.2 = add nsw i64 %indvars.iv.i337, 3
  %arrayidx17.i339.3 = getelementptr inbounds double, double* %214, i64 %indvars.iv.next.i345.2
  %237 = load double, double* %arrayidx17.i339.3, align 8, !tbaa !84
  %arrayidx19.i340.3 = getelementptr inbounds i32, i32* %213, i64 %indvars.iv.next.i345.2
  %238 = load i32, i32* %arrayidx19.i340.3, align 4, !tbaa !16
  %idxprom20.i341.3 = sext i32 %238 to i64
  %arrayidx21.i342.3 = getelementptr inbounds double, double* %215, i64 %idxprom20.i341.3
  %239 = load double, double* %arrayidx21.i342.3, align 8, !tbaa !84
  %mul22.i343.3 = fmul contract double %237, %239
  %add23.i344.3 = fadd contract double %add23.i344.2, %mul22.i343.3
  %indvars.iv.next.i345.3 = add nsw i64 %indvars.iv.i337, 4
  %exitcond.not.i346.3 = icmp eq i64 %indvars.iv.next.i345.3, %wide.trip.count.i332
  br i1 %exitcond.not.i346.3, label %for.cond.cleanup14.i336, label %for.body15.i347, !llvm.loop !151

_ZN6miniFE14matvec_overlapINS_9CSRMatrixIdiiEENS_6VectorIdiiEEEclERS2_RS4_S7_.exit348: ; preds = %for.cond.cleanup14.i336, %invoke.cont146
  %call150 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %invoke.cont149 unwind label %lpad145.loopexit

invoke.cont149:                                   ; preds = %_ZN6miniFE14matvec_overlapINS_9CSRMatrixIdiiEENS_6VectorIdiiEEEclERS2_RS4_S7_.exit348
  %sub151 = fsub contract double %call150, %call147
  %add152 = fadd contract double %tMATVEC.0485, %sub151
  %call154 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %invoke.cont153 unwind label %lpad145.loopexit

invoke.cont153:                                   ; preds = %invoke.cont149
  %call156 = call noundef double @_ZN6miniFE3dotINS_6VectorIdiiEEEENS_10TypeTraitsINT_10ScalarTypeEE14magnitude_typeERKS4_S9_(%"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %Ap, %"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %p)
  %call158 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %invoke.cont157 unwind label %lpad145.loopexit

invoke.cont157:                                   ; preds = %invoke.cont153
  %sub159 = fsub contract double %call158, %call154
  %add160 = fadd contract double %tDOT.1, %sub159
  %cmp161 = fcmp contract olt double %call156, %brkdown_tol.0488
  br i1 %cmp161, label %if.then162, label %if.end181

if.then162:                                       ; preds = %invoke.cont157
  %cmp163 = fcmp contract olt double %call156, 0.000000e+00
  br i1 %cmp163, label %if.then167, label %invoke.cont165

invoke.cont165:                                   ; preds = %if.then162
  %call.i349 = call contract noundef double @_ZN6miniFE3dotINS_6VectorIdiiEEEENS_10TypeTraitsINT_10ScalarTypeEE14magnitude_typeERKS4_S9_(%"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %Ap, %"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %Ap)
  %call1.i350 = call contract double @sqrt(double noundef %call.i349) #8
  %call2.i = call contract noundef double @_ZN6miniFE3dotINS_6VectorIdiiEEEENS_10TypeTraitsINT_10ScalarTypeEE14magnitude_typeERKS4_S9_(%"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %p, %"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %p)
  %call3.i = call contract double @sqrt(double noundef %call2.i) #8
  %240 = call contract double @llvm.fabs.f64(double %call156) #8
  %mul.i351 = fmul contract double %call1.i350, 1.000000e+02
  %mul5.i = fmul contract double %mul.i351, %call3.i
  %mul7.i = fmul contract double %mul5.i, 0x3CB0000000000000
  %cmp.i = fcmp contract ugt double %240, %mul7.i
  br i1 %cmp.i, label %if.else179, label %if.then167

if.then167:                                       ; preds = %invoke.cont165, %if.then162
  %call1.i353354 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i8* noundef nonnull getelementptr inbounds ([45 x i8], [45 x i8]* @.str.96, i64 0, i64 0), i64 noundef 44)
          to label %invoke.cont168 unwind label %lpad145.loopexit.split-lp

invoke.cont168:                                   ; preds = %if.then167
  %vtable.i432 = load i8*, i8** bitcast (%"class.std::basic_ostream"* @_ZSt4cerr to i8**), align 8, !tbaa !32
  %vbase.offset.ptr.i433 = getelementptr i8, i8* %vtable.i432, i64 -24
  %241 = bitcast i8* %vbase.offset.ptr.i433 to i64*
  %vbase.offset.i434 = load i64, i64* %241, align 8
  %add.ptr.i435 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cerr to i8*), i64 %vbase.offset.i434
  %_M_ctype.i.i436 = getelementptr inbounds i8, i8* %add.ptr.i435, i64 240
  %242 = bitcast i8* %_M_ctype.i.i436 to %"class.std::ctype"**
  %243 = load %"class.std::ctype"*, %"class.std::ctype"** %242, align 8, !tbaa !34
  %tobool.not.i.i.i437 = icmp eq %"class.std::ctype"* %243, null
  br i1 %tobool.not.i.i.i437, label %if.then.i.i.i438, label %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i441

if.then.i.i.i438:                                 ; preds = %invoke.cont168
  invoke void @_ZSt16__throw_bad_castv() #29
          to label %.noexc452 unwind label %lpad145.loopexit.split-lp

.noexc452:                                        ; preds = %if.then.i.i.i438
  unreachable

_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i441: ; preds = %invoke.cont168
  %_M_widen_ok.i.i.i439 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %243, i64 0, i32 8
  %244 = load i8, i8* %_M_widen_ok.i.i.i439, align 8, !tbaa !37
  %tobool.not.i1.i.i440 = icmp eq i8 %244, 0
  br i1 %tobool.not.i1.i.i440, label %if.end.i.i.i447, label %if.then.i2.i.i443

if.then.i2.i.i443:                                ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i441
  %arrayidx.i.i.i442 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %243, i64 0, i32 9, i64 10
  %245 = load i8, i8* %arrayidx.i.i.i442, align 1, !tbaa !39
  br label %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i451

if.end.i.i.i447:                                  ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i441
  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %243)
          to label %.noexc453 unwind label %lpad145.loopexit.split-lp

.noexc453:                                        ; preds = %if.end.i.i.i447
  %246 = bitcast %"class.std::ctype"* %243 to i8 (%"class.std::ctype"*, i8)***
  %vtable.i.i.i444 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %246, align 8, !tbaa !32
  %vfn.i.i.i445 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vtable.i.i.i444, i64 6
  %247 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vfn.i.i.i445, align 8
  %call.i.i.i446454 = invoke noundef zeroext i8 %247(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %243, i8 noundef zeroext 10)
          to label %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i451 unwind label %lpad145.loopexit.split-lp

_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i451: ; preds = %.noexc453, %if.then.i2.i.i443
  %retval.0.i.i.i448 = phi i8 [ %245, %if.then.i2.i.i443 ], [ %call.i.i.i446454, %.noexc453 ]
  %call1.i449455 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i8 noundef zeroext %retval.0.i.i.i448)
          to label %call1.i449.noexc unwind label %lpad145.loopexit.split-lp

call1.i449.noexc:                                 ; preds = %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i451
  %call.i.i450456 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call1.i449455)
          to label %invoke.cont170 unwind label %lpad145.loopexit.split-lp

invoke.cont170:                                   ; preds = %call1.i449.noexc
  store double %tWAXPY.1, double* %my_cg_times, align 8, !tbaa !84
  %arrayidx173 = getelementptr inbounds double, double* %my_cg_times, i64 1
  store double %add160, double* %arrayidx173, align 8, !tbaa !84
  %arrayidx174 = getelementptr inbounds double, double* %my_cg_times, i64 2
  store double %add152, double* %arrayidx174, align 8, !tbaa !84
  %call176 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %cleanup unwind label %lpad145.loopexit.split-lp

lpad145.loopexit:                                 ; preds = %if.end144, %_ZN6miniFE14matvec_overlapINS_9CSRMatrixIdiiEENS_6VectorIdiiEEEclERS2_RS4_S7_.exit348, %invoke.cont149, %invoke.cont153, %if.end181, %invoke.cont183
  %lpad.loopexit463 = landingpad { i8*, i32 }
          catch i8* null
  br label %terminate.handler

lpad145.loopexit.split-lp:                        ; preds = %invoke.cont170, %if.then167, %if.then.i.i.i438, %if.end.i.i.i447, %.noexc453, %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i451, %call1.i449.noexc
  %lpad.loopexit.split-lp464 = landingpad { i8*, i32 }
          catch i8* null
  br label %terminate.handler

if.else179:                                       ; preds = %invoke.cont165
  %mul = fmul contract double %call156, 1.000000e-01
  br label %if.end181

if.end181:                                        ; preds = %if.else179, %invoke.cont157
  %brkdown_tol.1 = phi double [ %mul, %if.else179 ], [ %brkdown_tol.0488, %invoke.cont157 ]
  %div182 = fdiv contract double %rtrans.1, %call156
  %call184 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %invoke.cont183 unwind label %lpad145.loopexit

invoke.cont183:                                   ; preds = %if.end181
  call void @_ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3_(double noundef %div182, %"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %p, double noundef 1.000000e+00, %"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %x)
  %fneg186 = fneg contract double %div182
  call void @_ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3_(double noundef %fneg186, %"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %Ap, double noundef 1.000000e+00, %"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %r)
  %call189 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %for.inc unwind label %lpad145.loopexit

cleanup:                                          ; preds = %invoke.cont170
  %sub177 = fsub contract double %call176, %call
  %arrayidx178 = getelementptr inbounds double, double* %my_cg_times, i64 4
  store double %sub177, double* %arrayidx178, align 8, !tbaa !84
  br label %cleanup193

for.inc:                                          ; preds = %invoke.cont183
  %sub190 = fsub contract double %call189, %call184
  %add191 = fadd contract double %tWAXPY.1, %sub190
  store i32 %k.0489, i32* %num_iters, align 4, !tbaa !16
  %inc = add nuw i32 %k.0489, 1
  %exitcond.not = icmp eq i32 %k.0489, %max_iter
  br i1 %exitcond.not, label %cleanup193, label %land.rhs, !llvm.loop !153

cleanup193:                                       ; preds = %for.inc, %land.rhs, %for.cond.preheader, %cleanup
  %tMATVEC.1 = phi double [ %add152, %cleanup ], [ %add72, %for.cond.preheader ], [ %add152, %for.inc ], [ %tMATVEC.0485, %land.rhs ]
  %tDOT.2 = phi double [ %add160, %cleanup ], [ %add87, %for.cond.preheader ], [ %add160, %for.inc ], [ %tDOT.0486, %land.rhs ]
  %tWAXPY.3 = phi double [ %tWAXPY.1, %cleanup ], [ %add79, %for.cond.preheader ], [ %add191, %for.inc ], [ %tWAXPY.0487, %land.rhs ]
  call void @__tgt_target_data_end_mapper(%struct.ident_t* nonnull @3, i64 -1, i32 8, i8** nonnull %53, i8** nonnull %55, i64* nonnull %57, i64* getelementptr inbounds ([8 x i64], [8 x i64]* @.offload_maptypes.144, i64 0, i64 0), i8** null, i8** null)
  %248 = load i8*, i8** @__omp_adaptation_miniFE, align 8
  call void @__apollo_region_end(i8* %248)
  store double %tWAXPY.3, double* %my_cg_times, align 8, !tbaa !84
  %arrayidx197 = getelementptr inbounds double, double* %my_cg_times, i64 1
  store double %tDOT.2, double* %arrayidx197, align 8, !tbaa !84
  %arrayidx198 = getelementptr inbounds double, double* %my_cg_times, i64 2
  store double %tMATVEC.1, double* %arrayidx198, align 8, !tbaa !84
  %arrayidx199 = getelementptr inbounds double, double* %my_cg_times, i64 3
  store double 0.000000e+00, double* %arrayidx199, align 8, !tbaa !84
  %call202 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %invoke.cont201 unwind label %lpad200

invoke.cont201:                                   ; preds = %cleanup193
  %sub203 = fsub contract double %call202, %call
  %arrayidx204 = getelementptr inbounds double, double* %my_cg_times, i64 4
  store double %sub203, double* %arrayidx204, align 8, !tbaa !84
  %249 = load double*, double** %_M_start.i29.i, align 8, !tbaa !78
  %tobool.not.i.i.i.i = icmp eq double* %249, null
  br i1 %tobool.not.i.i.i.i, label %_ZN6miniFE6VectorIdiiED2Ev.exit, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %invoke.cont201
  %250 = bitcast double* %249 to i8*
  call void @_ZdlPv(i8* noundef nonnull %250) #8
  br label %_ZN6miniFE6VectorIdiiED2Ev.exit

_ZN6miniFE6VectorIdiiED2Ev.exit:                  ; preds = %invoke.cont201, %if.then.i.i.i.i
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #8
  %251 = load double*, double** %_M_start.i28.i, align 8, !tbaa !78
  %tobool.not.i.i.i.i360 = icmp eq double* %251, null
  br i1 %tobool.not.i.i.i.i360, label %_ZN6miniFE6VectorIdiiED2Ev.exit362, label %if.then.i.i.i.i361

if.then.i.i.i.i361:                               ; preds = %_ZN6miniFE6VectorIdiiED2Ev.exit
  %252 = bitcast double* %251 to i8*
  call void @_ZdlPv(i8* noundef nonnull %252) #8
  br label %_ZN6miniFE6VectorIdiiED2Ev.exit362

_ZN6miniFE6VectorIdiiED2Ev.exit362:               ; preds = %_ZN6miniFE6VectorIdiiED2Ev.exit, %if.then.i.i.i.i361
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #8
  %253 = load double*, double** %_M_start.i.i264, align 8, !tbaa !78
  %tobool.not.i.i.i.i364 = icmp eq double* %253, null
  br i1 %tobool.not.i.i.i.i364, label %_ZN6miniFE6VectorIdiiED2Ev.exit366, label %if.then.i.i.i.i365

if.then.i.i.i.i365:                               ; preds = %_ZN6miniFE6VectorIdiiED2Ev.exit362
  %254 = bitcast double* %253 to i8*
  call void @_ZdlPv(i8* noundef nonnull %254) #8
  br label %_ZN6miniFE6VectorIdiiED2Ev.exit366

_ZN6miniFE6VectorIdiiED2Ev.exit366:               ; preds = %_ZN6miniFE6VectorIdiiED2Ev.exit362, %if.then.i.i.i.i365
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #8
  br label %cleanup228

cleanup228:                                       ; preds = %_ZN6miniFE6VectorIdiiED2Ev.exit366, %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit
  ret void

lpad200:                                          ; preds = %cleanup193
  %255 = landingpad { i8*, i32 }
          cleanup
  %256 = load double*, double** %_M_start.i29.i, align 8, !tbaa !78
  %tobool.not.i.i.i.i368 = icmp eq double* %256, null
  br i1 %tobool.not.i.i.i.i368, label %ehcleanup221, label %if.then.i.i.i.i369

if.then.i.i.i.i369:                               ; preds = %lpad200
  %257 = bitcast double* %256 to i8*
  call void @_ZdlPv(i8* noundef nonnull %257) #8
  br label %ehcleanup221

ehcleanup221:                                     ; preds = %if.then.i.i.i.i369, %lpad200, %lpad7
  %.pn = phi { i8*, i32 } [ %94, %lpad7 ], [ %255, %lpad200 ], [ %255, %if.then.i.i.i.i369 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #8
  %_M_start.i.i.i371 = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %p, i64 0, i32 2, i32 0, i32 0, i32 0
  %258 = load double*, double** %_M_start.i.i.i371, align 8, !tbaa !78
  %tobool.not.i.i.i.i372 = icmp eq double* %258, null
  br i1 %tobool.not.i.i.i.i372, label %ehcleanup223, label %if.then.i.i.i.i373

if.then.i.i.i.i373:                               ; preds = %ehcleanup221
  %259 = bitcast double* %258 to i8*
  call void @_ZdlPv(i8* noundef nonnull %259) #8
  br label %ehcleanup223

ehcleanup223:                                     ; preds = %if.then.i.i.i.i373, %ehcleanup221, %lpad
  %.pn.pn = phi { i8*, i32 } [ %93, %lpad ], [ %.pn, %ehcleanup221 ], [ %.pn, %if.then.i.i.i.i373 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #8
  %_M_start.i.i.i375 = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %r, i64 0, i32 2, i32 0, i32 0, i32 0
  %260 = load double*, double** %_M_start.i.i.i375, align 8, !tbaa !78
  %tobool.not.i.i.i.i376 = icmp eq double* %260, null
  br i1 %tobool.not.i.i.i.i376, label %_ZN6miniFE6VectorIdiiED2Ev.exit378, label %if.then.i.i.i.i377

if.then.i.i.i.i377:                               ; preds = %ehcleanup223
  %261 = bitcast double* %260 to i8*
  call void @_ZdlPv(i8* noundef nonnull %261) #8
  br label %_ZN6miniFE6VectorIdiiED2Ev.exit378

_ZN6miniFE6VectorIdiiED2Ev.exit378:               ; preds = %ehcleanup223, %if.then.i.i.i.i377
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #8
  resume { i8*, i32 } %.pn.pn

terminate.handler:                                ; preds = %lpad145.loopexit, %lpad145.loopexit.split-lp, %lpad103.loopexit, %lpad103.loopexit.split-lp, %lpad120, %lpad60
  %.pn154.pn = phi { i8*, i32 } [ %185, %lpad60 ], [ %198, %lpad120 ], [ %lpad.loopexit, %lpad103.loopexit ], [ %lpad.loopexit.split-lp, %lpad103.loopexit.split-lp ], [ %lpad.loopexit463, %lpad145.loopexit ], [ %lpad.loopexit.split-lp464, %lpad145.loopexit.split-lp ]
  %exn.slot.3 = extractvalue { i8*, i32 } %.pn154.pn, 0
  call void @__clang_call_terminate(i8* %exn.slot.3) #31
  unreachable
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN6miniFE8cg_solveINS_9CSRMatrixIdiiEENS_6VectorIdiiEENS_10matvec_stdIS2_S4_EEEEvRT_RKT0_RS9_T1_NS7_16LocalOrdinalTypeERNS_10TypeTraitsINS7_10ScalarTypeEE14magnitude_typeERSE_SJ_Pd(%"struct.miniFE::CSRMatrix"* noundef nonnull align 8 dereferenceable(132) %A, %"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %b, %"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %x, i8 %matvec.coerce, i32 noundef signext %max_iter, double* noundef nonnull align 8 dereferenceable(8) %tolerance, i32* noundef nonnull align 4 dereferenceable(4) %num_iters, double* noundef nonnull align 8 dereferenceable(8) %normr, double* noundef %my_cg_times) local_unnamed_addr #11 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %result.i278 = alloca double, align 8
  %.offload_baseptrs.i279 = alloca [3 x i8*], align 8
  %.offload_ptrs.i280 = alloca [3 x i8*], align 8
  %.offload_baseptrs.i269 = alloca [3 x i8*], align 8
  %.offload_ptrs.i270 = alloca [3 x i8*], align 8
  %result.i = alloca double, align 8
  %.offload_baseptrs.i = alloca [3 x i8*], align 8
  %.offload_ptrs.i = alloca [3 x i8*], align 8
  %matvec = alloca %"struct.miniFE::matvec_std", align 1
  %r = alloca %"struct.miniFE::Vector", align 8
  %p = alloca %"struct.miniFE::Vector", align 8
  %Ap = alloca %"struct.miniFE::Vector", align 8
  %.offload_baseptrs = alloca [8 x i8*], align 8
  %.offload_ptrs = alloca [8 x i8*], align 8
  %.offload_sizes = alloca [8 x i64], align 8
  %coerce.dive = getelementptr inbounds %"struct.miniFE::matvec_std", %"struct.miniFE::matvec_std"* %matvec, i64 0, i32 0
  store i8 %matvec.coerce, i8* %coerce.dive, align 1
  %call = tail call contract noundef double @_ZN6miniFE7mytimerEv()
  %has_local_indices = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 0
  %0 = load i8, i8* %has_local_indices, align 8, !tbaa !67, !range !51
  %tobool.not = icmp eq i8 %0, 0
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call1.i = tail call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i8* noundef nonnull getelementptr inbounds ([93 x i8], [93 x i8]* @.str.91, i64 0, i64 0), i64 noundef 92)
  %call1.i156 = tail call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i8* noundef nonnull getelementptr inbounds ([79 x i8], [79 x i8]* @.str.92, i64 0, i64 0), i64 noundef 78)
  %vtable.i = load i8*, i8** bitcast (%"class.std::basic_ostream"* @_ZSt4cerr to i8**), align 8, !tbaa !32
  %vbase.offset.ptr.i = getelementptr i8, i8* %vtable.i, i64 -24
  %1 = bitcast i8* %vbase.offset.ptr.i to i64*
  %vbase.offset.i = load i64, i64* %1, align 8
  %add.ptr.i = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cerr to i8*), i64 %vbase.offset.i
  %_M_ctype.i.i = getelementptr inbounds i8, i8* %add.ptr.i, i64 240
  %2 = bitcast i8* %_M_ctype.i.i to %"class.std::ctype"**
  %3 = load %"class.std::ctype"*, %"class.std::ctype"** %2, align 8, !tbaa !34
  %tobool.not.i.i.i = icmp eq %"class.std::ctype"* %3, null
  br i1 %tobool.not.i.i.i, label %if.then.i.i.i, label %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i

if.then.i.i.i:                                    ; preds = %if.then
  tail call void @_ZSt16__throw_bad_castv() #29
  unreachable

_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i: ; preds = %if.then
  %_M_widen_ok.i.i.i = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %3, i64 0, i32 8
  %4 = load i8, i8* %_M_widen_ok.i.i.i, align 8, !tbaa !37
  %tobool.not.i1.i.i = icmp eq i8 %4, 0
  br i1 %tobool.not.i1.i.i, label %if.end.i.i.i, label %if.then.i2.i.i

if.then.i2.i.i:                                   ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
  %arrayidx.i.i.i = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %3, i64 0, i32 9, i64 10
  %5 = load i8, i8* %arrayidx.i.i.i, align 1, !tbaa !39
  br label %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit

if.end.i.i.i:                                     ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
  tail call void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %3)
  %6 = bitcast %"class.std::ctype"* %3 to i8 (%"class.std::ctype"*, i8)***
  %vtable.i.i.i = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %6, align 8, !tbaa !32
  %vfn.i.i.i = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vtable.i.i.i, i64 6
  %7 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vfn.i.i.i, align 8
  %call.i.i.i = tail call noundef zeroext i8 %7(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %3, i8 noundef zeroext 10)
  br label %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit

_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit: ; preds = %if.then.i2.i.i, %if.end.i.i.i
  %retval.0.i.i.i = phi i8 [ %5, %if.then.i2.i.i ], [ %call.i.i.i, %if.end.i.i.i ]
  %call1.i333 = tail call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i8 noundef zeroext %retval.0.i.i.i)
  %call.i.i334 = tail call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call1.i333)
  br label %cleanup219

if.end:                                           ; preds = %entry
  %_M_finish.i = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 2, i32 0, i32 0, i32 1
  %8 = load i32*, i32** %_M_finish.i, align 8, !tbaa !71
  %_M_start.i = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load i32*, i32** %_M_start.i, align 8, !tbaa !74
  %sub.ptr.lhs.cast.i = ptrtoint i32* %8 to i64
  %sub.ptr.rhs.cast.i = ptrtoint i32* %9 to i64
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %10 = lshr exact i64 %sub.ptr.sub.i, 2
  %num_cols = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 7
  %11 = load i32, i32* %num_cols, align 8, !tbaa !83
  %12 = bitcast %"struct.miniFE::Vector"* %r to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #8
  %startIndex = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %b, i64 0, i32 0
  %13 = load i32, i32* %startIndex, align 8, !tbaa !75
  %conv = trunc i64 %10 to i32
  %startIndex.i = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %r, i64 0, i32 0
  store i32 %13, i32* %startIndex.i, align 8, !tbaa !75
  %local_size.i = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %r, i64 0, i32 1
  store i32 %conv, i32* %local_size.i, align 4, !tbaa !77
  %coefs.i = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %r, i64 0, i32 2
  %sext = shl i64 %sub.ptr.sub.i, 30
  %conv.i = ashr i64 %sext, 32
  %cmp.not.i.i.i.i.i = icmp eq i32 %conv, 0
  br i1 %cmp.not.i.i.i.i.i, label %_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_.exit.thread.i.i, label %cond.true.i.i.i.i.i

_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_.exit.thread.i.i: ; preds = %if.end
  %14 = bitcast %"class.std::vector.20"* %coefs.i to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %14, i8 0, i64 24, i1 false)
  br label %_ZN6miniFE6VectorIdiiEC2Eii.exit

cond.true.i.i.i.i.i:                              ; preds = %if.end
  %cmp.i.i.i.i.i.i.i = icmp slt i32 %conv, 0
  br i1 %cmp.i.i.i.i.i.i.i, label %if.then.i.i.i.i.i.i.i, label %for.body.i.i.preheader.i.i.i.i.i.i

if.then.i.i.i.i.i.i.i:                            ; preds = %cond.true.i.i.i.i.i
  tail call void @_ZSt17__throw_bad_allocv() #29
  unreachable

for.body.i.i.preheader.i.i.i.i.i.i:               ; preds = %cond.true.i.i.i.i.i
  %mul.i.i.i.i.i.i.i = shl nuw nsw i64 %conv.i, 3
  %call2.i.i.i.i1.i.i1.i = tail call noalias noundef nonnull i8* @_Znwm(i64 noundef %mul.i.i.i.i.i.i.i) #30
  %15 = bitcast i8* %call2.i.i.i.i1.i.i1.i to double*
  %16 = bitcast %"class.std::vector.20"* %coefs.i to i8**
  store i8* %call2.i.i.i.i1.i.i1.i, i8** %16, align 8, !tbaa !78
  %add.ptr.i.i.i.i = getelementptr double, double* %15, i64 %conv.i
  %_M_end_of_storage.i.i.i.i = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %r, i64 0, i32 2, i32 0, i32 0, i32 2
  store double* %add.ptr.i.i.i.i, double** %_M_end_of_storage.i.i.i.i, align 8, !tbaa !81
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %call2.i.i.i.i1.i.i1.i, i8 0, i64 %mul.i.i.i.i.i.i.i, i1 false)
  br label %_ZN6miniFE6VectorIdiiEC2Eii.exit

_ZN6miniFE6VectorIdiiEC2Eii.exit:                 ; preds = %_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_.exit.thread.i.i, %for.body.i.i.preheader.i.i.i.i.i.i
  %__first.addr.0.lcssa.i.i.i.i.i.i.i.i = phi double* [ %add.ptr.i.i.i.i, %for.body.i.i.preheader.i.i.i.i.i.i ], [ null, %_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_.exit.thread.i.i ]
  %_M_finish.i.i.i = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %r, i64 0, i32 2, i32 0, i32 0, i32 1
  store double* %__first.addr.0.lcssa.i.i.i.i.i.i.i.i, double** %_M_finish.i.i.i, align 8, !tbaa !82
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull @3, i32 1, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, %"struct.miniFE::Vector"*)* @.omp_outlined..76 to void (i32*, i32*, ...)*), %"struct.miniFE::Vector"* nonnull %r)
  %17 = bitcast %"struct.miniFE::Vector"* %p to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #8
  %startIndex.i157 = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %p, i64 0, i32 0
  store i32 0, i32* %startIndex.i157, align 8, !tbaa !75
  %local_size.i158 = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %p, i64 0, i32 1
  store i32 %11, i32* %local_size.i158, align 4, !tbaa !77
  %coefs.i159 = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %p, i64 0, i32 2
  %conv.i160 = sext i32 %11 to i64
  %18 = bitcast %"class.std::vector.20"* %coefs.i159 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %18, i8 0, i64 24, i1 false) #8
  %cmp.not.i.i.i.i.i161 = icmp eq i32 %11, 0
  br i1 %cmp.not.i.i.i.i.i161, label %_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_.exit.thread.i.i162, label %cond.true.i.i.i.i.i164

_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_.exit.thread.i.i162: ; preds = %_ZN6miniFE6VectorIdiiEC2Eii.exit
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %18, i8 0, i64 24, i1 false)
  br label %invoke.cont

cond.true.i.i.i.i.i164:                           ; preds = %_ZN6miniFE6VectorIdiiEC2Eii.exit
  %cmp.i.i.i.i.i.i.i163 = icmp slt i32 %11, 0
  br i1 %cmp.i.i.i.i.i.i.i163, label %if.then.i.i.i.i.i.i.i165, label %for.body.i.i.preheader.i.i.i.i.i.i170

if.then.i.i.i.i.i.i.i165:                         ; preds = %cond.true.i.i.i.i.i164
  invoke void @_ZSt17__throw_bad_allocv() #29
          to label %.noexc unwind label %lpad

.noexc:                                           ; preds = %if.then.i.i.i.i.i.i.i165
  unreachable

for.body.i.i.preheader.i.i.i.i.i.i170:            ; preds = %cond.true.i.i.i.i.i164
  %mul.i.i.i.i.i.i.i166 = shl nuw nsw i64 %conv.i160, 3
  %call2.i.i.i.i1.i.i1.i167173 = invoke noalias noundef nonnull i8* @_Znwm(i64 noundef %mul.i.i.i.i.i.i.i166) #30
          to label %call2.i.i.i.i1.i.i1.i167.noexc unwind label %lpad

call2.i.i.i.i1.i.i1.i167.noexc:                   ; preds = %for.body.i.i.preheader.i.i.i.i.i.i170
  %19 = bitcast i8* %call2.i.i.i.i1.i.i1.i167173 to double*
  %20 = bitcast %"class.std::vector.20"* %coefs.i159 to i8**
  store i8* %call2.i.i.i.i1.i.i1.i167173, i8** %20, align 8, !tbaa !78
  %add.ptr.i.i.i.i168 = getelementptr double, double* %19, i64 %conv.i160
  %_M_end_of_storage.i.i.i.i169 = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %p, i64 0, i32 2, i32 0, i32 0, i32 2
  store double* %add.ptr.i.i.i.i168, double** %_M_end_of_storage.i.i.i.i169, align 8, !tbaa !81
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %call2.i.i.i.i1.i.i1.i167173, i8 0, i64 %mul.i.i.i.i.i.i.i166, i1 false)
  br label %invoke.cont

invoke.cont:                                      ; preds = %call2.i.i.i.i1.i.i1.i167.noexc, %_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_.exit.thread.i.i162
  %__first.addr.0.lcssa.i.i.i.i.i.i.i.i171 = phi double* [ %add.ptr.i.i.i.i168, %call2.i.i.i.i1.i.i1.i167.noexc ], [ null, %_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_.exit.thread.i.i162 ]
  %_M_finish.i.i.i172 = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %p, i64 0, i32 2, i32 0, i32 0, i32 1
  store double* %__first.addr.0.lcssa.i.i.i.i.i.i.i.i171, double** %_M_finish.i.i.i172, align 8, !tbaa !82
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull @3, i32 1, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, %"struct.miniFE::Vector"*)* @.omp_outlined..76 to void (i32*, i32*, ...)*), %"struct.miniFE::Vector"* nonnull %p)
  %21 = bitcast %"struct.miniFE::Vector"* %Ap to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #8
  %22 = load i32, i32* %startIndex, align 8, !tbaa !75
  %startIndex.i175 = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %Ap, i64 0, i32 0
  store i32 %22, i32* %startIndex.i175, align 8, !tbaa !75
  %local_size.i176 = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %Ap, i64 0, i32 1
  store i32 %conv, i32* %local_size.i176, align 4, !tbaa !77
  %coefs.i177 = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %Ap, i64 0, i32 2
  %23 = bitcast %"class.std::vector.20"* %coefs.i177 to i8*
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %23, i8 0, i64 24, i1 false) #8
  br i1 %cmp.not.i.i.i.i.i, label %_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_.exit.thread.i.i180, label %for.body.i.i.preheader.i.i.i.i.i.i188

_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_.exit.thread.i.i180: ; preds = %invoke.cont
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %23, i8 0, i64 24, i1 false)
  br label %invoke.cont8

for.body.i.i.preheader.i.i.i.i.i.i188:            ; preds = %invoke.cont
  %mul.i.i.i.i.i.i.i184 = shl nuw nsw i64 %conv.i, 3
  %call2.i.i.i.i1.i.i1.i185192 = invoke noalias noundef nonnull i8* @_Znwm(i64 noundef %mul.i.i.i.i.i.i.i184) #30
          to label %call2.i.i.i.i1.i.i1.i185.noexc unwind label %lpad7

call2.i.i.i.i1.i.i1.i185.noexc:                   ; preds = %for.body.i.i.preheader.i.i.i.i.i.i188
  %24 = bitcast i8* %call2.i.i.i.i1.i.i1.i185192 to double*
  %25 = bitcast %"class.std::vector.20"* %coefs.i177 to i8**
  store i8* %call2.i.i.i.i1.i.i1.i185192, i8** %25, align 8, !tbaa !78
  %add.ptr.i.i.i.i186 = getelementptr double, double* %24, i64 %conv.i
  %_M_end_of_storage.i.i.i.i187 = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %Ap, i64 0, i32 2, i32 0, i32 0, i32 2
  store double* %add.ptr.i.i.i.i186, double** %_M_end_of_storage.i.i.i.i187, align 8, !tbaa !81
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %call2.i.i.i.i1.i.i1.i185192, i8 0, i64 %mul.i.i.i.i.i.i.i184, i1 false)
  br label %invoke.cont8

invoke.cont8:                                     ; preds = %call2.i.i.i.i1.i.i1.i185.noexc, %_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_.exit.thread.i.i180
  %__first.addr.0.lcssa.i.i.i.i.i.i.i.i189 = phi double* [ %add.ptr.i.i.i.i186, %call2.i.i.i.i1.i.i1.i185.noexc ], [ null, %_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_.exit.thread.i.i180 ]
  %_M_finish.i.i.i190 = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %Ap, i64 0, i32 2, i32 0, i32 0, i32 1
  store double* %__first.addr.0.lcssa.i.i.i.i.i.i.i.i189, double** %_M_finish.i.i.i190, align 8, !tbaa !82
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull @3, i32 1, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, %"struct.miniFE::Vector"*)* @.omp_outlined..76 to void (i32*, i32*, ...)*), %"struct.miniFE::Vector"* nonnull %Ap)
  store double 0.000000e+00, double* %normr, align 8, !tbaa !84
  %div = sdiv i32 %max_iter, 10
  %26 = icmp slt i32 %div, 50
  %spec.store.select = select i1 %26, i32 %div, i32 50
  %27 = icmp sgt i32 %spec.store.select, 1
  %spec.store.select1 = select i1 %27, i32 %spec.store.select, i32 1
  %_M_finish.i194 = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %x, i64 0, i32 2, i32 0, i32 0, i32 1
  %_M_start.i195 = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %x, i64 0, i32 2, i32 0, i32 0, i32 0
  %28 = load double*, double** %_M_start.i195, align 8, !tbaa !78
  %_M_finish.i200 = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 5, i32 0, i32 0, i32 1
  %_M_start.i201 = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 5, i32 0, i32 0, i32 0
  %29 = load i32*, i32** %_M_start.i201, align 8, !tbaa !74
  %_M_start.i206 = getelementptr inbounds %"class.std::vector.20", %"class.std::vector.20"* %coefs.i, i64 0, i32 0, i32 0, i32 0
  %30 = load double*, double** %_M_start.i206, align 8, !tbaa !78
  %_M_start.i207 = getelementptr inbounds %"class.std::vector.20", %"class.std::vector.20"* %coefs.i159, i64 0, i32 0, i32 0, i32 0
  %31 = load double*, double** %_M_start.i207, align 8, !tbaa !78
  %_M_start.i208 = getelementptr inbounds %"class.std::vector.20", %"class.std::vector.20"* %coefs.i177, i64 0, i32 0, i32 0, i32 0
  %32 = load double*, double** %_M_start.i208, align 8, !tbaa !78
  %_M_start.i210 = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %b, i64 0, i32 2, i32 0, i32 0, i32 0
  %33 = load double*, double** %_M_start.i210, align 8, !tbaa !78
  %_M_start.i211 = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 3, i32 0, i32 0, i32 0
  %34 = load i32*, i32** %_M_start.i211, align 8, !tbaa !74
  %_M_start.i213 = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 6, i32 0, i32 0, i32 0
  %35 = load double*, double** %_M_start.i213, align 8, !tbaa !78
  %36 = load i8*, i8** @__omp_adaptation_miniFE, align 8
  call void @__apollo_region_end(i8* %36)
  %37 = load double*, double** %_M_finish.i.i.i, align 8, !tbaa !82
  %38 = load double*, double** %_M_start.i206, align 8, !tbaa !78
  %sub.ptr.lhs.cast.i216 = ptrtoint double* %37 to i64
  %sub.ptr.rhs.cast.i217 = ptrtoint double* %38 to i64
  %sub.ptr.sub.i218 = sub i64 %sub.ptr.lhs.cast.i216, %sub.ptr.rhs.cast.i217
  %39 = load double*, double** %_M_finish.i.i.i172, align 8, !tbaa !82
  %40 = load double*, double** %_M_start.i207, align 8, !tbaa !78
  %sub.ptr.lhs.cast.i222 = ptrtoint double* %39 to i64
  %sub.ptr.rhs.cast.i223 = ptrtoint double* %40 to i64
  %sub.ptr.sub.i224 = sub i64 %sub.ptr.lhs.cast.i222, %sub.ptr.rhs.cast.i223
  %41 = load double*, double** %_M_finish.i.i.i190, align 8, !tbaa !82
  %42 = load double*, double** %_M_start.i208, align 8, !tbaa !78
  %sub.ptr.lhs.cast.i228 = ptrtoint double* %41 to i64
  %sub.ptr.rhs.cast.i229 = ptrtoint double* %42 to i64
  %sub.ptr.sub.i230 = sub i64 %sub.ptr.lhs.cast.i228, %sub.ptr.rhs.cast.i229
  %_M_finish.i232 = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %b, i64 0, i32 2, i32 0, i32 0, i32 1
  %43 = load double*, double** %_M_finish.i232, align 8, !tbaa !82
  %44 = load double*, double** %_M_start.i210, align 8, !tbaa !78
  %sub.ptr.lhs.cast.i234 = ptrtoint double* %43 to i64
  %sub.ptr.rhs.cast.i235 = ptrtoint double* %44 to i64
  %sub.ptr.sub.i236 = sub i64 %sub.ptr.lhs.cast.i234, %sub.ptr.rhs.cast.i235
  %_M_finish.i238 = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 3, i32 0, i32 0, i32 1
  %45 = load i32*, i32** %_M_finish.i238, align 8, !tbaa !71
  %46 = load i32*, i32** %_M_start.i211, align 8, !tbaa !74
  %sub.ptr.lhs.cast.i240 = ptrtoint i32* %45 to i64
  %sub.ptr.rhs.cast.i241 = ptrtoint i32* %46 to i64
  %sub.ptr.sub.i242 = sub i64 %sub.ptr.lhs.cast.i240, %sub.ptr.rhs.cast.i241
  %47 = load i32*, i32** %_M_finish.i200, align 8, !tbaa !71
  %48 = load i32*, i32** %_M_start.i201, align 8, !tbaa !74
  %sub.ptr.lhs.cast.i246 = ptrtoint i32* %47 to i64
  %sub.ptr.rhs.cast.i247 = ptrtoint i32* %48 to i64
  %sub.ptr.sub.i248 = sub i64 %sub.ptr.lhs.cast.i246, %sub.ptr.rhs.cast.i247
  %_M_finish.i250 = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 6, i32 0, i32 0, i32 1
  %49 = load double*, double** %_M_finish.i250, align 8, !tbaa !82
  %50 = load double*, double** %_M_start.i213, align 8, !tbaa !78
  %sub.ptr.lhs.cast.i252 = ptrtoint double* %49 to i64
  %sub.ptr.rhs.cast.i253 = ptrtoint double* %50 to i64
  %sub.ptr.sub.i254 = sub i64 %sub.ptr.lhs.cast.i252, %sub.ptr.rhs.cast.i253
  %51 = load double*, double** %_M_finish.i194, align 8, !tbaa !82
  %52 = load double*, double** %_M_start.i195, align 8, !tbaa !78
  %sub.ptr.lhs.cast.i258 = ptrtoint double* %51 to i64
  %sub.ptr.rhs.cast.i259 = ptrtoint double* %52 to i64
  %sub.ptr.sub.i260 = sub i64 %sub.ptr.lhs.cast.i258, %sub.ptr.rhs.cast.i259
  %53 = getelementptr inbounds [8 x i8*], [8 x i8*]* %.offload_baseptrs, i64 0, i64 0
  %54 = bitcast [8 x i8*]* %.offload_baseptrs to double**
  store double* %30, double** %54, align 8
  %55 = getelementptr inbounds [8 x i8*], [8 x i8*]* %.offload_ptrs, i64 0, i64 0
  %56 = bitcast [8 x i8*]* %.offload_ptrs to double**
  store double* %30, double** %56, align 8
  %57 = getelementptr inbounds [8 x i64], [8 x i64]* %.offload_sizes, i64 0, i64 0
  store i64 %sub.ptr.sub.i218, i64* %57, align 8
  %58 = getelementptr inbounds [8 x i8*], [8 x i8*]* %.offload_baseptrs, i64 0, i64 1
  %59 = bitcast i8** %58 to double**
  store double* %31, double** %59, align 8
  %60 = getelementptr inbounds [8 x i8*], [8 x i8*]* %.offload_ptrs, i64 0, i64 1
  %61 = bitcast i8** %60 to double**
  store double* %31, double** %61, align 8
  %62 = getelementptr inbounds [8 x i64], [8 x i64]* %.offload_sizes, i64 0, i64 1
  store i64 %sub.ptr.sub.i224, i64* %62, align 8
  %63 = getelementptr inbounds [8 x i8*], [8 x i8*]* %.offload_baseptrs, i64 0, i64 2
  %64 = bitcast i8** %63 to double**
  store double* %32, double** %64, align 8
  %65 = getelementptr inbounds [8 x i8*], [8 x i8*]* %.offload_ptrs, i64 0, i64 2
  %66 = bitcast i8** %65 to double**
  store double* %32, double** %66, align 8
  %67 = getelementptr inbounds [8 x i64], [8 x i64]* %.offload_sizes, i64 0, i64 2
  store i64 %sub.ptr.sub.i230, i64* %67, align 8
  %68 = getelementptr inbounds [8 x i8*], [8 x i8*]* %.offload_baseptrs, i64 0, i64 3
  %69 = bitcast i8** %68 to double**
  store double* %33, double** %69, align 8
  %70 = getelementptr inbounds [8 x i8*], [8 x i8*]* %.offload_ptrs, i64 0, i64 3
  %71 = bitcast i8** %70 to double**
  store double* %33, double** %71, align 8
  %72 = getelementptr inbounds [8 x i64], [8 x i64]* %.offload_sizes, i64 0, i64 3
  store i64 %sub.ptr.sub.i236, i64* %72, align 8
  %73 = getelementptr inbounds [8 x i8*], [8 x i8*]* %.offload_baseptrs, i64 0, i64 4
  %74 = bitcast i8** %73 to i32**
  store i32* %34, i32** %74, align 8
  %75 = getelementptr inbounds [8 x i8*], [8 x i8*]* %.offload_ptrs, i64 0, i64 4
  %76 = bitcast i8** %75 to i32**
  store i32* %34, i32** %76, align 8
  %77 = getelementptr inbounds [8 x i64], [8 x i64]* %.offload_sizes, i64 0, i64 4
  store i64 %sub.ptr.sub.i242, i64* %77, align 8
  %78 = getelementptr inbounds [8 x i8*], [8 x i8*]* %.offload_baseptrs, i64 0, i64 5
  %79 = bitcast i8** %78 to i32**
  store i32* %29, i32** %79, align 8
  %80 = getelementptr inbounds [8 x i8*], [8 x i8*]* %.offload_ptrs, i64 0, i64 5
  %81 = bitcast i8** %80 to i32**
  store i32* %29, i32** %81, align 8
  %82 = getelementptr inbounds [8 x i64], [8 x i64]* %.offload_sizes, i64 0, i64 5
  store i64 %sub.ptr.sub.i248, i64* %82, align 8
  %83 = getelementptr inbounds [8 x i8*], [8 x i8*]* %.offload_baseptrs, i64 0, i64 6
  %84 = bitcast i8** %83 to double**
  store double* %35, double** %84, align 8
  %85 = getelementptr inbounds [8 x i8*], [8 x i8*]* %.offload_ptrs, i64 0, i64 6
  %86 = bitcast i8** %85 to double**
  store double* %35, double** %86, align 8
  %87 = getelementptr inbounds [8 x i64], [8 x i64]* %.offload_sizes, i64 0, i64 6
  store i64 %sub.ptr.sub.i254, i64* %87, align 8
  %88 = getelementptr inbounds [8 x i8*], [8 x i8*]* %.offload_baseptrs, i64 0, i64 7
  %89 = bitcast i8** %88 to double**
  store double* %28, double** %89, align 8
  %90 = getelementptr inbounds [8 x i8*], [8 x i8*]* %.offload_ptrs, i64 0, i64 7
  %91 = bitcast i8** %90 to double**
  store double* %28, double** %91, align 8
  %92 = getelementptr inbounds [8 x i64], [8 x i64]* %.offload_sizes, i64 0, i64 7
  store i64 %sub.ptr.sub.i260, i64* %92, align 8
  call void @__tgt_target_data_begin_mapper(%struct.ident_t* nonnull @3, i64 -1, i32 8, i8** nonnull %53, i8** nonnull %55, i64* nonnull %57, i64* getelementptr inbounds ([8 x i64], [8 x i64]* @.offload_maptypes.144, i64 0, i64 0), i8** null, i8** null)
  %call62 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %invoke.cont61 unwind label %lpad60

lpad:                                             ; preds = %for.body.i.i.preheader.i.i.i.i.i.i170, %if.then.i.i.i.i.i.i.i165
  %93 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup214

lpad7:                                            ; preds = %for.body.i.i.preheader.i.i.i.i.i.i188
  %94 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup212

invoke.cont61:                                    ; preds = %invoke.cont8
  call void @_ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3_(double noundef 1.000000e+00, %"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %x, double noundef 0.000000e+00, %"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %x, %"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %p)
  %call64 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %invoke.cont63 unwind label %lpad60

invoke.cont63:                                    ; preds = %invoke.cont61
  %sub = fsub contract double %call64, %call62
  %add = fadd contract double %sub, 0.000000e+00
  %call66 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %invoke.cont65 unwind label %lpad60

invoke.cont65:                                    ; preds = %invoke.cont63
  invoke void @_ZN6miniFE10matvec_stdINS_9CSRMatrixIdiiEENS_6VectorIdiiEEEclERS2_RS4_S7_(%"struct.miniFE::matvec_std"* noundef nonnull align 1 dereferenceable(1) %matvec, %"struct.miniFE::CSRMatrix"* noundef nonnull align 8 dereferenceable(132) %A, %"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %p, %"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %Ap)
          to label %invoke.cont67 unwind label %lpad60

invoke.cont67:                                    ; preds = %invoke.cont65
  %call69 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %invoke.cont68 unwind label %lpad60

invoke.cont68:                                    ; preds = %invoke.cont67
  %sub70 = fsub contract double %call69, %call66
  %add71 = fadd contract double %sub70, 0.000000e+00
  %call73 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %invoke.cont72 unwind label %lpad60

invoke.cont72:                                    ; preds = %invoke.cont68
  call void @_ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3_(double noundef 1.000000e+00, %"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %b, double noundef -1.000000e+00, %"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %Ap, %"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %r)
  %call75 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %invoke.cont74 unwind label %lpad60

invoke.cont74:                                    ; preds = %invoke.cont72
  %sub76 = fsub contract double %call75, %call73
  %add77 = fadd contract double %add, %sub76
  %call79 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %invoke.cont78 unwind label %lpad60

invoke.cont78:                                    ; preds = %invoke.cont74
  %95 = bitcast [3 x i8*]* %.offload_baseptrs.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %95)
  %96 = bitcast [3 x i8*]* %.offload_ptrs.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %96)
  %97 = load double*, double** %_M_finish.i.i.i, align 8, !tbaa !82
  %_M_start.i.i = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %r, i64 0, i32 2, i32 0, i32 0, i32 0
  %98 = load double*, double** %_M_start.i.i, align 8, !tbaa !78
  %sub.ptr.lhs.cast.i.i = ptrtoint double* %97 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint double* %98 to i64
  %sub.ptr.sub.i.i = sub i64 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  %99 = lshr exact i64 %sub.ptr.sub.i.i, 3
  %100 = bitcast double* %result.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %100) #8
  store double 0.000000e+00, double* %result.i, align 8, !tbaa !84
  %n.casted.sroa.0.0.insert.ext.i = and i64 %99, 4294967295
  %101 = getelementptr inbounds [3 x i8*], [3 x i8*]* %.offload_baseptrs.i, i64 0, i64 0
  %102 = bitcast [3 x i8*]* %.offload_baseptrs.i to i64*
  store i64 %n.casted.sroa.0.0.insert.ext.i, i64* %102, align 8
  %103 = getelementptr inbounds [3 x i8*], [3 x i8*]* %.offload_ptrs.i, i64 0, i64 0
  %104 = bitcast [3 x i8*]* %.offload_ptrs.i to i64*
  store i64 %n.casted.sroa.0.0.insert.ext.i, i64* %104, align 8
  %105 = getelementptr inbounds [3 x i8*], [3 x i8*]* %.offload_baseptrs.i, i64 0, i64 1
  %106 = bitcast i8** %105 to double**
  store double* %result.i, double** %106, align 8
  %107 = getelementptr inbounds [3 x i8*], [3 x i8*]* %.offload_ptrs.i, i64 0, i64 1
  %108 = bitcast i8** %107 to double**
  store double* %result.i, double** %108, align 8
  %109 = getelementptr inbounds [3 x i8*], [3 x i8*]* %.offload_baseptrs.i, i64 0, i64 2
  %110 = bitcast i8** %109 to double**
  store double* %98, double** %110, align 8
  %111 = getelementptr inbounds [3 x i8*], [3 x i8*]* %.offload_ptrs.i, i64 0, i64 2
  %112 = bitcast i8** %111 to double**
  store double* %98, double** %112, align 8
  call void @__kmpc_push_target_tripcount_mapper(%struct.ident_t* nonnull @3, i64 -1, i64 %n.casted.sroa.0.0.insert.ext.i) #8
  %113 = call i32 @__tgt_target_teams_mapper(%struct.ident_t* nonnull @3, i64 -1, i8* nonnull @.__omp_offloading_31_355dd0b__ZN6miniFE6dot_r2INS_6VectorIdiiEEEENS_10TypeTraitsINT_10ScalarTypeEE14magnitude_typeERKS4__l289.region_id, i32 3, i8** nonnull %101, i8** nonnull %103, i64* getelementptr inbounds ([3 x i64], [3 x i64]* @.offload_sizes.116, i64 0, i64 0), i64* getelementptr inbounds ([3 x i64], [3 x i64]* @.offload_maptypes.117, i64 0, i64 0), i8** null, i8** null, i32 0, i32 0) #8
  %.not.i = icmp eq i32 %113, 0
  br i1 %.not.i, label %_ZN6miniFE6dot_r2INS_6VectorIdiiEEEENS_10TypeTraitsINT_10ScalarTypeEE14magnitude_typeERKS4_.exit, label %omp_offload.failed.i

omp_offload.failed.i:                             ; preds = %invoke.cont78
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_teams(%struct.ident_t* nonnull @3, i32 3, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, double*, double*)* @.omp_outlined..112 to void (i32*, i32*, ...)*), i64 %n.casted.sroa.0.0.insert.ext.i, double* nonnull %result.i, double* %98) #8
  br label %_ZN6miniFE6dot_r2INS_6VectorIdiiEEEENS_10TypeTraitsINT_10ScalarTypeEE14magnitude_typeERKS4_.exit

_ZN6miniFE6dot_r2INS_6VectorIdiiEEEENS_10TypeTraitsINT_10ScalarTypeEE14magnitude_typeERKS4_.exit: ; preds = %invoke.cont78, %omp_offload.failed.i
  %114 = load double, double* %result.i, align 8, !tbaa !84
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %95)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %96)
  %call82 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %invoke.cont81 unwind label %lpad60

invoke.cont81:                                    ; preds = %_ZN6miniFE6dot_r2INS_6VectorIdiiEEEENS_10TypeTraitsINT_10ScalarTypeEE14magnitude_typeERKS4_.exit
  %sub83 = fsub contract double %call82, %call79
  %add84 = fadd contract double %sub83, 0.000000e+00
  %call85 = call contract double @sqrt(double noundef %114) #8
  store double %call85, double* %normr, align 8, !tbaa !84
  %call1.i263264 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i8* noundef nonnull getelementptr inbounds ([20 x i8], [20 x i8]* @.str.93, i64 0, i64 0), i64 noundef 19)
          to label %invoke.cont88 unwind label %lpad60

invoke.cont88:                                    ; preds = %invoke.cont81
  %115 = load double, double* %normr, align 8, !tbaa !84
  %call.i265266 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIdEERSoT_(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, double noundef %115)
          to label %invoke.cont90 unwind label %lpad60

invoke.cont90:                                    ; preds = %invoke.cont88
  %116 = bitcast %"class.std::basic_ostream"* %call.i265266 to i8**
  %vtable.i335 = load i8*, i8** %116, align 8, !tbaa !32
  %vbase.offset.ptr.i336 = getelementptr i8, i8* %vtable.i335, i64 -24
  %117 = bitcast i8* %vbase.offset.ptr.i336 to i64*
  %vbase.offset.i337 = load i64, i64* %117, align 8
  %118 = bitcast %"class.std::basic_ostream"* %call.i265266 to i8*
  %add.ptr.i338 = getelementptr inbounds i8, i8* %118, i64 %vbase.offset.i337
  %_M_ctype.i.i339 = getelementptr inbounds i8, i8* %add.ptr.i338, i64 240
  %119 = bitcast i8* %_M_ctype.i.i339 to %"class.std::ctype"**
  %120 = load %"class.std::ctype"*, %"class.std::ctype"** %119, align 8, !tbaa !34
  %tobool.not.i.i.i340 = icmp eq %"class.std::ctype"* %120, null
  br i1 %tobool.not.i.i.i340, label %if.then.i.i.i341, label %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i344

if.then.i.i.i341:                                 ; preds = %invoke.cont90
  invoke void @_ZSt16__throw_bad_castv() #29
          to label %.noexc354 unwind label %lpad60

.noexc354:                                        ; preds = %if.then.i.i.i341
  unreachable

_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i344: ; preds = %invoke.cont90
  %_M_widen_ok.i.i.i342 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %120, i64 0, i32 8
  %121 = load i8, i8* %_M_widen_ok.i.i.i342, align 8, !tbaa !37
  %tobool.not.i1.i.i343 = icmp eq i8 %121, 0
  br i1 %tobool.not.i1.i.i343, label %if.end.i.i.i350, label %if.then.i2.i.i346

if.then.i2.i.i346:                                ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i344
  %arrayidx.i.i.i345 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %120, i64 0, i32 9, i64 10
  %122 = load i8, i8* %arrayidx.i.i.i345, align 1, !tbaa !39
  br label %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i

if.end.i.i.i350:                                  ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i344
  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %120)
          to label %.noexc355 unwind label %lpad60

.noexc355:                                        ; preds = %if.end.i.i.i350
  %123 = bitcast %"class.std::ctype"* %120 to i8 (%"class.std::ctype"*, i8)***
  %vtable.i.i.i347 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %123, align 8, !tbaa !32
  %vfn.i.i.i348 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vtable.i.i.i347, i64 6
  %124 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vfn.i.i.i348, align 8
  %call.i.i.i349356 = invoke noundef zeroext i8 %124(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %120, i8 noundef zeroext 10)
          to label %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i unwind label %lpad60

_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i: ; preds = %.noexc355, %if.then.i2.i.i346
  %retval.0.i.i.i351 = phi i8 [ %122, %if.then.i2.i.i346 ], [ %call.i.i.i349356, %.noexc355 ]
  %call1.i352357 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call.i265266, i8 noundef zeroext %retval.0.i.i.i351)
          to label %call1.i352.noexc unwind label %lpad60

call1.i352.noexc:                                 ; preds = %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i
  %call.i.i353358 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call1.i352357)
          to label %for.cond.preheader unwind label %lpad60

for.cond.preheader:                               ; preds = %call1.i352.noexc
  %125 = bitcast [3 x i8*]* %.offload_baseptrs.i279 to i8*
  %126 = bitcast [3 x i8*]* %.offload_ptrs.i280 to i8*
  %127 = bitcast double* %result.i278 to i8*
  %128 = getelementptr inbounds [3 x i8*], [3 x i8*]* %.offload_baseptrs.i279, i64 0, i64 0
  %129 = bitcast [3 x i8*]* %.offload_baseptrs.i279 to i64*
  %130 = getelementptr inbounds [3 x i8*], [3 x i8*]* %.offload_ptrs.i280, i64 0, i64 0
  %131 = bitcast [3 x i8*]* %.offload_ptrs.i280 to i64*
  %132 = getelementptr inbounds [3 x i8*], [3 x i8*]* %.offload_baseptrs.i279, i64 0, i64 1
  %133 = bitcast i8** %132 to double**
  %134 = getelementptr inbounds [3 x i8*], [3 x i8*]* %.offload_ptrs.i280, i64 0, i64 1
  %135 = bitcast i8** %134 to double**
  %136 = getelementptr inbounds [3 x i8*], [3 x i8*]* %.offload_baseptrs.i279, i64 0, i64 2
  %137 = bitcast i8** %136 to double**
  %138 = getelementptr inbounds [3 x i8*], [3 x i8*]* %.offload_ptrs.i280, i64 0, i64 2
  %139 = bitcast i8** %138 to double**
  %140 = bitcast [3 x i8*]* %.offload_baseptrs.i269 to i8*
  %141 = bitcast [3 x i8*]* %.offload_ptrs.i270 to i8*
  %_M_start.i38.i = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %p, i64 0, i32 2, i32 0, i32 0, i32 0
  %142 = getelementptr inbounds [3 x i8*], [3 x i8*]* %.offload_baseptrs.i269, i64 0, i64 0
  %143 = bitcast [3 x i8*]* %.offload_baseptrs.i269 to i64*
  %144 = getelementptr inbounds [3 x i8*], [3 x i8*]* %.offload_ptrs.i270, i64 0, i64 0
  %145 = bitcast [3 x i8*]* %.offload_ptrs.i270 to i64*
  %146 = getelementptr inbounds [3 x i8*], [3 x i8*]* %.offload_baseptrs.i269, i64 0, i64 1
  %147 = bitcast i8** %146 to double**
  %148 = getelementptr inbounds [3 x i8*], [3 x i8*]* %.offload_ptrs.i270, i64 0, i64 1
  %149 = bitcast i8** %148 to double**
  %150 = getelementptr inbounds [3 x i8*], [3 x i8*]* %.offload_baseptrs.i269, i64 0, i64 2
  %151 = bitcast i8** %150 to double**
  %152 = getelementptr inbounds [3 x i8*], [3 x i8*]* %.offload_ptrs.i270, i64 0, i64 2
  %153 = bitcast i8** %152 to double**
  %cmp96.not437 = icmp slt i32 %max_iter, 1
  br i1 %cmp96.not437, label %cleanup184, label %land.rhs

lpad60:                                           ; preds = %call1.i352.noexc, %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i, %.noexc355, %if.end.i.i.i350, %if.then.i.i.i341, %invoke.cont88, %invoke.cont81, %_ZN6miniFE6dot_r2INS_6VectorIdiiEEEENS_10TypeTraitsINT_10ScalarTypeEE14magnitude_typeERKS4_.exit, %invoke.cont74, %invoke.cont72, %invoke.cont68, %invoke.cont67, %invoke.cont65, %invoke.cont63, %invoke.cont61, %invoke.cont8
  %154 = landingpad { i8*, i32 }
          catch i8* null
  br label %terminate.handler

land.rhs:                                         ; preds = %for.cond.preheader, %for.inc
  %k.0443 = phi i32 [ %inc, %for.inc ], [ 1, %for.cond.preheader ]
  %brkdown_tol.0442 = phi double [ %brkdown_tol.1, %for.inc ], [ 0x3CB0000000000000, %for.cond.preheader ]
  %tWAXPY.0441 = phi double [ %add182, %for.inc ], [ %add77, %for.cond.preheader ]
  %tDOT.0440 = phi double [ %add153, %for.inc ], [ %add84, %for.cond.preheader ]
  %tMATVEC.0439 = phi double [ %add146, %for.inc ], [ %add71, %for.cond.preheader ]
  %rtrans.0438 = phi double [ %rtrans.1, %for.inc ], [ %114, %for.cond.preheader ]
  %155 = load double, double* %normr, align 8, !tbaa !84
  %156 = load double, double* %tolerance, align 8, !tbaa !84
  %cmp97 = fcmp contract ogt double %155, %156
  br i1 %cmp97, label %for.body, label %cleanup184

for.body:                                         ; preds = %land.rhs
  %cmp98 = icmp eq i32 %k.0443, 1
  br i1 %cmp98, label %if.then99, label %if.else

if.then99:                                        ; preds = %for.body
  %call102 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %invoke.cont101 unwind label %lpad100.loopexit

invoke.cont101:                                   ; preds = %if.then99
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %140)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %141)
  %157 = load double*, double** %_M_finish.i.i.i, align 8, !tbaa !82
  %158 = load double*, double** %_M_start.i.i, align 8, !tbaa !78
  %sub.ptr.lhs.cast.i.i273 = ptrtoint double* %157 to i64
  %sub.ptr.rhs.cast.i.i274 = ptrtoint double* %158 to i64
  %sub.ptr.sub.i.i275 = sub i64 %sub.ptr.lhs.cast.i.i273, %sub.ptr.rhs.cast.i.i274
  %159 = lshr exact i64 %sub.ptr.sub.i.i275, 3
  %160 = load double*, double** %_M_start.i38.i, align 8, !tbaa !78
  %n.casted.sroa.0.0.insert.ext.i276 = and i64 %159, 4294967295
  store i64 %n.casted.sroa.0.0.insert.ext.i276, i64* %143, align 8
  store i64 %n.casted.sroa.0.0.insert.ext.i276, i64* %145, align 8
  store double* %160, double** %147, align 8
  store double* %160, double** %149, align 8
  store double* %158, double** %151, align 8
  store double* %158, double** %153, align 8
  call void @__kmpc_push_target_tripcount_mapper(%struct.ident_t* nonnull @3, i64 -1, i64 %n.casted.sroa.0.0.insert.ext.i276) #8
  %161 = call i32 @__tgt_target_teams_mapper(%struct.ident_t* nonnull @3, i64 -1, i8* nonnull @.__omp_offloading_31_355dd0b__ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3__l157.region_id, i32 3, i8** nonnull %142, i8** nonnull %144, i64* getelementptr inbounds ([3 x i64], [3 x i64]* @.offload_sizes.120, i64 0, i64 0), i64* getelementptr inbounds ([3 x i64], [3 x i64]* @.offload_maptypes.121, i64 0, i64 0), i8** null, i8** null, i32 0, i32 0) #8
  %.not35.i = icmp eq i32 %161, 0
  br i1 %.not35.i, label %_ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3_.exit, label %omp_offload.failed.i277

omp_offload.failed.i277:                          ; preds = %invoke.cont101
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_teams(%struct.ident_t* nonnull @3, i32 3, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, double*, double*)* @.omp_outlined..97 to void (i32*, i32*, ...)*), i64 %n.casted.sroa.0.0.insert.ext.i276, double* %160, double* %158) #8
  br label %_ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3_.exit

_ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3_.exit: ; preds = %invoke.cont101, %omp_offload.failed.i277
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %140)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %141)
  %call104 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %invoke.cont103 unwind label %lpad100.loopexit

invoke.cont103:                                   ; preds = %_ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3_.exit
  %sub105 = fsub contract double %call104, %call102
  br label %if.end122

lpad100.loopexit:                                 ; preds = %if.then99, %_ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3_.exit, %if.else, %_ZN6miniFE6dot_r2INS_6VectorIdiiEEEENS_10TypeTraitsINT_10ScalarTypeEE14magnitude_typeERKS4_.exit289, %invoke.cont128, %if.then127, %invoke.cont130, %invoke.cont132, %if.end.i.i.i375, %.noexc381, %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i379, %call1.i377.noexc
  %lpad.loopexit = landingpad { i8*, i32 }
          catch i8* null
  br label %terminate.handler

lpad100.loopexit.split-lp:                        ; preds = %if.then.i.i.i366
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          catch i8* null
  br label %terminate.handler

if.else:                                          ; preds = %for.body
  %call108 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %invoke.cont107 unwind label %lpad100.loopexit

invoke.cont107:                                   ; preds = %if.else
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %125)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %126)
  %162 = load double*, double** %_M_finish.i.i.i, align 8, !tbaa !82
  %163 = load double*, double** %_M_start.i.i, align 8, !tbaa !78
  %sub.ptr.lhs.cast.i.i283 = ptrtoint double* %162 to i64
  %sub.ptr.rhs.cast.i.i284 = ptrtoint double* %163 to i64
  %sub.ptr.sub.i.i285 = sub i64 %sub.ptr.lhs.cast.i.i283, %sub.ptr.rhs.cast.i.i284
  %164 = lshr exact i64 %sub.ptr.sub.i.i285, 3
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %127) #8
  store double 0.000000e+00, double* %result.i278, align 8, !tbaa !84
  %n.casted.sroa.0.0.insert.ext.i286 = and i64 %164, 4294967295
  store i64 %n.casted.sroa.0.0.insert.ext.i286, i64* %129, align 8
  store i64 %n.casted.sroa.0.0.insert.ext.i286, i64* %131, align 8
  store double* %result.i278, double** %133, align 8
  store double* %result.i278, double** %135, align 8
  store double* %163, double** %137, align 8
  store double* %163, double** %139, align 8
  call void @__kmpc_push_target_tripcount_mapper(%struct.ident_t* nonnull @3, i64 -1, i64 %n.casted.sroa.0.0.insert.ext.i286) #8
  %165 = call i32 @__tgt_target_teams_mapper(%struct.ident_t* nonnull @3, i64 -1, i8* nonnull @.__omp_offloading_31_355dd0b__ZN6miniFE6dot_r2INS_6VectorIdiiEEEENS_10TypeTraitsINT_10ScalarTypeEE14magnitude_typeERKS4__l289.region_id, i32 3, i8** nonnull %128, i8** nonnull %130, i64* getelementptr inbounds ([3 x i64], [3 x i64]* @.offload_sizes.116, i64 0, i64 0), i64* getelementptr inbounds ([3 x i64], [3 x i64]* @.offload_maptypes.117, i64 0, i64 0), i8** null, i8** null, i32 0, i32 0) #8
  %.not.i287 = icmp eq i32 %165, 0
  br i1 %.not.i287, label %_ZN6miniFE6dot_r2INS_6VectorIdiiEEEENS_10TypeTraitsINT_10ScalarTypeEE14magnitude_typeERKS4_.exit289, label %omp_offload.failed.i288

omp_offload.failed.i288:                          ; preds = %invoke.cont107
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_teams(%struct.ident_t* nonnull @3, i32 3, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, double*, double*)* @.omp_outlined..112 to void (i32*, i32*, ...)*), i64 %n.casted.sroa.0.0.insert.ext.i286, double* nonnull %result.i278, double* %163) #8
  br label %_ZN6miniFE6dot_r2INS_6VectorIdiiEEEENS_10TypeTraitsINT_10ScalarTypeEE14magnitude_typeERKS4_.exit289

_ZN6miniFE6dot_r2INS_6VectorIdiiEEEENS_10TypeTraitsINT_10ScalarTypeEE14magnitude_typeERKS4_.exit289: ; preds = %invoke.cont107, %omp_offload.failed.i288
  %166 = load double, double* %result.i278, align 8, !tbaa !84
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %127) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %125)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %126)
  %call111 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %invoke.cont110 unwind label %lpad100.loopexit

invoke.cont110:                                   ; preds = %_ZN6miniFE6dot_r2INS_6VectorIdiiEEEENS_10TypeTraitsINT_10ScalarTypeEE14magnitude_typeERKS4_.exit289
  %sub112 = fsub contract double %call111, %call108
  %add113 = fadd contract double %tDOT.0440, %sub112
  %call117 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %invoke.cont116 unwind label %lpad115

invoke.cont116:                                   ; preds = %invoke.cont110
  %div114 = fdiv contract double %166, %rtrans.0438
  call void @_ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3_(double noundef 1.000000e+00, %"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %r, double noundef %div114, %"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %p)
  %call119 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %invoke.cont118 unwind label %lpad115

invoke.cont118:                                   ; preds = %invoke.cont116
  %sub120 = fsub contract double %call119, %call117
  br label %if.end122

lpad115:                                          ; preds = %invoke.cont116, %invoke.cont110
  %167 = landingpad { i8*, i32 }
          catch i8* null
  br label %terminate.handler

if.end122:                                        ; preds = %invoke.cont118, %invoke.cont103
  %rtrans.1 = phi double [ %rtrans.0438, %invoke.cont103 ], [ %166, %invoke.cont118 ]
  %tDOT.1 = phi double [ %tDOT.0440, %invoke.cont103 ], [ %add113, %invoke.cont118 ]
  %sub105.pn = phi double [ %sub105, %invoke.cont103 ], [ %sub120, %invoke.cont118 ]
  %tWAXPY.1 = fadd contract double %tWAXPY.0441, %sub105.pn
  %call123 = call contract double @sqrt(double noundef %rtrans.1) #8
  store double %call123, double* %normr, align 8, !tbaa !84
  %rem = urem i32 %k.0443, %spec.store.select1
  %cmp125 = icmp eq i32 %rem, 0
  %cmp126 = icmp eq i32 %k.0443, %max_iter
  %or.cond = or i1 %cmp126, %cmp125
  br i1 %or.cond, label %if.then127, label %if.end138

if.then127:                                       ; preds = %if.end122
  %call1.i291292 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i8* noundef nonnull getelementptr inbounds ([13 x i8], [13 x i8]* @.str.94, i64 0, i64 0), i64 noundef 12)
          to label %invoke.cont128 unwind label %lpad100.loopexit

invoke.cont128:                                   ; preds = %if.then127
  %call131 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i32 noundef signext %k.0443)
          to label %invoke.cont130 unwind label %lpad100.loopexit

invoke.cont130:                                   ; preds = %invoke.cont128
  %call1.i295296 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call131, i8* noundef nonnull getelementptr inbounds ([15 x i8], [15 x i8]* @.str.95, i64 0, i64 0), i64 noundef 14)
          to label %invoke.cont132 unwind label %lpad100.loopexit

invoke.cont132:                                   ; preds = %invoke.cont130
  %168 = load double, double* %normr, align 8, !tbaa !84
  %call.i298299 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIdEERSoT_(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call131, double noundef %168)
          to label %invoke.cont134 unwind label %lpad100.loopexit

invoke.cont134:                                   ; preds = %invoke.cont132
  %169 = bitcast %"class.std::basic_ostream"* %call.i298299 to i8**
  %vtable.i360 = load i8*, i8** %169, align 8, !tbaa !32
  %vbase.offset.ptr.i361 = getelementptr i8, i8* %vtable.i360, i64 -24
  %170 = bitcast i8* %vbase.offset.ptr.i361 to i64*
  %vbase.offset.i362 = load i64, i64* %170, align 8
  %add.ptr.i363 = getelementptr inbounds %"class.std::basic_ostream", %"class.std::basic_ostream"* %call.i298299, i64 0, i32 1, i32 4
  %171 = bitcast %"class.std::basic_streambuf"** %add.ptr.i363 to i8*
  %_M_ctype.i.i364 = getelementptr inbounds i8, i8* %171, i64 %vbase.offset.i362
  %172 = bitcast i8* %_M_ctype.i.i364 to %"class.std::ctype"**
  %173 = load %"class.std::ctype"*, %"class.std::ctype"** %172, align 8, !tbaa !34
  %tobool.not.i.i.i365 = icmp eq %"class.std::ctype"* %173, null
  br i1 %tobool.not.i.i.i365, label %if.then.i.i.i366, label %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i369

if.then.i.i.i366:                                 ; preds = %invoke.cont134
  invoke void @_ZSt16__throw_bad_castv() #29
          to label %.noexc380 unwind label %lpad100.loopexit.split-lp

.noexc380:                                        ; preds = %if.then.i.i.i366
  unreachable

_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i369: ; preds = %invoke.cont134
  %_M_widen_ok.i.i.i367 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %173, i64 0, i32 8
  %174 = load i8, i8* %_M_widen_ok.i.i.i367, align 8, !tbaa !37
  %tobool.not.i1.i.i368 = icmp eq i8 %174, 0
  br i1 %tobool.not.i1.i.i368, label %if.end.i.i.i375, label %if.then.i2.i.i371

if.then.i2.i.i371:                                ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i369
  %arrayidx.i.i.i370 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %173, i64 0, i32 9, i64 10
  %175 = load i8, i8* %arrayidx.i.i.i370, align 1, !tbaa !39
  br label %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i379

if.end.i.i.i375:                                  ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i369
  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %173)
          to label %.noexc381 unwind label %lpad100.loopexit

.noexc381:                                        ; preds = %if.end.i.i.i375
  %176 = bitcast %"class.std::ctype"* %173 to i8 (%"class.std::ctype"*, i8)***
  %vtable.i.i.i372 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %176, align 8, !tbaa !32
  %vfn.i.i.i373 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vtable.i.i.i372, i64 6
  %177 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vfn.i.i.i373, align 8
  %call.i.i.i374382 = invoke noundef zeroext i8 %177(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %173, i8 noundef zeroext 10)
          to label %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i379 unwind label %lpad100.loopexit

_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i379: ; preds = %.noexc381, %if.then.i2.i.i371
  %retval.0.i.i.i376 = phi i8 [ %175, %if.then.i2.i.i371 ], [ %call.i.i.i374382, %.noexc381 ]
  %call1.i377383 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call.i298299, i8 noundef zeroext %retval.0.i.i.i376)
          to label %call1.i377.noexc unwind label %lpad100.loopexit

call1.i377.noexc:                                 ; preds = %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i379
  %call.i.i378384 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call1.i377383)
          to label %if.end138 unwind label %lpad100.loopexit

if.end138:                                        ; preds = %call1.i377.noexc, %if.end122
  %call141 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %invoke.cont140 unwind label %lpad139.loopexit

invoke.cont140:                                   ; preds = %if.end138
  invoke void @_ZN6miniFE10matvec_stdINS_9CSRMatrixIdiiEENS_6VectorIdiiEEEclERS2_RS4_S7_(%"struct.miniFE::matvec_std"* noundef nonnull align 1 dereferenceable(1) %matvec, %"struct.miniFE::CSRMatrix"* noundef nonnull align 8 dereferenceable(132) %A, %"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %p, %"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %Ap)
          to label %invoke.cont142 unwind label %lpad139.loopexit

invoke.cont142:                                   ; preds = %invoke.cont140
  %call144 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %invoke.cont143 unwind label %lpad139.loopexit

invoke.cont143:                                   ; preds = %invoke.cont142
  %sub145 = fsub contract double %call144, %call141
  %add146 = fadd contract double %tMATVEC.0439, %sub145
  %call148 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %invoke.cont147 unwind label %lpad139.loopexit

invoke.cont147:                                   ; preds = %invoke.cont143
  %call149 = call contract noundef double @_ZN6miniFE3dotINS_6VectorIdiiEEEENS_10TypeTraitsINT_10ScalarTypeEE14magnitude_typeERKS4_S9_(%"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %Ap, %"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %p)
  %call151 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %invoke.cont150 unwind label %lpad139.loopexit

invoke.cont150:                                   ; preds = %invoke.cont147
  %sub152 = fsub contract double %call151, %call148
  %add153 = fadd contract double %tDOT.1, %sub152
  %cmp154 = fcmp contract olt double %call149, %brkdown_tol.0442
  br i1 %cmp154, label %if.then155, label %if.end174

if.then155:                                       ; preds = %invoke.cont150
  %cmp156 = fcmp contract olt double %call149, 0.000000e+00
  br i1 %cmp156, label %if.then160, label %invoke.cont158

invoke.cont158:                                   ; preds = %if.then155
  %call.i304 = call contract noundef double @_ZN6miniFE3dotINS_6VectorIdiiEEEENS_10TypeTraitsINT_10ScalarTypeEE14magnitude_typeERKS4_S9_(%"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %Ap, %"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %Ap)
  %call1.i305 = call contract double @sqrt(double noundef %call.i304) #8
  %call2.i = call contract noundef double @_ZN6miniFE3dotINS_6VectorIdiiEEEENS_10TypeTraitsINT_10ScalarTypeEE14magnitude_typeERKS4_S9_(%"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %p, %"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %p)
  %call3.i = call contract double @sqrt(double noundef %call2.i) #8
  %178 = call contract double @llvm.fabs.f64(double %call149) #8
  %mul.i = fmul contract double %call1.i305, 1.000000e+02
  %mul5.i = fmul contract double %mul.i, %call3.i
  %mul7.i = fmul contract double %mul5.i, 0x3CB0000000000000
  %cmp.i = fcmp contract ugt double %178, %mul7.i
  br i1 %cmp.i, label %if.else172, label %if.then160

if.then160:                                       ; preds = %invoke.cont158, %if.then155
  %call1.i307308 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i8* noundef nonnull getelementptr inbounds ([45 x i8], [45 x i8]* @.str.96, i64 0, i64 0), i64 noundef 44)
          to label %invoke.cont161 unwind label %lpad139.loopexit.split-lp

invoke.cont161:                                   ; preds = %if.then160
  %vtable.i386 = load i8*, i8** bitcast (%"class.std::basic_ostream"* @_ZSt4cerr to i8**), align 8, !tbaa !32
  %vbase.offset.ptr.i387 = getelementptr i8, i8* %vtable.i386, i64 -24
  %179 = bitcast i8* %vbase.offset.ptr.i387 to i64*
  %vbase.offset.i388 = load i64, i64* %179, align 8
  %add.ptr.i389 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cerr to i8*), i64 %vbase.offset.i388
  %_M_ctype.i.i390 = getelementptr inbounds i8, i8* %add.ptr.i389, i64 240
  %180 = bitcast i8* %_M_ctype.i.i390 to %"class.std::ctype"**
  %181 = load %"class.std::ctype"*, %"class.std::ctype"** %180, align 8, !tbaa !34
  %tobool.not.i.i.i391 = icmp eq %"class.std::ctype"* %181, null
  br i1 %tobool.not.i.i.i391, label %if.then.i.i.i392, label %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i395

if.then.i.i.i392:                                 ; preds = %invoke.cont161
  invoke void @_ZSt16__throw_bad_castv() #29
          to label %.noexc406 unwind label %lpad139.loopexit.split-lp

.noexc406:                                        ; preds = %if.then.i.i.i392
  unreachable

_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i395: ; preds = %invoke.cont161
  %_M_widen_ok.i.i.i393 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %181, i64 0, i32 8
  %182 = load i8, i8* %_M_widen_ok.i.i.i393, align 8, !tbaa !37
  %tobool.not.i1.i.i394 = icmp eq i8 %182, 0
  br i1 %tobool.not.i1.i.i394, label %if.end.i.i.i401, label %if.then.i2.i.i397

if.then.i2.i.i397:                                ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i395
  %arrayidx.i.i.i396 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %181, i64 0, i32 9, i64 10
  %183 = load i8, i8* %arrayidx.i.i.i396, align 1, !tbaa !39
  br label %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i405

if.end.i.i.i401:                                  ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i395
  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %181)
          to label %.noexc407 unwind label %lpad139.loopexit.split-lp

.noexc407:                                        ; preds = %if.end.i.i.i401
  %184 = bitcast %"class.std::ctype"* %181 to i8 (%"class.std::ctype"*, i8)***
  %vtable.i.i.i398 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %184, align 8, !tbaa !32
  %vfn.i.i.i399 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vtable.i.i.i398, i64 6
  %185 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vfn.i.i.i399, align 8
  %call.i.i.i400408 = invoke noundef zeroext i8 %185(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %181, i8 noundef zeroext 10)
          to label %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i405 unwind label %lpad139.loopexit.split-lp

_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i405: ; preds = %.noexc407, %if.then.i2.i.i397
  %retval.0.i.i.i402 = phi i8 [ %183, %if.then.i2.i.i397 ], [ %call.i.i.i400408, %.noexc407 ]
  %call1.i403409 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cerr, i8 noundef zeroext %retval.0.i.i.i402)
          to label %call1.i403.noexc unwind label %lpad139.loopexit.split-lp

call1.i403.noexc:                                 ; preds = %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i405
  %call.i.i404410 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call1.i403409)
          to label %invoke.cont163 unwind label %lpad139.loopexit.split-lp

invoke.cont163:                                   ; preds = %call1.i403.noexc
  store double %tWAXPY.1, double* %my_cg_times, align 8, !tbaa !84
  %arrayidx166 = getelementptr inbounds double, double* %my_cg_times, i64 1
  store double %add153, double* %arrayidx166, align 8, !tbaa !84
  %arrayidx167 = getelementptr inbounds double, double* %my_cg_times, i64 2
  store double %add146, double* %arrayidx167, align 8, !tbaa !84
  %call169 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %cleanup unwind label %lpad139.loopexit.split-lp

lpad139.loopexit:                                 ; preds = %if.end138, %invoke.cont140, %invoke.cont142, %invoke.cont143, %invoke.cont147, %if.end174, %invoke.cont176
  %lpad.loopexit417 = landingpad { i8*, i32 }
          catch i8* null
  br label %terminate.handler

lpad139.loopexit.split-lp:                        ; preds = %invoke.cont163, %if.then160, %if.then.i.i.i392, %if.end.i.i.i401, %.noexc407, %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i405, %call1.i403.noexc
  %lpad.loopexit.split-lp418 = landingpad { i8*, i32 }
          catch i8* null
  br label %terminate.handler

if.else172:                                       ; preds = %invoke.cont158
  %mul = fmul contract double %call149, 1.000000e-01
  br label %if.end174

if.end174:                                        ; preds = %if.else172, %invoke.cont150
  %brkdown_tol.1 = phi double [ %mul, %if.else172 ], [ %brkdown_tol.0442, %invoke.cont150 ]
  %div175 = fdiv contract double %rtrans.1, %call149
  %call177 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %invoke.cont176 unwind label %lpad139.loopexit

invoke.cont176:                                   ; preds = %if.end174
  call void @_ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3_(double noundef %div175, %"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %p, double noundef 1.000000e+00, %"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %x)
  %fneg178 = fneg contract double %div175
  call void @_ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3_(double noundef %fneg178, %"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %Ap, double noundef 1.000000e+00, %"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %r)
  %call180 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %for.inc unwind label %lpad139.loopexit

cleanup:                                          ; preds = %invoke.cont163
  %sub170 = fsub contract double %call169, %call
  %arrayidx171 = getelementptr inbounds double, double* %my_cg_times, i64 4
  store double %sub170, double* %arrayidx171, align 8, !tbaa !84
  br label %cleanup184

for.inc:                                          ; preds = %invoke.cont176
  %sub181 = fsub contract double %call180, %call177
  %add182 = fadd contract double %tWAXPY.1, %sub181
  store i32 %k.0443, i32* %num_iters, align 4, !tbaa !16
  %inc = add nuw i32 %k.0443, 1
  %exitcond.not = icmp eq i32 %k.0443, %max_iter
  br i1 %exitcond.not, label %cleanup184, label %land.rhs, !llvm.loop !154

cleanup184:                                       ; preds = %for.inc, %land.rhs, %for.cond.preheader, %cleanup
  %tMATVEC.1 = phi double [ %add146, %cleanup ], [ %add71, %for.cond.preheader ], [ %add146, %for.inc ], [ %tMATVEC.0439, %land.rhs ]
  %tDOT.2 = phi double [ %add153, %cleanup ], [ %add84, %for.cond.preheader ], [ %add153, %for.inc ], [ %tDOT.0440, %land.rhs ]
  %tWAXPY.3 = phi double [ %tWAXPY.1, %cleanup ], [ %add77, %for.cond.preheader ], [ %add182, %for.inc ], [ %tWAXPY.0441, %land.rhs ]
  call void @__tgt_target_data_end_mapper(%struct.ident_t* nonnull @3, i64 -1, i32 8, i8** nonnull %53, i8** nonnull %55, i64* nonnull %57, i64* getelementptr inbounds ([8 x i64], [8 x i64]* @.offload_maptypes.144, i64 0, i64 0), i8** null, i8** null)
  %186 = load i8*, i8** @__omp_adaptation_miniFE, align 8
  call void @__apollo_region_end(i8* %186)
  store double %tWAXPY.3, double* %my_cg_times, align 8, !tbaa !84
  %arrayidx188 = getelementptr inbounds double, double* %my_cg_times, i64 1
  store double %tDOT.2, double* %arrayidx188, align 8, !tbaa !84
  %arrayidx189 = getelementptr inbounds double, double* %my_cg_times, i64 2
  store double %tMATVEC.1, double* %arrayidx189, align 8, !tbaa !84
  %arrayidx190 = getelementptr inbounds double, double* %my_cg_times, i64 3
  store double 0.000000e+00, double* %arrayidx190, align 8, !tbaa !84
  %call193 = invoke noundef double @_ZN6miniFE7mytimerEv()
          to label %invoke.cont192 unwind label %lpad191

invoke.cont192:                                   ; preds = %cleanup184
  %sub194 = fsub contract double %call193, %call
  %arrayidx195 = getelementptr inbounds double, double* %my_cg_times, i64 4
  store double %sub194, double* %arrayidx195, align 8, !tbaa !84
  %_M_start.i.i.i = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %Ap, i64 0, i32 2, i32 0, i32 0, i32 0
  %187 = load double*, double** %_M_start.i.i.i, align 8, !tbaa !78
  %tobool.not.i.i.i.i = icmp eq double* %187, null
  br i1 %tobool.not.i.i.i.i, label %_ZN6miniFE6VectorIdiiED2Ev.exit, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %invoke.cont192
  %188 = bitcast double* %187 to i8*
  call void @_ZdlPv(i8* noundef nonnull %188) #8
  br label %_ZN6miniFE6VectorIdiiED2Ev.exit

_ZN6miniFE6VectorIdiiED2Ev.exit:                  ; preds = %invoke.cont192, %if.then.i.i.i.i
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #8
  %189 = load double*, double** %_M_start.i38.i, align 8, !tbaa !78
  %tobool.not.i.i.i.i314 = icmp eq double* %189, null
  br i1 %tobool.not.i.i.i.i314, label %_ZN6miniFE6VectorIdiiED2Ev.exit316, label %if.then.i.i.i.i315

if.then.i.i.i.i315:                               ; preds = %_ZN6miniFE6VectorIdiiED2Ev.exit
  %190 = bitcast double* %189 to i8*
  call void @_ZdlPv(i8* noundef nonnull %190) #8
  br label %_ZN6miniFE6VectorIdiiED2Ev.exit316

_ZN6miniFE6VectorIdiiED2Ev.exit316:               ; preds = %_ZN6miniFE6VectorIdiiED2Ev.exit, %if.then.i.i.i.i315
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #8
  %191 = load double*, double** %_M_start.i.i, align 8, !tbaa !78
  %tobool.not.i.i.i.i318 = icmp eq double* %191, null
  br i1 %tobool.not.i.i.i.i318, label %_ZN6miniFE6VectorIdiiED2Ev.exit320, label %if.then.i.i.i.i319

if.then.i.i.i.i319:                               ; preds = %_ZN6miniFE6VectorIdiiED2Ev.exit316
  %192 = bitcast double* %191 to i8*
  call void @_ZdlPv(i8* noundef nonnull %192) #8
  br label %_ZN6miniFE6VectorIdiiED2Ev.exit320

_ZN6miniFE6VectorIdiiED2Ev.exit320:               ; preds = %_ZN6miniFE6VectorIdiiED2Ev.exit316, %if.then.i.i.i.i319
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #8
  br label %cleanup219

cleanup219:                                       ; preds = %_ZN6miniFE6VectorIdiiED2Ev.exit320, %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit
  ret void

lpad191:                                          ; preds = %cleanup184
  %193 = landingpad { i8*, i32 }
          cleanup
  %_M_start.i.i.i321 = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %Ap, i64 0, i32 2, i32 0, i32 0, i32 0
  %194 = load double*, double** %_M_start.i.i.i321, align 8, !tbaa !78
  %tobool.not.i.i.i.i322 = icmp eq double* %194, null
  br i1 %tobool.not.i.i.i.i322, label %ehcleanup212, label %if.then.i.i.i.i323

if.then.i.i.i.i323:                               ; preds = %lpad191
  %195 = bitcast double* %194 to i8*
  call void @_ZdlPv(i8* noundef nonnull %195) #8
  br label %ehcleanup212

ehcleanup212:                                     ; preds = %if.then.i.i.i.i323, %lpad191, %lpad7
  %.pn = phi { i8*, i32 } [ %94, %lpad7 ], [ %193, %lpad191 ], [ %193, %if.then.i.i.i.i323 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #8
  %_M_start.i.i.i325 = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %p, i64 0, i32 2, i32 0, i32 0, i32 0
  %196 = load double*, double** %_M_start.i.i.i325, align 8, !tbaa !78
  %tobool.not.i.i.i.i326 = icmp eq double* %196, null
  br i1 %tobool.not.i.i.i.i326, label %ehcleanup214, label %if.then.i.i.i.i327

if.then.i.i.i.i327:                               ; preds = %ehcleanup212
  %197 = bitcast double* %196 to i8*
  call void @_ZdlPv(i8* noundef nonnull %197) #8
  br label %ehcleanup214

ehcleanup214:                                     ; preds = %if.then.i.i.i.i327, %ehcleanup212, %lpad
  %.pn.pn = phi { i8*, i32 } [ %93, %lpad ], [ %.pn, %ehcleanup212 ], [ %.pn, %if.then.i.i.i.i327 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #8
  %_M_start.i.i.i329 = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %r, i64 0, i32 2, i32 0, i32 0, i32 0
  %198 = load double*, double** %_M_start.i.i.i329, align 8, !tbaa !78
  %tobool.not.i.i.i.i330 = icmp eq double* %198, null
  br i1 %tobool.not.i.i.i.i330, label %_ZN6miniFE6VectorIdiiED2Ev.exit332, label %if.then.i.i.i.i331

if.then.i.i.i.i331:                               ; preds = %ehcleanup214
  %199 = bitcast double* %198 to i8*
  call void @_ZdlPv(i8* noundef nonnull %199) #8
  br label %_ZN6miniFE6VectorIdiiED2Ev.exit332

_ZN6miniFE6VectorIdiiED2Ev.exit332:               ; preds = %ehcleanup214, %if.then.i.i.i.i331
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #8
  resume { i8*, i32 } %.pn.pn

terminate.handler:                                ; preds = %lpad139.loopexit, %lpad139.loopexit.split-lp, %lpad100.loopexit, %lpad100.loopexit.split-lp, %lpad115, %lpad60
  %.pn154.pn = phi { i8*, i32 } [ %154, %lpad60 ], [ %167, %lpad115 ], [ %lpad.loopexit, %lpad100.loopexit ], [ %lpad.loopexit.split-lp, %lpad100.loopexit.split-lp ], [ %lpad.loopexit417, %lpad139.loopexit ], [ %lpad.loopexit.split-lp418, %lpad139.loopexit.split-lp ]
  %exn.slot.3 = extractvalue { i8*, i32 } %.pn154.pn, 0
  call void @__clang_call_terminate(i8* %exn.slot.3) #31
  unreachable
}

; Function Attrs: uwtable
define linkonce_odr dso_local noundef signext i32 @_ZN6miniFE15verify_solutionINS_6VectorIdiiEEEEiRKNS_23simple_mesh_descriptionINT_17GlobalOrdinalTypeEEERKS4_db(%"class.miniFE::simple_mesh_description"* noundef nonnull align 8 dereferenceable(192) %mesh, %"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %x, double noundef %tolerance, i1 noundef zeroext %verify_whole_domain) local_unnamed_addr #11 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %arrayidx = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %mesh, i64 0, i32 3, i32 0, i64 1
  %0 = load i32, i32* %arrayidx, align 4, !tbaa !16
  %add = add nsw i32 %0, 1
  %arrayidx3 = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %mesh, i64 0, i32 3, i32 0, i64 3
  %1 = load i32, i32* %arrayidx3, align 4, !tbaa !16
  %add4 = add nsw i32 %1, 1
  %arrayidx7 = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %mesh, i64 0, i32 3, i32 0, i64 5
  %2 = load i32, i32* %arrayidx7, align 4, !tbaa !16
  %arrayidx.i.i = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %mesh, i64 0, i32 4, i32 0, i64 0
  %3 = load i32, i32* %arrayidx.i.i, align 8, !tbaa !16
  %arrayidx4.i = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %mesh, i64 0, i32 4, i32 0, i64 1
  %4 = load i32, i32* %arrayidx4.i, align 4, !tbaa !16
  %arrayidx.i.1.i = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %mesh, i64 0, i32 4, i32 0, i64 2
  %5 = load i32, i32* %arrayidx.i.1.i, align 8, !tbaa !16
  %arrayidx4.1.i = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %mesh, i64 0, i32 4, i32 0, i64 3
  %6 = load i32, i32* %arrayidx4.1.i, align 4, !tbaa !16
  %arrayidx.i.2.i = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %mesh, i64 0, i32 4, i32 0, i64 4
  %7 = load i32, i32* %arrayidx.i.2.i, align 8, !tbaa !16
  %arrayidx4.2.i = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %mesh, i64 0, i32 4, i32 0, i64 5
  %8 = load i32, i32* %arrayidx4.2.i, align 4, !tbaa !16
  %cmp = icmp sgt i32 %4, %3
  %cmp18 = icmp eq i32 %4, %0
  %or.cond506 = select i1 %cmp, i1 %cmp18, i1 false
  %inc = zext i1 %or.cond506 to i32
  %box.sroa.6.0 = add i32 %4, %inc
  %cmp25 = icmp sgt i32 %6, %5
  %cmp32 = icmp eq i32 %6, %1
  %or.cond507 = select i1 %cmp25, i1 %cmp32, i1 false
  %inc36 = zext i1 %or.cond507 to i32
  %box.sroa.15.0 = add i32 %6, %inc36
  %cmp42 = icmp sgt i32 %8, %7
  %cmp49 = icmp eq i32 %8, %2
  %or.cond508 = select i1 %cmp42, i1 %cmp49, i1 false
  %inc53 = zext i1 %or.cond508 to i32
  %box.sroa.24.0 = add i32 %8, %inc53
  %9 = icmp sgt i32 %0, 1
  %cond.i = select i1 %9, i32 %0, i32 1
  %10 = icmp sgt i32 %1, 1
  %cond6.i = select i1 %10, i32 %1, i32 1
  %11 = icmp sgt i32 %2, 1
  %cond12.i = select i1 %11, i32 %2, i32 1
  %mul.i = mul nsw i32 %add4, %add
  %conv14.i = sitofp i32 %cond12.i to double
  %conv20.i = sitofp i32 %cond6.i to double
  %conv25.i = sitofp i32 %cond.i to double
  %cmp73528 = icmp sge i32 %3, %box.sroa.6.0
  %cmp59581 = icmp sge i32 %7, %box.sroa.24.0
  %cmp65556 = icmp sge i32 %5, %box.sroa.15.0
  %or.cond645 = select i1 %cmp59581, i1 true, i1 %cmp65556
  %brmerge = select i1 %or.cond645, i1 true, i1 %cmp73528
  br i1 %brmerge, label %for.cond106.preheader, label %for.cond62.preheader.us.us

for.cond62.preheader.us.us:                       ; preds = %entry, %for.cond62.for.cond.cleanup66_crit_edge.split.us.us.us
  %iz.0589.us.us = phi i32 [ %inc104.us.us, %for.cond62.for.cond.cleanup66_crit_edge.split.us.us.us ], [ %7, %entry ]
  %roffset.0588.us.us = phi i32 [ %inc98.us.us.us, %for.cond62.for.cond.cleanup66_crit_edge.split.us.us.us ], [ 0, %entry ]
  %row_coords.sroa.24.0587.us.us = phi double* [ %row_coords.sroa.24.6.us.us.us, %for.cond62.for.cond.cleanup66_crit_edge.split.us.us.us ], [ null, %entry ]
  %row_coords.sroa.15.0586.us.us = phi double* [ %row_coords.sroa.15.6.us.us.us, %for.cond62.for.cond.cleanup66_crit_edge.split.us.us.us ], [ null, %entry ]
  %row_coords.sroa.0.0585.us.us = phi double* [ %row_coords.sroa.0.7.us.us.us, %for.cond62.for.cond.cleanup66_crit_edge.split.us.us.us ], [ null, %entry ]
  %rows.sroa.14.0584.us.us = phi i32* [ %rows.sroa.14.4.us.us.us, %for.cond62.for.cond.cleanup66_crit_edge.split.us.us.us ], [ null, %entry ]
  %rows.sroa.10.0583.us.us = phi i32* [ %rows.sroa.10.4.us.us.us, %for.cond62.for.cond.cleanup66_crit_edge.split.us.us.us ], [ null, %entry ]
  %rows.sroa.0.0582.us.us = phi i32* [ %rows.sroa.0.5.us.us.us, %for.cond62.for.cond.cleanup66_crit_edge.split.us.us.us ], [ null, %entry ]
  %cmp8.not.i.us.us = icmp sle i32 %iz.0589.us.us, %2
  %mul11.i.us.us = mul i32 %iz.0589.us.us, %add4
  br label %for.cond70.preheader.us.us.us

for.cond70.preheader.us.us.us:                    ; preds = %for.cond70.for.cond.cleanup74_crit_edge.us.us.us, %for.cond62.preheader.us.us
  %iy.0564.us.us.us = phi i32 [ %5, %for.cond62.preheader.us.us ], [ %inc101.us.us.us, %for.cond70.for.cond.cleanup74_crit_edge.us.us.us ]
  %roffset.1563.us.us.us = phi i32 [ %roffset.0588.us.us, %for.cond62.preheader.us.us ], [ %inc98.us.us.us, %for.cond70.for.cond.cleanup74_crit_edge.us.us.us ]
  %row_coords.sroa.24.1562.us.us.us = phi double* [ %row_coords.sroa.24.0587.us.us, %for.cond62.preheader.us.us ], [ %row_coords.sroa.24.6.us.us.us, %for.cond70.for.cond.cleanup74_crit_edge.us.us.us ]
  %row_coords.sroa.15.1561.us.us.us = phi double* [ %row_coords.sroa.15.0586.us.us, %for.cond62.preheader.us.us ], [ %row_coords.sroa.15.6.us.us.us, %for.cond70.for.cond.cleanup74_crit_edge.us.us.us ]
  %row_coords.sroa.0.1560.us.us.us = phi double* [ %row_coords.sroa.0.0585.us.us, %for.cond62.preheader.us.us ], [ %row_coords.sroa.0.7.us.us.us, %for.cond70.for.cond.cleanup74_crit_edge.us.us.us ]
  %rows.sroa.14.1559.us.us.us = phi i32* [ %rows.sroa.14.0584.us.us, %for.cond62.preheader.us.us ], [ %rows.sroa.14.4.us.us.us, %for.cond70.for.cond.cleanup74_crit_edge.us.us.us ]
  %rows.sroa.10.1558.us.us.us = phi i32* [ %rows.sroa.10.0583.us.us, %for.cond62.preheader.us.us ], [ %rows.sroa.10.4.us.us.us, %for.cond70.for.cond.cleanup74_crit_edge.us.us.us ]
  %rows.sroa.0.1557.us.us.us = phi i32* [ %rows.sroa.0.0582.us.us, %for.cond62.preheader.us.us ], [ %rows.sroa.0.5.us.us.us, %for.cond70.for.cond.cleanup74_crit_edge.us.us.us ]
  %12 = or i32 %iy.0564.us.us.us, %iz.0589.us.us
  %cmp6.not.i.us.us.us = icmp sle i32 %iy.0564.us.us.us, %1
  %reass.add.i.us.us.us = add i32 %iy.0564.us.us.us, %mul11.i.us.us
  %reass.mul.i.us.us.us = mul i32 %reass.add.i.us.us.us, %add
  br label %for.body75.us.us.us

for.body75.us.us.us:                              ; preds = %if.end97.us.us.us, %for.cond70.preheader.us.us.us
  %ix.0548.us.us.us = phi i32 [ %3, %for.cond70.preheader.us.us.us ], [ %inc99.us.us.us, %if.end97.us.us.us ]
  %roffset.2545.us.us.us = phi i32 [ %roffset.1563.us.us.us, %for.cond70.preheader.us.us.us ], [ %inc98.us.us.us, %if.end97.us.us.us ]
  %row_coords.sroa.24.2543.us.us.us = phi double* [ %row_coords.sroa.24.1562.us.us.us, %for.cond70.preheader.us.us.us ], [ %row_coords.sroa.24.6.us.us.us, %if.end97.us.us.us ]
  %row_coords.sroa.15.2542.us.us.us = phi double* [ %row_coords.sroa.15.1561.us.us.us, %for.cond70.preheader.us.us.us ], [ %row_coords.sroa.15.6.us.us.us, %if.end97.us.us.us ]
  %row_coords.sroa.0.2536.us.us.us = phi double* [ %row_coords.sroa.0.1560.us.us.us, %for.cond70.preheader.us.us.us ], [ %row_coords.sroa.0.7.us.us.us, %if.end97.us.us.us ]
  %rows.sroa.14.2534.us.us.us = phi i32* [ %rows.sroa.14.1559.us.us.us, %for.cond70.preheader.us.us.us ], [ %rows.sroa.14.4.us.us.us, %if.end97.us.us.us ]
  %rows.sroa.10.2533.us.us.us = phi i32* [ %rows.sroa.10.1558.us.us.us, %for.cond70.preheader.us.us.us ], [ %rows.sroa.10.4.us.us.us, %if.end97.us.us.us ]
  %rows.sroa.0.2529.us.us.us = phi i32* [ %rows.sroa.0.1557.us.us.us, %for.cond70.preheader.us.us.us ], [ %rows.sroa.0.5.us.us.us, %if.end97.us.us.us ]
  %13 = or i32 %12, %ix.0548.us.us.us
  %.not.i.us.us.us = icmp sgt i32 %13, -1
  br i1 %.not.i.us.us.us, label %if.end.i.us.us.us, label %_ZN6miniFE6get_idIiEET_iiiiii.exit.us.us.us

if.end.i.us.us.us:                                ; preds = %for.body75.us.us.us
  %cmp4.not.i.us.us.us = icmp sle i32 %ix.0548.us.us.us, %0
  %or.cond.i.us.us.us = and i1 %cmp6.not.i.us.us.us, %cmp4.not.i.us.us.us
  %or.cond14.i.us.us.us = and i1 %cmp8.not.i.us.us, %or.cond.i.us.us.us
  %add13.i.us.us.us = add i32 %ix.0548.us.us.us, %reass.mul.i.us.us.us
  %spec.select = select i1 %or.cond14.i.us.us.us, i32 %add13.i.us.us.us, i32 -1
  br label %_ZN6miniFE6get_idIiEET_iiiiii.exit.us.us.us

_ZN6miniFE6get_idIiEET_iiiiii.exit.us.us.us:      ; preds = %if.end.i.us.us.us, %for.body75.us.us.us
  %retval.0.i.us.us.us = phi i32 [ -1, %for.body75.us.us.us ], [ %spec.select, %if.end.i.us.us.us ]
  %retval.0.i.us.us.us.frozen = freeze i32 %retval.0.i.us.us.us
  %mul.i.frozen = freeze i32 %mul.i
  %div.i.us.us.us = sdiv i32 %retval.0.i.us.us.us.frozen, %mul.i.frozen
  %conv.i.us.us.us = sitofp i32 %div.i.us.us.us to double
  %div15.i.us.us.us = fdiv contract double %conv.i.us.us.us, %conv14.i
  %14 = mul i32 %div.i.us.us.us, %mul.i.frozen
  %rem.i.us.us.us.decomposed = sub i32 %retval.0.i.us.us.us.frozen, %14
  %div17.i.us.us.us = sdiv i32 %rem.i.us.us.us.decomposed, %add
  %conv18.i.us.us.us = sitofp i32 %div17.i.us.us.us to double
  %div21.i.us.us.us = fdiv contract double %conv18.i.us.us.us, %conv20.i
  %rem22.i.us.us.us = srem i32 %retval.0.i.us.us.us, %add
  %conv23.i.us.us.us = sitofp i32 %rem22.i.us.us.us to double
  %div26.i.us.us.us = fdiv contract double %conv23.i.us.us.us, %conv25.i
  br i1 %verify_whole_domain, label %if.then93.us.us.us, label %if.else.us.us.us

if.else.us.us.us:                                 ; preds = %_ZN6miniFE6get_idIiEET_iiiiii.exit.us.us.us
  %sub.us.us.us = fadd contract double %div26.i.us.us.us, -5.000000e-01
  %15 = tail call contract double @llvm.fabs.f64(double %sub.us.us.us) #8
  %cmp80.us.us.us = fcmp contract olt double %15, 5.000000e-02
  br i1 %cmp80.us.us.us, label %land.lhs.true81.us.us.us, label %if.end97.us.us.us

land.lhs.true81.us.us.us:                         ; preds = %if.else.us.us.us
  %sub82.us.us.us = fadd contract double %div21.i.us.us.us, -5.000000e-01
  %16 = tail call contract double @llvm.fabs.f64(double %sub82.us.us.us) #8
  %cmp84.us.us.us = fcmp contract olt double %16, 5.000000e-02
  br i1 %cmp84.us.us.us, label %land.lhs.true85.us.us.us, label %if.end97.us.us.us

land.lhs.true85.us.us.us:                         ; preds = %land.lhs.true81.us.us.us
  %sub86.us.us.us = fadd contract double %div15.i.us.us.us, -5.000000e-01
  %17 = tail call contract double @llvm.fabs.f64(double %sub86.us.us.us) #8
  %cmp88.us.us.us = fcmp contract olt double %17, 5.000000e-02
  br i1 %cmp88.us.us.us, label %if.then93.us.us.us, label %if.end97.us.us.us

if.then93.us.us.us:                               ; preds = %land.lhs.true85.us.us.us, %_ZN6miniFE6get_idIiEET_iiiiii.exit.us.us.us
  %cmp.not.i.us.us.us = icmp eq i32* %rows.sroa.10.2533.us.us.us, %rows.sroa.14.2534.us.us.us
  br i1 %cmp.not.i.us.us.us, label %if.else.i.us.us.us, label %if.then.i.us.us.us

if.then.i.us.us.us:                               ; preds = %if.then93.us.us.us
  store i32 %roffset.2545.us.us.us, i32* %rows.sroa.10.2533.us.us.us, align 4, !tbaa !16
  br label %invoke.cont.us.us.us

if.else.i.us.us.us:                               ; preds = %if.then93.us.us.us
  %coerce.val.pi.i.i.us.us.us = ptrtoint i32* %rows.sroa.14.2534.us.us.us to i64
  %sub.ptr.rhs.cast.i.i.i.i.us.us.us = ptrtoint i32* %rows.sroa.0.2529.us.us.us to i64
  %sub.ptr.sub.i.i.i.i.us.us.us = sub i64 %coerce.val.pi.i.i.us.us.us, %sub.ptr.rhs.cast.i.i.i.i.us.us.us
  %sub.ptr.div.i.i.i.i.us.us.us = ashr exact i64 %sub.ptr.sub.i.i.i.i.us.us.us, 2
  %cmp.i.i.i.i.us.us.us = icmp eq i64 %sub.ptr.sub.i.i.i.i.us.us.us, 0
  %.sroa.speculated.i.i.i.us.us.us = select i1 %cmp.i.i.i.i.us.us.us, i64 1, i64 %sub.ptr.div.i.i.i.i.us.us.us
  %add.i.i.i.us.us.us = add nsw i64 %.sroa.speculated.i.i.i.us.us.us, %sub.ptr.div.i.i.i.i.us.us.us
  %cmp7.i.i.i.us.us.us = icmp ult i64 %add.i.i.i.us.us.us, %sub.ptr.div.i.i.i.i.us.us.us
  %cmp9.i.i.i.us.us.us = icmp ugt i64 %add.i.i.i.us.us.us, 4611686018427387903
  %or.cond.i.i.i.us.us.us = or i1 %cmp7.i.i.i.us.us.us, %cmp9.i.i.i.us.us.us
  %cond.i.i.i.us.us.us = select i1 %or.cond.i.i.i.us.us.us, i64 4611686018427387903, i64 %add.i.i.i.us.us.us
  %cmp.not.i.i.i.us.us.us = icmp eq i64 %cond.i.i.i.us.us.us, 0
  br i1 %cmp.not.i.i.i.us.us.us, label %invoke.cont.i.i.us.us.us, label %_ZNSt16allocator_traitsISaIiEE8allocateERS0_m.exit.i.i.i.us.us.us

_ZNSt16allocator_traitsISaIiEE8allocateERS0_m.exit.i.i.i.us.us.us: ; preds = %if.else.i.us.us.us
  %mul.i.i.i.i.i.us.us.us = shl nuw i64 %cond.i.i.i.us.us.us, 2
  %call2.i.i.i.i.i120.us.us.us = invoke noalias noundef nonnull i8* @_Znwm(i64 noundef %mul.i.i.i.i.i.us.us.us) #30
          to label %call2.i.i.i.i.i.noexc.us.us.us unwind label %lpad.split.us.split.us.split.us

call2.i.i.i.i.i.noexc.us.us.us:                   ; preds = %_ZNSt16allocator_traitsISaIiEE8allocateERS0_m.exit.i.i.i.us.us.us
  %18 = bitcast i8* %call2.i.i.i.i.i120.us.us.us to i32*
  br label %invoke.cont.i.i.us.us.us

invoke.cont.i.i.us.us.us:                         ; preds = %call2.i.i.i.i.i.noexc.us.us.us, %if.else.i.us.us.us
  %cond.i31.i.i.us.us.us = phi i32* [ %18, %call2.i.i.i.i.i.noexc.us.us.us ], [ null, %if.else.i.us.us.us ]
  %add.ptr.i.i.us.us.us = getelementptr inbounds i32, i32* %cond.i31.i.i.us.us.us, i64 %sub.ptr.div.i.i.i.i.us.us.us
  store i32 %roffset.2545.us.us.us, i32* %add.ptr.i.i.us.us.us, align 4, !tbaa !16
  br i1 %cmp.i.i.i.i.us.us.us, label %invoke.cont16.i.i.us.us.us, label %if.then.i.i.i.i.i.i.i.i.i.i.us.us.us

if.then.i.i.i.i.i.i.i.i.i.i.us.us.us:             ; preds = %invoke.cont.i.i.us.us.us
  %19 = bitcast i32* %cond.i31.i.i.us.us.us to i8*
  %20 = bitcast i32* %rows.sroa.0.2529.us.us.us to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %19, i8* align 4 %20, i64 %sub.ptr.sub.i.i.i.i.us.us.us, i1 false) #8
  br label %invoke.cont16.i.i.us.us.us

invoke.cont16.i.i.us.us.us:                       ; preds = %if.then.i.i.i.i.i.i.i.i.i.i.us.us.us, %invoke.cont.i.i.us.us.us
  %tobool.not.i.i.i.us.us.us = icmp eq i32* %rows.sroa.0.2529.us.us.us, null
  br i1 %tobool.not.i.i.i.us.us.us, label %_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_.exit.i.us.us.us, label %if.then.i41.i.i.us.us.us

if.then.i41.i.i.us.us.us:                         ; preds = %invoke.cont16.i.i.us.us.us
  %21 = bitcast i32* %rows.sroa.0.2529.us.us.us to i8*
  tail call void @_ZdlPv(i8* noundef nonnull %21) #8
  br label %_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_.exit.i.us.us.us

_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_.exit.i.us.us.us: ; preds = %if.then.i41.i.i.us.us.us, %invoke.cont16.i.i.us.us.us
  %add.ptr32.i.i.us.us.us = getelementptr inbounds i32, i32* %cond.i31.i.i.us.us.us, i64 %cond.i.i.i.us.us.us
  br label %invoke.cont.us.us.us

invoke.cont.us.us.us:                             ; preds = %_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_.exit.i.us.us.us, %if.then.i.us.us.us
  %rows.sroa.0.3.us.us.us = phi i32* [ %cond.i31.i.i.us.us.us, %_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_.exit.i.us.us.us ], [ %rows.sroa.0.2529.us.us.us, %if.then.i.us.us.us ]
  %add.ptr.i.i.pn.us.us.us = phi i32* [ %add.ptr.i.i.us.us.us, %_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_.exit.i.us.us.us ], [ %rows.sroa.10.2533.us.us.us, %if.then.i.us.us.us ]
  %rows.sroa.14.3.us.us.us = phi i32* [ %add.ptr32.i.i.us.us.us, %_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_.exit.i.us.us.us ], [ %rows.sroa.14.2534.us.us.us, %if.then.i.us.us.us ]
  %rows.sroa.10.3.us.us.us = getelementptr inbounds i32, i32* %add.ptr.i.i.pn.us.us.us, i64 1
  %cmp.not.i123.us.us.us = icmp eq double* %row_coords.sroa.15.2542.us.us.us, %row_coords.sroa.24.2543.us.us.us
  br i1 %cmp.not.i123.us.us.us, label %if.else.i139.us.us.us, label %if.then.i125.us.us.us

if.then.i125.us.us.us:                            ; preds = %invoke.cont.us.us.us
  store double %div26.i.us.us.us, double* %row_coords.sroa.15.2542.us.us.us, align 8, !tbaa !84
  br label %invoke.cont94.us.us.us

if.else.i139.us.us.us:                            ; preds = %invoke.cont.us.us.us
  %coerce.val.pi.i.i126.us.us.us = ptrtoint double* %row_coords.sroa.24.2543.us.us.us to i64
  %sub.ptr.rhs.cast.i.i.i.i128.us.us.us = ptrtoint double* %row_coords.sroa.0.2536.us.us.us to i64
  %sub.ptr.sub.i.i.i.i129.us.us.us = sub i64 %coerce.val.pi.i.i126.us.us.us, %sub.ptr.rhs.cast.i.i.i.i128.us.us.us
  %sub.ptr.div.i.i.i.i130.us.us.us = ashr exact i64 %sub.ptr.sub.i.i.i.i129.us.us.us, 3
  %cmp.i.i.i.i131.us.us.us = icmp eq i64 %sub.ptr.sub.i.i.i.i129.us.us.us, 0
  %.sroa.speculated.i.i.i132.us.us.us = select i1 %cmp.i.i.i.i131.us.us.us, i64 1, i64 %sub.ptr.div.i.i.i.i130.us.us.us
  %add.i.i.i133.us.us.us = add nsw i64 %.sroa.speculated.i.i.i132.us.us.us, %sub.ptr.div.i.i.i.i130.us.us.us
  %cmp7.i.i.i134.us.us.us = icmp ult i64 %add.i.i.i133.us.us.us, %sub.ptr.div.i.i.i.i130.us.us.us
  %cmp9.i.i.i135.us.us.us = icmp ugt i64 %add.i.i.i133.us.us.us, 2305843009213693951
  %or.cond.i.i.i136.us.us.us = or i1 %cmp7.i.i.i134.us.us.us, %cmp9.i.i.i135.us.us.us
  %cond.i.i.i137.us.us.us = select i1 %or.cond.i.i.i136.us.us.us, i64 2305843009213693951, i64 %add.i.i.i133.us.us.us
  %cmp.not.i.i.i138.us.us.us = icmp eq i64 %cond.i.i.i137.us.us.us, 0
  br i1 %cmp.not.i.i.i138.us.us.us, label %invoke.cont.i.i143.us.us.us, label %_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i.i.i.us.us.us

_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i.i.i.us.us.us: ; preds = %if.else.i139.us.us.us
  %mul.i.i.i.i.i140.us.us.us = shl nuw i64 %cond.i.i.i137.us.us.us, 3
  %call2.i.i.i.i.i152.us.us.us = invoke noalias noundef nonnull i8* @_Znwm(i64 noundef %mul.i.i.i.i.i140.us.us.us) #30
          to label %call2.i.i.i.i.i.noexc151.us.us.us unwind label %lpad.split.us.split.us.split.us

call2.i.i.i.i.i.noexc151.us.us.us:                ; preds = %_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i.i.i.us.us.us
  %22 = bitcast i8* %call2.i.i.i.i.i152.us.us.us to double*
  br label %invoke.cont.i.i143.us.us.us

invoke.cont.i.i143.us.us.us:                      ; preds = %call2.i.i.i.i.i.noexc151.us.us.us, %if.else.i139.us.us.us
  %cond.i31.i.i141.us.us.us = phi double* [ %22, %call2.i.i.i.i.i.noexc151.us.us.us ], [ null, %if.else.i139.us.us.us ]
  %add.ptr.i.i142.us.us.us = getelementptr inbounds double, double* %cond.i31.i.i141.us.us.us, i64 %sub.ptr.div.i.i.i.i130.us.us.us
  store double %div26.i.us.us.us, double* %add.ptr.i.i142.us.us.us, align 8, !tbaa !84
  br i1 %cmp.i.i.i.i131.us.us.us, label %invoke.cont16.i.i147.us.us.us, label %if.then.i.i.i.i.i.i.i.i.i.i144.us.us.us

if.then.i.i.i.i.i.i.i.i.i.i144.us.us.us:          ; preds = %invoke.cont.i.i143.us.us.us
  %23 = bitcast double* %cond.i31.i.i141.us.us.us to i8*
  %24 = bitcast double* %row_coords.sroa.0.2536.us.us.us to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 %sub.ptr.sub.i.i.i.i129.us.us.us, i1 false) #8
  br label %invoke.cont16.i.i147.us.us.us

invoke.cont16.i.i147.us.us.us:                    ; preds = %if.then.i.i.i.i.i.i.i.i.i.i144.us.us.us, %invoke.cont.i.i143.us.us.us
  %tobool.not.i.i.i146.us.us.us = icmp eq double* %row_coords.sroa.0.2536.us.us.us, null
  br i1 %tobool.not.i.i.i146.us.us.us, label %_ZNSt6vectorIdSaIdEE17_M_realloc_insertIJRKdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_.exit.i.us.us.us, label %if.then.i41.i.i148.us.us.us

if.then.i41.i.i148.us.us.us:                      ; preds = %invoke.cont16.i.i147.us.us.us
  %25 = bitcast double* %row_coords.sroa.0.2536.us.us.us to i8*
  tail call void @_ZdlPv(i8* noundef nonnull %25) #8
  br label %_ZNSt6vectorIdSaIdEE17_M_realloc_insertIJRKdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_.exit.i.us.us.us

_ZNSt6vectorIdSaIdEE17_M_realloc_insertIJRKdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_.exit.i.us.us.us: ; preds = %if.then.i41.i.i148.us.us.us, %invoke.cont16.i.i147.us.us.us
  %add.ptr32.i.i149.us.us.us = getelementptr inbounds double, double* %cond.i31.i.i141.us.us.us, i64 %cond.i.i.i137.us.us.us
  br label %invoke.cont94.us.us.us

invoke.cont94.us.us.us:                           ; preds = %_ZNSt6vectorIdSaIdEE17_M_realloc_insertIJRKdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_.exit.i.us.us.us, %if.then.i125.us.us.us
  %row_coords.sroa.0.3.us.us.us = phi double* [ %cond.i31.i.i141.us.us.us, %_ZNSt6vectorIdSaIdEE17_M_realloc_insertIJRKdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_.exit.i.us.us.us ], [ %row_coords.sroa.0.2536.us.us.us, %if.then.i125.us.us.us ]
  %add.ptr.i.i142.pn.us.us.us = phi double* [ %add.ptr.i.i142.us.us.us, %_ZNSt6vectorIdSaIdEE17_M_realloc_insertIJRKdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_.exit.i.us.us.us ], [ %row_coords.sroa.15.2542.us.us.us, %if.then.i125.us.us.us ]
  %row_coords.sroa.24.3.us.us.us = phi double* [ %add.ptr32.i.i149.us.us.us, %_ZNSt6vectorIdSaIdEE17_M_realloc_insertIJRKdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_.exit.i.us.us.us ], [ %row_coords.sroa.24.2543.us.us.us, %if.then.i125.us.us.us ]
  %row_coords.sroa.15.3.us.us.us = getelementptr inbounds double, double* %add.ptr.i.i142.pn.us.us.us, i64 1
  %cmp.not.i155.us.us.us = icmp eq double* %row_coords.sroa.15.3.us.us.us, %row_coords.sroa.24.3.us.us.us
  br i1 %cmp.not.i155.us.us.us, label %if.else.i171.us.us.us, label %if.then.i157.us.us.us

if.then.i157.us.us.us:                            ; preds = %invoke.cont94.us.us.us
  store double %div21.i.us.us.us, double* %row_coords.sroa.15.3.us.us.us, align 8, !tbaa !84
  %incdec.ptr.i156.us.us.us = getelementptr inbounds double, double* %add.ptr.i.i142.pn.us.us.us, i64 2
  br label %invoke.cont95.us.us.us

if.else.i171.us.us.us:                            ; preds = %invoke.cont94.us.us.us
  %coerce.val.pi.i.i158.us.us.us = ptrtoint double* %row_coords.sroa.24.3.us.us.us to i64
  %sub.ptr.rhs.cast.i.i.i.i160.us.us.us = ptrtoint double* %row_coords.sroa.0.3.us.us.us to i64
  %sub.ptr.sub.i.i.i.i161.us.us.us = sub i64 %coerce.val.pi.i.i158.us.us.us, %sub.ptr.rhs.cast.i.i.i.i160.us.us.us
  %sub.ptr.div.i.i.i.i162.us.us.us = ashr exact i64 %sub.ptr.sub.i.i.i.i161.us.us.us, 3
  %cmp.i.i.i.i163.us.us.us = icmp eq i64 %sub.ptr.sub.i.i.i.i161.us.us.us, 0
  %.sroa.speculated.i.i.i164.us.us.us = select i1 %cmp.i.i.i.i163.us.us.us, i64 1, i64 %sub.ptr.div.i.i.i.i162.us.us.us
  %add.i.i.i165.us.us.us = add nsw i64 %.sroa.speculated.i.i.i164.us.us.us, %sub.ptr.div.i.i.i.i162.us.us.us
  %cmp7.i.i.i166.us.us.us = icmp ult i64 %add.i.i.i165.us.us.us, %sub.ptr.div.i.i.i.i162.us.us.us
  %cmp9.i.i.i167.us.us.us = icmp ugt i64 %add.i.i.i165.us.us.us, 2305843009213693951
  %or.cond.i.i.i168.us.us.us = or i1 %cmp7.i.i.i166.us.us.us, %cmp9.i.i.i167.us.us.us
  %cond.i.i.i169.us.us.us = select i1 %or.cond.i.i.i168.us.us.us, i64 2305843009213693951, i64 %add.i.i.i165.us.us.us
  %cmp.not.i.i.i170.us.us.us = icmp eq i64 %cond.i.i.i169.us.us.us, 0
  br i1 %cmp.not.i.i.i170.us.us.us, label %invoke.cont.i.i176.us.us.us, label %_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i.i.i173.us.us.us

_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i.i.i173.us.us.us: ; preds = %if.else.i171.us.us.us
  %mul.i.i.i.i.i172.us.us.us = shl nuw i64 %cond.i.i.i169.us.us.us, 3
  %call2.i.i.i.i.i186.us.us.us = invoke noalias noundef nonnull i8* @_Znwm(i64 noundef %mul.i.i.i.i.i172.us.us.us) #30
          to label %call2.i.i.i.i.i.noexc185.us.us.us unwind label %lpad.split.us.split.us.split.us

call2.i.i.i.i.i.noexc185.us.us.us:                ; preds = %_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i.i.i173.us.us.us
  %26 = bitcast i8* %call2.i.i.i.i.i186.us.us.us to double*
  br label %invoke.cont.i.i176.us.us.us

invoke.cont.i.i176.us.us.us:                      ; preds = %call2.i.i.i.i.i.noexc185.us.us.us, %if.else.i171.us.us.us
  %cond.i31.i.i174.us.us.us = phi double* [ %26, %call2.i.i.i.i.i.noexc185.us.us.us ], [ null, %if.else.i171.us.us.us ]
  %add.ptr.i.i175.us.us.us = getelementptr inbounds double, double* %cond.i31.i.i174.us.us.us, i64 %sub.ptr.div.i.i.i.i162.us.us.us
  store double %div21.i.us.us.us, double* %add.ptr.i.i175.us.us.us, align 8, !tbaa !84
  br i1 %cmp.i.i.i.i163.us.us.us, label %invoke.cont16.i.i180.us.us.us, label %if.then.i.i.i.i.i.i.i.i.i.i177.us.us.us

if.then.i.i.i.i.i.i.i.i.i.i177.us.us.us:          ; preds = %invoke.cont.i.i176.us.us.us
  %27 = bitcast double* %cond.i31.i.i174.us.us.us to i8*
  %28 = bitcast double* %row_coords.sroa.0.3.us.us.us to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 %sub.ptr.sub.i.i.i.i161.us.us.us, i1 false) #8
  br label %invoke.cont16.i.i180.us.us.us

invoke.cont16.i.i180.us.us.us:                    ; preds = %if.then.i.i.i.i.i.i.i.i.i.i177.us.us.us, %invoke.cont.i.i176.us.us.us
  %incdec.ptr.i.i178.us.us.us = getelementptr inbounds double, double* %add.ptr.i.i175.us.us.us, i64 1
  %tobool.not.i.i.i179.us.us.us = icmp eq double* %row_coords.sroa.0.3.us.us.us, null
  br i1 %tobool.not.i.i.i179.us.us.us, label %_ZNSt6vectorIdSaIdEE17_M_realloc_insertIJRKdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_.exit.i183.us.us.us, label %if.then.i41.i.i181.us.us.us

if.then.i41.i.i181.us.us.us:                      ; preds = %invoke.cont16.i.i180.us.us.us
  %29 = bitcast double* %row_coords.sroa.0.3.us.us.us to i8*
  tail call void @_ZdlPv(i8* noundef nonnull %29) #8
  br label %_ZNSt6vectorIdSaIdEE17_M_realloc_insertIJRKdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_.exit.i183.us.us.us

_ZNSt6vectorIdSaIdEE17_M_realloc_insertIJRKdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_.exit.i183.us.us.us: ; preds = %if.then.i41.i.i181.us.us.us, %invoke.cont16.i.i180.us.us.us
  %add.ptr32.i.i182.us.us.us = getelementptr inbounds double, double* %cond.i31.i.i174.us.us.us, i64 %cond.i.i.i169.us.us.us
  br label %invoke.cont95.us.us.us

invoke.cont95.us.us.us:                           ; preds = %_ZNSt6vectorIdSaIdEE17_M_realloc_insertIJRKdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_.exit.i183.us.us.us, %if.then.i157.us.us.us
  %row_coords.sroa.0.4.us.us.us = phi double* [ %cond.i31.i.i174.us.us.us, %_ZNSt6vectorIdSaIdEE17_M_realloc_insertIJRKdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_.exit.i183.us.us.us ], [ %row_coords.sroa.0.3.us.us.us, %if.then.i157.us.us.us ]
  %row_coords.sroa.15.4.us.us.us = phi double* [ %incdec.ptr.i.i178.us.us.us, %_ZNSt6vectorIdSaIdEE17_M_realloc_insertIJRKdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_.exit.i183.us.us.us ], [ %incdec.ptr.i156.us.us.us, %if.then.i157.us.us.us ]
  %row_coords.sroa.24.4.us.us.us = phi double* [ %add.ptr32.i.i182.us.us.us, %_ZNSt6vectorIdSaIdEE17_M_realloc_insertIJRKdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_.exit.i183.us.us.us ], [ %row_coords.sroa.24.3.us.us.us, %if.then.i157.us.us.us ]
  %cmp.not.i190.us.us.us = icmp eq double* %row_coords.sroa.15.4.us.us.us, %row_coords.sroa.24.4.us.us.us
  br i1 %cmp.not.i190.us.us.us, label %if.else.i206.us.us.us, label %if.then.i192.us.us.us

if.then.i192.us.us.us:                            ; preds = %invoke.cont95.us.us.us
  store double %div15.i.us.us.us, double* %row_coords.sroa.15.4.us.us.us, align 8, !tbaa !84
  %incdec.ptr.i191.us.us.us = getelementptr inbounds double, double* %row_coords.sroa.15.4.us.us.us, i64 1
  br label %if.end97.us.us.us

if.else.i206.us.us.us:                            ; preds = %invoke.cont95.us.us.us
  %coerce.val.pi.i.i193.us.us.us = ptrtoint double* %row_coords.sroa.15.4.us.us.us to i64
  %sub.ptr.rhs.cast.i.i.i.i195.us.us.us = ptrtoint double* %row_coords.sroa.0.4.us.us.us to i64
  %sub.ptr.sub.i.i.i.i196.us.us.us = sub i64 %coerce.val.pi.i.i193.us.us.us, %sub.ptr.rhs.cast.i.i.i.i195.us.us.us
  %sub.ptr.div.i.i.i.i197.us.us.us = ashr exact i64 %sub.ptr.sub.i.i.i.i196.us.us.us, 3
  %cmp.i.i.i.i198.us.us.us = icmp eq i64 %sub.ptr.sub.i.i.i.i196.us.us.us, 0
  %.sroa.speculated.i.i.i199.us.us.us = select i1 %cmp.i.i.i.i198.us.us.us, i64 1, i64 %sub.ptr.div.i.i.i.i197.us.us.us
  %add.i.i.i200.us.us.us = add nsw i64 %.sroa.speculated.i.i.i199.us.us.us, %sub.ptr.div.i.i.i.i197.us.us.us
  %cmp7.i.i.i201.us.us.us = icmp ult i64 %add.i.i.i200.us.us.us, %sub.ptr.div.i.i.i.i197.us.us.us
  %cmp9.i.i.i202.us.us.us = icmp ugt i64 %add.i.i.i200.us.us.us, 2305843009213693951
  %or.cond.i.i.i203.us.us.us = or i1 %cmp7.i.i.i201.us.us.us, %cmp9.i.i.i202.us.us.us
  %cond.i.i.i204.us.us.us = select i1 %or.cond.i.i.i203.us.us.us, i64 2305843009213693951, i64 %add.i.i.i200.us.us.us
  %cmp.not.i.i.i205.us.us.us = icmp eq i64 %cond.i.i.i204.us.us.us, 0
  br i1 %cmp.not.i.i.i205.us.us.us, label %invoke.cont.i.i211.us.us.us, label %_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i.i.i208.us.us.us

_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i.i.i208.us.us.us: ; preds = %if.else.i206.us.us.us
  %mul.i.i.i.i.i207.us.us.us = shl nuw i64 %cond.i.i.i204.us.us.us, 3
  %call2.i.i.i.i.i221.us.us.us = invoke noalias noundef nonnull i8* @_Znwm(i64 noundef %mul.i.i.i.i.i207.us.us.us) #30
          to label %call2.i.i.i.i.i.noexc220.us.us.us unwind label %lpad.split.us.split.us.split.us

call2.i.i.i.i.i.noexc220.us.us.us:                ; preds = %_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i.i.i208.us.us.us
  %30 = bitcast i8* %call2.i.i.i.i.i221.us.us.us to double*
  br label %invoke.cont.i.i211.us.us.us

invoke.cont.i.i211.us.us.us:                      ; preds = %call2.i.i.i.i.i.noexc220.us.us.us, %if.else.i206.us.us.us
  %cond.i31.i.i209.us.us.us = phi double* [ %30, %call2.i.i.i.i.i.noexc220.us.us.us ], [ null, %if.else.i206.us.us.us ]
  %add.ptr.i.i210.us.us.us = getelementptr inbounds double, double* %cond.i31.i.i209.us.us.us, i64 %sub.ptr.div.i.i.i.i197.us.us.us
  store double %div15.i.us.us.us, double* %add.ptr.i.i210.us.us.us, align 8, !tbaa !84
  br i1 %cmp.i.i.i.i198.us.us.us, label %invoke.cont16.i.i215.us.us.us, label %if.then.i.i.i.i.i.i.i.i.i.i212.us.us.us

if.then.i.i.i.i.i.i.i.i.i.i212.us.us.us:          ; preds = %invoke.cont.i.i211.us.us.us
  %31 = bitcast double* %cond.i31.i.i209.us.us.us to i8*
  %32 = bitcast double* %row_coords.sroa.0.4.us.us.us to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %sub.ptr.sub.i.i.i.i196.us.us.us, i1 false) #8
  br label %invoke.cont16.i.i215.us.us.us

invoke.cont16.i.i215.us.us.us:                    ; preds = %if.then.i.i.i.i.i.i.i.i.i.i212.us.us.us, %invoke.cont.i.i211.us.us.us
  %incdec.ptr.i.i213.us.us.us = getelementptr inbounds double, double* %add.ptr.i.i210.us.us.us, i64 1
  %tobool.not.i.i.i214.us.us.us = icmp eq double* %row_coords.sroa.0.4.us.us.us, null
  br i1 %tobool.not.i.i.i214.us.us.us, label %_ZNSt6vectorIdSaIdEE17_M_realloc_insertIJRKdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_.exit.i218.us.us.us, label %if.then.i41.i.i216.us.us.us

if.then.i41.i.i216.us.us.us:                      ; preds = %invoke.cont16.i.i215.us.us.us
  %33 = bitcast double* %row_coords.sroa.0.4.us.us.us to i8*
  tail call void @_ZdlPv(i8* noundef nonnull %33) #8
  br label %_ZNSt6vectorIdSaIdEE17_M_realloc_insertIJRKdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_.exit.i218.us.us.us

_ZNSt6vectorIdSaIdEE17_M_realloc_insertIJRKdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_.exit.i218.us.us.us: ; preds = %if.then.i41.i.i216.us.us.us, %invoke.cont16.i.i215.us.us.us
  %add.ptr32.i.i217.us.us.us = getelementptr inbounds double, double* %cond.i31.i.i209.us.us.us, i64 %cond.i.i.i204.us.us.us
  br label %if.end97.us.us.us

if.end97.us.us.us:                                ; preds = %_ZNSt6vectorIdSaIdEE17_M_realloc_insertIJRKdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_.exit.i218.us.us.us, %if.then.i192.us.us.us, %land.lhs.true85.us.us.us, %land.lhs.true81.us.us.us, %if.else.us.us.us
  %rows.sroa.0.5.us.us.us = phi i32* [ %rows.sroa.0.2529.us.us.us, %land.lhs.true85.us.us.us ], [ %rows.sroa.0.2529.us.us.us, %land.lhs.true81.us.us.us ], [ %rows.sroa.0.2529.us.us.us, %if.else.us.us.us ], [ %rows.sroa.0.3.us.us.us, %if.then.i192.us.us.us ], [ %rows.sroa.0.3.us.us.us, %_ZNSt6vectorIdSaIdEE17_M_realloc_insertIJRKdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_.exit.i218.us.us.us ]
  %rows.sroa.10.4.us.us.us = phi i32* [ %rows.sroa.10.2533.us.us.us, %land.lhs.true85.us.us.us ], [ %rows.sroa.10.2533.us.us.us, %land.lhs.true81.us.us.us ], [ %rows.sroa.10.2533.us.us.us, %if.else.us.us.us ], [ %rows.sroa.10.3.us.us.us, %if.then.i192.us.us.us ], [ %rows.sroa.10.3.us.us.us, %_ZNSt6vectorIdSaIdEE17_M_realloc_insertIJRKdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_.exit.i218.us.us.us ]
  %rows.sroa.14.4.us.us.us = phi i32* [ %rows.sroa.14.2534.us.us.us, %land.lhs.true85.us.us.us ], [ %rows.sroa.14.2534.us.us.us, %land.lhs.true81.us.us.us ], [ %rows.sroa.14.2534.us.us.us, %if.else.us.us.us ], [ %rows.sroa.14.3.us.us.us, %if.then.i192.us.us.us ], [ %rows.sroa.14.3.us.us.us, %_ZNSt6vectorIdSaIdEE17_M_realloc_insertIJRKdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_.exit.i218.us.us.us ]
  %row_coords.sroa.0.7.us.us.us = phi double* [ %row_coords.sroa.0.2536.us.us.us, %land.lhs.true85.us.us.us ], [ %row_coords.sroa.0.2536.us.us.us, %land.lhs.true81.us.us.us ], [ %row_coords.sroa.0.2536.us.us.us, %if.else.us.us.us ], [ %row_coords.sroa.0.4.us.us.us, %if.then.i192.us.us.us ], [ %cond.i31.i.i209.us.us.us, %_ZNSt6vectorIdSaIdEE17_M_realloc_insertIJRKdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_.exit.i218.us.us.us ]
  %row_coords.sroa.15.6.us.us.us = phi double* [ %row_coords.sroa.15.2542.us.us.us, %land.lhs.true85.us.us.us ], [ %row_coords.sroa.15.2542.us.us.us, %land.lhs.true81.us.us.us ], [ %row_coords.sroa.15.2542.us.us.us, %if.else.us.us.us ], [ %incdec.ptr.i191.us.us.us, %if.then.i192.us.us.us ], [ %incdec.ptr.i.i213.us.us.us, %_ZNSt6vectorIdSaIdEE17_M_realloc_insertIJRKdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_.exit.i218.us.us.us ]
  %row_coords.sroa.24.6.us.us.us = phi double* [ %row_coords.sroa.24.2543.us.us.us, %land.lhs.true85.us.us.us ], [ %row_coords.sroa.24.2543.us.us.us, %land.lhs.true81.us.us.us ], [ %row_coords.sroa.24.2543.us.us.us, %if.else.us.us.us ], [ %row_coords.sroa.24.4.us.us.us, %if.then.i192.us.us.us ], [ %add.ptr32.i.i217.us.us.us, %_ZNSt6vectorIdSaIdEE17_M_realloc_insertIJRKdEEEvN9__gnu_cxx17__normal_iteratorIPdS1_EEDpOT_.exit.i218.us.us.us ]
  %inc98.us.us.us = add nsw i32 %roffset.2545.us.us.us, 1
  %inc99.us.us.us = add i32 %ix.0548.us.us.us, 1
  %exitcond.not = icmp eq i32 %inc99.us.us.us, %box.sroa.6.0
  br i1 %exitcond.not, label %for.cond70.for.cond.cleanup74_crit_edge.us.us.us, label %for.body75.us.us.us, !llvm.loop !155

for.cond70.for.cond.cleanup74_crit_edge.us.us.us: ; preds = %if.end97.us.us.us
  %inc101.us.us.us = add i32 %iy.0564.us.us.us, 1
  %exitcond628.not = icmp eq i32 %inc101.us.us.us, %box.sroa.15.0
  br i1 %exitcond628.not, label %for.cond62.for.cond.cleanup66_crit_edge.split.us.us.us, label %for.cond70.preheader.us.us.us, !llvm.loop !156

for.cond62.for.cond.cleanup66_crit_edge.split.us.us.us: ; preds = %for.cond70.for.cond.cleanup74_crit_edge.us.us.us
  %inc104.us.us = add i32 %iz.0589.us.us, 1
  %exitcond629.not = icmp eq i32 %inc104.us.us, %box.sroa.24.0
  br i1 %exitcond629.not, label %for.cond106.preheader, label %for.cond62.preheader.us.us, !llvm.loop !157

lpad.split.us.split.us.split.us:                  ; preds = %_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i.i.i208.us.us.us, %_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i.i.i173.us.us.us, %_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i.i.i.us.us.us, %_ZNSt16allocator_traitsISaIiEE8allocateERS0_m.exit.i.i.i.us.us.us
  %rows.sroa.0.4.us.us.us = phi i32* [ %rows.sroa.0.3.us.us.us, %_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i.i.i208.us.us.us ], [ %rows.sroa.0.3.us.us.us, %_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i.i.i173.us.us.us ], [ %rows.sroa.0.3.us.us.us, %_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i.i.i.us.us.us ], [ %rows.sroa.0.2529.us.us.us, %_ZNSt16allocator_traitsISaIiEE8allocateERS0_m.exit.i.i.i.us.us.us ]
  %row_coords.sroa.0.6.us.us.us = phi double* [ %row_coords.sroa.0.4.us.us.us, %_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i.i.i208.us.us.us ], [ %row_coords.sroa.0.3.us.us.us, %_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i.i.i173.us.us.us ], [ %row_coords.sroa.0.2536.us.us.us, %_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i.i.i.us.us.us ], [ %row_coords.sroa.0.2536.us.us.us, %_ZNSt16allocator_traitsISaIiEE8allocateERS0_m.exit.i.i.i.us.us.us ]
  %34 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup225

for.cond106.preheader:                            ; preds = %for.cond62.for.cond.cleanup66_crit_edge.split.us.us.us, %entry
  %rows.sroa.0.0.lcssa = phi i32* [ null, %entry ], [ %rows.sroa.0.5.us.us.us, %for.cond62.for.cond.cleanup66_crit_edge.split.us.us.us ]
  %rows.sroa.10.0.lcssa = phi i32* [ null, %entry ], [ %rows.sroa.10.4.us.us.us, %for.cond62.for.cond.cleanup66_crit_edge.split.us.us.us ]
  %row_coords.sroa.0.0.lcssa = phi double* [ null, %entry ], [ %row_coords.sroa.0.7.us.us.us, %for.cond62.for.cond.cleanup66_crit_edge.split.us.us.us ]
  %sub.ptr.lhs.cast.i = ptrtoint i32* %rows.sroa.10.0.lcssa to i64
  %sub.ptr.rhs.cast.i = ptrtoint i32* %rows.sroa.0.0.lcssa to i64
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %_M_start.i225 = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %x, i64 0, i32 2, i32 0, i32 0, i32 0
  %cmp108612.not = icmp eq i64 %sub.ptr.sub.i, 0
  br i1 %cmp108612.not, label %if.then161, label %for.body110.preheader

for.body110.preheader:                            ; preds = %for.cond106.preheader
  %sub.ptr.div.i = ashr i64 %sub.ptr.sub.i, 2
  %umax = call i64 @llvm.umax.i64(i64 %sub.ptr.div.i, i64 1)
  br label %for.body110

for.cond.cleanup109:                              ; preds = %if.end155
  %cmp160 = fcmp contract ord double %max_error.sroa.0.1, 0.000000e+00
  br i1 %cmp160, label %if.then161, label %if.end219

for.body110:                                      ; preds = %for.body110.preheader, %if.end155
  %i.0619 = phi i64 [ %inc157, %if.end155 ], [ 0, %for.body110.preheader ]
  %max_error.sroa.0.0618 = phi double [ %max_error.sroa.0.1, %if.end155 ], [ 0.000000e+00, %for.body110.preheader ]
  %max_error.sroa.9.0617 = phi double [ %max_error.sroa.9.1, %if.end155 ], [ undef, %for.body110.preheader ]
  %max_error.sroa.11.0616 = phi double [ %max_error.sroa.11.1, %if.end155 ], [ undef, %for.body110.preheader ]
  %max_error.sroa.13.0615 = phi double [ %max_error.sroa.13.1, %if.end155 ], [ undef, %for.body110.preheader ]
  %max_error.sroa.15.0614 = phi double [ %max_error.sroa.15.1, %if.end155 ], [ undef, %for.body110.preheader ]
  %max_error.sroa.17.0613 = phi double [ %max_error.sroa.17.1, %if.end155 ], [ undef, %for.body110.preheader ]
  %add.ptr.i = getelementptr inbounds i32, i32* %rows.sroa.0.0.lcssa, i64 %i.0619
  %35 = load i32, i32* %add.ptr.i, align 4, !tbaa !16
  %conv = sext i32 %35 to i64
  %36 = load double*, double** %_M_start.i225, align 8, !tbaa !78
  %add.ptr.i226 = getelementptr inbounds double, double* %36, i64 %conv
  %37 = load double, double* %add.ptr.i226, align 8, !tbaa !84
  %mul = mul i64 %i.0619, 3
  %add.ptr.i228 = getelementptr inbounds double, double* %row_coords.sroa.0.0.lcssa, i64 %mul
  %38 = load double, double* %add.ptr.i228, align 8, !tbaa !84
  %add117 = add i64 %mul, 1
  %add.ptr.i230 = getelementptr inbounds double, double* %row_coords.sroa.0.0.lcssa, i64 %add117
  %39 = load double, double* %add.ptr.i230, align 8, !tbaa !84
  %add121 = add i64 %mul, 2
  %add.ptr.i232 = getelementptr inbounds double, double* %row_coords.sroa.0.0.lcssa, i64 %add121
  %40 = load double, double* %add.ptr.i232, align 8, !tbaa !84
  %cmp123 = fcmp contract oeq double %38, 1.000000e+00
  br i1 %cmp123, label %if.end142, label %if.else125

if.else125:                                       ; preds = %for.body110
  %cmp126 = fcmp contract oeq double %38, 0.000000e+00
  %cmp127 = fcmp contract oeq double %39, 0.000000e+00
  %or.cond = select i1 %cmp126, i1 true, i1 %cmp127
  %cmp129 = fcmp contract oeq double %40, 0.000000e+00
  %or.cond1 = select i1 %or.cond, i1 true, i1 %cmp129
  br i1 %or.cond1, label %if.end142, label %if.else131

if.else131:                                       ; preds = %if.else125
  %cmp132 = fcmp contract oeq double %39, 1.000000e+00
  %cmp134 = fcmp contract oeq double %40, 1.000000e+00
  %or.cond2 = select i1 %cmp132, i1 true, i1 %cmp134
  br i1 %or.cond2, label %if.end142, label %for.body.i

for.body.i:                                       ; preds = %if.else131, %cleanup26.i
  %sum.038.i = phi double [ %sum.1.lcssa.i, %cleanup26.i ], [ 0.000000e+00, %if.else131 ]
  %p.037.i = phi i32 [ %inc28.i, %cleanup26.i ], [ 0, %if.else131 ]
  %mul.i.i = shl nuw nsw i32 %p.037.i, 1
  %add.i.i = or i32 %mul.i.i, 1
  %conv.i.i = sitofp i32 %add.i.i to double
  %mul1.i.i = fmul contract double %conv.i.i, 0x400921FB54442D18
  %mul2.i.i = fmul contract double %39, %mul1.i.i
  %call1.i = tail call contract double @sin(double noundef %mul2.i.i) #8
  %div.i233 = fdiv contract double %call1.i, %conv.i.i
  %mul3.i.i = mul nsw i32 %add.i.i, %add.i.i
  %conv.i31.i = sitofp i32 %mul3.i.i to double
  %mul4.i.i = fmul contract double %conv.i31.i, 0x4023BD3CC9BE45DE
  br label %for.body5.i

for.body5.i:                                      ; preds = %for.inc.i, %for.body.i
  %sum.134.i = phi double [ %sum.038.i, %for.body.i ], [ %add20.i, %for.inc.i ]
  %q.033.i = phi i32 [ 0, %for.body.i ], [ %inc.i, %for.inc.i ]
  %mul.i24.i = shl nuw nsw i32 %q.033.i, 1
  %add.i25.i = or i32 %mul.i24.i, 1
  %conv.i26.i = sitofp i32 %add.i25.i to double
  %mul1.i27.i = fmul contract double %conv.i26.i, 0x400921FB54442D18
  %mul2.i28.i = fmul contract double %40, %mul1.i27.i
  %call7.i = tail call contract double @sin(double noundef %mul2.i28.i) #8
  %div11.i = fdiv contract double %call7.i, %conv.i26.i
  %mul9.i.i = mul nsw i32 %add.i25.i, %add.i25.i
  %conv10.i.i = sitofp i32 %mul9.i.i to double
  %mul11.i.i = fmul contract double %conv10.i.i, 0x4023BD3CC9BE45DE
  %add12.i.i = fadd contract double %mul4.i.i, %mul11.i.i
  %call.i.i = tail call contract double @sqrt(double noundef %add12.i.i) #8
  %mul13.i = fmul contract double %38, %call.i.i
  %call14.i = tail call contract double @sinh(double noundef %mul13.i) #8
  %call15.i = tail call contract double @sinh(double noundef %call.i.i) #8
  %mul16.i = fmul contract double %div.i233, %call14.i
  %div17.i234 = fdiv contract double %div11.i, %call15.i
  %mul18.i = fmul contract double %mul16.i, %div17.i234
  %cmp19.i = fcmp contract ord double %mul18.i, 0.000000e+00
  br i1 %cmp19.i, label %for.inc.i, label %cleanup26.i

for.inc.i:                                        ; preds = %for.body5.i
  %add20.i = fadd contract double %sum.134.i, %mul18.i
  %inc.i = add nuw nsw i32 %q.033.i, 1
  %exitcond.not.i = icmp eq i32 %q.033.i, 300
  br i1 %exitcond.not.i, label %cleanup26.i, label %for.body5.i, !llvm.loop !158

cleanup26.i:                                      ; preds = %for.inc.i, %for.body5.i
  %sum.1.lcssa.i = phi double [ %add20.i, %for.inc.i ], [ %sum.134.i, %for.body5.i ]
  %inc28.i = add nuw nsw i32 %p.037.i, 1
  %exitcond41.not.i = icmp eq i32 %p.037.i, 300
  br i1 %exitcond41.not.i, label %_ZN6miniFE4solnEdddii.exit, label %for.body.i, !llvm.loop !159

_ZN6miniFE4solnEdddii.exit:                       ; preds = %cleanup26.i
  %mul31.i = fmul contract double %sum.1.lcssa.i, 0x3FF9F02F6222C720
  br label %if.end142

if.end142:                                        ; preds = %_ZN6miniFE4solnEdddii.exit, %if.else131, %if.else125, %for.body110
  %analytic_soln.0 = phi double [ 1.000000e+00, %for.body110 ], [ 0.000000e+00, %if.else125 ], [ 0.000000e+00, %if.else131 ], [ %mul31.i, %_ZN6miniFE4solnEdddii.exit ]
  %sub144 = fsub contract double %analytic_soln.0, %37
  %41 = tail call contract double @llvm.fabs.f64(double %sub144) #8
  %cmp147 = fcmp contract ogt double %41, %max_error.sroa.0.0618
  br i1 %cmp147, label %if.then148, label %if.end155

if.then148:                                       ; preds = %if.end142
  br label %if.end155

if.end155:                                        ; preds = %if.then148, %if.end142
  %max_error.sroa.17.1 = phi double [ %40, %if.then148 ], [ %max_error.sroa.17.0613, %if.end142 ]
  %max_error.sroa.15.1 = phi double [ %39, %if.then148 ], [ %max_error.sroa.15.0614, %if.end142 ]
  %max_error.sroa.13.1 = phi double [ %38, %if.then148 ], [ %max_error.sroa.13.0615, %if.end142 ]
  %max_error.sroa.11.1 = phi double [ %analytic_soln.0, %if.then148 ], [ %max_error.sroa.11.0616, %if.end142 ]
  %max_error.sroa.9.1 = phi double [ %37, %if.then148 ], [ %max_error.sroa.9.0617, %if.end142 ]
  %max_error.sroa.0.1 = phi double [ %41, %if.then148 ], [ %max_error.sroa.0.0618, %if.end142 ]
  %inc157 = add nuw i64 %i.0619, 1
  %exitcond630.not = icmp eq i64 %inc157, %umax
  br i1 %exitcond630.not, label %for.cond.cleanup109, label %for.body110, !llvm.loop !160

if.then161:                                       ; preds = %for.cond106.preheader, %for.cond.cleanup109
  %max_error.sroa.0.0.lcssa643 = phi double [ %max_error.sroa.0.1, %for.cond.cleanup109 ], [ 0.000000e+00, %for.cond106.preheader ]
  %max_error.sroa.9.0.lcssa642 = phi double [ %max_error.sroa.9.1, %for.cond.cleanup109 ], [ undef, %for.cond106.preheader ]
  %max_error.sroa.11.0.lcssa641 = phi double [ %max_error.sroa.11.1, %for.cond.cleanup109 ], [ undef, %for.cond106.preheader ]
  %max_error.sroa.13.0.lcssa640 = phi double [ %max_error.sroa.13.1, %for.cond.cleanup109 ], [ undef, %for.cond106.preheader ]
  %max_error.sroa.15.0.lcssa639 = phi double [ %max_error.sroa.15.1, %for.cond.cleanup109 ], [ undef, %for.cond106.preheader ]
  %max_error.sroa.17.0.lcssa638 = phi double [ %max_error.sroa.17.1, %for.cond.cleanup109 ], [ undef, %for.cond106.preheader ]
  %cmp163 = fcmp contract ogt double %max_error.sroa.0.0.lcssa643, %tolerance
  br i1 %cmp163, label %if.then164, label %if.else209

if.then164:                                       ; preds = %if.then161
  %call1.i236239 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i8* noundef nonnull getelementptr inbounds ([23 x i8], [23 x i8]* @.str.149, i64 0, i64 0), i64 noundef 22)
          to label %invoke.cont166 unwind label %lpad165

invoke.cont166:                                   ; preds = %if.then164
  %call.i240 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIdEERSoT_(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, double noundef %max_error.sroa.0.0.lcssa643)
          to label %invoke.cont169 unwind label %lpad165

invoke.cont169:                                   ; preds = %invoke.cont166
  %call1.i242245 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call.i240, i8* noundef nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.150, i64 0, i64 0), i64 noundef 1)
          to label %invoke.cont171 unwind label %lpad165

invoke.cont171:                                   ; preds = %invoke.cont169
  %42 = bitcast %"class.std::basic_ostream"* %call.i240 to i8**
  %vtable.i = load i8*, i8** %42, align 8, !tbaa !32
  %vbase.offset.ptr.i = getelementptr i8, i8* %vtable.i, i64 -24
  %43 = bitcast i8* %vbase.offset.ptr.i to i64*
  %vbase.offset.i = load i64, i64* %43, align 8
  %44 = bitcast %"class.std::basic_ostream"* %call.i240 to i8*
  %add.ptr.i326 = getelementptr inbounds i8, i8* %44, i64 %vbase.offset.i
  %_M_ctype.i.i = getelementptr inbounds i8, i8* %add.ptr.i326, i64 240
  %45 = bitcast i8* %_M_ctype.i.i to %"class.std::ctype"**
  %46 = load %"class.std::ctype"*, %"class.std::ctype"** %45, align 8, !tbaa !34
  %tobool.not.i.i.i327 = icmp eq %"class.std::ctype"* %46, null
  br i1 %tobool.not.i.i.i327, label %if.then.i.i.i328, label %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i

if.then.i.i.i328:                                 ; preds = %invoke.cont171
  invoke void @_ZSt16__throw_bad_castv() #29
          to label %.noexc unwind label %lpad165

.noexc:                                           ; preds = %if.then.i.i.i328
  unreachable

_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i: ; preds = %invoke.cont171
  %_M_widen_ok.i.i.i = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %46, i64 0, i32 8
  %47 = load i8, i8* %_M_widen_ok.i.i.i, align 8, !tbaa !37
  %tobool.not.i1.i.i = icmp eq i8 %47, 0
  br i1 %tobool.not.i1.i.i, label %if.end.i.i.i, label %if.then.i2.i.i

if.then.i2.i.i:                                   ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
  %arrayidx.i.i.i = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %46, i64 0, i32 9, i64 10
  %48 = load i8, i8* %arrayidx.i.i.i, align 1, !tbaa !39
  br label %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i

if.end.i.i.i:                                     ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %46)
          to label %.noexc331 unwind label %lpad165

.noexc331:                                        ; preds = %if.end.i.i.i
  %49 = bitcast %"class.std::ctype"* %46 to i8 (%"class.std::ctype"*, i8)***
  %vtable.i.i.i = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %49, align 8, !tbaa !32
  %vfn.i.i.i = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vtable.i.i.i, i64 6
  %50 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vfn.i.i.i, align 8
  %call.i.i.i332 = invoke noundef zeroext i8 %50(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %46, i8 noundef zeroext 10)
          to label %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i unwind label %lpad165

_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i: ; preds = %.noexc331, %if.then.i2.i.i
  %retval.0.i.i.i = phi i8 [ %48, %if.then.i2.i.i ], [ %call.i.i.i332, %.noexc331 ]
  %call1.i329333 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call.i240, i8 noundef zeroext %retval.0.i.i.i)
          to label %call1.i329.noexc unwind label %lpad165

call1.i329.noexc:                                 ; preds = %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i
  %call.i.i330334 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call1.i329333)
          to label %invoke.cont173 unwind label %lpad165

invoke.cont173:                                   ; preds = %call1.i329.noexc
  %call1.i249252 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i8* noundef nonnull getelementptr inbounds ([17 x i8], [17 x i8]* @.str.151, i64 0, i64 0), i64 noundef 16)
          to label %invoke.cont175 unwind label %lpad165

invoke.cont175:                                   ; preds = %invoke.cont173
  %call.i254 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIdEERSoT_(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, double noundef %max_error.sroa.13.0.lcssa640)
          to label %invoke.cont179 unwind label %lpad165

invoke.cont179:                                   ; preds = %invoke.cont175
  %call1.i257260 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call.i254, i8* noundef nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.152, i64 0, i64 0), i64 noundef 1)
          to label %invoke.cont181 unwind label %lpad165

invoke.cont181:                                   ; preds = %invoke.cont179
  %call.i262 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIdEERSoT_(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call.i254, double noundef %max_error.sroa.15.0.lcssa639)
          to label %invoke.cont185 unwind label %lpad165

invoke.cont185:                                   ; preds = %invoke.cont181
  %call1.i265268 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call.i262, i8* noundef nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.152, i64 0, i64 0), i64 noundef 1)
          to label %invoke.cont187 unwind label %lpad165

invoke.cont187:                                   ; preds = %invoke.cont185
  %call.i270 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIdEERSoT_(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call.i262, double noundef %max_error.sroa.17.0.lcssa638)
          to label %invoke.cont191 unwind label %lpad165

invoke.cont191:                                   ; preds = %invoke.cont187
  %call1.i273276 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call.i270, i8* noundef nonnull getelementptr inbounds ([4 x i8], [4 x i8]* @.str.153, i64 0, i64 0), i64 noundef 3)
          to label %invoke.cont193 unwind label %lpad165

invoke.cont193:                                   ; preds = %invoke.cont191
  %51 = bitcast %"class.std::basic_ostream"* %call.i270 to i8**
  %vtable.i335 = load i8*, i8** %51, align 8, !tbaa !32
  %vbase.offset.ptr.i336 = getelementptr i8, i8* %vtable.i335, i64 -24
  %52 = bitcast i8* %vbase.offset.ptr.i336 to i64*
  %vbase.offset.i337 = load i64, i64* %52, align 8
  %53 = bitcast %"class.std::basic_ostream"* %call.i270 to i8*
  %add.ptr.i338 = getelementptr inbounds i8, i8* %53, i64 %vbase.offset.i337
  %_M_ctype.i.i339 = getelementptr inbounds i8, i8* %add.ptr.i338, i64 240
  %54 = bitcast i8* %_M_ctype.i.i339 to %"class.std::ctype"**
  %55 = load %"class.std::ctype"*, %"class.std::ctype"** %54, align 8, !tbaa !34
  %tobool.not.i.i.i340 = icmp eq %"class.std::ctype"* %55, null
  br i1 %tobool.not.i.i.i340, label %if.then.i.i.i341, label %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i344

if.then.i.i.i341:                                 ; preds = %invoke.cont193
  invoke void @_ZSt16__throw_bad_castv() #29
          to label %.noexc354 unwind label %lpad165

.noexc354:                                        ; preds = %if.then.i.i.i341
  unreachable

_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i344: ; preds = %invoke.cont193
  %_M_widen_ok.i.i.i342 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %55, i64 0, i32 8
  %56 = load i8, i8* %_M_widen_ok.i.i.i342, align 8, !tbaa !37
  %tobool.not.i1.i.i343 = icmp eq i8 %56, 0
  br i1 %tobool.not.i1.i.i343, label %if.end.i.i.i349, label %if.then.i2.i.i346

if.then.i2.i.i346:                                ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i344
  %arrayidx.i.i.i345 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %55, i64 0, i32 9, i64 10
  %57 = load i8, i8* %arrayidx.i.i.i345, align 1, !tbaa !39
  br label %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i353

if.end.i.i.i349:                                  ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i344
  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %55)
          to label %.noexc355 unwind label %lpad165

.noexc355:                                        ; preds = %if.end.i.i.i349
  %58 = bitcast %"class.std::ctype"* %55 to i8 (%"class.std::ctype"*, i8)***
  %vtable.i.i.i347 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %58, align 8, !tbaa !32
  %vfn.i.i.i348 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vtable.i.i.i347, i64 6
  %59 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vfn.i.i.i348, align 8
  %call.i.i.i357 = invoke noundef zeroext i8 %59(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %55, i8 noundef zeroext 10)
          to label %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i353 unwind label %lpad165

_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i353: ; preds = %.noexc355, %if.then.i2.i.i346
  %retval.0.i.i.i350 = phi i8 [ %57, %if.then.i2.i.i346 ], [ %call.i.i.i357, %.noexc355 ]
  %call1.i351358 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call.i270, i8 noundef zeroext %retval.0.i.i.i350)
          to label %call1.i351.noexc unwind label %lpad165

call1.i351.noexc:                                 ; preds = %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i353
  %call.i.i352359 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call1.i351358)
          to label %invoke.cont195 unwind label %lpad165

invoke.cont195:                                   ; preds = %call1.i351.noexc
  %call1.i281284 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i8* noundef nonnull getelementptr inbounds ([23 x i8], [23 x i8]* @.str.154, i64 0, i64 0), i64 noundef 22)
          to label %invoke.cont197 unwind label %lpad165

invoke.cont197:                                   ; preds = %invoke.cont195
  %call.i286 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIdEERSoT_(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, double noundef %max_error.sroa.9.0.lcssa642)
          to label %invoke.cont200 unwind label %lpad165

invoke.cont200:                                   ; preds = %invoke.cont197
  %call1.i289292 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call.i286, i8* noundef nonnull getelementptr inbounds ([23 x i8], [23 x i8]* @.str.155, i64 0, i64 0), i64 noundef 22)
          to label %invoke.cont202 unwind label %lpad165

invoke.cont202:                                   ; preds = %invoke.cont200
  %call.i294 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIdEERSoT_(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call.i286, double noundef %max_error.sroa.11.0.lcssa641)
          to label %invoke.cont205 unwind label %lpad165

invoke.cont205:                                   ; preds = %invoke.cont202
  %60 = bitcast %"class.std::basic_ostream"* %call.i294 to i8**
  %vtable.i361 = load i8*, i8** %60, align 8, !tbaa !32
  %vbase.offset.ptr.i362 = getelementptr i8, i8* %vtable.i361, i64 -24
  %61 = bitcast i8* %vbase.offset.ptr.i362 to i64*
  %vbase.offset.i363 = load i64, i64* %61, align 8
  %62 = bitcast %"class.std::basic_ostream"* %call.i294 to i8*
  %add.ptr.i364 = getelementptr inbounds i8, i8* %62, i64 %vbase.offset.i363
  %_M_ctype.i.i365 = getelementptr inbounds i8, i8* %add.ptr.i364, i64 240
  %63 = bitcast i8* %_M_ctype.i.i365 to %"class.std::ctype"**
  %64 = load %"class.std::ctype"*, %"class.std::ctype"** %63, align 8, !tbaa !34
  %tobool.not.i.i.i366 = icmp eq %"class.std::ctype"* %64, null
  br i1 %tobool.not.i.i.i366, label %if.then.i.i.i367, label %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i370

if.then.i.i.i367:                                 ; preds = %invoke.cont205
  invoke void @_ZSt16__throw_bad_castv() #29
          to label %.noexc380 unwind label %lpad165

.noexc380:                                        ; preds = %if.then.i.i.i367
  unreachable

_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i370: ; preds = %invoke.cont205
  %_M_widen_ok.i.i.i368 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %64, i64 0, i32 8
  %65 = load i8, i8* %_M_widen_ok.i.i.i368, align 8, !tbaa !37
  %tobool.not.i1.i.i369 = icmp eq i8 %65, 0
  br i1 %tobool.not.i1.i.i369, label %if.end.i.i.i375, label %if.then.i2.i.i372

if.then.i2.i.i372:                                ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i370
  %arrayidx.i.i.i371 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %64, i64 0, i32 9, i64 10
  %66 = load i8, i8* %arrayidx.i.i.i371, align 1, !tbaa !39
  br label %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i379

if.end.i.i.i375:                                  ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i370
  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %64)
          to label %.noexc381 unwind label %lpad165

.noexc381:                                        ; preds = %if.end.i.i.i375
  %67 = bitcast %"class.std::ctype"* %64 to i8 (%"class.std::ctype"*, i8)***
  %vtable.i.i.i373 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %67, align 8, !tbaa !32
  %vfn.i.i.i374 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vtable.i.i.i373, i64 6
  %68 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vfn.i.i.i374, align 8
  %call.i.i.i383 = invoke noundef zeroext i8 %68(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %64, i8 noundef zeroext 10)
          to label %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i379 unwind label %lpad165

_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i379: ; preds = %.noexc381, %if.then.i2.i.i372
  %retval.0.i.i.i376 = phi i8 [ %66, %if.then.i2.i.i372 ], [ %call.i.i.i383, %.noexc381 ]
  %call1.i377384 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call.i294, i8 noundef zeroext %retval.0.i.i.i376)
          to label %call1.i377.noexc unwind label %lpad165

call1.i377.noexc:                                 ; preds = %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i379
  %call.i.i378385 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call1.i377384)
          to label %if.end219 unwind label %lpad165

lpad165:                                          ; preds = %call1.i403.noexc, %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i405, %.noexc407, %if.end.i.i.i401, %if.then.i.i.i393, %call1.i377.noexc, %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i379, %.noexc381, %if.end.i.i.i375, %if.then.i.i.i367, %call1.i351.noexc, %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i353, %.noexc355, %if.end.i.i.i349, %if.then.i.i.i341, %call1.i329.noexc, %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i, %.noexc331, %if.end.i.i.i, %if.then.i.i.i328, %invoke.cont212, %invoke.cont210, %if.else209, %invoke.cont202, %invoke.cont200, %invoke.cont197, %invoke.cont195, %invoke.cont191, %invoke.cont187, %invoke.cont185, %invoke.cont181, %invoke.cont179, %invoke.cont175, %invoke.cont173, %invoke.cont169, %invoke.cont166, %if.then164
  %69 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup225

if.else209:                                       ; preds = %if.then161
  %call1.i299302 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i8* noundef nonnull getelementptr inbounds ([46 x i8], [46 x i8]* @.str.156, i64 0, i64 0), i64 noundef 45)
          to label %invoke.cont210 unwind label %lpad165

invoke.cont210:                                   ; preds = %if.else209
  %call.i304 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIdEERSoT_(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, double noundef %tolerance)
          to label %invoke.cont212 unwind label %lpad165

invoke.cont212:                                   ; preds = %invoke.cont210
  %call1.i307310 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call.i304, i8* noundef nonnull getelementptr inbounds ([12 x i8], [12 x i8]* @.str.157, i64 0, i64 0), i64 noundef 11)
          to label %invoke.cont214 unwind label %lpad165

invoke.cont214:                                   ; preds = %invoke.cont212
  %70 = bitcast %"class.std::basic_ostream"* %call.i304 to i8**
  %vtable.i387 = load i8*, i8** %70, align 8, !tbaa !32
  %vbase.offset.ptr.i388 = getelementptr i8, i8* %vtable.i387, i64 -24
  %71 = bitcast i8* %vbase.offset.ptr.i388 to i64*
  %vbase.offset.i389 = load i64, i64* %71, align 8
  %72 = bitcast %"class.std::basic_ostream"* %call.i304 to i8*
  %add.ptr.i390 = getelementptr inbounds i8, i8* %72, i64 %vbase.offset.i389
  %_M_ctype.i.i391 = getelementptr inbounds i8, i8* %add.ptr.i390, i64 240
  %73 = bitcast i8* %_M_ctype.i.i391 to %"class.std::ctype"**
  %74 = load %"class.std::ctype"*, %"class.std::ctype"** %73, align 8, !tbaa !34
  %tobool.not.i.i.i392 = icmp eq %"class.std::ctype"* %74, null
  br i1 %tobool.not.i.i.i392, label %if.then.i.i.i393, label %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i396

if.then.i.i.i393:                                 ; preds = %invoke.cont214
  invoke void @_ZSt16__throw_bad_castv() #29
          to label %.noexc406 unwind label %lpad165

.noexc406:                                        ; preds = %if.then.i.i.i393
  unreachable

_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i396: ; preds = %invoke.cont214
  %_M_widen_ok.i.i.i394 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %74, i64 0, i32 8
  %75 = load i8, i8* %_M_widen_ok.i.i.i394, align 8, !tbaa !37
  %tobool.not.i1.i.i395 = icmp eq i8 %75, 0
  br i1 %tobool.not.i1.i.i395, label %if.end.i.i.i401, label %if.then.i2.i.i398

if.then.i2.i.i398:                                ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i396
  %arrayidx.i.i.i397 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %74, i64 0, i32 9, i64 10
  %76 = load i8, i8* %arrayidx.i.i.i397, align 1, !tbaa !39
  br label %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i405

if.end.i.i.i401:                                  ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i396
  invoke void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %74)
          to label %.noexc407 unwind label %lpad165

.noexc407:                                        ; preds = %if.end.i.i.i401
  %77 = bitcast %"class.std::ctype"* %74 to i8 (%"class.std::ctype"*, i8)***
  %vtable.i.i.i399 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %77, align 8, !tbaa !32
  %vfn.i.i.i400 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vtable.i.i.i399, i64 6
  %78 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vfn.i.i.i400, align 8
  %call.i.i.i409 = invoke noundef zeroext i8 %78(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %74, i8 noundef zeroext 10)
          to label %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i405 unwind label %lpad165

_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i405: ; preds = %.noexc407, %if.then.i2.i.i398
  %retval.0.i.i.i402 = phi i8 [ %76, %if.then.i2.i.i398 ], [ %call.i.i.i409, %.noexc407 ]
  %call1.i403410 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call.i304, i8 noundef zeroext %retval.0.i.i.i402)
          to label %call1.i403.noexc unwind label %lpad165

call1.i403.noexc:                                 ; preds = %_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc.exit.i405
  %call.i.i404411 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call1.i403410)
          to label %if.end219 unwind label %lpad165

if.end219:                                        ; preds = %call1.i403.noexc, %call1.i377.noexc, %for.cond.cleanup109
  %max_error.sroa.0.0.lcssa644 = phi double [ %max_error.sroa.0.0.lcssa643, %call1.i403.noexc ], [ %max_error.sroa.0.0.lcssa643, %call1.i377.noexc ], [ %max_error.sroa.0.1, %for.cond.cleanup109 ]
  %tobool.not.i.i.i314 = icmp eq double* %row_coords.sroa.0.0.lcssa, null
  br i1 %tobool.not.i.i.i314, label %_ZNSt6vectorIdSaIdEED2Ev.exit, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.end219
  %79 = bitcast double* %row_coords.sroa.0.0.lcssa to i8*
  tail call void @_ZdlPv(i8* noundef nonnull %79) #8
  br label %_ZNSt6vectorIdSaIdEED2Ev.exit

_ZNSt6vectorIdSaIdEED2Ev.exit:                    ; preds = %if.end219, %if.then.i.i.i
  %tobool.not.i.i.i316 = icmp eq i32* %rows.sroa.0.0.lcssa, null
  br i1 %tobool.not.i.i.i316, label %_ZNSt6vectorIiSaIiEED2Ev.exit, label %if.then.i.i.i317

if.then.i.i.i317:                                 ; preds = %_ZNSt6vectorIdSaIdEED2Ev.exit
  %80 = bitcast i32* %rows.sroa.0.0.lcssa to i8*
  tail call void @_ZdlPv(i8* noundef nonnull %80) #8
  br label %_ZNSt6vectorIiSaIiEED2Ev.exit

_ZNSt6vectorIiSaIiEED2Ev.exit:                    ; preds = %_ZNSt6vectorIdSaIdEED2Ev.exit, %if.then.i.i.i317
  %cmp220 = fcmp contract ogt double %max_error.sroa.0.0.lcssa644, %tolerance
  %return_code.0 = zext i1 %cmp220 to i32
  ret i32 %return_code.0

ehcleanup225:                                     ; preds = %lpad165, %lpad.split.us.split.us.split.us
  %rows.sroa.0.6 = phi i32* [ %rows.sroa.0.4.us.us.us, %lpad.split.us.split.us.split.us ], [ %rows.sroa.0.0.lcssa, %lpad165 ]
  %row_coords.sroa.0.8 = phi double* [ %row_coords.sroa.0.6.us.us.us, %lpad.split.us.split.us.split.us ], [ %row_coords.sroa.0.0.lcssa, %lpad165 ]
  %.pn92 = phi { i8*, i32 } [ %34, %lpad.split.us.split.us.split.us ], [ %69, %lpad165 ]
  %tobool.not.i.i.i319 = icmp eq double* %row_coords.sroa.0.8, null
  br i1 %tobool.not.i.i.i319, label %_ZNSt6vectorIdSaIdEED2Ev.exit321, label %if.then.i.i.i320

if.then.i.i.i320:                                 ; preds = %ehcleanup225
  %81 = bitcast double* %row_coords.sroa.0.8 to i8*
  tail call void @_ZdlPv(i8* noundef nonnull %81) #8
  br label %_ZNSt6vectorIdSaIdEED2Ev.exit321

_ZNSt6vectorIdSaIdEED2Ev.exit321:                 ; preds = %ehcleanup225, %if.then.i.i.i320
  %tobool.not.i.i.i323 = icmp eq i32* %rows.sroa.0.6, null
  br i1 %tobool.not.i.i.i323, label %_ZNSt6vectorIiSaIiEED2Ev.exit325, label %if.then.i.i.i324

if.then.i.i.i324:                                 ; preds = %_ZNSt6vectorIdSaIdEED2Ev.exit321
  %82 = bitcast i32* %rows.sroa.0.6 to i8*
  tail call void @_ZdlPv(i8* noundef nonnull %82) #8
  br label %_ZNSt6vectorIiSaIiEED2Ev.exit325

_ZNSt6vectorIiSaIiEED2Ev.exit325:                 ; preds = %_ZNSt6vectorIdSaIdEED2Ev.exit321, %if.then.i.i.i324
  resume { i8*, i32 } %.pn92
}

declare noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsi(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40), %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8), i32 noundef signext) local_unnamed_addr #0

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN6miniFE9CSRMatrixIdiiED2Ev(%"struct.miniFE::CSRMatrix"* noundef nonnull align 8 dereferenceable(132) %this) unnamed_addr #12 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %_M_start.i.i = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %this, i64 0, i32 6, i32 0, i32 0, i32 0
  %0 = load double*, double** %_M_start.i.i, align 8, !tbaa !78
  %tobool.not.i.i.i = icmp eq double* %0, null
  br i1 %tobool.not.i.i.i, label %_ZNSt6vectorIdSaIdEED2Ev.exit, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %entry
  %1 = bitcast double* %0 to i8*
  tail call void @_ZdlPv(i8* noundef nonnull %1) #8
  br label %_ZNSt6vectorIdSaIdEED2Ev.exit

_ZNSt6vectorIdSaIdEED2Ev.exit:                    ; preds = %entry, %if.then.i.i.i
  %_M_start.i.i1 = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %this, i64 0, i32 5, i32 0, i32 0, i32 0
  %2 = load i32*, i32** %_M_start.i.i1, align 8, !tbaa !74
  %tobool.not.i.i.i2 = icmp eq i32* %2, null
  br i1 %tobool.not.i.i.i2, label %_ZNSt6vectorIiSaIiEED2Ev.exit, label %if.then.i.i.i3

if.then.i.i.i3:                                   ; preds = %_ZNSt6vectorIdSaIdEED2Ev.exit
  %3 = bitcast i32* %2 to i8*
  tail call void @_ZdlPv(i8* noundef nonnull %3) #8
  br label %_ZNSt6vectorIiSaIiEED2Ev.exit

_ZNSt6vectorIiSaIiEED2Ev.exit:                    ; preds = %_ZNSt6vectorIdSaIdEED2Ev.exit, %if.then.i.i.i3
  %_M_start.i.i4 = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %this, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load i32*, i32** %_M_start.i.i4, align 8, !tbaa !74
  %tobool.not.i.i.i5 = icmp eq i32* %4, null
  br i1 %tobool.not.i.i.i5, label %_ZNSt6vectorIiSaIiEED2Ev.exit7, label %if.then.i.i.i6

if.then.i.i.i6:                                   ; preds = %_ZNSt6vectorIiSaIiEED2Ev.exit
  %5 = bitcast i32* %4 to i8*
  tail call void @_ZdlPv(i8* noundef nonnull %5) #8
  br label %_ZNSt6vectorIiSaIiEED2Ev.exit7

_ZNSt6vectorIiSaIiEED2Ev.exit7:                   ; preds = %_ZNSt6vectorIiSaIiEED2Ev.exit, %if.then.i.i.i6
  %_M_start.i.i8 = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %this, i64 0, i32 3, i32 0, i32 0, i32 0
  %6 = load i32*, i32** %_M_start.i.i8, align 8, !tbaa !74
  %tobool.not.i.i.i9 = icmp eq i32* %6, null
  br i1 %tobool.not.i.i.i9, label %_ZNSt6vectorIiSaIiEED2Ev.exit11, label %if.then.i.i.i10

if.then.i.i.i10:                                  ; preds = %_ZNSt6vectorIiSaIiEED2Ev.exit7
  %7 = bitcast i32* %6 to i8*
  tail call void @_ZdlPv(i8* noundef nonnull %7) #8
  br label %_ZNSt6vectorIiSaIiEED2Ev.exit11

_ZNSt6vectorIiSaIiEED2Ev.exit11:                  ; preds = %_ZNSt6vectorIiSaIiEED2Ev.exit7, %if.then.i.i.i10
  %_M_start.i.i12 = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %this, i64 0, i32 2, i32 0, i32 0, i32 0
  %8 = load i32*, i32** %_M_start.i.i12, align 8, !tbaa !74
  %tobool.not.i.i.i13 = icmp eq i32* %8, null
  br i1 %tobool.not.i.i.i13, label %_ZNSt6vectorIiSaIiEED2Ev.exit15, label %if.then.i.i.i14

if.then.i.i.i14:                                  ; preds = %_ZNSt6vectorIiSaIiEED2Ev.exit11
  %9 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* noundef nonnull %9) #8
  br label %_ZNSt6vectorIiSaIiEED2Ev.exit15

_ZNSt6vectorIiSaIiEED2Ev.exit15:                  ; preds = %_ZNSt6vectorIiSaIiEED2Ev.exit11, %if.then.i.i.i14
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN6miniFE23simple_mesh_descriptionIiED2Ev(%"class.miniFE::simple_mesh_description"* noundef nonnull align 8 dereferenceable(192) %this) unnamed_addr #13 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %map_ids_to_rows = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %this, i64 0, i32 2
  %_M_t.i = getelementptr inbounds %"class.std::map", %"class.std::map"* %map_ids_to_rows, i64 0, i32 0
  %0 = getelementptr inbounds %"class.std::map", %"class.std::map"* %map_ids_to_rows, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %_M_parent.i.i.i = getelementptr inbounds i8, i8* %0, i64 16
  %1 = bitcast i8* %_M_parent.i.i.i to %"struct.std::_Rb_tree_node"**
  %2 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %1, align 8, !tbaa !86
  invoke void @_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree.11"* noundef nonnull align 8 dereferenceable(48) %_M_t.i, %"struct.std::_Rb_tree_node"* noundef %2)
          to label %_ZNSt3mapIiiSt4lessIiESaISt4pairIKiiEEED2Ev.exit unwind label %lpad.i.i

lpad.i.i:                                         ; preds = %entry
  %3 = landingpad { i8*, i32 }
          catch i8* null
  %4 = extractvalue { i8*, i32 } %3, 0
  tail call void @__clang_call_terminate(i8* %4) #31
  unreachable

_ZNSt3mapIiiSt4lessIiESaISt4pairIKiiEEED2Ev.exit: ; preds = %entry
  %bc_rows_1 = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %this, i64 0, i32 1
  %_M_t.i1 = getelementptr inbounds %"class.std::set", %"class.std::set"* %bc_rows_1, i64 0, i32 0
  %5 = getelementptr inbounds %"class.std::set", %"class.std::set"* %bc_rows_1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %_M_parent.i.i.i2 = getelementptr inbounds i8, i8* %5, i64 16
  %6 = bitcast i8* %_M_parent.i.i.i2 to %"struct.std::_Rb_tree_node.48"**
  %7 = load %"struct.std::_Rb_tree_node.48"*, %"struct.std::_Rb_tree_node.48"** %6, align 8, !tbaa !86
  invoke void @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiE(%"class.std::_Rb_tree"* noundef nonnull align 8 dereferenceable(48) %_M_t.i1, %"struct.std::_Rb_tree_node.48"* noundef %7)
          to label %_ZNSt3setIiSt4lessIiESaIiEED2Ev.exit unwind label %lpad.i.i3

lpad.i.i3:                                        ; preds = %_ZNSt3mapIiiSt4lessIiESaISt4pairIKiiEEED2Ev.exit
  %8 = landingpad { i8*, i32 }
          catch i8* null
  %9 = extractvalue { i8*, i32 } %8, 0
  tail call void @__clang_call_terminate(i8* %9) #31
  unreachable

_ZNSt3setIiSt4lessIiESaIiEED2Ev.exit:             ; preds = %_ZNSt3mapIiiSt4lessIiESaISt4pairIKiiEEED2Ev.exit
  %_M_t.i4 = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %this, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %this, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %_M_parent.i.i.i5 = getelementptr inbounds i8, i8* %10, i64 16
  %11 = bitcast i8* %_M_parent.i.i.i5 to %"struct.std::_Rb_tree_node.48"**
  %12 = load %"struct.std::_Rb_tree_node.48"*, %"struct.std::_Rb_tree_node.48"** %11, align 8, !tbaa !86
  invoke void @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiE(%"class.std::_Rb_tree"* noundef nonnull align 8 dereferenceable(48) %_M_t.i4, %"struct.std::_Rb_tree_node.48"* noundef %12)
          to label %_ZNSt3setIiSt4lessIiESaIiEED2Ev.exit7 unwind label %lpad.i.i6

lpad.i.i6:                                        ; preds = %_ZNSt3setIiSt4lessIiESaIiEED2Ev.exit
  %13 = landingpad { i8*, i32 }
          catch i8* null
  %14 = extractvalue { i8*, i32 } %13, 0
  tail call void @__clang_call_terminate(i8* %14) #31
  unreachable

_ZNSt3setIiSt4lessIiESaIiEED2Ev.exit7:            ; preds = %_ZNSt3setIiSt4lessIiESaIiEED2Ev.exit
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.fabs.f32(float) #20

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN6miniFE20create_map_id_to_rowIiEEviiiRK3BoxRSt3mapIT_S5_St4lessIS5_ESaISt4pairIKS5_S5_EEE(i32 noundef signext %global_nx, i32 noundef signext %global_ny, i32 noundef signext %global_nz, %struct.Box* noundef nonnull align 4 dereferenceable(24) %box, %"class.std::map"* noundef nonnull align 8 dereferenceable(48) %id_to_row) local_unnamed_addr #11 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %all_ids = alloca %"class.std::vector.15", align 8
  %ref.tmp = alloca i64, align 8
  %tmpcast = bitcast i64* %ref.tmp to %"struct.std::pair"*
  %ref.tmp14 = alloca %"struct.std::pair.32", align 8
  %0 = bitcast %"class.std::vector.15"* %all_ids to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %0, i8 0, i64 24, i1 false) #8
  invoke void @_ZN6miniFE7get_idsIiEEviiiRK3BoxRSt6vectorIT_SaIS5_EEb(i32 noundef signext %global_nx, i32 noundef signext %global_ny, i32 noundef signext %global_nz, %struct.Box* noundef nonnull align 4 dereferenceable(24) %box, %"class.std::vector.15"* noundef nonnull align 8 dereferenceable(24) %all_ids, i1 noundef zeroext false)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %_M_finish.i = getelementptr inbounds %"class.std::vector.15", %"class.std::vector.15"* %all_ids, i64 0, i32 0, i32 0, i32 1
  %1 = load i32*, i32** %_M_finish.i, align 8, !tbaa !71
  %_M_start.i = getelementptr inbounds %"class.std::vector.15", %"class.std::vector.15"* %all_ids, i64 0, i32 0, i32 0, i32 0
  %2 = load i32*, i32** %_M_start.i, align 8, !tbaa !74
  %cmp.not = icmp eq i32* %1, %2
  br i1 %cmp.not, label %if.end, label %invoke.cont4

invoke.cont4:                                     ; preds = %invoke.cont
  %3 = bitcast i64* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #8
  %4 = load i32, i32* %2, align 4, !tbaa !16
  %retval.sroa.0.0.insert.ext.i = zext i32 %4 to i64
  store i64 %retval.sroa.0.0.insert.ext.i, i64* %ref.tmp, align 8
  %_M_t.i = getelementptr inbounds %"class.std::map", %"class.std::map"* %id_to_row, i64 0, i32 0
  %call2.i43 = invoke { i64, i64 } @_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE17_M_emplace_uniqueIJS0_IiiEEEES0_ISt17_Rb_tree_iteratorIS2_EbEDpOT_(%"class.std::_Rb_tree.11"* noundef nonnull align 8 dereferenceable(48) %_M_t.i, %"struct.std::pair"* noundef nonnull align 4 dereferenceable(8) %tmpcast)
          to label %invoke.cont6 unwind label %lpad3

invoke.cont6:                                     ; preds = %invoke.cont4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #8
  %.pre = load i32*, i32** %_M_finish.i, align 8, !tbaa !71
  %.pre118 = load i32*, i32** %_M_start.i, align 8, !tbaa !74
  br label %if.end

lpad:                                             ; preds = %entry
  %5 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup103

lpad3:                                            ; preds = %invoke.cont4
  %6 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #8
  br label %ehcleanup103

if.end:                                           ; preds = %invoke.cont6, %invoke.cont
  %7 = phi i32* [ %.pre118, %invoke.cont6 ], [ %1, %invoke.cont ]
  %8 = phi i32* [ %.pre, %invoke.cont6 ], [ %1, %invoke.cont ]
  %9 = bitcast %"struct.std::pair.32"* %ref.tmp14 to i8*
  %10 = bitcast %"struct.std::pair.32"* %ref.tmp14 to i64*
  %11 = getelementptr inbounds %"struct.std::pair.32", %"struct.std::pair.32"* %ref.tmp14, i64 0, i32 1
  %_M_t.i56 = getelementptr inbounds %"class.std::map", %"class.std::map"* %id_to_row, i64 0, i32 0
  %sub.ptr.lhs.cast.i46111 = ptrtoint i32* %8 to i64
  %sub.ptr.rhs.cast.i47112 = ptrtoint i32* %7 to i64
  %sub.ptr.sub.i48113 = sub i64 %sub.ptr.lhs.cast.i46111, %sub.ptr.rhs.cast.i47112
  %cmp9115 = icmp ugt i64 %sub.ptr.sub.i48113, 4
  br i1 %cmp9115, label %for.body, label %_ZNSt6vectorIiSaIiEED2Ev.exit61

for.body:                                         ; preds = %if.end, %for.inc
  %12 = phi i32* [ %17, %for.inc ], [ %7, %if.end ]
  %13 = phi i32* [ %18, %for.inc ], [ %8, %if.end ]
  %i.0116 = phi i64 [ %inc, %for.inc ], [ 1, %if.end ]
  %add.ptr.i = getelementptr inbounds i32, i32* %12, i64 %i.0116
  %14 = load i32, i32* %add.ptr.i, align 4, !tbaa !16
  %sub = add i64 %i.0116, -1
  %add.ptr.i52 = getelementptr inbounds i32, i32* %12, i64 %sub
  %15 = load i32, i32* %add.ptr.i52, align 4, !tbaa !16
  %add = add nsw i32 %15, 1
  %cmp12.not = icmp eq i32 %14, %add
  br i1 %cmp12.not, label %for.inc, label %invoke.cont19

invoke.cont19:                                    ; preds = %for.body
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #8
  %retval.sroa.0.0.insert.ext.i55 = zext i32 %14 to i64
  store i64 %retval.sroa.0.0.insert.ext.i55, i64* %10, align 8
  store i64 %i.0116, i64* %11, align 8
  %call2.i57 = invoke { i64, i64 } @_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE17_M_emplace_uniqueIJS0_IimEEEES0_ISt17_Rb_tree_iteratorIS2_EbEDpOT_(%"class.std::_Rb_tree.11"* noundef nonnull align 8 dereferenceable(48) %_M_t.i56, %"struct.std::pair.32"* noundef nonnull align 8 dereferenceable(16) %ref.tmp14)
          to label %invoke.cont21 unwind label %lpad18

invoke.cont21:                                    ; preds = %invoke.cont19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #8
  %.pre119 = load i32*, i32** %_M_finish.i, align 8, !tbaa !71
  %.pre120 = load i32*, i32** %_M_start.i, align 8, !tbaa !74
  br label %for.inc

lpad18:                                           ; preds = %invoke.cont19
  %16 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #8
  br label %ehcleanup103

for.inc:                                          ; preds = %for.body, %invoke.cont21
  %17 = phi i32* [ %12, %for.body ], [ %.pre120, %invoke.cont21 ]
  %18 = phi i32* [ %13, %for.body ], [ %.pre119, %invoke.cont21 ]
  %inc = add nuw i64 %i.0116, 1
  %sub.ptr.lhs.cast.i46 = ptrtoint i32* %18 to i64
  %sub.ptr.rhs.cast.i47 = ptrtoint i32* %17 to i64
  %sub.ptr.sub.i48 = sub i64 %sub.ptr.lhs.cast.i46, %sub.ptr.rhs.cast.i47
  %sub.ptr.div.i49 = ashr exact i64 %sub.ptr.sub.i48, 2
  %cmp9 = icmp ult i64 %inc, %sub.ptr.div.i49
  br i1 %cmp9, label %for.body, label %_ZNSt6vectorIiSaIiEED2Ev.exit61, !llvm.loop !161

_ZNSt6vectorIiSaIiEED2Ev.exit61:                  ; preds = %for.inc, %if.end
  %19 = phi i32* [ %7, %if.end ], [ %17, %for.inc ]
  %tobool.not.i.i.i63 = icmp eq i32* %19, null
  br i1 %tobool.not.i.i.i63, label %_ZNSt6vectorIiSaIiEED2Ev.exit65, label %if.then.i.i.i64

if.then.i.i.i64:                                  ; preds = %_ZNSt6vectorIiSaIiEED2Ev.exit61
  %20 = bitcast i32* %19 to i8*
  call void @_ZdlPv(i8* noundef nonnull %20) #8
  br label %_ZNSt6vectorIiSaIiEED2Ev.exit65

_ZNSt6vectorIiSaIiEED2Ev.exit65:                  ; preds = %_ZNSt6vectorIiSaIiEED2Ev.exit61, %if.then.i.i.i64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8
  ret void

ehcleanup103:                                     ; preds = %lpad3, %lpad18, %lpad
  %.pn.pn = phi { i8*, i32 } [ %5, %lpad ], [ %16, %lpad18 ], [ %6, %lpad3 ]
  %_M_start.i.i74 = getelementptr inbounds %"class.std::vector.15", %"class.std::vector.15"* %all_ids, i64 0, i32 0, i32 0, i32 0
  %21 = load i32*, i32** %_M_start.i.i74, align 8, !tbaa !74
  %tobool.not.i.i.i75 = icmp eq i32* %21, null
  br i1 %tobool.not.i.i.i75, label %_ZNSt6vectorIiSaIiEED2Ev.exit77, label %if.then.i.i.i76

if.then.i.i.i76:                                  ; preds = %ehcleanup103
  %22 = bitcast i32* %21 to i8*
  call void @_ZdlPv(i8* noundef nonnull %22) #8
  br label %_ZNSt6vectorIiSaIiEED2Ev.exit77

_ZNSt6vectorIiSaIiEED2Ev.exit77:                  ; preds = %ehcleanup103, %if.then.i.i.i76
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8
  resume { i8*, i32 } %.pn.pn
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt3mapIiiSt4lessIiESaISt4pairIKiiEEED2Ev(%"class.std::map"* noundef nonnull align 8 dereferenceable(48) %this) unnamed_addr #12 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %_M_t = getelementptr inbounds %"class.std::map", %"class.std::map"* %this, i64 0, i32 0
  %0 = getelementptr inbounds %"class.std::map", %"class.std::map"* %this, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %_M_parent.i.i = getelementptr inbounds i8, i8* %0, i64 16
  %1 = bitcast i8* %_M_parent.i.i to %"struct.std::_Rb_tree_node"**
  %2 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %1, align 8, !tbaa !86
  invoke void @_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree.11"* noundef nonnull align 8 dereferenceable(48) %_M_t, %"struct.std::_Rb_tree_node"* noundef %2)
          to label %_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EED2Ev.exit unwind label %lpad.i

lpad.i:                                           ; preds = %entry
  %3 = landingpad { i8*, i32 }
          catch i8* null
  %4 = extractvalue { i8*, i32 } %3, 0
  tail call void @__clang_call_terminate(i8* %4) #31
  unreachable

_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EED2Ev.exit: ; preds = %entry
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt3setIiSt4lessIiESaIiEED2Ev(%"class.std::set"* noundef nonnull align 8 dereferenceable(48) %this) unnamed_addr #12 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %_M_t = getelementptr inbounds %"class.std::set", %"class.std::set"* %this, i64 0, i32 0
  %0 = getelementptr inbounds %"class.std::set", %"class.std::set"* %this, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %_M_parent.i.i = getelementptr inbounds i8, i8* %0, i64 16
  %1 = bitcast i8* %_M_parent.i.i to %"struct.std::_Rb_tree_node.48"**
  %2 = load %"struct.std::_Rb_tree_node.48"*, %"struct.std::_Rb_tree_node.48"** %1, align 8, !tbaa !86
  invoke void @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiE(%"class.std::_Rb_tree"* noundef nonnull align 8 dereferenceable(48) %_M_t, %"struct.std::_Rb_tree_node.48"* noundef %2)
          to label %_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEED2Ev.exit unwind label %lpad.i

lpad.i:                                           ; preds = %entry
  %3 = landingpad { i8*, i32 }
          catch i8* null
  %4 = extractvalue { i8*, i32 } %3, 0
  tail call void @__clang_call_terminate(i8* %4) #31
  unreachable

_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEED2Ev.exit: ; preds = %entry
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN6miniFE7get_idsIiEEviiiRK3BoxRSt6vectorIT_SaIS5_EEb(i32 noundef signext %nx, i32 noundef signext %ny, i32 noundef signext %nz, %struct.Box* noundef nonnull align 4 dereferenceable(24) %box, %"class.std::vector.15"* noundef nonnull align 8 dereferenceable(24) %ids, i1 noundef zeroext %include_ghost_layer) local_unnamed_addr #11 comdat personality i32 (...)* @__gxx_personality_v0 {
entry:
  %_M_start.i = getelementptr inbounds %"class.std::vector.15", %"class.std::vector.15"* %ids, i64 0, i32 0, i32 0, i32 0
  %0 = load i32*, i32** %_M_start.i, align 8, !tbaa !74
  %_M_finish.i.i = getelementptr inbounds %"class.std::vector.15", %"class.std::vector.15"* %ids, i64 0, i32 0, i32 0, i32 1
  %1 = load i32*, i32** %_M_finish.i.i, align 8, !tbaa !71
  %tobool.not.i.i = icmp eq i32* %1, %0
  br i1 %tobool.not.i.i, label %_ZNSt6vectorIiSaIiEE5clearEv.exit, label %invoke.cont.i.i

invoke.cont.i.i:                                  ; preds = %entry
  store i32* %0, i32** %_M_finish.i.i, align 8, !tbaa !71
  br label %_ZNSt6vectorIiSaIiEE5clearEv.exit

_ZNSt6vectorIiSaIiEE5clearEv.exit:                ; preds = %entry, %invoke.cont.i.i
  %arrayidx.i = getelementptr inbounds %struct.Box, %struct.Box* %box, i64 0, i32 0, i64 4
  %2 = load i32, i32* %arrayidx.i, align 4, !tbaa !16
  %arrayidx2 = getelementptr inbounds %struct.Box, %struct.Box* %box, i64 0, i32 0, i64 5
  %3 = load i32, i32* %arrayidx2, align 4, !tbaa !16
  %arrayidx.i57 = getelementptr inbounds %struct.Box, %struct.Box* %box, i64 0, i32 0, i64 2
  %4 = load i32, i32* %arrayidx.i57, align 4, !tbaa !16
  %arrayidx6 = getelementptr inbounds %struct.Box, %struct.Box* %box, i64 0, i32 0, i64 3
  %5 = load i32, i32* %arrayidx6, align 4, !tbaa !16
  %arrayidx.i59 = getelementptr inbounds %struct.Box, %struct.Box* %box, i64 0, i32 0, i64 0
  %6 = load i32, i32* %arrayidx.i59, align 4, !tbaa !16
  %arrayidx10 = getelementptr inbounds %struct.Box, %struct.Box* %box, i64 0, i32 0, i64 1
  %7 = load i32, i32* %arrayidx10, align 4, !tbaa !16
  br i1 %include_ghost_layer, label %if.then, label %if.end31

if.then:                                          ; preds = %_ZNSt6vectorIiSaIiEE5clearEv.exit
  %cmp = icmp sgt i32 %2, 0
  %dec = sext i1 %cmp to i32
  %spec.select = add nsw i32 %2, %dec
  %cmp12 = icmp sgt i32 %4, 0
  %dec14 = sext i1 %cmp12 to i32
  %miny.0 = add nsw i32 %4, %dec14
  %cmp16 = icmp sgt i32 %6, 0
  %dec18 = sext i1 %cmp16 to i32
  %minx.0 = add nsw i32 %6, %dec18
  %cmp20 = icmp slt i32 %3, %nz
  %inc = zext i1 %cmp20 to i32
  %maxz.0 = add nsw i32 %3, %inc
  %cmp23 = icmp slt i32 %5, %ny
  %inc25 = zext i1 %cmp23 to i32
  %maxy.0 = add nsw i32 %5, %inc25
  %cmp27 = icmp slt i32 %7, %nx
  %inc29 = zext i1 %cmp27 to i32
  %spec.select55 = add nsw i32 %7, %inc29
  br label %if.end31

if.end31:                                         ; preds = %if.then, %_ZNSt6vectorIiSaIiEE5clearEv.exit
  %maxz.1 = phi i32 [ %3, %_ZNSt6vectorIiSaIiEE5clearEv.exit ], [ %maxz.0, %if.then ]
  %miny.1 = phi i32 [ %4, %_ZNSt6vectorIiSaIiEE5clearEv.exit ], [ %miny.0, %if.then ]
  %maxy.1 = phi i32 [ %5, %_ZNSt6vectorIiSaIiEE5clearEv.exit ], [ %maxy.0, %if.then ]
  %minx.1 = phi i32 [ %6, %_ZNSt6vectorIiSaIiEE5clearEv.exit ], [ %minx.0, %if.then ]
  %maxx.0 = phi i32 [ %7, %_ZNSt6vectorIiSaIiEE5clearEv.exit ], [ %spec.select55, %if.then ]
  %minz.1 = phi i32 [ %2, %_ZNSt6vectorIiSaIiEE5clearEv.exit ], [ %spec.select, %if.then ]
  %sub = sub nsw i32 %maxz.1, %minz.1
  %sub32 = sub nsw i32 %maxy.1, %miny.1
  %sub33 = sub nsw i32 %maxx.0, %minx.1
  %mul = mul i32 %sub33, %sub32
  %mul34 = mul i32 %mul, %sub
  %conv = sext i32 %mul34 to i64
  %cmp.i = icmp slt i32 %mul34, 0
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %if.end31
  tail call void @_ZSt20__throw_length_errorPKc(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.57, i64 0, i64 0)) #29
  unreachable

if.end.i:                                         ; preds = %if.end31
  %_M_end_of_storage.i.i = getelementptr inbounds %"class.std::vector.15", %"class.std::vector.15"* %ids, i64 0, i32 0, i32 0, i32 2
  %8 = load i32*, i32** %_M_end_of_storage.i.i, align 8, !tbaa !109
  %sub.ptr.lhs.cast.i.i = ptrtoint i32* %8 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i32* %0 to i64
  %sub.ptr.sub.i.i = sub i64 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  %sub.ptr.div.i.i = ashr exact i64 %sub.ptr.sub.i.i, 2
  %cmp3.i = icmp ult i64 %sub.ptr.div.i.i, %conv
  br i1 %cmp3.i, label %_ZNSt6vectorIiSaIiEE20_M_allocate_and_copyISt13move_iteratorIPiEEES4_mT_S6_.exit.i, label %_ZNSt6vectorIiSaIiEE7reserveEm.exit

_ZNSt6vectorIiSaIiEE20_M_allocate_and_copyISt13move_iteratorIPiEEES4_mT_S6_.exit.i: ; preds = %if.end.i
  %mul.i.i.i.i.i = shl nuw nsw i64 %conv, 2
  %call2.i.i.i.i.i = tail call noalias noundef nonnull i8* @_Znwm(i64 noundef %mul.i.i.i.i.i) #30
  %9 = bitcast i8* %call2.i.i.i.i.i to i32*
  %10 = load i32*, i32** %_M_start.i, align 8, !tbaa !74
  %tobool.not.i.i62 = icmp eq i32* %10, null
  br i1 %tobool.not.i.i62, label %_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim.exit.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %_ZNSt6vectorIiSaIiEE20_M_allocate_and_copyISt13move_iteratorIPiEEES4_mT_S6_.exit.i
  %11 = bitcast i32* %10 to i8*
  tail call void @_ZdlPv(i8* noundef nonnull %11) #8
  br label %_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim.exit.i

_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim.exit.i: ; preds = %if.then.i.i, %_ZNSt6vectorIiSaIiEE20_M_allocate_and_copyISt13move_iteratorIPiEEES4_mT_S6_.exit.i
  %12 = bitcast %"class.std::vector.15"* %ids to i8**
  store i8* %call2.i.i.i.i.i, i8** %12, align 8, !tbaa !74
  %13 = bitcast i32** %_M_finish.i.i to i8**
  store i8* %call2.i.i.i.i.i, i8** %13, align 8, !tbaa !71
  %add.ptr32.i = getelementptr inbounds i32, i32* %9, i64 %conv
  store i32* %add.ptr32.i, i32** %_M_end_of_storage.i.i, align 8, !tbaa !109
  br label %_ZNSt6vectorIiSaIiEE7reserveEm.exit

_ZNSt6vectorIiSaIiEE7reserveEm.exit:              ; preds = %if.end.i, %_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim.exit.i
  %14 = phi i32* [ %0, %if.end.i ], [ %9, %_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim.exit.i ]
  %15 = phi i32* [ %8, %if.end.i ], [ %add.ptr32.i, %_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim.exit.i ]
  %cmp4169 = icmp sle i32 %maxx.0, %minx.1
  %cmp35113 = icmp sle i32 %maxz.1, %minz.1
  %cmp3772 = icmp sle i32 %maxy.1, %miny.1
  %or.cond143 = select i1 %cmp35113, i1 true, i1 %cmp3772
  %brmerge = select i1 %or.cond143, i1 true, i1 %cmp4169
  br i1 %brmerge, label %for.cond.cleanup, label %for.cond36.preheader.us.us

for.cond36.preheader.us.us:                       ; preds = %_ZNSt6vectorIiSaIiEE7reserveEm.exit, %for.cond36.for.cond.cleanup38_crit_edge.split.us.us.us
  %16 = phi i32* [ %41, %for.cond36.for.cond.cleanup38_crit_edge.split.us.us.us ], [ %14, %_ZNSt6vectorIiSaIiEE7reserveEm.exit ]
  %17 = phi i32* [ %42, %for.cond36.for.cond.cleanup38_crit_edge.split.us.us.us ], [ %15, %_ZNSt6vectorIiSaIiEE7reserveEm.exit ]
  %18 = phi i32* [ %43, %for.cond36.for.cond.cleanup38_crit_edge.split.us.us.us ], [ %14, %_ZNSt6vectorIiSaIiEE7reserveEm.exit ]
  %19 = phi i32* [ %44, %for.cond36.for.cond.cleanup38_crit_edge.split.us.us.us ], [ %15, %_ZNSt6vectorIiSaIiEE7reserveEm.exit ]
  %20 = phi i32* [ %45, %for.cond36.for.cond.cleanup38_crit_edge.split.us.us.us ], [ %14, %_ZNSt6vectorIiSaIiEE7reserveEm.exit ]
  %z.0114.us.us = phi i32 [ %inc50.us.us, %for.cond36.for.cond.cleanup38_crit_edge.split.us.us.us ], [ %minz.1, %_ZNSt6vectorIiSaIiEE7reserveEm.exit ]
  %cmp8.not.i.us.us = icmp slt i32 %z.0114.us.us, %nz
  %mul11.i.us.us = mul i32 %z.0114.us.us, %ny
  br label %for.cond40.preheader.us.us.us

for.cond40.preheader.us.us.us:                    ; preds = %for.cond40.for.cond.cleanup42_crit_edge.us.us.us, %for.cond36.preheader.us.us
  %21 = phi i32* [ %16, %for.cond36.preheader.us.us ], [ %41, %for.cond40.for.cond.cleanup42_crit_edge.us.us.us ]
  %22 = phi i32* [ %17, %for.cond36.preheader.us.us ], [ %42, %for.cond40.for.cond.cleanup42_crit_edge.us.us.us ]
  %23 = phi i32* [ %18, %for.cond36.preheader.us.us ], [ %43, %for.cond40.for.cond.cleanup42_crit_edge.us.us.us ]
  %24 = phi i32* [ %19, %for.cond36.preheader.us.us ], [ %44, %for.cond40.for.cond.cleanup42_crit_edge.us.us.us ]
  %25 = phi i32* [ %20, %for.cond36.preheader.us.us ], [ %45, %for.cond40.for.cond.cleanup42_crit_edge.us.us.us ]
  %y.073.us.us.us = phi i32 [ %miny.1, %for.cond36.preheader.us.us ], [ %inc47.us.us.us, %for.cond40.for.cond.cleanup42_crit_edge.us.us.us ]
  %26 = or i32 %y.073.us.us.us, %z.0114.us.us
  %cmp6.not.i.us.us.us = icmp slt i32 %y.073.us.us.us, %ny
  %reass.add.i.us.us.us = add i32 %y.073.us.us.us, %mul11.i.us.us
  %reass.mul.i.us.us.us = mul i32 %reass.add.i.us.us.us, %nx
  %27 = and i1 %cmp8.not.i.us.us, %cmp6.not.i.us.us.us
  br i1 %27, label %for.body43.us74.us.us, label %for.body43.us.us.us.us

for.body43.us74.us.us:                            ; preds = %for.cond40.preheader.us.us.us, %_ZNSt6vectorIiSaIiEE9push_backEOi.exit.us108.us.us
  %28 = phi i32* [ %37, %_ZNSt6vectorIiSaIiEE9push_backEOi.exit.us108.us.us ], [ %21, %for.cond40.preheader.us.us.us ]
  %29 = phi i32* [ %38, %_ZNSt6vectorIiSaIiEE9push_backEOi.exit.us108.us.us ], [ %22, %for.cond40.preheader.us.us.us ]
  %30 = phi i32* [ %40, %_ZNSt6vectorIiSaIiEE9push_backEOi.exit.us108.us.us ], [ %25, %for.cond40.preheader.us.us.us ]
  %31 = phi i32* [ %39, %_ZNSt6vectorIiSaIiEE9push_backEOi.exit.us108.us.us ], [ %23, %for.cond40.preheader.us.us.us ]
  %x.070.us75.us.us = phi i32 [ %inc45.us109.us.us, %_ZNSt6vectorIiSaIiEE9push_backEOi.exit.us108.us.us ], [ %minx.1, %for.cond40.preheader.us.us.us ]
  %32 = or i32 %26, %x.070.us75.us.us
  %.not.i.us76.us.us = icmp sgt i32 %32, -1
  %cmp4.not.i.us.us.us = icmp slt i32 %x.070.us75.us.us, %nx
  %or.cond = and i1 %.not.i.us76.us.us, %cmp4.not.i.us.us.us
  %add13.i.us.us.us = add i32 %x.070.us75.us.us, %reass.mul.i.us.us.us
  %retval.0.i.us.us.us = select i1 %or.cond, i32 %add13.i.us.us.us, i32 -1
  %cmp.not.i.i.us79.us.us = icmp eq i32* %30, %29
  br i1 %cmp.not.i.i.us79.us.us, label %if.else.i.i.us82.us.us, label %if.then.i.i66.us80.us.us

if.then.i.i66.us80.us.us:                         ; preds = %for.body43.us74.us.us
  store i32 %retval.0.i.us.us.us, i32* %30, align 4, !tbaa !16
  %incdec.ptr.i.i.us81.us.us = getelementptr inbounds i32, i32* %30, i64 1
  store i32* %incdec.ptr.i.i.us81.us.us, i32** %_M_finish.i.i, align 8, !tbaa !71
  br label %_ZNSt6vectorIiSaIiEE9push_backEOi.exit.us108.us.us

if.else.i.i.us82.us.us:                           ; preds = %for.body43.us74.us.us
  %coerce.val.pi.i.i.i.us83.us.us = ptrtoint i32* %29 to i64
  %sub.ptr.rhs.cast.i.i.i.i.i.us84.us.us = ptrtoint i32* %28 to i64
  %sub.ptr.sub.i.i.i.i.i.us85.us.us = sub i64 %coerce.val.pi.i.i.i.us83.us.us, %sub.ptr.rhs.cast.i.i.i.i.i.us84.us.us
  %sub.ptr.div.i.i.i.i.i.us86.us.us = ashr exact i64 %sub.ptr.sub.i.i.i.i.i.us85.us.us, 2
  %cmp.i.i.i.i.i.us87.us.us = icmp eq i64 %sub.ptr.sub.i.i.i.i.i.us85.us.us, 0
  %.sroa.speculated.i.i.i.i.us88.us.us = select i1 %cmp.i.i.i.i.i.us87.us.us, i64 1, i64 %sub.ptr.div.i.i.i.i.i.us86.us.us
  %add.i.i.i.i.us89.us.us = add nsw i64 %.sroa.speculated.i.i.i.i.us88.us.us, %sub.ptr.div.i.i.i.i.i.us86.us.us
  %cmp7.i.i.i.i.us90.us.us = icmp ult i64 %add.i.i.i.i.us89.us.us, %sub.ptr.div.i.i.i.i.i.us86.us.us
  %cmp9.i.i.i.i.us91.us.us = icmp ugt i64 %add.i.i.i.i.us89.us.us, 4611686018427387903
  %or.cond.i.i.i.i.us92.us.us = or i1 %cmp7.i.i.i.i.us90.us.us, %cmp9.i.i.i.i.us91.us.us
  %cond.i.i.i.i.us93.us.us = select i1 %or.cond.i.i.i.i.us92.us.us, i64 4611686018427387903, i64 %add.i.i.i.i.us89.us.us
  %cmp.not.i.i.i.i.us94.us.us = icmp eq i64 %cond.i.i.i.i.us93.us.us, 0
  br i1 %cmp.not.i.i.i.i.us94.us.us, label %invoke.cont.i.i.i.us98.us.us, label %_ZNSt16allocator_traitsISaIiEE8allocateERS0_m.exit.i.i.i.i.us95.us.us

_ZNSt16allocator_traitsISaIiEE8allocateERS0_m.exit.i.i.i.i.us95.us.us: ; preds = %if.else.i.i.us82.us.us
  %mul.i.i.i.i.i.i.us96.us.us = shl nuw i64 %cond.i.i.i.i.us93.us.us, 2
  %call2.i.i.i.i.i.i.us97.us.us = tail call noalias noundef nonnull i8* @_Znwm(i64 noundef %mul.i.i.i.i.i.i.us96.us.us) #30
  %33 = bitcast i8* %call2.i.i.i.i.i.i.us97.us.us to i32*
  br label %invoke.cont.i.i.i.us98.us.us

invoke.cont.i.i.i.us98.us.us:                     ; preds = %_ZNSt16allocator_traitsISaIiEE8allocateERS0_m.exit.i.i.i.i.us95.us.us, %if.else.i.i.us82.us.us
  %cond.i31.i.i.i.us99.us.us = phi i32* [ %33, %_ZNSt16allocator_traitsISaIiEE8allocateERS0_m.exit.i.i.i.i.us95.us.us ], [ null, %if.else.i.i.us82.us.us ]
  %add.ptr.i.i.i.us100.us.us = getelementptr inbounds i32, i32* %cond.i31.i.i.i.us99.us.us, i64 %sub.ptr.div.i.i.i.i.i.us86.us.us
  store i32 %retval.0.i.us.us.us, i32* %add.ptr.i.i.i.us100.us.us, align 4, !tbaa !16
  br i1 %cmp.i.i.i.i.i.us87.us.us, label %invoke.cont16.i.i.i.us102.us.us, label %if.then.i.i.i.i.i.i.i.i.i.i.i.us101.us.us

if.then.i.i.i.i.i.i.i.i.i.i.i.us101.us.us:        ; preds = %invoke.cont.i.i.i.us98.us.us
  %34 = bitcast i32* %cond.i31.i.i.i.us99.us.us to i8*
  %35 = bitcast i32* %28 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %34, i8* align 4 %35, i64 %sub.ptr.sub.i.i.i.i.i.us85.us.us, i1 false) #8
  br label %invoke.cont16.i.i.i.us102.us.us

invoke.cont16.i.i.i.us102.us.us:                  ; preds = %if.then.i.i.i.i.i.i.i.i.i.i.i.us101.us.us, %invoke.cont.i.i.i.us98.us.us
  %incdec.ptr.i.i.i.us103.us.us = getelementptr inbounds i32, i32* %add.ptr.i.i.i.us100.us.us, i64 1
  %tobool.not.i.i.i.i.us104.us.us = icmp eq i32* %28, null
  br i1 %tobool.not.i.i.i.i.us104.us.us, label %_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_.exit.i.i.us106.us.us, label %if.then.i41.i.i.i.us105.us.us

if.then.i41.i.i.i.us105.us.us:                    ; preds = %invoke.cont16.i.i.i.us102.us.us
  %36 = bitcast i32* %28 to i8*
  tail call void @_ZdlPv(i8* noundef nonnull %36) #8
  br label %_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_.exit.i.i.us106.us.us

_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_.exit.i.i.us106.us.us: ; preds = %if.then.i41.i.i.i.us105.us.us, %invoke.cont16.i.i.i.us102.us.us
  store i32* %cond.i31.i.i.i.us99.us.us, i32** %_M_start.i, align 8, !tbaa !74
  store i32* %incdec.ptr.i.i.i.us103.us.us, i32** %_M_finish.i.i, align 8, !tbaa !71
  %add.ptr32.i.i.i.us107.us.us = getelementptr inbounds i32, i32* %cond.i31.i.i.i.us99.us.us, i64 %cond.i.i.i.i.us93.us.us
  store i32* %add.ptr32.i.i.i.us107.us.us, i32** %_M_end_of_storage.i.i, align 8, !tbaa !109
  br label %_ZNSt6vectorIiSaIiEE9push_backEOi.exit.us108.us.us

_ZNSt6vectorIiSaIiEE9push_backEOi.exit.us108.us.us: ; preds = %_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_.exit.i.i.us106.us.us, %if.then.i.i66.us80.us.us
  %37 = phi i32* [ %cond.i31.i.i.i.us99.us.us, %_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_.exit.i.i.us106.us.us ], [ %28, %if.then.i.i66.us80.us.us ]
  %38 = phi i32* [ %add.ptr32.i.i.i.us107.us.us, %_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_.exit.i.i.us106.us.us ], [ %29, %if.then.i.i66.us80.us.us ]
  %39 = phi i32* [ %cond.i31.i.i.i.us99.us.us, %_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_.exit.i.i.us106.us.us ], [ %31, %if.then.i.i66.us80.us.us ]
  %40 = phi i32* [ %incdec.ptr.i.i.i.us103.us.us, %_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_.exit.i.i.us106.us.us ], [ %incdec.ptr.i.i.us81.us.us, %if.then.i.i66.us80.us.us ]
  %inc45.us109.us.us = add i32 %x.070.us75.us.us, 1
  %exitcond126.not = icmp eq i32 %inc45.us109.us.us, %maxx.0
  br i1 %exitcond126.not, label %for.cond40.for.cond.cleanup42_crit_edge.us.us.us, label %for.body43.us74.us.us, !llvm.loop !162

for.cond40.for.cond.cleanup42_crit_edge.us.us.us: ; preds = %_ZNSt6vectorIiSaIiEE9push_backEOi.exit.us.us.us.us, %_ZNSt6vectorIiSaIiEE9push_backEOi.exit.us108.us.us
  %41 = phi i32* [ %37, %_ZNSt6vectorIiSaIiEE9push_backEOi.exit.us108.us.us ], [ %55, %_ZNSt6vectorIiSaIiEE9push_backEOi.exit.us.us.us.us ]
  %42 = phi i32* [ %38, %_ZNSt6vectorIiSaIiEE9push_backEOi.exit.us108.us.us ], [ %56, %_ZNSt6vectorIiSaIiEE9push_backEOi.exit.us.us.us.us ]
  %43 = phi i32* [ %39, %_ZNSt6vectorIiSaIiEE9push_backEOi.exit.us108.us.us ], [ %57, %_ZNSt6vectorIiSaIiEE9push_backEOi.exit.us.us.us.us ]
  %44 = phi i32* [ %38, %_ZNSt6vectorIiSaIiEE9push_backEOi.exit.us108.us.us ], [ %58, %_ZNSt6vectorIiSaIiEE9push_backEOi.exit.us.us.us.us ]
  %45 = phi i32* [ %40, %_ZNSt6vectorIiSaIiEE9push_backEOi.exit.us108.us.us ], [ %59, %_ZNSt6vectorIiSaIiEE9push_backEOi.exit.us.us.us.us ]
  %inc47.us.us.us = add i32 %y.073.us.us.us, 1
  %exitcond127.not = icmp eq i32 %inc47.us.us.us, %maxy.1
  br i1 %exitcond127.not, label %for.cond36.for.cond.cleanup38_crit_edge.split.us.us.us, label %for.cond40.preheader.us.us.us, !llvm.loop !163

for.body43.us.us.us.us:                           ; preds = %for.cond40.preheader.us.us.us, %_ZNSt6vectorIiSaIiEE9push_backEOi.exit.us.us.us.us
  %46 = phi i32* [ %55, %_ZNSt6vectorIiSaIiEE9push_backEOi.exit.us.us.us.us ], [ %21, %for.cond40.preheader.us.us.us ]
  %47 = phi i32* [ %56, %_ZNSt6vectorIiSaIiEE9push_backEOi.exit.us.us.us.us ], [ %22, %for.cond40.preheader.us.us.us ]
  %48 = phi i32* [ %57, %_ZNSt6vectorIiSaIiEE9push_backEOi.exit.us.us.us.us ], [ %23, %for.cond40.preheader.us.us.us ]
  %49 = phi i32* [ %58, %_ZNSt6vectorIiSaIiEE9push_backEOi.exit.us.us.us.us ], [ %24, %for.cond40.preheader.us.us.us ]
  %50 = phi i32* [ %59, %_ZNSt6vectorIiSaIiEE9push_backEOi.exit.us.us.us.us ], [ %25, %for.cond40.preheader.us.us.us ]
  %x.070.us.us.us.us = phi i32 [ %inc45.us.us.us.us, %_ZNSt6vectorIiSaIiEE9push_backEOi.exit.us.us.us.us ], [ %minx.1, %for.cond40.preheader.us.us.us ]
  %cmp.not.i.i.us.us.us.us = icmp eq i32* %50, %49
  br i1 %cmp.not.i.i.us.us.us.us, label %if.else.i.i.us.us.us.us, label %if.then.i.i66.us.us.us.us

if.then.i.i66.us.us.us.us:                        ; preds = %for.body43.us.us.us.us
  store i32 -1, i32* %50, align 4, !tbaa !16
  %incdec.ptr.i.i.us.us.us.us = getelementptr inbounds i32, i32* %50, i64 1
  store i32* %incdec.ptr.i.i.us.us.us.us, i32** %_M_finish.i.i, align 8, !tbaa !71
  br label %_ZNSt6vectorIiSaIiEE9push_backEOi.exit.us.us.us.us

if.else.i.i.us.us.us.us:                          ; preds = %for.body43.us.us.us.us
  %coerce.val.pi.i.i.i.us.us.us.us = ptrtoint i32* %49 to i64
  %sub.ptr.rhs.cast.i.i.i.i.i.us.us.us.us = ptrtoint i32* %48 to i64
  %sub.ptr.sub.i.i.i.i.i.us.us.us.us = sub i64 %coerce.val.pi.i.i.i.us.us.us.us, %sub.ptr.rhs.cast.i.i.i.i.i.us.us.us.us
  %sub.ptr.div.i.i.i.i.i.us.us.us.us = ashr exact i64 %sub.ptr.sub.i.i.i.i.i.us.us.us.us, 2
  %cmp.i.i.i.i.i.us.us.us.us = icmp eq i64 %sub.ptr.sub.i.i.i.i.i.us.us.us.us, 0
  %.sroa.speculated.i.i.i.i.us.us.us.us = select i1 %cmp.i.i.i.i.i.us.us.us.us, i64 1, i64 %sub.ptr.div.i.i.i.i.i.us.us.us.us
  %add.i.i.i.i.us.us.us.us = add nsw i64 %.sroa.speculated.i.i.i.i.us.us.us.us, %sub.ptr.div.i.i.i.i.i.us.us.us.us
  %cmp7.i.i.i.i.us.us.us.us = icmp ult i64 %add.i.i.i.i.us.us.us.us, %sub.ptr.div.i.i.i.i.i.us.us.us.us
  %cmp9.i.i.i.i.us.us.us.us = icmp ugt i64 %add.i.i.i.i.us.us.us.us, 4611686018427387903
  %or.cond.i.i.i.i.us.us.us.us = or i1 %cmp7.i.i.i.i.us.us.us.us, %cmp9.i.i.i.i.us.us.us.us
  %cond.i.i.i.i.us.us.us.us = select i1 %or.cond.i.i.i.i.us.us.us.us, i64 4611686018427387903, i64 %add.i.i.i.i.us.us.us.us
  %cmp.not.i.i.i.i.us.us.us.us = icmp eq i64 %cond.i.i.i.i.us.us.us.us, 0
  br i1 %cmp.not.i.i.i.i.us.us.us.us, label %invoke.cont.i.i.i.us.us.us.us, label %_ZNSt16allocator_traitsISaIiEE8allocateERS0_m.exit.i.i.i.i.us.us.us.us

_ZNSt16allocator_traitsISaIiEE8allocateERS0_m.exit.i.i.i.i.us.us.us.us: ; preds = %if.else.i.i.us.us.us.us
  %mul.i.i.i.i.i.i.us.us.us.us = shl nuw i64 %cond.i.i.i.i.us.us.us.us, 2
  %call2.i.i.i.i.i.i.us.us.us.us = tail call noalias noundef nonnull i8* @_Znwm(i64 noundef %mul.i.i.i.i.i.i.us.us.us.us) #30
  %51 = bitcast i8* %call2.i.i.i.i.i.i.us.us.us.us to i32*
  br label %invoke.cont.i.i.i.us.us.us.us

invoke.cont.i.i.i.us.us.us.us:                    ; preds = %_ZNSt16allocator_traitsISaIiEE8allocateERS0_m.exit.i.i.i.i.us.us.us.us, %if.else.i.i.us.us.us.us
  %cond.i31.i.i.i.us.us.us.us = phi i32* [ %51, %_ZNSt16allocator_traitsISaIiEE8allocateERS0_m.exit.i.i.i.i.us.us.us.us ], [ null, %if.else.i.i.us.us.us.us ]
  %add.ptr.i.i.i.us.us.us.us = getelementptr inbounds i32, i32* %cond.i31.i.i.i.us.us.us.us, i64 %sub.ptr.div.i.i.i.i.i.us.us.us.us
  store i32 -1, i32* %add.ptr.i.i.i.us.us.us.us, align 4, !tbaa !16
  br i1 %cmp.i.i.i.i.i.us.us.us.us, label %invoke.cont16.i.i.i.us.us.us.us, label %if.then.i.i.i.i.i.i.i.i.i.i.i.us.us.us.us

if.then.i.i.i.i.i.i.i.i.i.i.i.us.us.us.us:        ; preds = %invoke.cont.i.i.i.us.us.us.us
  %52 = bitcast i32* %cond.i31.i.i.i.us.us.us.us to i8*
  %53 = bitcast i32* %48 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %52, i8* align 4 %53, i64 %sub.ptr.sub.i.i.i.i.i.us.us.us.us, i1 false) #8
  br label %invoke.cont16.i.i.i.us.us.us.us

invoke.cont16.i.i.i.us.us.us.us:                  ; preds = %if.then.i.i.i.i.i.i.i.i.i.i.i.us.us.us.us, %invoke.cont.i.i.i.us.us.us.us
  %incdec.ptr.i.i.i.us.us.us.us = getelementptr inbounds i32, i32* %add.ptr.i.i.i.us.us.us.us, i64 1
  %tobool.not.i.i.i.i.us.us.us.us = icmp eq i32* %48, null
  br i1 %tobool.not.i.i.i.i.us.us.us.us, label %_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_.exit.i.i.us.us.us.us, label %if.then.i41.i.i.i.us.us.us.us

if.then.i41.i.i.i.us.us.us.us:                    ; preds = %invoke.cont16.i.i.i.us.us.us.us
  %54 = bitcast i32* %48 to i8*
  tail call void @_ZdlPv(i8* noundef nonnull %54) #8
  br label %_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_.exit.i.i.us.us.us.us

_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_.exit.i.i.us.us.us.us: ; preds = %if.then.i41.i.i.i.us.us.us.us, %invoke.cont16.i.i.i.us.us.us.us
  store i32* %cond.i31.i.i.i.us.us.us.us, i32** %_M_start.i, align 8, !tbaa !74
  store i32* %incdec.ptr.i.i.i.us.us.us.us, i32** %_M_finish.i.i, align 8, !tbaa !71
  %add.ptr32.i.i.i.us.us.us.us = getelementptr inbounds i32, i32* %cond.i31.i.i.i.us.us.us.us, i64 %cond.i.i.i.i.us.us.us.us
  store i32* %add.ptr32.i.i.i.us.us.us.us, i32** %_M_end_of_storage.i.i, align 8, !tbaa !109
  br label %_ZNSt6vectorIiSaIiEE9push_backEOi.exit.us.us.us.us

_ZNSt6vectorIiSaIiEE9push_backEOi.exit.us.us.us.us: ; preds = %_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_.exit.i.i.us.us.us.us, %if.then.i.i66.us.us.us.us
  %55 = phi i32* [ %cond.i31.i.i.i.us.us.us.us, %_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_.exit.i.i.us.us.us.us ], [ %46, %if.then.i.i66.us.us.us.us ]
  %56 = phi i32* [ %add.ptr32.i.i.i.us.us.us.us, %_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_.exit.i.i.us.us.us.us ], [ %47, %if.then.i.i66.us.us.us.us ]
  %57 = phi i32* [ %cond.i31.i.i.i.us.us.us.us, %_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_.exit.i.i.us.us.us.us ], [ %48, %if.then.i.i66.us.us.us.us ]
  %58 = phi i32* [ %add.ptr32.i.i.i.us.us.us.us, %_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_.exit.i.i.us.us.us.us ], [ %49, %if.then.i.i66.us.us.us.us ]
  %59 = phi i32* [ %incdec.ptr.i.i.i.us.us.us.us, %_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_.exit.i.i.us.us.us.us ], [ %incdec.ptr.i.i.us.us.us.us, %if.then.i.i66.us.us.us.us ]
  %inc45.us.us.us.us = add i32 %x.070.us.us.us.us, 1
  %exitcond.not = icmp eq i32 %inc45.us.us.us.us, %maxx.0
  br i1 %exitcond.not, label %for.cond40.for.cond.cleanup42_crit_edge.us.us.us, label %for.body43.us.us.us.us, !llvm.loop !162

for.cond36.for.cond.cleanup38_crit_edge.split.us.us.us: ; preds = %for.cond40.for.cond.cleanup42_crit_edge.us.us.us
  %inc50.us.us = add i32 %z.0114.us.us, 1
  %exitcond128.not = icmp eq i32 %inc50.us.us, %maxz.1
  br i1 %exitcond128.not, label %for.cond.cleanup, label %for.cond36.preheader.us.us, !llvm.loop !164

for.cond.cleanup:                                 ; preds = %for.cond36.for.cond.cleanup38_crit_edge.split.us.us.us, %_ZNSt6vectorIiSaIiEE7reserveEm.exit
  ret void
}

; Function Attrs: noreturn
declare void @_ZSt20__throw_length_errorPKc(i8* noundef) local_unnamed_addr #14

declare void @__cxa_end_catch() local_unnamed_addr

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #17

; Function Attrs: uwtable
define linkonce_odr dso_local { i64, i64 } @_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE17_M_emplace_uniqueIJS0_IiiEEEES0_ISt17_Rb_tree_iteratorIS2_EbEDpOT_(%"class.std::_Rb_tree.11"* noundef nonnull align 8 dereferenceable(48) %this, %"struct.std::pair"* noundef nonnull align 4 dereferenceable(8) %__args) local_unnamed_addr #11 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
invoke.cont:
  %call2.i.i.i.i = tail call noalias noundef nonnull i8* @_Znwm(i64 noundef 40) #30
  %_M_storage.i.i.i = getelementptr inbounds i8, i8* %call2.i.i.i.i, i64 32
  %first.i.i.i.i.i = bitcast i8* %_M_storage.i.i.i to i32*
  %first2.i.i.i.i.i = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %__args, i64 0, i32 0
  %0 = load i32, i32* %first2.i.i.i.i.i, align 4
  store i32 %0, i32* %first.i.i.i.i.i, align 4, !tbaa !165
  %1 = getelementptr inbounds i8, i8* %call2.i.i.i.i, i64 36
  %2 = bitcast i8* %1 to i32*
  %second3.i.i.i.i.i = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %__args, i64 0, i32 1
  %3 = load i32, i32* %second3.i.i.i.i.i, align 4, !tbaa !16
  store i32 %3, i32* %2, align 4, !tbaa !167
  %4 = getelementptr inbounds %"class.std::_Rb_tree.11", %"class.std::_Rb_tree.11"* %this, i64 0, i32 0, i32 0, i32 0, i32 0
  %_M_parent.i.i = getelementptr inbounds i8, i8* %4, i64 16
  %5 = bitcast i8* %_M_parent.i.i to %"struct.std::_Rb_tree_node"**
  %add.ptr.i.i = getelementptr inbounds i8, i8* %4, i64 8
  %_M_header.i.i = bitcast i8* %add.ptr.i.i to %"struct.std::_Rb_tree_node_base"*
  %__x.029.i = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8, !tbaa !94
  %cmp.not30.i = icmp eq %"struct.std::_Rb_tree_node"* %__x.029.i, null
  br i1 %cmp.not30.i, label %if.then.i, label %while.body.i

while.body.i:                                     ; preds = %invoke.cont, %while.body.i
  %__x.031.i = phi %"struct.std::_Rb_tree_node"* [ %__x.0.i, %while.body.i ], [ %__x.029.i, %invoke.cont ]
  %_M_storage.i.i.i.i = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %__x.031.i, i64 0, i32 1
  %first.i.i.i = bitcast %"struct.__gnu_cxx::__aligned_membuf"* %_M_storage.i.i.i.i to i32*
  %6 = load i32, i32* %first.i.i.i, align 4, !tbaa !16
  %cmp.i.i = icmp slt i32 %0, %6
  %_M_left.i.i = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %__x.031.i, i64 0, i32 0, i32 2
  %_M_right.i.i = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %__x.031.i, i64 0, i32 0, i32 3
  %cond.in.in.i = select i1 %cmp.i.i, %"struct.std::_Rb_tree_node_base"** %_M_left.i.i, %"struct.std::_Rb_tree_node_base"** %_M_right.i.i
  %cond.in.i = bitcast %"struct.std::_Rb_tree_node_base"** %cond.in.in.i to %"struct.std::_Rb_tree_node"**
  %__x.0.i = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %cond.in.i, align 8, !tbaa !94
  %cmp.not.i = icmp eq %"struct.std::_Rb_tree_node"* %__x.0.i, null
  br i1 %cmp.not.i, label %while.end.i, label %while.body.i, !llvm.loop !168

while.end.i:                                      ; preds = %while.body.i
  %7 = getelementptr %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %__x.031.i, i64 0, i32 0
  br i1 %cmp.i.i, label %if.then.i, label %if.end12.i

if.then.i:                                        ; preds = %while.end.i, %invoke.cont
  %__y.0.lcssa38.i = phi %"struct.std::_Rb_tree_node_base"* [ %7, %while.end.i ], [ %_M_header.i.i, %invoke.cont ]
  %_M_left.i3.i = getelementptr inbounds i8, i8* %4, i64 24
  %8 = bitcast i8* %_M_left.i3.i to %"struct.std::_Rb_tree_node_base"**
  %9 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %8, align 8, !tbaa !91
  %cmp.i5.i = icmp eq %"struct.std::_Rb_tree_node_base"* %__y.0.lcssa38.i, %9
  br i1 %cmp.i5.i, label %invoke.cont4, label %if.else.i

if.else.i:                                        ; preds = %if.then.i
  %call.i.i = tail call noundef %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* noundef %__y.0.lcssa38.i) #32
  br label %if.end12.i

if.end12.i:                                       ; preds = %if.else.i, %while.end.i
  %__y.0.lcssa37.i = phi %"struct.std::_Rb_tree_node_base"* [ %__y.0.lcssa38.i, %if.else.i ], [ %7, %while.end.i ]
  %__j.sroa.0.0.i = phi %"struct.std::_Rb_tree_node_base"* [ %call.i.i, %if.else.i ], [ %7, %while.end.i ]
  %first.i.i7.i = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %__j.sroa.0.0.i, i64 1, i32 0
  %10 = load i32, i32* %first.i.i7.i, align 4, !tbaa !16
  %cmp.i8.i = icmp slt i32 %10, %0
  %11 = ptrtoint %"struct.std::_Rb_tree_node_base"* %__j.sroa.0.0.i to i64
  br i1 %cmp.i8.i, label %invoke.cont4, label %if.end

invoke.cont4:                                     ; preds = %if.end12.i, %if.then.i
  %retval.sroa.4.0.i = phi %"struct.std::_Rb_tree_node_base"* [ %__y.0.lcssa38.i, %if.then.i ], [ %__y.0.lcssa37.i, %if.end12.i ]
  %tobool.not = icmp eq %"struct.std::_Rb_tree_node_base"* %retval.sroa.4.0.i, null
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %invoke.cont4
  %cmp2.i = icmp eq %"struct.std::_Rb_tree_node_base"* %retval.sroa.4.0.i, %_M_header.i.i
  br i1 %cmp2.i, label %invoke.cont8, label %lor.rhs.i

lor.rhs.i:                                        ; preds = %if.then
  %first.i.i5.i = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %retval.sroa.4.0.i, i64 1, i32 0
  %12 = load i32, i32* %first.i.i5.i, align 4, !tbaa !16
  %cmp.i.i18 = icmp slt i32 %0, %12
  br label %invoke.cont8

invoke.cont8:                                     ; preds = %lor.rhs.i, %if.then
  %13 = phi i1 [ true, %if.then ], [ %cmp.i.i18, %lor.rhs.i ]
  %14 = bitcast i8* %call2.i.i.i.i to %"struct.std::_Rb_tree_node_base"*
  tail call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 noundef zeroext %13, %"struct.std::_Rb_tree_node_base"* noundef nonnull %14, %"struct.std::_Rb_tree_node_base"* noundef nonnull %retval.sroa.4.0.i, %"struct.std::_Rb_tree_node_base"* noundef nonnull align 8 dereferenceable(32) %_M_header.i.i) #8
  %_M_node_count.i = getelementptr inbounds i8, i8* %4, i64 40
  %15 = bitcast i8* %_M_node_count.i to i64*
  %16 = load i64, i64* %15, align 8, !tbaa !93
  %inc.i = add i64 %16, 1
  store i64 %inc.i, i64* %15, align 8, !tbaa !93
  %coerce.val.pi.i = ptrtoint i8* %call2.i.i.i.i to i64
  br label %cleanup

if.end:                                           ; preds = %if.end12.i, %invoke.cont4
  %retval.sroa.0.0.i26 = phi i64 [ 0, %invoke.cont4 ], [ %11, %if.end12.i ]
  tail call void @_ZdlPv(i8* noundef nonnull %call2.i.i.i.i) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end, %invoke.cont8
  %retval.sroa.0.0 = phi i64 [ %retval.sroa.0.0.i26, %if.end ], [ %coerce.val.pi.i, %invoke.cont8 ]
  %retval.sroa.3.0 = phi i64 [ 0, %if.end ], [ 1, %invoke.cont8 ]
  %.fca.0.insert = insertvalue { i64, i64 } poison, i64 %retval.sroa.0.0, 0
  %.fca.1.insert = insertvalue { i64, i64 } %.fca.0.insert, i64 %retval.sroa.3.0, 1
  ret { i64, i64 } %.fca.1.insert
}

; Function Attrs: mustprogress nofree nounwind readonly willreturn
declare noundef %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* noundef) local_unnamed_addr #21

; Function Attrs: nounwind
declare void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 noundef zeroext, %"struct.std::_Rb_tree_node_base"* noundef, %"struct.std::_Rb_tree_node_base"* noundef, %"struct.std::_Rb_tree_node_base"* noundef nonnull align 8 dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: uwtable
define linkonce_odr dso_local { i64, i64 } @_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE17_M_emplace_uniqueIJS0_IimEEEES0_ISt17_Rb_tree_iteratorIS2_EbEDpOT_(%"class.std::_Rb_tree.11"* noundef nonnull align 8 dereferenceable(48) %this, %"struct.std::pair.32"* noundef nonnull align 8 dereferenceable(16) %__args) local_unnamed_addr #11 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
invoke.cont:
  %call2.i.i.i.i = tail call noalias noundef nonnull i8* @_Znwm(i64 noundef 40) #30
  %_M_storage.i.i.i = getelementptr inbounds i8, i8* %call2.i.i.i.i, i64 32
  %first.i.i.i.i.i = bitcast i8* %_M_storage.i.i.i to i32*
  %first2.i.i.i.i.i = getelementptr inbounds %"struct.std::pair.32", %"struct.std::pair.32"* %__args, i64 0, i32 0
  %0 = load i32, i32* %first2.i.i.i.i.i, align 8
  store i32 %0, i32* %first.i.i.i.i.i, align 4, !tbaa !165
  %1 = getelementptr inbounds i8, i8* %call2.i.i.i.i, i64 36
  %2 = bitcast i8* %1 to i32*
  %second3.i.i.i.i.i = getelementptr inbounds %"struct.std::pair.32", %"struct.std::pair.32"* %__args, i64 0, i32 1
  %3 = load i64, i64* %second3.i.i.i.i.i, align 8, !tbaa !169
  %conv.i.i.i.i.i = trunc i64 %3 to i32
  store i32 %conv.i.i.i.i.i, i32* %2, align 4, !tbaa !167
  %4 = getelementptr inbounds %"class.std::_Rb_tree.11", %"class.std::_Rb_tree.11"* %this, i64 0, i32 0, i32 0, i32 0, i32 0
  %_M_parent.i.i = getelementptr inbounds i8, i8* %4, i64 16
  %5 = bitcast i8* %_M_parent.i.i to %"struct.std::_Rb_tree_node"**
  %add.ptr.i.i = getelementptr inbounds i8, i8* %4, i64 8
  %_M_header.i.i = bitcast i8* %add.ptr.i.i to %"struct.std::_Rb_tree_node_base"*
  %__x.029.i = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8, !tbaa !94
  %cmp.not30.i = icmp eq %"struct.std::_Rb_tree_node"* %__x.029.i, null
  br i1 %cmp.not30.i, label %if.then.i, label %while.body.i

while.body.i:                                     ; preds = %invoke.cont, %while.body.i
  %__x.031.i = phi %"struct.std::_Rb_tree_node"* [ %__x.0.i, %while.body.i ], [ %__x.029.i, %invoke.cont ]
  %_M_storage.i.i.i.i = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %__x.031.i, i64 0, i32 1
  %first.i.i.i = bitcast %"struct.__gnu_cxx::__aligned_membuf"* %_M_storage.i.i.i.i to i32*
  %6 = load i32, i32* %first.i.i.i, align 4, !tbaa !16
  %cmp.i.i = icmp slt i32 %0, %6
  %_M_left.i.i = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %__x.031.i, i64 0, i32 0, i32 2
  %_M_right.i.i = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %__x.031.i, i64 0, i32 0, i32 3
  %cond.in.in.i = select i1 %cmp.i.i, %"struct.std::_Rb_tree_node_base"** %_M_left.i.i, %"struct.std::_Rb_tree_node_base"** %_M_right.i.i
  %cond.in.i = bitcast %"struct.std::_Rb_tree_node_base"** %cond.in.in.i to %"struct.std::_Rb_tree_node"**
  %__x.0.i = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %cond.in.i, align 8, !tbaa !94
  %cmp.not.i = icmp eq %"struct.std::_Rb_tree_node"* %__x.0.i, null
  br i1 %cmp.not.i, label %while.end.i, label %while.body.i, !llvm.loop !168

while.end.i:                                      ; preds = %while.body.i
  %7 = getelementptr %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %__x.031.i, i64 0, i32 0
  br i1 %cmp.i.i, label %if.then.i, label %if.end12.i

if.then.i:                                        ; preds = %while.end.i, %invoke.cont
  %__y.0.lcssa38.i = phi %"struct.std::_Rb_tree_node_base"* [ %7, %while.end.i ], [ %_M_header.i.i, %invoke.cont ]
  %_M_left.i3.i = getelementptr inbounds i8, i8* %4, i64 24
  %8 = bitcast i8* %_M_left.i3.i to %"struct.std::_Rb_tree_node_base"**
  %9 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %8, align 8, !tbaa !91
  %cmp.i5.i = icmp eq %"struct.std::_Rb_tree_node_base"* %__y.0.lcssa38.i, %9
  br i1 %cmp.i5.i, label %invoke.cont4, label %if.else.i

if.else.i:                                        ; preds = %if.then.i
  %call.i.i = tail call noundef %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* noundef %__y.0.lcssa38.i) #32
  br label %if.end12.i

if.end12.i:                                       ; preds = %if.else.i, %while.end.i
  %__y.0.lcssa37.i = phi %"struct.std::_Rb_tree_node_base"* [ %__y.0.lcssa38.i, %if.else.i ], [ %7, %while.end.i ]
  %__j.sroa.0.0.i = phi %"struct.std::_Rb_tree_node_base"* [ %call.i.i, %if.else.i ], [ %7, %while.end.i ]
  %first.i.i7.i = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %__j.sroa.0.0.i, i64 1, i32 0
  %10 = load i32, i32* %first.i.i7.i, align 4, !tbaa !16
  %cmp.i8.i = icmp slt i32 %10, %0
  %11 = ptrtoint %"struct.std::_Rb_tree_node_base"* %__j.sroa.0.0.i to i64
  br i1 %cmp.i8.i, label %invoke.cont4, label %if.end

invoke.cont4:                                     ; preds = %if.end12.i, %if.then.i
  %retval.sroa.4.0.i = phi %"struct.std::_Rb_tree_node_base"* [ %__y.0.lcssa38.i, %if.then.i ], [ %__y.0.lcssa37.i, %if.end12.i ]
  %tobool.not = icmp eq %"struct.std::_Rb_tree_node_base"* %retval.sroa.4.0.i, null
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %invoke.cont4
  %cmp2.i = icmp eq %"struct.std::_Rb_tree_node_base"* %retval.sroa.4.0.i, %_M_header.i.i
  br i1 %cmp2.i, label %invoke.cont8, label %lor.rhs.i

lor.rhs.i:                                        ; preds = %if.then
  %first.i.i5.i = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %retval.sroa.4.0.i, i64 1, i32 0
  %12 = load i32, i32* %first.i.i5.i, align 4, !tbaa !16
  %cmp.i.i18 = icmp slt i32 %0, %12
  br label %invoke.cont8

invoke.cont8:                                     ; preds = %lor.rhs.i, %if.then
  %13 = phi i1 [ true, %if.then ], [ %cmp.i.i18, %lor.rhs.i ]
  %14 = bitcast i8* %call2.i.i.i.i to %"struct.std::_Rb_tree_node_base"*
  tail call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 noundef zeroext %13, %"struct.std::_Rb_tree_node_base"* noundef nonnull %14, %"struct.std::_Rb_tree_node_base"* noundef nonnull %retval.sroa.4.0.i, %"struct.std::_Rb_tree_node_base"* noundef nonnull align 8 dereferenceable(32) %_M_header.i.i) #8
  %_M_node_count.i = getelementptr inbounds i8, i8* %4, i64 40
  %15 = bitcast i8* %_M_node_count.i to i64*
  %16 = load i64, i64* %15, align 8, !tbaa !93
  %inc.i = add i64 %16, 1
  store i64 %inc.i, i64* %15, align 8, !tbaa !93
  %coerce.val.pi.i = ptrtoint i8* %call2.i.i.i.i to i64
  br label %cleanup

if.end:                                           ; preds = %if.end12.i, %invoke.cont4
  %retval.sroa.0.0.i26 = phi i64 [ 0, %invoke.cont4 ], [ %11, %if.end12.i ]
  tail call void @_ZdlPv(i8* noundef nonnull %call2.i.i.i.i) #8
  br label %cleanup

cleanup:                                          ; preds = %if.end, %invoke.cont8
  %retval.sroa.0.0 = phi i64 [ %retval.sroa.0.0.i26, %if.end ], [ %coerce.val.pi.i, %invoke.cont8 ]
  %retval.sroa.3.0 = phi i64 [ 0, %if.end ], [ 1, %invoke.cont8 ]
  %.fca.0.insert = insertvalue { i64, i64 } poison, i64 %retval.sroa.0.0, 0
  %.fca.1.insert = insertvalue { i64, i64 } %.fca.0.insert, i64 %retval.sroa.3.0, 1
  ret { i64, i64 } %.fca.1.insert
}

; Function Attrs: uwtable
define linkonce_odr dso_local noundef signext i32 @_ZN6miniFE15find_row_for_idIiEET_S1_RKSt3mapIS1_S1_St4lessIS1_ESaISt4pairIKS1_S1_EEE(i32 noundef signext %id, %"class.std::map"* noundef nonnull align 8 dereferenceable(48) %ids_to_rows) local_unnamed_addr #11 comdat {
entry:
  %0 = getelementptr inbounds %"class.std::map", %"class.std::map"* %ids_to_rows, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %_M_parent.i.i.i = getelementptr inbounds i8, i8* %0, i64 16
  %1 = bitcast i8* %_M_parent.i.i.i to %"struct.std::_Rb_tree_node"**
  %2 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %1, align 8, !tbaa !86
  %add.ptr.i.i.i = getelementptr inbounds i8, i8* %0, i64 8
  %_M_header.i.i.i = bitcast i8* %add.ptr.i.i.i to %"struct.std::_Rb_tree_node_base"*
  %cmp.not5.i.i.i = icmp eq %"struct.std::_Rb_tree_node"* %2, null
  br i1 %cmp.not5.i.i.i, label %if.then, label %while.body.i.i.i

while.body.i.i.i:                                 ; preds = %entry, %while.body.i.i.i
  %__x.addr.07.i.i.i = phi %"struct.std::_Rb_tree_node"* [ %__x.addr.1.i.i.i, %while.body.i.i.i ], [ %2, %entry ]
  %__y.addr.06.i.i.i = phi %"struct.std::_Rb_tree_node_base"* [ %__y.addr.1.i.i.i, %while.body.i.i.i ], [ %_M_header.i.i.i, %entry ]
  %_M_storage.i.i.i.i.i.i = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %__x.addr.07.i.i.i, i64 0, i32 1
  %first.i.i.i.i.i = bitcast %"struct.__gnu_cxx::__aligned_membuf"* %_M_storage.i.i.i.i.i.i to i32*
  %3 = load i32, i32* %first.i.i.i.i.i, align 4, !tbaa !16
  %cmp.i.i.i.i = icmp slt i32 %3, %id
  %_M_right.i.i.i.i = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %__x.addr.07.i.i.i, i64 0, i32 0, i32 3
  %4 = getelementptr %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %__x.addr.07.i.i.i, i64 0, i32 0
  %_M_left.i.i.i.i = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %__x.addr.07.i.i.i, i64 0, i32 0, i32 2
  %__y.addr.1.i.i.i = select i1 %cmp.i.i.i.i, %"struct.std::_Rb_tree_node_base"* %__y.addr.06.i.i.i, %"struct.std::_Rb_tree_node_base"* %4
  %__x.addr.1.in.in.i.i.i = select i1 %cmp.i.i.i.i, %"struct.std::_Rb_tree_node_base"** %_M_right.i.i.i.i, %"struct.std::_Rb_tree_node_base"** %_M_left.i.i.i.i
  %__x.addr.1.in.i.i.i = bitcast %"struct.std::_Rb_tree_node_base"** %__x.addr.1.in.in.i.i.i to %"struct.std::_Rb_tree_node"**
  %__x.addr.1.i.i.i = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %__x.addr.1.in.i.i.i, align 8, !tbaa !94
  %cmp.not.i.i.i = icmp eq %"struct.std::_Rb_tree_node"* %__x.addr.1.i.i.i, null
  br i1 %cmp.not.i.i.i, label %_ZNKSt3mapIiiSt4lessIiESaISt4pairIKiiEEE11lower_boundERS3_.exit, label %while.body.i.i.i, !llvm.loop !170

_ZNKSt3mapIiiSt4lessIiESaISt4pairIKiiEEE11lower_boundERS3_.exit: ; preds = %while.body.i.i.i
  %cmp.i = icmp eq %"struct.std::_Rb_tree_node_base"* %__y.addr.1.i.i.i, %_M_header.i.i.i
  br i1 %cmp.i, label %if.then, label %lor.rhs

lor.rhs:                                          ; preds = %_ZNKSt3mapIiiSt4lessIiESaISt4pairIKiiEEE11lower_boundERS3_.exit
  %first = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %__y.addr.1.i.i.i, i64 1, i32 0
  %5 = load i32, i32* %first, align 4, !tbaa !165
  %cmp.not = icmp eq i32 %5, %id
  br i1 %cmp.not, label %if.end12, label %if.then

if.then:                                          ; preds = %entry, %_ZNKSt3mapIiiSt4lessIiESaISt4pairIKiiEEE11lower_boundERS3_.exit, %lor.rhs
  %__y.addr.0.lcssa.i.i.i90 = phi %"struct.std::_Rb_tree_node_base"* [ %__y.addr.1.i.i.i, %_ZNKSt3mapIiiSt4lessIiESaISt4pairIKiiEEE11lower_boundERS3_.exit ], [ %__y.addr.1.i.i.i, %lor.rhs ], [ %_M_header.i.i.i, %entry ]
  %_M_node_count.i.i = getelementptr inbounds i8, i8* %0, i64 40
  %6 = bitcast i8* %_M_node_count.i.i to i64*
  %7 = load i64, i64* %6, align 8, !tbaa !93
  %cmp7.not = icmp eq i64 %7, 0
  br i1 %cmp7.not, label %if.else, label %if.then8

if.then8:                                         ; preds = %if.then
  %call.i = tail call noundef %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* noundef %__y.addr.0.lcssa.i.i.i90) #32
  br label %if.end12

if.else:                                          ; preds = %if.then
  %call1.i = tail call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i8* noundef nonnull getelementptr inbounds ([32 x i8], [32 x i8]* @.str.59, i64 0, i64 0), i64 noundef 31)
  %vtable.i = load i8*, i8** bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8**), align 8, !tbaa !32
  %vbase.offset.ptr.i = getelementptr i8, i8* %vtable.i, i64 -24
  %8 = bitcast i8* %vbase.offset.ptr.i to i64*
  %vbase.offset.i = load i64, i64* %8, align 8
  %add.ptr.i = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8*), i64 %vbase.offset.i
  %_M_ctype.i.i = getelementptr inbounds i8, i8* %add.ptr.i, i64 240
  %9 = bitcast i8* %_M_ctype.i.i to %"class.std::ctype"**
  %10 = load %"class.std::ctype"*, %"class.std::ctype"** %9, align 8, !tbaa !34
  %tobool.not.i.i.i = icmp eq %"class.std::ctype"* %10, null
  br i1 %tobool.not.i.i.i, label %if.then.i.i.i, label %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i

if.then.i.i.i:                                    ; preds = %if.else
  tail call void @_ZSt16__throw_bad_castv() #29
  unreachable

_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i: ; preds = %if.else
  %_M_widen_ok.i.i.i = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %10, i64 0, i32 8
  %11 = load i8, i8* %_M_widen_ok.i.i.i, align 8, !tbaa !37
  %tobool.not.i1.i.i = icmp eq i8 %11, 0
  br i1 %tobool.not.i1.i.i, label %if.end.i.i.i, label %if.then.i2.i.i

if.then.i2.i.i:                                   ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
  %arrayidx.i.i.i = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %10, i64 0, i32 9, i64 10
  %12 = load i8, i8* %arrayidx.i.i.i, align 1, !tbaa !39
  br label %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit

if.end.i.i.i:                                     ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
  tail call void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %10)
  %13 = bitcast %"class.std::ctype"* %10 to i8 (%"class.std::ctype"*, i8)***
  %vtable.i.i.i = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %13, align 8, !tbaa !32
  %vfn.i.i.i = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vtable.i.i.i, i64 6
  %14 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vfn.i.i.i, align 8
  %call.i.i.i = tail call noundef zeroext i8 %14(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %10, i8 noundef zeroext 10)
  br label %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit

_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit: ; preds = %if.then.i2.i.i, %if.end.i.i.i
  %retval.0.i.i.i = phi i8 [ %12, %if.then.i2.i.i ], [ %call.i.i.i, %if.end.i.i.i ]
  %call1.i26 = tail call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i8 noundef zeroext %retval.0.i.i.i)
  %call.i.i27 = tail call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call1.i26)
  br label %cleanup46

if.end12:                                         ; preds = %if.then8, %lor.rhs
  %iter.sroa.0.0 = phi %"struct.std::_Rb_tree_node_base"* [ %call.i, %if.then8 ], [ %__y.addr.1.i.i.i, %lor.rhs ]
  %_M_storage.i.i8 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %iter.sroa.0.0, i64 1
  %15 = bitcast %"struct.std::_Rb_tree_node_base"* %_M_storage.i.i8 to %"struct.std::pair.39"*
  %first14 = getelementptr %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %_M_storage.i.i8, i64 0, i32 0
  %16 = load i32, i32* %first14, align 4, !tbaa !165
  %cmp15 = icmp eq i32 %16, %id
  br i1 %cmp15, label %if.then16, label %if.end18

if.then16:                                        ; preds = %if.end12
  %second = getelementptr inbounds %"struct.std::pair.39", %"struct.std::pair.39"* %15, i64 0, i32 1
  %17 = load i32, i32* %second, align 4, !tbaa !167
  br label %cleanup46

if.end18:                                         ; preds = %if.end12
  %_M_left.i.i = getelementptr inbounds i8, i8* %0, i64 24
  %18 = bitcast i8* %_M_left.i.i to %"struct.std::_Rb_tree_node_base"**
  %19 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %18, align 8, !tbaa !91
  %cmp.i13 = icmp eq %"struct.std::_Rb_tree_node_base"* %iter.sroa.0.0, %19
  %cmp26 = icmp sgt i32 %16, %id
  %or.cond = select i1 %cmp.i13, i1 %cmp26, i1 false
  br i1 %or.cond, label %if.then27, label %if.end35

if.then27:                                        ; preds = %if.end18
  %call1.i16 = tail call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i8* noundef nonnull getelementptr inbounds ([11 x i8], [11 x i8]* @.str.60, i64 0, i64 0), i64 noundef 10)
  %call29 = tail call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i32 noundef signext %id)
  %call1.i18 = tail call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call29, i8* noundef nonnull getelementptr inbounds ([24 x i8], [24 x i8]* @.str.61, i64 0, i64 0), i64 noundef 23)
  %20 = load i32, i32* %first14, align 4, !tbaa !165
  %call33 = tail call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call29, i32 noundef signext %20)
  %21 = bitcast %"class.std::basic_ostream"* %call33 to i8**
  %vtable.i28 = load i8*, i8** %21, align 8, !tbaa !32
  %vbase.offset.ptr.i29 = getelementptr i8, i8* %vtable.i28, i64 -24
  %22 = bitcast i8* %vbase.offset.ptr.i29 to i64*
  %vbase.offset.i30 = load i64, i64* %22, align 8
  %23 = bitcast %"class.std::basic_ostream"* %call33 to i8*
  %add.ptr.i31 = getelementptr inbounds i8, i8* %23, i64 %vbase.offset.i30
  %_M_ctype.i.i32 = getelementptr inbounds i8, i8* %add.ptr.i31, i64 240
  %24 = bitcast i8* %_M_ctype.i.i32 to %"class.std::ctype"**
  %25 = load %"class.std::ctype"*, %"class.std::ctype"** %24, align 8, !tbaa !34
  %tobool.not.i.i.i33 = icmp eq %"class.std::ctype"* %25, null
  br i1 %tobool.not.i.i.i33, label %if.then.i.i.i34, label %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i37

if.then.i.i.i34:                                  ; preds = %if.then27
  tail call void @_ZSt16__throw_bad_castv() #29
  unreachable

_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i37: ; preds = %if.then27
  %_M_widen_ok.i.i.i35 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %25, i64 0, i32 8
  %26 = load i8, i8* %_M_widen_ok.i.i.i35, align 8, !tbaa !37
  %tobool.not.i1.i.i36 = icmp eq i8 %26, 0
  br i1 %tobool.not.i1.i.i36, label %if.end.i.i.i43, label %if.then.i2.i.i39

if.then.i2.i.i39:                                 ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i37
  %arrayidx.i.i.i38 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %25, i64 0, i32 9, i64 10
  %27 = load i8, i8* %arrayidx.i.i.i38, align 1, !tbaa !39
  br label %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit47

if.end.i.i.i43:                                   ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i37
  tail call void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %25)
  %28 = bitcast %"class.std::ctype"* %25 to i8 (%"class.std::ctype"*, i8)***
  %vtable.i.i.i40 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %28, align 8, !tbaa !32
  %vfn.i.i.i41 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vtable.i.i.i40, i64 6
  %29 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vfn.i.i.i41, align 8
  %call.i.i.i42 = tail call noundef zeroext i8 %29(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %25, i8 noundef zeroext 10)
  br label %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit47

_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit47: ; preds = %if.then.i2.i.i39, %if.end.i.i.i43
  %retval.0.i.i.i44 = phi i8 [ %27, %if.then.i2.i.i39 ], [ %call.i.i.i42, %if.end.i.i.i43 ]
  %call1.i45 = tail call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call33, i8 noundef zeroext %retval.0.i.i.i44)
  %call.i.i46 = tail call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call1.i45)
  br label %cleanup46

if.end35:                                         ; preds = %if.end18
  %sub = sub nsw i32 %id, %16
  %cmp38 = icmp slt i32 %sub, 0
  br i1 %cmp38, label %if.then39, label %if.end43

if.then39:                                        ; preds = %if.end35
  %call1.i23 = tail call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i8* noundef nonnull getelementptr inbounds ([50 x i8], [50 x i8]* @.str.62, i64 0, i64 0), i64 noundef 49)
  %call41 = tail call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i32 noundef signext %id)
  %30 = bitcast %"class.std::basic_ostream"* %call41 to i8**
  %vtable.i48 = load i8*, i8** %30, align 8, !tbaa !32
  %vbase.offset.ptr.i49 = getelementptr i8, i8* %vtable.i48, i64 -24
  %31 = bitcast i8* %vbase.offset.ptr.i49 to i64*
  %vbase.offset.i50 = load i64, i64* %31, align 8
  %32 = bitcast %"class.std::basic_ostream"* %call41 to i8*
  %add.ptr.i51 = getelementptr inbounds i8, i8* %32, i64 %vbase.offset.i50
  %_M_ctype.i.i52 = getelementptr inbounds i8, i8* %add.ptr.i51, i64 240
  %33 = bitcast i8* %_M_ctype.i.i52 to %"class.std::ctype"**
  %34 = load %"class.std::ctype"*, %"class.std::ctype"** %33, align 8, !tbaa !34
  %tobool.not.i.i.i53 = icmp eq %"class.std::ctype"* %34, null
  br i1 %tobool.not.i.i.i53, label %if.then.i.i.i54, label %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i57

if.then.i.i.i54:                                  ; preds = %if.then39
  tail call void @_ZSt16__throw_bad_castv() #29
  unreachable

_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i57: ; preds = %if.then39
  %_M_widen_ok.i.i.i55 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %34, i64 0, i32 8
  %35 = load i8, i8* %_M_widen_ok.i.i.i55, align 8, !tbaa !37
  %tobool.not.i1.i.i56 = icmp eq i8 %35, 0
  br i1 %tobool.not.i1.i.i56, label %if.end.i.i.i63, label %if.then.i2.i.i59

if.then.i2.i.i59:                                 ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i57
  %arrayidx.i.i.i58 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %34, i64 0, i32 9, i64 10
  %36 = load i8, i8* %arrayidx.i.i.i58, align 1, !tbaa !39
  br label %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit67

if.end.i.i.i63:                                   ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i57
  tail call void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %34)
  %37 = bitcast %"class.std::ctype"* %34 to i8 (%"class.std::ctype"*, i8)***
  %vtable.i.i.i60 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %37, align 8, !tbaa !32
  %vfn.i.i.i61 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vtable.i.i.i60, i64 6
  %38 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vfn.i.i.i61, align 8
  %call.i.i.i62 = tail call noundef zeroext i8 %38(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %34, i8 noundef zeroext 10)
  br label %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit67

_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit67: ; preds = %if.then.i2.i.i59, %if.end.i.i.i63
  %retval.0.i.i.i64 = phi i8 [ %36, %if.then.i2.i.i59 ], [ %call.i.i.i62, %if.end.i.i.i63 ]
  %call1.i65 = tail call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call41, i8 noundef zeroext %retval.0.i.i.i64)
  %call.i.i66 = tail call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call1.i65)
  br label %cleanup46

if.end43:                                         ; preds = %if.end35
  %second45 = getelementptr inbounds %"struct.std::pair.39", %"struct.std::pair.39"* %15, i64 0, i32 1
  %39 = load i32, i32* %second45, align 4, !tbaa !167
  %add = add nsw i32 %39, %sub
  br label %cleanup46

cleanup46:                                        ; preds = %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit67, %if.end43, %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit47, %if.then16, %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit
  %retval.1 = phi i32 [ %17, %if.then16 ], [ -99, %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit47 ], [ -99, %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit ], [ -99, %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit67 ], [ %add, %if.end43 ]
  ret i32 %retval.1
}

; Function Attrs: mustprogress nofree nounwind readonly willreturn
declare noundef %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* noundef) local_unnamed_addr #21

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree.11"* noundef nonnull align 8 dereferenceable(48) %this, %"struct.std::_Rb_tree_node"* noundef %__x) local_unnamed_addr #22 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %cmp.not5 = icmp eq %"struct.std::_Rb_tree_node"* %__x, null
  br i1 %cmp.not5, label %while.end, label %while.body

while.body:                                       ; preds = %entry, %while.body
  %__x.addr.06 = phi %"struct.std::_Rb_tree_node"* [ %3, %while.body ], [ %__x, %entry ]
  %_M_right.i = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %__x.addr.06, i64 0, i32 0, i32 3
  %0 = bitcast %"struct.std::_Rb_tree_node_base"** %_M_right.i to %"struct.std::_Rb_tree_node"**
  %1 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %0, align 8, !tbaa !171
  tail call void @_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree.11"* noundef nonnull align 8 dereferenceable(48) %this, %"struct.std::_Rb_tree_node"* noundef %1)
  %_M_left.i = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %__x.addr.06, i64 0, i32 0, i32 2
  %2 = bitcast %"struct.std::_Rb_tree_node_base"** %_M_left.i to %"struct.std::_Rb_tree_node"**
  %3 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %2, align 8, !tbaa !172
  %4 = bitcast %"struct.std::_Rb_tree_node"* %__x.addr.06 to i8*
  tail call void @_ZdlPv(i8* noundef nonnull %4) #8
  %cmp.not = icmp eq %"struct.std::_Rb_tree_node"* %3, null
  br i1 %cmp.not, label %while.end, label %while.body, !llvm.loop !173

while.end:                                        ; preds = %while.body, %entry
  ret void
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiE(%"class.std::_Rb_tree"* noundef nonnull align 8 dereferenceable(48) %this, %"struct.std::_Rb_tree_node.48"* noundef %__x) local_unnamed_addr #22 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %cmp.not5 = icmp eq %"struct.std::_Rb_tree_node.48"* %__x, null
  br i1 %cmp.not5, label %while.end, label %while.body

while.body:                                       ; preds = %entry, %while.body
  %__x.addr.06 = phi %"struct.std::_Rb_tree_node.48"* [ %3, %while.body ], [ %__x, %entry ]
  %_M_right.i = getelementptr inbounds %"struct.std::_Rb_tree_node.48", %"struct.std::_Rb_tree_node.48"* %__x.addr.06, i64 0, i32 0, i32 3
  %0 = bitcast %"struct.std::_Rb_tree_node_base"** %_M_right.i to %"struct.std::_Rb_tree_node.48"**
  %1 = load %"struct.std::_Rb_tree_node.48"*, %"struct.std::_Rb_tree_node.48"** %0, align 8, !tbaa !171
  tail call void @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiE(%"class.std::_Rb_tree"* noundef nonnull align 8 dereferenceable(48) %this, %"struct.std::_Rb_tree_node.48"* noundef %1)
  %_M_left.i = getelementptr inbounds %"struct.std::_Rb_tree_node.48", %"struct.std::_Rb_tree_node.48"* %__x.addr.06, i64 0, i32 0, i32 2
  %2 = bitcast %"struct.std::_Rb_tree_node_base"** %_M_left.i to %"struct.std::_Rb_tree_node.48"**
  %3 = load %"struct.std::_Rb_tree_node.48"*, %"struct.std::_Rb_tree_node.48"** %2, align 8, !tbaa !172
  %4 = bitcast %"struct.std::_Rb_tree_node.48"* %__x.addr.06 to i8*
  tail call void @_ZdlPv(i8* noundef nonnull %4) #8
  %cmp.not = icmp eq %"struct.std::_Rb_tree_node.48"* %3, null
  br i1 %cmp.not, label %while.end, label %while.body, !llvm.loop !174

while.end:                                        ; preds = %while.body, %entry
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN6miniFE9CSRMatrixIdiiE13reserve_spaceEjj(%"struct.miniFE::CSRMatrix"* noundef nonnull align 8 dereferenceable(132) %this, i32 noundef zeroext %nrows, i32 noundef zeroext %ncols_per_row) local_unnamed_addr #11 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %nrows.addr = alloca i32, align 4
  %ncols_per_row.addr = alloca i32, align 4
  store i32 %nrows, i32* %nrows.addr, align 4, !tbaa !16
  store i32 %ncols_per_row, i32* %ncols_per_row.addr, align 4, !tbaa !16
  %rows = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %this, i64 0, i32 2
  %conv = zext i32 %nrows to i64
  %_M_finish.i.i = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %this, i64 0, i32 2, i32 0, i32 0, i32 1
  %0 = load i32*, i32** %_M_finish.i.i, align 8, !tbaa !71
  %_M_start.i.i = getelementptr inbounds %"class.std::vector.15", %"class.std::vector.15"* %rows, i64 0, i32 0, i32 0, i32 0
  %1 = load i32*, i32** %_M_start.i.i, align 8, !tbaa !74
  %sub.ptr.lhs.cast.i.i = ptrtoint i32* %0 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i32* %1 to i64
  %sub.ptr.sub.i.i = sub i64 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  %sub.ptr.div.i.i = ashr exact i64 %sub.ptr.sub.i.i, 2
  %cmp.i = icmp ult i64 %sub.ptr.div.i.i, %conv
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  %sub.i = sub nsw i64 %conv, %sub.ptr.div.i.i
  tail call void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(%"class.std::vector.15"* noundef nonnull align 8 dereferenceable(24) %rows, i64 noundef %sub.i)
  br label %_ZNSt6vectorIiSaIiEE6resizeEm.exit

if.else.i:                                        ; preds = %entry
  %cmp4.i = icmp ugt i64 %sub.ptr.div.i.i, %conv
  br i1 %cmp4.i, label %if.then5.i, label %_ZNSt6vectorIiSaIiEE6resizeEm.exit

if.then5.i:                                       ; preds = %if.else.i
  %add.ptr.i = getelementptr inbounds i32, i32* %1, i64 %conv
  %tobool.not.i.i = icmp eq i32* %0, %add.ptr.i
  br i1 %tobool.not.i.i, label %_ZNSt6vectorIiSaIiEE6resizeEm.exit, label %invoke.cont.i.i

invoke.cont.i.i:                                  ; preds = %if.then5.i
  store i32* %add.ptr.i, i32** %_M_finish.i.i, align 8, !tbaa !71
  br label %_ZNSt6vectorIiSaIiEE6resizeEm.exit

_ZNSt6vectorIiSaIiEE6resizeEm.exit:               ; preds = %if.then.i, %if.else.i, %if.then5.i, %invoke.cont.i.i
  %row_offsets = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %this, i64 0, i32 3
  %add = add i32 %nrows, 1
  %conv2 = zext i32 %add to i64
  %_M_finish.i.i1 = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %this, i64 0, i32 3, i32 0, i32 0, i32 1
  %2 = load i32*, i32** %_M_finish.i.i1, align 8, !tbaa !71
  %_M_start.i.i2 = getelementptr inbounds %"class.std::vector.15", %"class.std::vector.15"* %row_offsets, i64 0, i32 0, i32 0, i32 0
  %3 = load i32*, i32** %_M_start.i.i2, align 8, !tbaa !74
  %sub.ptr.lhs.cast.i.i3 = ptrtoint i32* %2 to i64
  %sub.ptr.rhs.cast.i.i4 = ptrtoint i32* %3 to i64
  %sub.ptr.sub.i.i5 = sub i64 %sub.ptr.lhs.cast.i.i3, %sub.ptr.rhs.cast.i.i4
  %sub.ptr.div.i.i6 = ashr exact i64 %sub.ptr.sub.i.i5, 2
  %cmp.i7 = icmp ult i64 %sub.ptr.div.i.i6, %conv2
  br i1 %cmp.i7, label %if.then.i9, label %if.else.i11

if.then.i9:                                       ; preds = %_ZNSt6vectorIiSaIiEE6resizeEm.exit
  %sub.i8 = sub nsw i64 %conv2, %sub.ptr.div.i.i6
  tail call void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(%"class.std::vector.15"* noundef nonnull align 8 dereferenceable(24) %row_offsets, i64 noundef %sub.i8)
  br label %_ZNSt6vectorIiSaIiEE6resizeEm.exit16

if.else.i11:                                      ; preds = %_ZNSt6vectorIiSaIiEE6resizeEm.exit
  %cmp4.i10 = icmp ugt i64 %sub.ptr.div.i.i6, %conv2
  br i1 %cmp4.i10, label %if.then5.i14, label %_ZNSt6vectorIiSaIiEE6resizeEm.exit16

if.then5.i14:                                     ; preds = %if.else.i11
  %add.ptr.i12 = getelementptr inbounds i32, i32* %3, i64 %conv2
  %tobool.not.i.i13 = icmp eq i32* %2, %add.ptr.i12
  br i1 %tobool.not.i.i13, label %_ZNSt6vectorIiSaIiEE6resizeEm.exit16, label %invoke.cont.i.i15

invoke.cont.i.i15:                                ; preds = %if.then5.i14
  store i32* %add.ptr.i12, i32** %_M_finish.i.i1, align 8, !tbaa !71
  br label %_ZNSt6vectorIiSaIiEE6resizeEm.exit16

_ZNSt6vectorIiSaIiEE6resizeEm.exit16:             ; preds = %if.then.i9, %if.else.i11, %if.then5.i14, %invoke.cont.i.i15
  %packed_cols = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %this, i64 0, i32 5
  %mul = mul i32 %ncols_per_row, %nrows
  %conv3 = zext i32 %mul to i64
  %_M_end_of_storage.i.i = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %this, i64 0, i32 5, i32 0, i32 0, i32 2
  %4 = load i32*, i32** %_M_end_of_storage.i.i, align 8, !tbaa !109
  %_M_start.i.i17 = getelementptr inbounds %"class.std::vector.15", %"class.std::vector.15"* %packed_cols, i64 0, i32 0, i32 0, i32 0
  %5 = load i32*, i32** %_M_start.i.i17, align 8, !tbaa !74
  %sub.ptr.lhs.cast.i.i18 = ptrtoint i32* %4 to i64
  %sub.ptr.rhs.cast.i.i19 = ptrtoint i32* %5 to i64
  %sub.ptr.sub.i.i20 = sub i64 %sub.ptr.lhs.cast.i.i18, %sub.ptr.rhs.cast.i.i19
  %sub.ptr.div.i.i21 = ashr exact i64 %sub.ptr.sub.i.i20, 2
  %cmp3.i = icmp ult i64 %sub.ptr.div.i.i21, %conv3
  br i1 %cmp3.i, label %_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm.exit.i.i, label %_ZNSt6vectorIiSaIiEE7reserveEm.exit

_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm.exit.i.i: ; preds = %_ZNSt6vectorIiSaIiEE6resizeEm.exit16
  %_M_finish.i.i22 = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %this, i64 0, i32 5, i32 0, i32 0, i32 1
  %6 = load i32*, i32** %_M_finish.i.i22, align 8, !tbaa !71
  %sub.ptr.lhs.cast.i8.i = ptrtoint i32* %6 to i64
  %sub.ptr.sub.i10.i = sub i64 %sub.ptr.lhs.cast.i8.i, %sub.ptr.rhs.cast.i.i19
  %sub.ptr.div.i11.i = ashr exact i64 %sub.ptr.sub.i10.i, 2
  %mul.i.i.i.i.i = shl nuw nsw i64 %conv3, 2
  %call2.i.i.i.i.i = tail call noalias noundef nonnull i8* @_Znwm(i64 noundef %mul.i.i.i.i.i) #30
  %7 = bitcast i8* %call2.i.i.i.i.i to i32*
  %tobool.not.i.i.i.i.i.i.i.i.i = icmp eq i64 %sub.ptr.sub.i10.i, 0
  br i1 %tobool.not.i.i.i.i.i.i.i.i.i, label %_ZNSt6vectorIiSaIiEE20_M_allocate_and_copyISt13move_iteratorIPiEEES4_mT_S6_.exit.i, label %if.then.i.i.i.i.i.i.i.i.i

if.then.i.i.i.i.i.i.i.i.i:                        ; preds = %_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm.exit.i.i
  %8 = bitcast i32* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %call2.i.i.i.i.i, i8* align 4 %8, i64 %sub.ptr.sub.i10.i, i1 false) #8
  br label %_ZNSt6vectorIiSaIiEE20_M_allocate_and_copyISt13move_iteratorIPiEEES4_mT_S6_.exit.i

_ZNSt6vectorIiSaIiEE20_M_allocate_and_copyISt13move_iteratorIPiEEES4_mT_S6_.exit.i: ; preds = %if.then.i.i.i.i.i.i.i.i.i, %_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm.exit.i.i
  %9 = load i32*, i32** %_M_start.i.i17, align 8, !tbaa !74
  %tobool.not.i.i23 = icmp eq i32* %9, null
  br i1 %tobool.not.i.i23, label %_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim.exit.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %_ZNSt6vectorIiSaIiEE20_M_allocate_and_copyISt13move_iteratorIPiEEES4_mT_S6_.exit.i
  %10 = bitcast i32* %9 to i8*
  tail call void @_ZdlPv(i8* noundef nonnull %10) #8
  br label %_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim.exit.i

_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim.exit.i: ; preds = %if.then.i.i, %_ZNSt6vectorIiSaIiEE20_M_allocate_and_copyISt13move_iteratorIPiEEES4_mT_S6_.exit.i
  %11 = bitcast %"class.std::vector.15"* %packed_cols to i8**
  store i8* %call2.i.i.i.i.i, i8** %11, align 8, !tbaa !74
  %add.ptr.i24 = getelementptr inbounds i32, i32* %7, i64 %sub.ptr.div.i11.i
  store i32* %add.ptr.i24, i32** %_M_finish.i.i22, align 8, !tbaa !71
  %add.ptr32.i = getelementptr inbounds i32, i32* %7, i64 %conv3
  store i32* %add.ptr32.i, i32** %_M_end_of_storage.i.i, align 8, !tbaa !109
  br label %_ZNSt6vectorIiSaIiEE7reserveEm.exit

_ZNSt6vectorIiSaIiEE7reserveEm.exit:              ; preds = %_ZNSt6vectorIiSaIiEE6resizeEm.exit16, %_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim.exit.i
  %packed_coefs = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %this, i64 0, i32 6
  %_M_end_of_storage.i.i25 = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %this, i64 0, i32 6, i32 0, i32 0, i32 2
  %12 = load double*, double** %_M_end_of_storage.i.i25, align 8, !tbaa !81
  %_M_start.i.i26 = getelementptr inbounds %"class.std::vector.20", %"class.std::vector.20"* %packed_coefs, i64 0, i32 0, i32 0, i32 0
  %13 = load double*, double** %_M_start.i.i26, align 8, !tbaa !78
  %sub.ptr.lhs.cast.i.i27 = ptrtoint double* %12 to i64
  %sub.ptr.rhs.cast.i.i28 = ptrtoint double* %13 to i64
  %sub.ptr.sub.i.i29 = sub i64 %sub.ptr.lhs.cast.i.i27, %sub.ptr.rhs.cast.i.i28
  %sub.ptr.div.i.i30 = ashr exact i64 %sub.ptr.sub.i.i29, 3
  %cmp3.i31 = icmp ult i64 %sub.ptr.div.i.i30, %conv3
  br i1 %cmp3.i31, label %_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm.exit.i.i, label %_ZNSt6vectorIdSaIdEE7reserveEm.exit

_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm.exit.i.i: ; preds = %_ZNSt6vectorIiSaIiEE7reserveEm.exit
  %_M_finish.i.i32 = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %this, i64 0, i32 6, i32 0, i32 0, i32 1
  %14 = load double*, double** %_M_finish.i.i32, align 8, !tbaa !82
  %sub.ptr.lhs.cast.i8.i33 = ptrtoint double* %14 to i64
  %sub.ptr.sub.i10.i34 = sub i64 %sub.ptr.lhs.cast.i8.i33, %sub.ptr.rhs.cast.i.i28
  %sub.ptr.div.i11.i35 = ashr exact i64 %sub.ptr.sub.i10.i34, 3
  %mul.i.i.i.i.i36 = shl nuw nsw i64 %conv3, 3
  %call2.i.i.i.i.i37 = tail call noalias noundef nonnull i8* @_Znwm(i64 noundef %mul.i.i.i.i.i36) #30
  %15 = bitcast i8* %call2.i.i.i.i.i37 to double*
  %tobool.not.i.i.i.i.i.i.i.i.i38 = icmp eq i64 %sub.ptr.sub.i10.i34, 0
  br i1 %tobool.not.i.i.i.i.i.i.i.i.i38, label %_ZNSt6vectorIdSaIdEE20_M_allocate_and_copyISt13move_iteratorIPdEEES4_mT_S6_.exit.i, label %if.then.i.i.i.i.i.i.i.i.i39

if.then.i.i.i.i.i.i.i.i.i39:                      ; preds = %_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm.exit.i.i
  %16 = bitcast double* %13 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %call2.i.i.i.i.i37, i8* align 8 %16, i64 %sub.ptr.sub.i10.i34, i1 false) #8
  br label %_ZNSt6vectorIdSaIdEE20_M_allocate_and_copyISt13move_iteratorIPdEEES4_mT_S6_.exit.i

_ZNSt6vectorIdSaIdEE20_M_allocate_and_copyISt13move_iteratorIPdEEES4_mT_S6_.exit.i: ; preds = %if.then.i.i.i.i.i.i.i.i.i39, %_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm.exit.i.i
  %17 = load double*, double** %_M_start.i.i26, align 8, !tbaa !78
  %tobool.not.i.i40 = icmp eq double* %17, null
  br i1 %tobool.not.i.i40, label %_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm.exit.i, label %if.then.i.i41

if.then.i.i41:                                    ; preds = %_ZNSt6vectorIdSaIdEE20_M_allocate_and_copyISt13move_iteratorIPdEEES4_mT_S6_.exit.i
  %18 = bitcast double* %17 to i8*
  tail call void @_ZdlPv(i8* noundef nonnull %18) #8
  br label %_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm.exit.i

_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm.exit.i: ; preds = %if.then.i.i41, %_ZNSt6vectorIdSaIdEE20_M_allocate_and_copyISt13move_iteratorIPdEEES4_mT_S6_.exit.i
  %19 = bitcast %"class.std::vector.20"* %packed_coefs to i8**
  store i8* %call2.i.i.i.i.i37, i8** %19, align 8, !tbaa !78
  %add.ptr.i42 = getelementptr inbounds double, double* %15, i64 %sub.ptr.div.i11.i35
  store double* %add.ptr.i42, double** %_M_finish.i.i32, align 8, !tbaa !82
  %add.ptr32.i43 = getelementptr inbounds double, double* %15, i64 %conv3
  store double* %add.ptr32.i43, double** %_M_end_of_storage.i.i25, align 8, !tbaa !81
  br label %_ZNSt6vectorIdSaIdEE7reserveEm.exit

_ZNSt6vectorIdSaIdEE7reserveEm.exit:              ; preds = %_ZNSt6vectorIiSaIiEE7reserveEm.exit, %_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm.exit.i
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull @3, i32 2, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i32*, %"struct.miniFE::CSRMatrix"*)* @.omp_outlined..68 to void (i32*, i32*, ...)*), i32* nonnull %nrows.addr, %"struct.miniFE::CSRMatrix"* nonnull %this)
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull @3, i32 3, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i32*, i32*, %"struct.miniFE::CSRMatrix"*)* @.omp_outlined..69 to void (i32*, i32*, ...)*), i32* nonnull %nrows.addr, i32* nonnull %ncols_per_row.addr, %"struct.miniFE::CSRMatrix"* nonnull %this)
  ret void
}

; Function Attrs: nofree nosync nounwind readnone
declare i32 @llvm.eh.typeid.for(i8*) #23

declare i8* @__cxa_allocate_exception(i64) local_unnamed_addr

declare void @_ZNSt13runtime_errorC1ERKSs(%"class.std::runtime_error"* noundef nonnull align 8 dereferenceable(16), %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8)) unnamed_addr #0

declare void @__cxa_free_exception(i8*) local_unnamed_addr

; Function Attrs: nounwind
declare void @_ZNSt13runtime_errorD1Ev(%"class.std::runtime_error"* noundef nonnull align 8 dereferenceable(16)) unnamed_addr #1

declare void @__cxa_throw(i8*, i8*, i8*) local_unnamed_addr

; Function Attrs: alwaysinline norecurse nounwind uwtable
define internal void @.omp_outlined..65(i32* noalias nocapture noundef readonly %.global_tid., i32* noalias nocapture noundef readnone %.bound_tid., i32* nocapture noundef nonnull readonly align 4 dereferenceable(4) %r_n, i32* nocapture noundef nonnull readonly align 4 dereferenceable(4) %xy_width, %struct.Box* nocapture noundef nonnull readonly align 4 dereferenceable(24) %box, i32* nocapture noundef nonnull readonly align 4 dereferenceable(4) %x_width, i32* nocapture noundef nonnull readonly align 4 dereferenceable(4) %y_width, i32* nocapture noundef nonnull readonly align 4 dereferenceable(4) %global_nodes_x, i32* nocapture noundef nonnull readonly align 4 dereferenceable(4) %global_nodes_y, i32* nocapture noundef nonnull readonly align 4 dereferenceable(4) %global_nodes_z, i32** nocapture noundef nonnull readonly align 8 dereferenceable(8) %row_ptr, %"class.miniFE::simple_mesh_description"* noundef nonnull align 8 dereferenceable(192) %mesh, i32** nocapture noundef nonnull readonly align 8 dereferenceable(8) %row_coords_ptr, i32* nocapture noundef nonnull readonly align 4 dereferenceable(4) %global_nrows, i32** nocapture noundef nonnull readonly align 8 dereferenceable(8) %row_offset_ptr) #7 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %.omp.lb = alloca i32, align 4
  %.omp.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %0 = load i32, i32* %r_n, align 4, !tbaa !16
  %sub3 = add nsw i32 %0, -1
  %cmp = icmp sgt i32 %0, 0
  br i1 %cmp, label %omp.precond.then, label %omp.precond.end

omp.precond.then:                                 ; preds = %entry
  %1 = bitcast i32* %.omp.lb to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8
  store i32 0, i32* %.omp.lb, align 4, !tbaa !16
  %2 = bitcast i32* %.omp.ub to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #8
  store i32 %sub3, i32* %.omp.ub, align 4, !tbaa !16
  %3 = bitcast i32* %.omp.stride to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #8
  store i32 1, i32* %.omp.stride, align 4, !tbaa !16
  %4 = bitcast i32* %.omp.is_last to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #8
  store i32 0, i32* %.omp.is_last, align 4, !tbaa !16
  %5 = load i32, i32* %.global_tid., align 4, !tbaa !16
  call void @__kmpc_for_static_init_4(%struct.ident_t* nonnull @1, i32 %5, i32 34, i32* nonnull %.omp.is_last, i32* nonnull %.omp.lb, i32* nonnull %.omp.ub, i32* nonnull %.omp.stride, i32 1, i32 1)
  %6 = load i32, i32* %.omp.ub, align 4, !tbaa !16
  %cmp5 = icmp sgt i32 %6, %sub3
  %cond = select i1 %cmp5, i32 %sub3, i32 %6
  store i32 %cond, i32* %.omp.ub, align 4, !tbaa !16
  %7 = load i32, i32* %.omp.lb, align 4, !tbaa !16
  %arrayidx.i = getelementptr inbounds %struct.Box, %struct.Box* %box, i64 0, i32 0, i64 4
  %arrayidx.i48 = getelementptr inbounds %struct.Box, %struct.Box* %box, i64 0, i32 0, i64 2
  %arrayidx.i49 = getelementptr inbounds %struct.Box, %struct.Box* %box, i64 0, i32 0, i64 0
  %map_ids_to_rows.i = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %mesh, i64 0, i32 2
  %cmp6.not74 = icmp sgt i32 %7, %cond
  br i1 %cmp6.not74, label %omp.loop.exit, label %omp.inner.for.body.preheader

omp.inner.for.body.preheader:                     ; preds = %omp.precond.then
  %8 = sext i32 %7 to i64
  br label %omp.inner.for.body

omp.inner.for.body:                               ; preds = %omp.inner.for.body.preheader, %invoke.cont
  %indvars.iv = phi i64 [ %8, %omp.inner.for.body.preheader ], [ %indvars.iv.next, %invoke.cont ]
  %9 = load i32, i32* %xy_width, align 4, !tbaa !16
  %10 = trunc i64 %indvars.iv to i32
  %div7 = sdiv i32 %10, %9
  %11 = load i32, i32* %arrayidx.i, align 4, !tbaa !16
  %add8 = add nsw i32 %11, %div7
  %12 = load i32, i32* %x_width, align 4, !tbaa !16
  %.frozen = freeze i32 %10
  %.frozen161 = freeze i32 %12
  %div9 = sdiv i32 %.frozen, %.frozen161
  %13 = load i32, i32* %y_width, align 4, !tbaa !16
  %rem = srem i32 %div9, %13
  %14 = load i32, i32* %arrayidx.i48, align 4, !tbaa !16
  %add12 = add nsw i32 %14, %rem
  %15 = mul i32 %div9, %.frozen161
  %rem13.decomposed = sub i32 %.frozen, %15
  %16 = load i32, i32* %arrayidx.i49, align 4, !tbaa !16
  %add16 = add nsw i32 %16, %rem13.decomposed
  %17 = load i32, i32* %global_nodes_x, align 4, !tbaa !16
  %18 = load i32, i32* %global_nodes_y, align 4, !tbaa !16
  %19 = or i32 %add12, %add8
  %20 = or i32 %19, %add16
  %.not.i = icmp sgt i32 %20, -1
  br i1 %.not.i, label %if.end.i, label %_ZN6miniFE6get_idIiEET_iiiiii.exit

if.end.i:                                         ; preds = %omp.inner.for.body
  %21 = load i32, i32* %global_nodes_z, align 4, !tbaa !16
  %cmp4.not.i = icmp slt i32 %add16, %17
  %cmp6.not.i = icmp slt i32 %add12, %18
  %or.cond.i = and i1 %cmp4.not.i, %cmp6.not.i
  %cmp8.not.i = icmp slt i32 %add8, %21
  %or.cond14.i = and i1 %or.cond.i, %cmp8.not.i
  br i1 %or.cond14.i, label %if.end10.i, label %_ZN6miniFE6get_idIiEET_iiiiii.exit

if.end10.i:                                       ; preds = %if.end.i
  %mul11.i = mul i32 %18, %add8
  %reass.add.i = add i32 %mul11.i, %add12
  %reass.mul.i = mul i32 %reass.add.i, %17
  %add13.i = add i32 %reass.mul.i, %add16
  br label %_ZN6miniFE6get_idIiEET_iiiiii.exit

_ZN6miniFE6get_idIiEET_iiiiii.exit:               ; preds = %omp.inner.for.body, %if.end.i, %if.end10.i
  %retval.0.i = phi i32 [ %add13.i, %if.end10.i ], [ -1, %omp.inner.for.body ], [ -1, %if.end.i ]
  %call.i50 = invoke noundef signext i32 @_ZN6miniFE15find_row_for_idIiEET_S1_RKSt3mapIS1_S1_St4lessIS1_ESaISt4pairIKS1_S1_EEE(i32 noundef signext %retval.0.i, %"class.std::map"* noundef nonnull align 8 dereferenceable(48) %map_ids_to_rows.i)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %_ZN6miniFE6get_idIiEET_iiiiii.exit
  %22 = load i32*, i32** %row_ptr, align 8, !tbaa !94
  %arrayidx19 = getelementptr inbounds i32, i32* %22, i64 %indvars.iv
  store i32 %call.i50, i32* %arrayidx19, align 4, !tbaa !16
  %23 = load i32*, i32** %row_coords_ptr, align 8, !tbaa !94
  %24 = mul nsw i64 %indvars.iv, 3
  %arrayidx22 = getelementptr inbounds i32, i32* %23, i64 %24
  store i32 %add16, i32* %arrayidx22, align 4, !tbaa !16
  %25 = add nsw i64 %24, 1
  %arrayidx26 = getelementptr inbounds i32, i32* %23, i64 %25
  store i32 %add12, i32* %arrayidx26, align 4, !tbaa !16
  %26 = add nsw i64 %24, 2
  %arrayidx30 = getelementptr inbounds i32, i32* %23, i64 %26
  store i32 %add8, i32* %arrayidx30, align 4, !tbaa !16
  %27 = load i32, i32* %global_nodes_x, align 4, !tbaa !16
  %28 = load i32, i32* %global_nodes_y, align 4, !tbaa !16
  %add40.2 = add nsw i32 %add16, 1
  %add40.2.1 = add nsw i32 %add16, 1
  %add41.2 = add nsw i32 %add12, 1
  %cmp6.not.i53.2 = icmp slt i32 %add41.2, %28
  %add40.2.2 = add nsw i32 %add16, 1
  %add40.289 = add nsw i32 %add16, -1
  %29 = insertelement <2 x i32> poison, i32 %add16, i64 0
  %30 = insertelement <2 x i32> poison, i32 %27, i64 0
  %31 = icmp sle <2 x i32> %29, %30
  %add40.1 = add nsw i32 %add16, -1
  %add40 = add nsw i32 %add16, -1
  %add41 = add nsw i32 %add12, -1
  %32 = load i32, i32* %global_nrows, align 4
  %broadcast.splatinsert110 = insertelement <4 x i32> poison, i32 %add41, i64 0
  %broadcast.splat111 = shufflevector <4 x i32> %broadcast.splatinsert110, <4 x i32> poison, <4 x i32> zeroinitializer
  %broadcast.splatinsert112 = insertelement <4 x i32> poison, i32 %27, i64 0
  %broadcast.splat113 = shufflevector <4 x i32> %broadcast.splatinsert112, <4 x i32> poison, <4 x i32> zeroinitializer
  %broadcast.splatinsert114 = insertelement <4 x i32> poison, i32 %add40, i64 0
  %broadcast.splat115 = shufflevector <4 x i32> %broadcast.splatinsert114, <4 x i32> poison, <4 x i32> zeroinitializer
  %broadcast.splatinsert118 = insertelement <4 x i32> poison, i32 %32, i64 0
  %broadcast.splat119 = shufflevector <4 x i32> %broadcast.splatinsert118, <4 x i32> poison, <4 x i32> zeroinitializer
  %broadcast.splatinsert120 = insertelement <4 x i32> poison, i32 %add16, i64 0
  %broadcast.splat121 = shufflevector <4 x i32> %broadcast.splatinsert120, <4 x i32> poison, <4 x i32> zeroinitializer
  %broadcast.splatinsert124 = insertelement <4 x i32> poison, i32 %add40.2, i64 0
  %broadcast.splat125 = shufflevector <4 x i32> %broadcast.splatinsert124, <4 x i32> poison, <4 x i32> zeroinitializer
  %broadcast.splatinsert130 = insertelement <4 x i32> poison, i32 %add12, i64 0
  %broadcast.splat131 = shufflevector <4 x i32> %broadcast.splatinsert130, <4 x i32> poison, <4 x i32> zeroinitializer
  %broadcast.splatinsert132 = insertelement <4 x i32> poison, i32 %add40.1, i64 0
  %broadcast.splat133 = shufflevector <4 x i32> %broadcast.splatinsert132, <4 x i32> poison, <4 x i32> zeroinitializer
  %broadcast.splatinsert138 = insertelement <4 x i32> poison, i32 %add40.2.1, i64 0
  %broadcast.splat139 = shufflevector <4 x i32> %broadcast.splatinsert138, <4 x i32> poison, <4 x i32> zeroinitializer
  %broadcast.splatinsert145 = insertelement <4 x i32> poison, i32 %add41.2, i64 0
  %broadcast.splat146 = shufflevector <4 x i32> %broadcast.splatinsert145, <4 x i32> poison, <4 x i32> zeroinitializer
  %broadcast.splatinsert147 = insertelement <4 x i32> poison, i32 %add40.289, i64 0
  %broadcast.splat148 = shufflevector <4 x i32> %broadcast.splatinsert147, <4 x i32> poison, <4 x i32> zeroinitializer
  %broadcast.splatinsert153 = insertelement <4 x i32> poison, i32 %add40.2.2, i64 0
  %broadcast.splat154 = shufflevector <4 x i32> %broadcast.splatinsert153, <4 x i32> poison, <4 x i32> zeroinitializer
  %broadcast.splatinsert157 = insertelement <4 x i1> poison, i1 %cmp6.not.i53.2, i64 0
  %broadcast.splat158 = shufflevector <4 x i1> %broadcast.splatinsert157, <4 x i1> poison, <4 x i32> zeroinitializer
  %cmp4.not.i52.2.2 = icmp slt i32 %add40.2.2, %27
  %broadcast.splatinsert155 = insertelement <4 x i1> poison, i1 %cmp4.not.i52.2.2, i64 0
  %broadcast.splat156 = shufflevector <4 x i1> %broadcast.splatinsert155, <4 x i1> poison, <4 x i32> zeroinitializer
  %cmp4.not.i52.1.2 = icmp slt i32 %add16, %27
  %broadcast.splatinsert151 = insertelement <4 x i1> poison, i1 %cmp4.not.i52.1.2, i64 0
  %broadcast.splat152 = shufflevector <4 x i1> %broadcast.splatinsert151, <4 x i1> poison, <4 x i32> zeroinitializer
  %broadcast.splat150 = shufflevector <2 x i1> %31, <2 x i1> undef, <4 x i32> zeroinitializer
  %cmp4.not.i52.2.1 = icmp slt i32 %add40.2.1, %27
  %broadcast.splatinsert140 = insertelement <4 x i1> poison, i1 %cmp4.not.i52.2.1, i64 0
  %broadcast.splat141 = shufflevector <4 x i1> %broadcast.splatinsert140, <4 x i1> poison, <4 x i32> zeroinitializer
  %cmp4.not.i52.1.1 = icmp slt i32 %add16, %27
  %broadcast.splatinsert136 = insertelement <4 x i1> poison, i1 %cmp4.not.i52.1.1, i64 0
  %broadcast.splat137 = shufflevector <4 x i1> %broadcast.splatinsert136, <4 x i1> poison, <4 x i32> zeroinitializer
  %broadcast.splat135 = shufflevector <2 x i1> %31, <2 x i1> undef, <4 x i32> zeroinitializer
  %cmp6.not.i53.not = icmp sgt i32 %add12, %28
  %broadcast.splatinsert128 = insertelement <4 x i1> poison, i1 %cmp6.not.i53.not, i64 0
  %broadcast.splat129 = shufflevector <4 x i1> %broadcast.splatinsert128, <4 x i1> poison, <4 x i32> zeroinitializer
  %cmp4.not.i52.2 = icmp slt i32 %add40.2, %27
  %broadcast.splatinsert126 = insertelement <4 x i1> poison, i1 %cmp4.not.i52.2, i64 0
  %broadcast.splat127 = shufflevector <4 x i1> %broadcast.splatinsert126, <4 x i1> poison, <4 x i32> zeroinitializer
  %cmp4.not.i52.1 = icmp slt i32 %add16, %27
  %broadcast.splatinsert122 = insertelement <4 x i1> poison, i1 %cmp4.not.i52.1, i64 0
  %broadcast.splat123 = shufflevector <4 x i1> %broadcast.splatinsert122, <4 x i1> poison, <4 x i32> zeroinitializer
  %cmp4.not.i52 = icmp sle i32 %add16, %27
  %broadcast.splatinsert116 = insertelement <4 x i1> poison, i1 %cmp4.not.i52, i64 0
  %broadcast.splat117 = shufflevector <4 x i1> %broadcast.splatinsert116, <4 x i1> poison, <4 x i32> zeroinitializer
  %broadcast.splatinsert108 = insertelement <4 x i32> poison, i32 %28, i64 0
  %broadcast.splat109 = shufflevector <4 x i32> %broadcast.splatinsert108, <4 x i32> poison, <4 x i32> zeroinitializer
  %33 = load i32, i32* %global_nodes_z, align 4
  %broadcast.splatinsert106 = insertelement <4 x i32> poison, i32 %33, i64 0
  %broadcast.splat107 = shufflevector <4 x i32> %broadcast.splatinsert106, <4 x i32> poison, <4 x i32> zeroinitializer
  %broadcast.splatinsert104 = insertelement <4 x i32> poison, i32 %add8, i64 0
  %broadcast.splat105 = shufflevector <4 x i32> %broadcast.splatinsert104, <4 x i32> poison, <4 x i32> zeroinitializer
  %cmp6.not.i53.1 = icmp sge i32 %add12, %28
  %34 = add nsw <4 x i32> %broadcast.splat105, <i32 -1, i32 0, i32 1, i32 2>
  %35 = icmp slt <4 x i32> %34, %broadcast.splat107
  %36 = mul <4 x i32> %broadcast.splat109, %34
  %37 = or <4 x i32> %broadcast.splat111, %34
  %38 = add <4 x i32> %36, %broadcast.splat111
  %39 = mul <4 x i32> %38, %broadcast.splat113
  %40 = or <4 x i32> %37, %broadcast.splat115
  %41 = icmp sgt <4 x i32> %40, <i32 -1, i32 -1, i32 -1, i32 -1>
  %42 = select <4 x i1> %41, <4 x i1> %broadcast.splat117, <4 x i1> zeroinitializer
  %43 = add <4 x i32> %39, %broadcast.splat115
  %44 = select <4 x i1> %42, <4 x i32> %43, <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>
  %45 = icmp sgt <4 x i32> %44, <i32 -1, i32 -1, i32 -1, i32 -1>
  %46 = icmp slt <4 x i32> %44, %broadcast.splat119
  %47 = select <4 x i1> %45, <4 x i1> %46, <4 x i1> zeroinitializer
  %48 = zext <4 x i1> %47 to <4 x i32>
  %49 = or <4 x i32> %37, %broadcast.splat121
  %50 = icmp sgt <4 x i32> %49, <i32 -1, i32 -1, i32 -1, i32 -1>
  %51 = select <4 x i1> %50, <4 x i1> %broadcast.splat123, <4 x i1> zeroinitializer
  %52 = add <4 x i32> %39, %broadcast.splat121
  %53 = select <4 x i1> %51, <4 x i32> %52, <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>
  %54 = icmp sgt <4 x i32> %53, <i32 -1, i32 -1, i32 -1, i32 -1>
  %55 = icmp slt <4 x i32> %53, %broadcast.splat119
  %56 = select <4 x i1> %54, <4 x i1> %55, <4 x i1> zeroinitializer
  %57 = zext <4 x i1> %56 to <4 x i32>
  %58 = add nuw nsw <4 x i32> %48, %57
  %59 = or <4 x i32> %37, %broadcast.splat125
  %60 = icmp sgt <4 x i32> %59, <i32 -1, i32 -1, i32 -1, i32 -1>
  %61 = select <4 x i1> %60, <4 x i1> %broadcast.splat127, <4 x i1> zeroinitializer
  %62 = add <4 x i32> %39, %broadcast.splat125
  %63 = select <4 x i1> %61, <4 x i32> %62, <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>
  %64 = icmp sgt <4 x i32> %63, <i32 -1, i32 -1, i32 -1, i32 -1>
  %65 = icmp slt <4 x i32> %63, %broadcast.splat119
  %66 = select <4 x i1> %64, <4 x i1> %65, <4 x i1> zeroinitializer
  %67 = zext <4 x i1> %66 to <4 x i32>
  %68 = add nuw nsw <4 x i32> %58, %67
  %69 = insertelement <4 x i1> %35, i1 false, i64 3
  %70 = select <4 x i1> %69, <4 x i1> %broadcast.splat129, <4 x i1> zeroinitializer
  %predphi = select <4 x i1> %70, <4 x i32> zeroinitializer, <4 x i32> %68
  %71 = or <4 x i32> %broadcast.splat131, %34
  %72 = add <4 x i32> %36, %broadcast.splat131
  %73 = mul <4 x i32> %72, %broadcast.splat113
  %74 = or <4 x i32> %71, %broadcast.splat133
  %75 = icmp sgt <4 x i32> %74, <i32 -1, i32 -1, i32 -1, i32 -1>
  %76 = select <4 x i1> %75, <4 x i1> %broadcast.splat135, <4 x i1> zeroinitializer
  %77 = add <4 x i32> %73, %broadcast.splat133
  %78 = select <4 x i1> %76, <4 x i32> %77, <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>
  %79 = icmp sgt <4 x i32> %78, <i32 -1, i32 -1, i32 -1, i32 -1>
  %80 = icmp slt <4 x i32> %78, %broadcast.splat119
  %81 = select <4 x i1> %79, <4 x i1> %80, <4 x i1> zeroinitializer
  %82 = zext <4 x i1> %81 to <4 x i32>
  %83 = add nuw nsw <4 x i32> %predphi, %82
  %84 = or <4 x i32> %71, %broadcast.splat121
  %85 = icmp sgt <4 x i32> %84, <i32 -1, i32 -1, i32 -1, i32 -1>
  %86 = select <4 x i1> %85, <4 x i1> %broadcast.splat137, <4 x i1> zeroinitializer
  %87 = add <4 x i32> %73, %broadcast.splat121
  %88 = select <4 x i1> %86, <4 x i32> %87, <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>
  %89 = icmp sgt <4 x i32> %88, <i32 -1, i32 -1, i32 -1, i32 -1>
  %90 = icmp slt <4 x i32> %88, %broadcast.splat119
  %91 = select <4 x i1> %89, <4 x i1> %90, <4 x i1> zeroinitializer
  %92 = zext <4 x i1> %91 to <4 x i32>
  %93 = add nuw nsw <4 x i32> %83, %92
  %94 = or <4 x i32> %71, %broadcast.splat139
  %95 = icmp sgt <4 x i32> %94, <i32 -1, i32 -1, i32 -1, i32 -1>
  %96 = select <4 x i1> %95, <4 x i1> %broadcast.splat141, <4 x i1> zeroinitializer
  %97 = add <4 x i32> %73, %broadcast.splat139
  %98 = select <4 x i1> %96, <4 x i32> %97, <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>
  %99 = icmp sgt <4 x i32> %98, <i32 -1, i32 -1, i32 -1, i32 -1>
  %100 = icmp slt <4 x i32> %98, %broadcast.splat119
  %101 = select <4 x i1> %99, <4 x i1> %100, <4 x i1> zeroinitializer
  %102 = zext <4 x i1> %101 to <4 x i32>
  %103 = add nuw nsw <4 x i32> %93, %102
  %104 = insertelement <4 x i1> poison, i1 %cmp6.not.i53.1, i64 0
  %105 = shufflevector <4 x i1> %104, <4 x i1> poison, <4 x i32> zeroinitializer
  %106 = select <4 x i1> %69, <4 x i1> %105, <4 x i1> zeroinitializer
  %predphi144 = select <4 x i1> %106, <4 x i32> %predphi, <4 x i32> %103
  %107 = or <4 x i32> %broadcast.splat146, %34
  %108 = add <4 x i32> %36, %broadcast.splat146
  %109 = mul <4 x i32> %108, %broadcast.splat113
  %110 = or <4 x i32> %107, %broadcast.splat148
  %111 = icmp sgt <4 x i32> %110, <i32 -1, i32 -1, i32 -1, i32 -1>
  %112 = select <4 x i1> %111, <4 x i1> %broadcast.splat150, <4 x i1> zeroinitializer
  %113 = add <4 x i32> %109, %broadcast.splat148
  %114 = select <4 x i1> %112, <4 x i32> %113, <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>
  %115 = icmp sgt <4 x i32> %114, <i32 -1, i32 -1, i32 -1, i32 -1>
  %116 = icmp slt <4 x i32> %114, %broadcast.splat119
  %117 = select <4 x i1> %115, <4 x i1> %116, <4 x i1> zeroinitializer
  %118 = zext <4 x i1> %117 to <4 x i32>
  %119 = add <4 x i32> %predphi144, %118
  %120 = or <4 x i32> %107, %broadcast.splat121
  %121 = icmp sgt <4 x i32> %120, <i32 -1, i32 -1, i32 -1, i32 -1>
  %122 = select <4 x i1> %121, <4 x i1> %broadcast.splat152, <4 x i1> zeroinitializer
  %123 = add <4 x i32> %109, %broadcast.splat121
  %124 = select <4 x i1> %122, <4 x i32> %123, <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>
  %125 = icmp sgt <4 x i32> %124, <i32 -1, i32 -1, i32 -1, i32 -1>
  %126 = icmp slt <4 x i32> %124, %broadcast.splat119
  %127 = select <4 x i1> %125, <4 x i1> %126, <4 x i1> zeroinitializer
  %128 = zext <4 x i1> %127 to <4 x i32>
  %129 = add <4 x i32> %119, %128
  %130 = or <4 x i32> %107, %broadcast.splat154
  %131 = icmp sgt <4 x i32> %130, <i32 -1, i32 -1, i32 -1, i32 -1>
  %132 = select <4 x i1> %131, <4 x i1> %broadcast.splat156, <4 x i1> zeroinitializer
  %133 = add <4 x i32> %109, %broadcast.splat154
  %134 = select <4 x i1> %132, <4 x i32> %133, <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>
  %135 = icmp sgt <4 x i32> %134, <i32 -1, i32 -1, i32 -1, i32 -1>
  %136 = icmp slt <4 x i32> %134, %broadcast.splat119
  %137 = select <4 x i1> %135, <4 x i1> %136, <4 x i1> zeroinitializer
  %138 = zext <4 x i1> %137 to <4 x i32>
  %139 = add <4 x i32> %129, %138
  %140 = select <4 x i1> %69, <4 x i1> %broadcast.splat158, <4 x i1> <i1 false, i1 false, i1 false, i1 poison>
  %141 = xor <4 x i1> %broadcast.splat158, <i1 true, i1 true, i1 true, i1 poison>
  %142 = select <4 x i1> %69, <4 x i1> %141, <4 x i1> <i1 false, i1 false, i1 false, i1 poison>
  %predphi159 = select <4 x i1> %140, <4 x i32> %139, <4 x i32> <i32 0, i32 0, i32 0, i32 poison>
  %predphi160 = select <4 x i1> %142, <4 x i32> %predphi144, <4 x i32> %predphi159
  %143 = insertelement <4 x i32> %predphi160, i32 0, i64 3
  %144 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %143)
  %145 = load i32*, i32** %row_offset_ptr, align 8, !tbaa !94
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %arrayidx55 = getelementptr inbounds i32, i32* %145, i64 %indvars.iv.next
  store i32 %144, i32* %arrayidx55, align 4, !tbaa !16
  %146 = load i32, i32* %.omp.ub, align 4, !tbaa !16
  %147 = sext i32 %146 to i64
  %cmp6.not.not = icmp slt i64 %indvars.iv, %147
  br i1 %cmp6.not.not, label %omp.inner.for.body, label %omp.loop.exit

lpad:                                             ; preds = %_ZN6miniFE6get_idIiEET_iiiiii.exit
  %148 = landingpad { i8*, i32 }
          catch i8* null
  %149 = extractvalue { i8*, i32 } %148, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8
  call void @__clang_call_terminate(i8* %149) #31
  unreachable

omp.loop.exit:                                    ; preds = %invoke.cont, %omp.precond.then
  call void @__kmpc_for_static_fini(%struct.ident_t* nonnull @1, i32 %5)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8
  br label %omp.precond.end

omp.precond.end:                                  ; preds = %omp.loop.exit, %entry
  ret void
}

; Function Attrs: alwaysinline norecurse nounwind uwtable
define internal void @.omp_outlined..68(i32* noalias nocapture noundef readonly %.global_tid., i32* noalias nocapture noundef readnone %.bound_tid., i32* nocapture noundef nonnull readonly align 4 dereferenceable(4) %nrows, %"struct.miniFE::CSRMatrix"* nocapture noundef readonly %this) #7 {
entry:
  %.omp.lb = alloca i32, align 4
  %.omp.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %0 = load i32, i32* %nrows, align 4, !tbaa !16
  %sub2 = add i32 %0, -1
  %cmp.not = icmp eq i32 %0, 0
  br i1 %cmp.not, label %omp.precond.end, label %omp.precond.then

omp.precond.then:                                 ; preds = %entry
  %1 = bitcast i32* %.omp.lb to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8
  store i32 0, i32* %.omp.lb, align 4, !tbaa !16
  %2 = bitcast i32* %.omp.ub to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #8
  store i32 %sub2, i32* %.omp.ub, align 4, !tbaa !16
  %3 = bitcast i32* %.omp.stride to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #8
  store i32 1, i32* %.omp.stride, align 4, !tbaa !16
  %4 = bitcast i32* %.omp.is_last to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #8
  store i32 0, i32* %.omp.is_last, align 4, !tbaa !16
  %5 = load i32, i32* %.global_tid., align 4, !tbaa !16
  call void @__kmpc_for_static_init_4u(%struct.ident_t* nonnull @1, i32 %5, i32 34, i32* nonnull %.omp.is_last, i32* nonnull %.omp.lb, i32* nonnull %.omp.ub, i32* nonnull %.omp.stride, i32 1, i32 1)
  %6 = load i32, i32* %.omp.ub, align 4, !tbaa !16
  %cmp4 = icmp ugt i32 %6, %sub2
  %cond = select i1 %cmp4, i32 %sub2, i32 %6
  store i32 %cond, i32* %.omp.ub, align 4, !tbaa !16
  %7 = load i32, i32* %.omp.lb, align 4, !tbaa !16
  %cmp516.not = icmp ugt i32 %7, %cond
  br i1 %cmp516.not, label %omp.loop.exit, label %omp.inner.for.body.lr.ph

omp.inner.for.body.lr.ph:                         ; preds = %omp.precond.then
  %_M_start.i13 = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %this, i64 0, i32 3, i32 0, i32 0, i32 0
  %_M_start.i = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %this, i64 0, i32 2, i32 0, i32 0, i32 0
  %8 = load i32*, i32** %_M_start.i, align 8, !tbaa !74
  %9 = load i32*, i32** %_M_start.i13, align 8, !tbaa !74
  br label %omp.inner.for.body

omp.inner.for.body:                               ; preds = %omp.inner.for.body.lr.ph, %omp.inner.for.body
  %.omp.iv.017 = phi i32 [ %7, %omp.inner.for.body.lr.ph ], [ %add9, %omp.inner.for.body ]
  %conv = sext i32 %.omp.iv.017 to i64
  %add.ptr.i = getelementptr inbounds i32, i32* %8, i64 %conv
  store i32 0, i32* %add.ptr.i, align 4, !tbaa !16
  %add.ptr.i14 = getelementptr inbounds i32, i32* %9, i64 %conv
  store i32 0, i32* %add.ptr.i14, align 4, !tbaa !16
  %add9 = add nuw i32 %.omp.iv.017, 1
  %10 = load i32, i32* %.omp.ub, align 4, !tbaa !16
  %add = add i32 %10, 1
  %cmp5 = icmp ult i32 %add9, %add
  br i1 %cmp5, label %omp.inner.for.body, label %omp.loop.exit

omp.loop.exit:                                    ; preds = %omp.inner.for.body, %omp.precond.then
  call void @__kmpc_for_static_fini(%struct.ident_t* nonnull @1, i32 %5)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8
  br label %omp.precond.end

omp.precond.end:                                  ; preds = %omp.loop.exit, %entry
  ret void
}

; Function Attrs: nounwind
declare void @__kmpc_for_static_init_4u(%struct.ident_t*, i32, i32, i32*, i32*, i32*, i32*, i32, i32) local_unnamed_addr #8

; Function Attrs: alwaysinline norecurse nounwind uwtable
define internal void @.omp_outlined..69(i32* noalias nocapture noundef readonly %.global_tid., i32* noalias nocapture noundef readnone %.bound_tid., i32* nocapture noundef nonnull readonly align 4 dereferenceable(4) %nrows, i32* nocapture noundef nonnull readonly align 4 dereferenceable(4) %ncols_per_row, %"struct.miniFE::CSRMatrix"* nocapture noundef readonly %this) #7 {
entry:
  %.omp.lb = alloca i32, align 4
  %.omp.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %0 = load i32, i32* %nrows, align 4, !tbaa !16
  %1 = load i32, i32* %ncols_per_row, align 4, !tbaa !16
  %mul = mul i32 %1, %0
  %sub2 = add i32 %mul, -1
  %cmp.not = icmp eq i32 %mul, 0
  br i1 %cmp.not, label %omp.precond.end, label %omp.precond.then

omp.precond.then:                                 ; preds = %entry
  %2 = bitcast i32* %.omp.lb to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #8
  store i32 0, i32* %.omp.lb, align 4, !tbaa !16
  %3 = bitcast i32* %.omp.ub to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #8
  store i32 %sub2, i32* %.omp.ub, align 4, !tbaa !16
  %4 = bitcast i32* %.omp.stride to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #8
  store i32 1, i32* %.omp.stride, align 4, !tbaa !16
  %5 = bitcast i32* %.omp.is_last to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #8
  store i32 0, i32* %.omp.is_last, align 4, !tbaa !16
  %6 = load i32, i32* %.global_tid., align 4, !tbaa !16
  call void @__kmpc_for_static_init_4u(%struct.ident_t* nonnull @1, i32 %6, i32 34, i32* nonnull %.omp.is_last, i32* nonnull %.omp.lb, i32* nonnull %.omp.ub, i32* nonnull %.omp.stride, i32 1, i32 1)
  %7 = load i32, i32* %.omp.ub, align 4, !tbaa !16
  %cmp4 = icmp ugt i32 %7, %sub2
  %cond = select i1 %cmp4, i32 %sub2, i32 %7
  store i32 %cond, i32* %.omp.ub, align 4, !tbaa !16
  %8 = load i32, i32* %.omp.lb, align 4, !tbaa !16
  %cmp516.not = icmp ugt i32 %8, %cond
  br i1 %cmp516.not, label %omp.loop.exit, label %omp.inner.for.body.lr.ph

omp.inner.for.body.lr.ph:                         ; preds = %omp.precond.then
  %_M_start.i13 = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %this, i64 0, i32 6, i32 0, i32 0, i32 0
  %_M_start.i = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %this, i64 0, i32 5, i32 0, i32 0, i32 0
  %9 = load i32*, i32** %_M_start.i, align 8, !tbaa !74
  %10 = load double*, double** %_M_start.i13, align 8, !tbaa !78
  br label %omp.inner.for.body

omp.inner.for.body:                               ; preds = %omp.inner.for.body.lr.ph, %omp.inner.for.body
  %.omp.iv.017 = phi i32 [ %8, %omp.inner.for.body.lr.ph ], [ %add10, %omp.inner.for.body ]
  %conv = sext i32 %.omp.iv.017 to i64
  %add.ptr.i = getelementptr inbounds i32, i32* %9, i64 %conv
  store i32 0, i32* %add.ptr.i, align 4, !tbaa !16
  %add.ptr.i14 = getelementptr inbounds double, double* %10, i64 %conv
  store double 0.000000e+00, double* %add.ptr.i14, align 8, !tbaa !84
  %add10 = add nuw i32 %.omp.iv.017, 1
  %11 = load i32, i32* %.omp.ub, align 4, !tbaa !16
  %add = add i32 %11, 1
  %cmp5 = icmp ult i32 %add10, %add
  br i1 %cmp5, label %omp.inner.for.body, label %omp.loop.exit

omp.loop.exit:                                    ; preds = %omp.inner.for.body, %omp.precond.then
  call void @__kmpc_for_static_fini(%struct.ident_t* nonnull @1, i32 %6)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #8
  br label %omp.precond.end

omp.precond.end:                                  ; preds = %omp.loop.exit, %entry
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(%"class.std::vector.15"* noundef nonnull align 8 dereferenceable(24) %this, i64 noundef %__n) local_unnamed_addr #11 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %cmp.not = icmp eq i64 %__n, 0
  br i1 %cmp.not, label %if.end60, label %if.then

if.then:                                          ; preds = %entry
  %_M_finish.i = getelementptr inbounds %"class.std::vector.15", %"class.std::vector.15"* %this, i64 0, i32 0, i32 0, i32 1
  %0 = load i32*, i32** %_M_finish.i, align 8, !tbaa !71
  %_M_start.i = getelementptr inbounds %"class.std::vector.15", %"class.std::vector.15"* %this, i64 0, i32 0, i32 0, i32 0
  %1 = load i32*, i32** %_M_start.i, align 8, !tbaa !74
  %sub.ptr.lhs.cast.i = ptrtoint i32* %0 to i64
  %sub.ptr.rhs.cast.i = ptrtoint i32* %1 to i64
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %2 = lshr exact i64 %sub.ptr.sub.i, 2
  %_M_end_of_storage = getelementptr inbounds %"class.std::vector.15", %"class.std::vector.15"* %this, i64 0, i32 0, i32 0, i32 2
  %3 = load i32*, i32** %_M_end_of_storage, align 8, !tbaa !109
  %sub.ptr.lhs.cast = ptrtoint i32* %3 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.lhs.cast.i
  %sub.ptr.div = ashr exact i64 %sub.ptr.sub, 2
  %cmp4 = icmp sgt i64 %sub.ptr.sub.i, -1
  tail call void @llvm.assume(i1 %cmp4)
  %sub = xor i64 %2, 4611686018427387903
  %cmp6 = icmp ule i64 %sub.ptr.div, %sub
  tail call void @llvm.assume(i1 %cmp6)
  %cmp8.not = icmp ult i64 %sub.ptr.div, %__n
  br i1 %cmp8.not, label %if.else, label %_ZSt27__uninitialized_default_n_aIPimiET_S1_T0_RSaIT1_E.exit

_ZSt27__uninitialized_default_n_aIPimiET_S1_T0_RSaIT1_E.exit: ; preds = %if.then
  %__first2.i.i.i = bitcast i32* %0 to i8*
  %4 = shl nuw i64 %__n, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %__first2.i.i.i, i8 0, i64 %4, i1 false)
  %scevgep.i.i.i = getelementptr i32, i32* %0, i64 %__n
  store i32* %scevgep.i.i.i, i32** %_M_finish.i, align 8, !tbaa !71
  br label %if.end60

if.else:                                          ; preds = %if.then
  %cmp.i = icmp ult i64 %sub, %__n
  br i1 %cmp.i, label %if.then.i, label %_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc.exit

if.then.i:                                        ; preds = %if.else
  tail call void @_ZSt20__throw_length_errorPKc(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.70, i64 0, i64 0)) #29
  unreachable

_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc.exit:    ; preds = %if.else
  %cmp.i.i = icmp ult i64 %2, %__n
  %.sroa.speculated.i = select i1 %cmp.i.i, i64 %__n, i64 %2
  %add.i = add i64 %.sroa.speculated.i, %2
  %cmp7.i = icmp ult i64 %add.i, %2
  %cmp9.i = icmp ugt i64 %add.i, 4611686018427387903
  %or.cond.i = or i1 %cmp7.i, %cmp9.i
  %cond.i = select i1 %or.cond.i, i64 4611686018427387903, i64 %add.i
  %cmp.not.i = icmp eq i64 %cond.i, 0
  br i1 %cmp.not.i, label %invoke.cont, label %_ZNSt16allocator_traitsISaIiEE8allocateERS0_m.exit.i

_ZNSt16allocator_traitsISaIiEE8allocateERS0_m.exit.i: ; preds = %_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc.exit
  %mul.i.i.i = shl nuw i64 %cond.i, 2
  %call2.i.i.i = tail call noalias noundef nonnull i8* @_Znwm(i64 noundef %mul.i.i.i) #30
  %5 = bitcast i8* %call2.i.i.i to i32*
  %.pre = load i32*, i32** %_M_start.i, align 8, !tbaa !74
  %.pre43 = load i32*, i32** %_M_finish.i, align 8, !tbaa !71
  %.pre44 = ptrtoint i32* %.pre to i64
  %.pre45 = ptrtoint i32* %.pre43 to i64
  %.pre46 = sub i64 %.pre45, %.pre44
  br label %invoke.cont

invoke.cont:                                      ; preds = %_ZNSt16allocator_traitsISaIiEE8allocateERS0_m.exit.i, %_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc.exit
  %sub.ptr.sub.i.i.i.i.i.i.i.i.pre-phi = phi i64 [ %.pre46, %_ZNSt16allocator_traitsISaIiEE8allocateERS0_m.exit.i ], [ %sub.ptr.sub.i, %_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc.exit ]
  %6 = phi i32* [ %.pre, %_ZNSt16allocator_traitsISaIiEE8allocateERS0_m.exit.i ], [ %1, %_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc.exit ]
  %cond.i32 = phi i32* [ %5, %_ZNSt16allocator_traitsISaIiEE8allocateERS0_m.exit.i ], [ null, %_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc.exit ]
  %add.ptr = getelementptr inbounds i32, i32* %cond.i32, i64 %2
  %__first2.i.i.i34 = bitcast i32* %add.ptr to i8*
  %7 = shl nuw i64 %__n, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %__first2.i.i.i34, i8 0, i64 %7, i1 false)
  %tobool.not.i.i.i.i.i.i.i.i = icmp eq i64 %sub.ptr.sub.i.i.i.i.i.i.i.i.pre-phi, 0
  br i1 %tobool.not.i.i.i.i.i.i.i.i, label %try.cont, label %if.then.i.i.i.i.i.i.i.i

if.then.i.i.i.i.i.i.i.i:                          ; preds = %invoke.cont
  %8 = bitcast i32* %cond.i32 to i8*
  %9 = bitcast i32* %6 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %9, i64 %sub.ptr.sub.i.i.i.i.i.i.i.i.pre-phi, i1 false) #8
  br label %try.cont

try.cont:                                         ; preds = %if.then.i.i.i.i.i.i.i.i, %invoke.cont
  %tobool.not.i40 = icmp eq i32* %6, null
  br i1 %tobool.not.i40, label %_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim.exit42, label %if.then.i41

if.then.i41:                                      ; preds = %try.cont
  %10 = bitcast i32* %6 to i8*
  tail call void @_ZdlPv(i8* noundef nonnull %10) #8
  br label %_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim.exit42

_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim.exit42: ; preds = %try.cont, %if.then.i41
  store i32* %cond.i32, i32** %_M_start.i, align 8, !tbaa !74
  %add.ptr53 = getelementptr inbounds i32, i32* %add.ptr, i64 %__n
  store i32* %add.ptr53, i32** %_M_finish.i, align 8, !tbaa !71
  %add.ptr56 = getelementptr inbounds i32, i32* %cond.i32, i64 %cond.i
  store i32* %add.ptr56, i32** %_M_end_of_storage, align 8, !tbaa !109
  br label %if.end60

if.end60:                                         ; preds = %_ZSt27__uninitialized_default_n_aIPimiET_S1_T0_RSaIT1_E.exit, %_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim.exit42, %entry
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN12MatrixInitOpIN6miniFE9CSRMatrixIdiiEEEC2ERKSt6vectorIiSaIiEES8_S8_iiiiRKNS0_23simple_mesh_descriptionIiEERS2_(%struct.MatrixInitOp* noundef nonnull align 8 dereferenceable(88) %this, %"class.std::vector.15"* noundef nonnull align 8 dereferenceable(24) %rows_vec, %"class.std::vector.15"* noundef nonnull align 8 dereferenceable(24) %row_offsets_vec, %"class.std::vector.15"* noundef nonnull align 8 dereferenceable(24) %row_coords_vec, i32 noundef signext %global_nx, i32 noundef signext %global_ny, i32 noundef signext %global_nz, i32 noundef signext %global_n_rows, %"class.miniFE::simple_mesh_description"* noundef nonnull align 8 dereferenceable(192) %input_mesh, %"struct.miniFE::CSRMatrix"* noundef nonnull align 8 dereferenceable(132) %matrix) unnamed_addr #11 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %rows = getelementptr inbounds %struct.MatrixInitOp, %struct.MatrixInitOp* %this, i64 0, i32 0
  %_M_start.i = getelementptr inbounds %"class.std::vector.15", %"class.std::vector.15"* %rows_vec, i64 0, i32 0, i32 0, i32 0
  %0 = load i32*, i32** %_M_start.i, align 8, !tbaa !74
  store i32* %0, i32** %rows, align 8, !tbaa !175
  %row_offsets = getelementptr inbounds %struct.MatrixInitOp, %struct.MatrixInitOp* %this, i64 0, i32 1
  %_M_start.i19 = getelementptr inbounds %"class.std::vector.15", %"class.std::vector.15"* %row_offsets_vec, i64 0, i32 0, i32 0, i32 0
  %1 = load i32*, i32** %_M_start.i19, align 8, !tbaa !74
  store i32* %1, i32** %row_offsets, align 8, !tbaa !176
  %row_coords = getelementptr inbounds %struct.MatrixInitOp, %struct.MatrixInitOp* %this, i64 0, i32 2
  %_M_start.i20 = getelementptr inbounds %"class.std::vector.15", %"class.std::vector.15"* %row_coords_vec, i64 0, i32 0, i32 0, i32 0
  %2 = load i32*, i32** %_M_start.i20, align 8, !tbaa !74
  store i32* %2, i32** %row_coords, align 8, !tbaa !177
  %global_nodes_x = getelementptr inbounds %struct.MatrixInitOp, %struct.MatrixInitOp* %this, i64 0, i32 3
  store i32 %global_nx, i32* %global_nodes_x, align 8, !tbaa !178
  %global_nodes_y = getelementptr inbounds %struct.MatrixInitOp, %struct.MatrixInitOp* %this, i64 0, i32 4
  store i32 %global_ny, i32* %global_nodes_y, align 4, !tbaa !179
  %global_nodes_z = getelementptr inbounds %struct.MatrixInitOp, %struct.MatrixInitOp* %this, i64 0, i32 5
  store i32 %global_nz, i32* %global_nodes_z, align 8, !tbaa !180
  %global_nrows = getelementptr inbounds %struct.MatrixInitOp, %struct.MatrixInitOp* %this, i64 0, i32 6
  store i32 %global_n_rows, i32* %global_nrows, align 4, !tbaa !181
  %dest_rows = getelementptr inbounds %struct.MatrixInitOp, %struct.MatrixInitOp* %this, i64 0, i32 7
  %_M_start.i21 = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %matrix, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load i32*, i32** %_M_start.i21, align 8, !tbaa !74
  store i32* %3, i32** %dest_rows, align 8, !tbaa !182
  %dest_rowoffsets = getelementptr inbounds %struct.MatrixInitOp, %struct.MatrixInitOp* %this, i64 0, i32 8
  %_M_start.i22 = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %matrix, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load i32*, i32** %_M_start.i22, align 8, !tbaa !74
  store i32* %4, i32** %dest_rowoffsets, align 8, !tbaa !183
  %dest_cols = getelementptr inbounds %struct.MatrixInitOp, %struct.MatrixInitOp* %this, i64 0, i32 9
  %packed_cols = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %matrix, i64 0, i32 5
  %_M_start.i23 = getelementptr inbounds %"class.std::vector.15", %"class.std::vector.15"* %packed_cols, i64 0, i32 0, i32 0, i32 0
  %5 = load i32*, i32** %_M_start.i23, align 8, !tbaa !74
  store i32* %5, i32** %dest_cols, align 8, !tbaa !184
  %dest_coefs = getelementptr inbounds %struct.MatrixInitOp, %struct.MatrixInitOp* %this, i64 0, i32 10
  %packed_coefs = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %matrix, i64 0, i32 6
  %_M_start.i24 = getelementptr inbounds %"class.std::vector.20", %"class.std::vector.20"* %packed_coefs, i64 0, i32 0, i32 0, i32 0
  %6 = load double*, double** %_M_start.i24, align 8, !tbaa !78
  store double* %6, double** %dest_coefs, align 8, !tbaa !185
  %n = getelementptr inbounds %struct.MatrixInitOp, %struct.MatrixInitOp* %this, i64 0, i32 11
  %_M_finish.i = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %matrix, i64 0, i32 2, i32 0, i32 0, i32 1
  %7 = load i32*, i32** %_M_finish.i, align 8, !tbaa !71
  %sub.ptr.lhs.cast.i = ptrtoint i32* %7 to i64
  %sub.ptr.rhs.cast.i = ptrtoint i32* %3 to i64
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %8 = lshr exact i64 %sub.ptr.sub.i, 2
  %conv = trunc i64 %8 to i32
  store i32 %conv, i32* %n, align 8, !tbaa !112
  %mesh = getelementptr inbounds %struct.MatrixInitOp, %struct.MatrixInitOp* %this, i64 0, i32 12
  store %"class.miniFE::simple_mesh_description"* %input_mesh, %"class.miniFE::simple_mesh_description"** %mesh, align 8, !tbaa !186
  %_M_end_of_storage.i = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %matrix, i64 0, i32 5, i32 0, i32 0, i32 2
  %9 = load i32*, i32** %_M_end_of_storage.i, align 8, !tbaa !109
  %sub.ptr.lhs.cast.i27 = ptrtoint i32* %9 to i64
  %sub.ptr.rhs.cast.i28 = ptrtoint i32* %5 to i64
  %sub.ptr.sub.i29 = sub i64 %sub.ptr.lhs.cast.i27, %sub.ptr.rhs.cast.i28
  %sub.ptr.div.i30 = ashr exact i64 %sub.ptr.sub.i29, 2
  %_M_end_of_storage.i31 = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %matrix, i64 0, i32 6, i32 0, i32 0, i32 2
  %10 = load double*, double** %_M_end_of_storage.i31, align 8, !tbaa !81
  %sub.ptr.lhs.cast.i33 = ptrtoint double* %10 to i64
  %sub.ptr.rhs.cast.i34 = ptrtoint double* %6 to i64
  %sub.ptr.sub.i35 = sub i64 %sub.ptr.lhs.cast.i33, %sub.ptr.rhs.cast.i34
  %sub.ptr.div.i36 = ashr exact i64 %sub.ptr.sub.i35, 3
  %cmp.not = icmp eq i64 %sub.ptr.div.i30, %sub.ptr.div.i36
  br i1 %cmp.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call1.i = tail call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i8* noundef nonnull getelementptr inbounds ([32 x i8], [32 x i8]* @.str.71, i64 0, i64 0), i64 noundef 31)
  %11 = load i32*, i32** %_M_end_of_storage.i, align 8, !tbaa !109
  %12 = load i32*, i32** %_M_start.i23, align 8, !tbaa !74
  %sub.ptr.lhs.cast.i39 = ptrtoint i32* %11 to i64
  %sub.ptr.rhs.cast.i40 = ptrtoint i32* %12 to i64
  %sub.ptr.sub.i41 = sub i64 %sub.ptr.lhs.cast.i39, %sub.ptr.rhs.cast.i40
  %sub.ptr.div.i42 = ashr exact i64 %sub.ptr.sub.i41, 2
  %call.i = tail call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertImEERSoT_(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i64 noundef %sub.ptr.div.i42)
  %call1.i44 = tail call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call.i, i8* noundef nonnull getelementptr inbounds ([6 x i8], [6 x i8]* @.str.72, i64 0, i64 0), i64 noundef 5)
  %call1.i46 = tail call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call.i, i8* noundef nonnull getelementptr inbounds ([24 x i8], [24 x i8]* @.str.73, i64 0, i64 0), i64 noundef 23)
  %13 = load double*, double** %_M_end_of_storage.i31, align 8, !tbaa !81
  %14 = load double*, double** %_M_start.i24, align 8, !tbaa !78
  %sub.ptr.lhs.cast.i49 = ptrtoint double* %13 to i64
  %sub.ptr.rhs.cast.i50 = ptrtoint double* %14 to i64
  %sub.ptr.sub.i51 = sub i64 %sub.ptr.lhs.cast.i49, %sub.ptr.rhs.cast.i50
  %sub.ptr.div.i52 = ashr exact i64 %sub.ptr.sub.i51, 3
  %call.i53 = tail call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertImEERSoT_(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call.i, i64 noundef %sub.ptr.div.i52)
  %call1.i55 = tail call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call.i53, i8* noundef nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.74, i64 0, i64 0), i64 noundef 1)
  %15 = bitcast %"class.std::basic_ostream"* %call.i53 to i8**
  %vtable.i = load i8*, i8** %15, align 8, !tbaa !32
  %vbase.offset.ptr.i = getelementptr i8, i8* %vtable.i, i64 -24
  %16 = bitcast i8* %vbase.offset.ptr.i to i64*
  %vbase.offset.i = load i64, i64* %16, align 8
  %17 = bitcast %"class.std::basic_ostream"* %call.i53 to i8*
  %add.ptr.i95 = getelementptr inbounds i8, i8* %17, i64 %vbase.offset.i
  %_M_ctype.i.i = getelementptr inbounds i8, i8* %add.ptr.i95, i64 240
  %18 = bitcast i8* %_M_ctype.i.i to %"class.std::ctype"**
  %19 = load %"class.std::ctype"*, %"class.std::ctype"** %18, align 8, !tbaa !34
  %tobool.not.i.i.i = icmp eq %"class.std::ctype"* %19, null
  br i1 %tobool.not.i.i.i, label %if.then.i.i.i, label %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i

if.then.i.i.i:                                    ; preds = %if.then
  tail call void @_ZSt16__throw_bad_castv() #29
  unreachable

_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i: ; preds = %if.then
  %_M_widen_ok.i.i.i = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %19, i64 0, i32 8
  %20 = load i8, i8* %_M_widen_ok.i.i.i, align 8, !tbaa !37
  %tobool.not.i1.i.i = icmp eq i8 %20, 0
  br i1 %tobool.not.i1.i.i, label %if.end.i.i.i, label %if.then.i2.i.i

if.then.i2.i.i:                                   ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
  %arrayidx.i.i.i = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %19, i64 0, i32 9, i64 10
  %21 = load i8, i8* %arrayidx.i.i.i, align 1, !tbaa !39
  br label %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit

if.end.i.i.i:                                     ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i
  tail call void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %19)
  %22 = bitcast %"class.std::ctype"* %19 to i8 (%"class.std::ctype"*, i8)***
  %vtable.i.i.i = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %22, align 8, !tbaa !32
  %vfn.i.i.i = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vtable.i.i.i, i64 6
  %23 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vfn.i.i.i, align 8
  %call.i.i.i = tail call noundef zeroext i8 %23(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %19, i8 noundef zeroext 10)
  br label %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit

_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit: ; preds = %if.then.i2.i.i, %if.end.i.i.i
  %retval.0.i.i.i = phi i8 [ %21, %if.then.i2.i.i ], [ %call.i.i.i, %if.end.i.i.i ]
  %call1.i96 = tail call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call.i53, i8 noundef zeroext %retval.0.i.i.i)
  %call.i.i97 = tail call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call1.i96)
  %.pre = load i32, i32* %n, align 8, !tbaa !112
  %.pre118 = load i32*, i32** %_M_start.i19, align 8, !tbaa !74
  %.pre119 = load i32*, i32** %_M_end_of_storage.i, align 8, !tbaa !109
  %.pre120 = load i32*, i32** %_M_start.i23, align 8, !tbaa !74
  %.pre122 = ptrtoint i32* %.pre119 to i64
  %.pre123 = ptrtoint i32* %.pre120 to i64
  %.pre124 = sub i64 %.pre122, %.pre123
  %.pre125 = ashr exact i64 %.pre124, 2
  br label %if.end

if.end:                                           ; preds = %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit, %entry
  %sub.ptr.div.i63.pre-phi = phi i64 [ %.pre125, %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit ], [ %sub.ptr.div.i30, %entry ]
  %sub.ptr.rhs.cast.i61.pre-phi = phi i64 [ %.pre123, %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit ], [ %sub.ptr.rhs.cast.i28, %entry ]
  %24 = phi i32* [ %.pre120, %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit ], [ %5, %entry ]
  %25 = phi i32* [ %.pre118, %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit ], [ %1, %entry ]
  %26 = phi i32 [ %.pre, %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit ], [ %conv, %entry ]
  %conv28 = sext i32 %26 to i64
  %add.ptr.i = getelementptr inbounds i32, i32* %25, i64 %conv28
  %27 = load i32, i32* %add.ptr.i, align 4, !tbaa !16
  %conv30 = sext i32 %27 to i64
  %cmp33 = icmp ult i64 %sub.ptr.div.i63.pre-phi, %conv30
  br i1 %cmp33, label %if.then34, label %if.end43

if.then34:                                        ; preds = %if.end
  %call1.i65 = tail call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i8* noundef nonnull getelementptr inbounds ([32 x i8], [32 x i8]* @.str.71, i64 0, i64 0), i64 noundef 31)
  %28 = load i32*, i32** %_M_end_of_storage.i, align 8, !tbaa !109
  %29 = load i32*, i32** %_M_start.i23, align 8, !tbaa !74
  %sub.ptr.lhs.cast.i68 = ptrtoint i32* %28 to i64
  %sub.ptr.rhs.cast.i69 = ptrtoint i32* %29 to i64
  %sub.ptr.sub.i70 = sub i64 %sub.ptr.lhs.cast.i68, %sub.ptr.rhs.cast.i69
  %sub.ptr.div.i71 = ashr exact i64 %sub.ptr.sub.i70, 2
  %call.i72 = tail call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertImEERSoT_(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @_ZSt4cout, i64 noundef %sub.ptr.div.i71)
  %call1.i74 = tail call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call.i72, i8* noundef nonnull getelementptr inbounds ([11 x i8], [11 x i8]* @.str.75, i64 0, i64 0), i64 noundef 10)
  %call.i75 = tail call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertImEERSoT_(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call.i72, i64 noundef %conv30)
  %call1.i77 = tail call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call.i75, i8* noundef nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.74, i64 0, i64 0), i64 noundef 1)
  %30 = bitcast %"class.std::basic_ostream"* %call.i75 to i8**
  %vtable.i98 = load i8*, i8** %30, align 8, !tbaa !32
  %vbase.offset.ptr.i99 = getelementptr i8, i8* %vtable.i98, i64 -24
  %31 = bitcast i8* %vbase.offset.ptr.i99 to i64*
  %vbase.offset.i100 = load i64, i64* %31, align 8
  %32 = bitcast %"class.std::basic_ostream"* %call.i75 to i8*
  %add.ptr.i101 = getelementptr inbounds i8, i8* %32, i64 %vbase.offset.i100
  %_M_ctype.i.i102 = getelementptr inbounds i8, i8* %add.ptr.i101, i64 240
  %33 = bitcast i8* %_M_ctype.i.i102 to %"class.std::ctype"**
  %34 = load %"class.std::ctype"*, %"class.std::ctype"** %33, align 8, !tbaa !34
  %tobool.not.i.i.i103 = icmp eq %"class.std::ctype"* %34, null
  br i1 %tobool.not.i.i.i103, label %if.then.i.i.i104, label %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i107

if.then.i.i.i104:                                 ; preds = %if.then34
  tail call void @_ZSt16__throw_bad_castv() #29
  unreachable

_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i107: ; preds = %if.then34
  %_M_widen_ok.i.i.i105 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %34, i64 0, i32 8
  %35 = load i8, i8* %_M_widen_ok.i.i.i105, align 8, !tbaa !37
  %tobool.not.i1.i.i106 = icmp eq i8 %35, 0
  br i1 %tobool.not.i1.i.i106, label %if.end.i.i.i113, label %if.then.i2.i.i109

if.then.i2.i.i109:                                ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i107
  %arrayidx.i.i.i108 = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %34, i64 0, i32 9, i64 10
  %36 = load i8, i8* %arrayidx.i.i.i108, align 1, !tbaa !39
  br label %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit117

if.end.i.i.i113:                                  ; preds = %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i107
  tail call void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %34)
  %37 = bitcast %"class.std::ctype"* %34 to i8 (%"class.std::ctype"*, i8)***
  %vtable.i.i.i110 = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %37, align 8, !tbaa !32
  %vfn.i.i.i111 = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vtable.i.i.i110, i64 6
  %38 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vfn.i.i.i111, align 8
  %call.i.i.i112 = tail call noundef zeroext i8 %38(%"class.std::ctype"* noundef nonnull align 8 dereferenceable(570) %34, i8 noundef zeroext 10)
  br label %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit117

_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit117: ; preds = %if.then.i2.i.i109, %if.end.i.i.i113
  %retval.0.i.i.i114 = phi i8 [ %36, %if.then.i2.i.i109 ], [ %call.i.i.i112, %if.end.i.i.i113 ]
  %call1.i115 = tail call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call.i75, i8 noundef zeroext %retval.0.i.i.i114)
  %call.i.i116 = tail call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call1.i115)
  %.pre121 = load i32*, i32** %_M_start.i23, align 8, !tbaa !74
  %.pre126 = ptrtoint i32* %.pre121 to i64
  br label %if.end43

if.end43:                                         ; preds = %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit117, %if.end
  %sub.ptr.rhs.cast.i.i.pre-phi = phi i64 [ %.pre126, %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit117 ], [ %sub.ptr.rhs.cast.i61.pre-phi, %if.end ]
  %39 = phi i32* [ %.pre121, %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit117 ], [ %24, %if.end ]
  %_M_finish.i.i = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %matrix, i64 0, i32 5, i32 0, i32 0, i32 1
  %40 = load i32*, i32** %_M_finish.i.i, align 8, !tbaa !71
  %sub.ptr.lhs.cast.i.i = ptrtoint i32* %40 to i64
  %sub.ptr.sub.i.i = sub i64 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i.pre-phi
  %sub.ptr.div.i.i = ashr exact i64 %sub.ptr.sub.i.i, 2
  %cmp.i = icmp ult i64 %sub.ptr.div.i.i, %conv30
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %if.end43
  %sub.i = sub nsw i64 %conv30, %sub.ptr.div.i.i
  tail call void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(%"class.std::vector.15"* noundef nonnull align 8 dereferenceable(24) %packed_cols, i64 noundef %sub.i)
  br label %_ZNSt6vectorIiSaIiEE6resizeEm.exit

if.else.i:                                        ; preds = %if.end43
  %cmp4.i = icmp ugt i64 %sub.ptr.div.i.i, %conv30
  br i1 %cmp4.i, label %if.then5.i, label %_ZNSt6vectorIiSaIiEE6resizeEm.exit

if.then5.i:                                       ; preds = %if.else.i
  %add.ptr.i79 = getelementptr inbounds i32, i32* %39, i64 %conv30
  %tobool.not.i.i = icmp eq i32* %40, %add.ptr.i79
  br i1 %tobool.not.i.i, label %_ZNSt6vectorIiSaIiEE6resizeEm.exit, label %invoke.cont.i.i

invoke.cont.i.i:                                  ; preds = %if.then5.i
  store i32* %add.ptr.i79, i32** %_M_finish.i.i, align 8, !tbaa !71
  br label %_ZNSt6vectorIiSaIiEE6resizeEm.exit

_ZNSt6vectorIiSaIiEE6resizeEm.exit:               ; preds = %if.then.i, %if.else.i, %if.then5.i, %invoke.cont.i.i
  %_M_finish.i.i80 = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %matrix, i64 0, i32 6, i32 0, i32 0, i32 1
  %41 = load double*, double** %_M_finish.i.i80, align 8, !tbaa !82
  %42 = load double*, double** %_M_start.i24, align 8, !tbaa !78
  %sub.ptr.lhs.cast.i.i82 = ptrtoint double* %41 to i64
  %sub.ptr.rhs.cast.i.i83 = ptrtoint double* %42 to i64
  %sub.ptr.sub.i.i84 = sub i64 %sub.ptr.lhs.cast.i.i82, %sub.ptr.rhs.cast.i.i83
  %sub.ptr.div.i.i85 = ashr exact i64 %sub.ptr.sub.i.i84, 3
  %cmp.i86 = icmp ult i64 %sub.ptr.div.i.i85, %conv30
  br i1 %cmp.i86, label %if.then.i88, label %if.else.i90

if.then.i88:                                      ; preds = %_ZNSt6vectorIiSaIiEE6resizeEm.exit
  %sub.i87 = sub nsw i64 %conv30, %sub.ptr.div.i.i85
  tail call void @_ZNSt6vectorIdSaIdEE17_M_default_appendEm(%"class.std::vector.20"* noundef nonnull align 8 dereferenceable(24) %packed_coefs, i64 noundef %sub.i87)
  br label %_ZNSt6vectorIdSaIdEE6resizeEm.exit

if.else.i90:                                      ; preds = %_ZNSt6vectorIiSaIiEE6resizeEm.exit
  %cmp4.i89 = icmp ugt i64 %sub.ptr.div.i.i85, %conv30
  br i1 %cmp4.i89, label %if.then5.i93, label %_ZNSt6vectorIdSaIdEE6resizeEm.exit

if.then5.i93:                                     ; preds = %if.else.i90
  %add.ptr.i91 = getelementptr inbounds double, double* %42, i64 %conv30
  %tobool.not.i.i92 = icmp eq double* %41, %add.ptr.i91
  br i1 %tobool.not.i.i92, label %_ZNSt6vectorIdSaIdEE6resizeEm.exit, label %invoke.cont.i.i94

invoke.cont.i.i94:                                ; preds = %if.then5.i93
  store double* %add.ptr.i91, double** %_M_finish.i.i80, align 8, !tbaa !82
  br label %_ZNSt6vectorIdSaIdEE6resizeEm.exit

_ZNSt6vectorIdSaIdEE6resizeEm.exit:               ; preds = %if.then.i88, %if.else.i90, %if.then5.i93, %invoke.cont.i.i94
  %43 = load i32*, i32** %dest_rowoffsets, align 8, !tbaa !183
  %44 = load i32, i32* %n, align 8, !tbaa !112
  %idxprom = sext i32 %44 to i64
  %arrayidx = getelementptr inbounds i32, i32* %43, i64 %idxprom
  store i32 %27, i32* %arrayidx, align 4, !tbaa !16
  ret void
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr dso_local void @_ZN12MatrixInitOpIN6miniFE9CSRMatrixIdiiEEEclEi(%struct.MatrixInitOp* noundef nonnull align 8 dereferenceable(88) %this, i32 noundef signext %i) local_unnamed_addr #6 comdat align 2 {
entry:
  %rows = getelementptr inbounds %struct.MatrixInitOp, %struct.MatrixInitOp* %this, i64 0, i32 0
  %0 = load i32*, i32** %rows, align 8, !tbaa !175
  %idxprom = sext i32 %i to i64
  %arrayidx = getelementptr inbounds i32, i32* %0, i64 %idxprom
  %1 = load i32, i32* %arrayidx, align 4, !tbaa !16
  %dest_rows = getelementptr inbounds %struct.MatrixInitOp, %struct.MatrixInitOp* %this, i64 0, i32 7
  %2 = load i32*, i32** %dest_rows, align 8, !tbaa !182
  %arrayidx3 = getelementptr inbounds i32, i32* %2, i64 %idxprom
  store i32 %1, i32* %arrayidx3, align 4, !tbaa !16
  %row_offsets = getelementptr inbounds %struct.MatrixInitOp, %struct.MatrixInitOp* %this, i64 0, i32 1
  %3 = load i32*, i32** %row_offsets, align 8, !tbaa !176
  %arrayidx5 = getelementptr inbounds i32, i32* %3, i64 %idxprom
  %4 = load i32, i32* %arrayidx5, align 4, !tbaa !16
  %dest_rowoffsets = getelementptr inbounds %struct.MatrixInitOp, %struct.MatrixInitOp* %this, i64 0, i32 8
  %5 = load i32*, i32** %dest_rowoffsets, align 8, !tbaa !183
  %arrayidx7 = getelementptr inbounds i32, i32* %5, i64 %idxprom
  store i32 %4, i32* %arrayidx7, align 4, !tbaa !16
  %row_coords = getelementptr inbounds %struct.MatrixInitOp, %struct.MatrixInitOp* %this, i64 0, i32 2
  %6 = load i32*, i32** %row_coords, align 8, !tbaa !177
  %mul = mul nsw i32 %i, 3
  %idxprom8 = sext i32 %mul to i64
  %arrayidx9 = getelementptr inbounds i32, i32* %6, i64 %idxprom8
  %7 = load i32, i32* %arrayidx9, align 4, !tbaa !16
  %add = add nsw i32 %mul, 1
  %idxprom12 = sext i32 %add to i64
  %arrayidx13 = getelementptr inbounds i32, i32* %6, i64 %idxprom12
  %8 = load i32, i32* %arrayidx13, align 4, !tbaa !16
  %add16 = add nsw i32 %mul, 2
  %idxprom17 = sext i32 %add16 to i64
  %arrayidx18 = getelementptr inbounds i32, i32* %6, i64 %idxprom17
  %9 = load i32, i32* %arrayidx18, align 4, !tbaa !16
  %global_nodes_x = getelementptr inbounds %struct.MatrixInitOp, %struct.MatrixInitOp* %this, i64 0, i32 3
  %global_nodes_y = getelementptr inbounds %struct.MatrixInitOp, %struct.MatrixInitOp* %this, i64 0, i32 4
  %global_nodes_z = getelementptr inbounds %struct.MatrixInitOp, %struct.MatrixInitOp* %this, i64 0, i32 5
  %global_nrows = getelementptr inbounds %struct.MatrixInitOp, %struct.MatrixInitOp* %this, i64 0, i32 6
  %mesh = getelementptr inbounds %struct.MatrixInitOp, %struct.MatrixInitOp* %this, i64 0, i32 12
  %dest_cols = getelementptr inbounds %struct.MatrixInitOp, %struct.MatrixInitOp* %this, i64 0, i32 9
  %dest_coefs = getelementptr inbounds %struct.MatrixInitOp, %struct.MatrixInitOp* %this, i64 0, i32 10
  %add27 = add nsw i32 %7, -1
  %add27.2 = add nsw i32 %7, 1
  br label %for.cond19.preheader

for.cond19.preheader:                             ; preds = %entry, %for.cond.cleanup21
  %nnz.039 = phi i32 [ 0, %entry ], [ %nnz.3.2, %for.cond.cleanup21 ]
  %sz.038 = phi i32 [ -1, %entry ], [ %inc44, %for.cond.cleanup21 ]
  %add29 = add nsw i32 %sz.038, %9
  br label %for.cond23.preheader

for.cond.cleanup:                                 ; preds = %for.cond.cleanup21
  %10 = load i32*, i32** %dest_cols, align 8, !tbaa !184
  %idxprom47 = sext i32 %4 to i64
  %arrayidx48 = getelementptr inbounds i32, i32* %10, i64 %idxprom47
  %11 = zext i32 %nnz.3.2 to i64
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.body.i, %for.cond.cleanup
  %indvars.iv.i = phi i64 [ %12, %for.body.i ], [ %11, %for.cond.cleanup ]
  %12 = add nsw i64 %indvars.iv.i, -1
  %13 = trunc i64 %indvars.iv.i to i32
  %cmp.i = icmp sgt i32 %13, 1
  br i1 %cmp.i, label %for.body.i, label %_Z14sort_if_neededIiEvPT_S0_.exit

for.body.i:                                       ; preds = %for.cond.i
  %arrayidx.i = getelementptr inbounds i32, i32* %arrayidx48, i64 %12
  %14 = load i32, i32* %arrayidx.i, align 4, !tbaa !16
  %sub1.i = add nsw i64 %indvars.iv.i, 4294967294
  %15 = and i64 %sub1.i, 4294967295
  %arrayidx3.i = getelementptr inbounds i32, i32* %arrayidx48, i64 %15
  %16 = load i32, i32* %arrayidx3.i, align 4, !tbaa !16
  %cmp4.i = icmp slt i32 %14, %16
  br i1 %cmp4.i, label %if.then5.i, label %for.cond.i, !llvm.loop !187

if.then5.i:                                       ; preds = %for.body.i
  %idx.ext.i = sext i32 %nnz.3.2 to i64
  %add.ptr.i = getelementptr inbounds i32, i32* %arrayidx48, i64 %idx.ext.i
  %cmp.not.i.i.i = icmp eq i32 %nnz.3.2, 0
  br i1 %cmp.not.i.i.i, label %_Z14sort_if_neededIiEvPT_S0_.exit, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.then5.i
  %17 = tail call i64 @llvm.ctlz.i64(i64 %idx.ext.i, i1 true) #8, !range !188
  %.neg.i.i.i = mul nsw i64 %17, -2
  %mul.i.i.i = add nsw i64 %.neg.i.i.i, 126
  tail call void @_ZSt16__introsort_loopIPilN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_(i32* noundef nonnull %arrayidx48, i32* noundef nonnull %add.ptr.i, i64 noundef %mul.i.i.i, i8 undef)
  tail call void @_ZSt22__final_insertion_sortIPiN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_(i32* noundef nonnull %arrayidx48, i32* noundef nonnull %add.ptr.i, i8 undef)
  br label %_Z14sort_if_neededIiEvPT_S0_.exit

_Z14sort_if_neededIiEvPT_S0_.exit:                ; preds = %for.cond.i, %if.then5.i, %if.then.i.i.i
  ret void

for.cond23.preheader:                             ; preds = %for.cond19.preheader, %if.end.2
  %nnz.137 = phi i32 [ %nnz.039, %for.cond19.preheader ], [ %nnz.3.2, %if.end.2 ]
  %sy.036 = phi i32 [ -1, %for.cond19.preheader ], [ %inc41, %if.end.2 ]
  %add28 = add nsw i32 %sy.036, %8
  %18 = or i32 %add28, %add29
  %19 = load i32, i32* %global_nodes_x, align 8, !tbaa !178
  %20 = load i32, i32* %global_nodes_y, align 4, !tbaa !179
  %21 = or i32 %18, %add27
  %.not.i = icmp sgt i32 %21, -1
  br i1 %.not.i, label %if.end.i, label %if.end

for.cond.cleanup21:                               ; preds = %if.end.2
  %inc44 = add nsw i32 %sz.038, 1
  %exitcond40.not = icmp eq i32 %inc44, 2
  br i1 %exitcond40.not, label %for.cond.cleanup, label %for.cond19.preheader, !llvm.loop !189

if.end.i:                                         ; preds = %for.cond23.preheader
  %22 = load i32, i32* %global_nodes_z, align 8, !tbaa !180
  %cmp4.not.i = icmp sle i32 %7, %19
  %cmp6.not.i = icmp slt i32 %add28, %20
  %or.cond.i = and i1 %cmp4.not.i, %cmp6.not.i
  %cmp8.not.i = icmp slt i32 %add29, %22
  %or.cond14.i = and i1 %or.cond.i, %cmp8.not.i
  br i1 %or.cond14.i, label %_ZN6miniFE6get_idIiEET_iiiiii.exit, label %if.end

_ZN6miniFE6get_idIiEET_iiiiii.exit:               ; preds = %if.end.i
  %mul11.i = mul i32 %20, %add29
  %reass.add.i = add i32 %mul11.i, %add28
  %reass.mul.i = mul i32 %reass.add.i, %19
  %add13.i = add i32 %reass.mul.i, %add27
  %cmp30 = icmp sgt i32 %add13.i, -1
  %23 = load i32, i32* %global_nrows, align 4
  %cmp31 = icmp slt i32 %add13.i, %23
  %or.cond = select i1 %cmp30, i1 %cmp31, i1 false
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %_ZN6miniFE6get_idIiEET_iiiiii.exit
  %24 = load %"class.miniFE::simple_mesh_description"*, %"class.miniFE::simple_mesh_description"** %mesh, align 8, !tbaa !186
  %map_ids_to_rows.i = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %24, i64 0, i32 2
  %call.i = tail call noundef signext i32 @_ZN6miniFE15find_row_for_idIiEET_S1_RKSt3mapIS1_S1_St4lessIS1_ESaISt4pairIKS1_S1_EEE(i32 noundef signext %add13.i, %"class.std::map"* noundef nonnull align 8 dereferenceable(48) %map_ids_to_rows.i)
  %25 = load i32*, i32** %dest_cols, align 8, !tbaa !184
  %add33 = add nsw i32 %nnz.137, %4
  %idxprom34 = sext i32 %add33 to i64
  %arrayidx35 = getelementptr inbounds i32, i32* %25, i64 %idxprom34
  store i32 %call.i, i32* %arrayidx35, align 4, !tbaa !16
  %26 = load double*, double** %dest_coefs, align 8, !tbaa !185
  %arrayidx38 = getelementptr inbounds double, double* %26, i64 %idxprom34
  store double 0.000000e+00, double* %arrayidx38, align 8, !tbaa !84
  %inc = add nsw i32 %nnz.137, 1
  %.pre = load i32, i32* %global_nodes_x, align 8, !tbaa !178
  %.pre41 = load i32, i32* %global_nodes_y, align 4, !tbaa !179
  br label %if.end

if.end:                                           ; preds = %if.end.i, %for.cond23.preheader, %if.then, %_ZN6miniFE6get_idIiEET_iiiiii.exit
  %27 = phi i32 [ %.pre41, %if.then ], [ %20, %_ZN6miniFE6get_idIiEET_iiiiii.exit ], [ %20, %for.cond23.preheader ], [ %20, %if.end.i ]
  %28 = phi i32 [ %.pre, %if.then ], [ %19, %_ZN6miniFE6get_idIiEET_iiiiii.exit ], [ %19, %for.cond23.preheader ], [ %19, %if.end.i ]
  %nnz.3 = phi i32 [ %inc, %if.then ], [ %nnz.137, %_ZN6miniFE6get_idIiEET_iiiiii.exit ], [ %nnz.137, %for.cond23.preheader ], [ %nnz.137, %if.end.i ]
  %29 = or i32 %18, %7
  %.not.i.1 = icmp sgt i32 %29, -1
  br i1 %.not.i.1, label %if.end.i.1, label %if.end.1

if.end.i.1:                                       ; preds = %if.end
  %30 = load i32, i32* %global_nodes_z, align 8, !tbaa !180
  %cmp4.not.i.1 = icmp slt i32 %7, %28
  %cmp6.not.i.1 = icmp slt i32 %add28, %27
  %or.cond.i.1 = and i1 %cmp4.not.i.1, %cmp6.not.i.1
  %cmp8.not.i.1 = icmp slt i32 %add29, %30
  %or.cond14.i.1 = and i1 %or.cond.i.1, %cmp8.not.i.1
  br i1 %or.cond14.i.1, label %_ZN6miniFE6get_idIiEET_iiiiii.exit.1, label %if.end.1

_ZN6miniFE6get_idIiEET_iiiiii.exit.1:             ; preds = %if.end.i.1
  %mul11.i.1 = mul i32 %27, %add29
  %reass.add.i.1 = add i32 %mul11.i.1, %add28
  %reass.mul.i.1 = mul i32 %reass.add.i.1, %28
  %add13.i.1 = add i32 %reass.mul.i.1, %7
  %cmp30.1 = icmp sgt i32 %add13.i.1, -1
  %31 = load i32, i32* %global_nrows, align 4
  %cmp31.1 = icmp slt i32 %add13.i.1, %31
  %or.cond.1 = select i1 %cmp30.1, i1 %cmp31.1, i1 false
  br i1 %or.cond.1, label %if.then.1, label %if.end.1

if.then.1:                                        ; preds = %_ZN6miniFE6get_idIiEET_iiiiii.exit.1
  %32 = load %"class.miniFE::simple_mesh_description"*, %"class.miniFE::simple_mesh_description"** %mesh, align 8, !tbaa !186
  %map_ids_to_rows.i.1 = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %32, i64 0, i32 2
  %call.i.1 = tail call noundef signext i32 @_ZN6miniFE15find_row_for_idIiEET_S1_RKSt3mapIS1_S1_St4lessIS1_ESaISt4pairIKS1_S1_EEE(i32 noundef signext %add13.i.1, %"class.std::map"* noundef nonnull align 8 dereferenceable(48) %map_ids_to_rows.i.1)
  %33 = load i32*, i32** %dest_cols, align 8, !tbaa !184
  %add33.1 = add nsw i32 %nnz.3, %4
  %idxprom34.1 = sext i32 %add33.1 to i64
  %arrayidx35.1 = getelementptr inbounds i32, i32* %33, i64 %idxprom34.1
  store i32 %call.i.1, i32* %arrayidx35.1, align 4, !tbaa !16
  %34 = load double*, double** %dest_coefs, align 8, !tbaa !185
  %arrayidx38.1 = getelementptr inbounds double, double* %34, i64 %idxprom34.1
  store double 0.000000e+00, double* %arrayidx38.1, align 8, !tbaa !84
  %inc.1 = add nsw i32 %nnz.3, 1
  %.pre42 = load i32, i32* %global_nodes_x, align 8, !tbaa !178
  %.pre43 = load i32, i32* %global_nodes_y, align 4, !tbaa !179
  br label %if.end.1

if.end.1:                                         ; preds = %if.then.1, %_ZN6miniFE6get_idIiEET_iiiiii.exit.1, %if.end.i.1, %if.end
  %35 = phi i32 [ %.pre43, %if.then.1 ], [ %27, %_ZN6miniFE6get_idIiEET_iiiiii.exit.1 ], [ %27, %if.end ], [ %27, %if.end.i.1 ]
  %36 = phi i32 [ %.pre42, %if.then.1 ], [ %28, %_ZN6miniFE6get_idIiEET_iiiiii.exit.1 ], [ %28, %if.end ], [ %28, %if.end.i.1 ]
  %nnz.3.1 = phi i32 [ %inc.1, %if.then.1 ], [ %nnz.3, %_ZN6miniFE6get_idIiEET_iiiiii.exit.1 ], [ %nnz.3, %if.end ], [ %nnz.3, %if.end.i.1 ]
  %37 = or i32 %18, %add27.2
  %.not.i.2 = icmp sgt i32 %37, -1
  br i1 %.not.i.2, label %if.end.i.2, label %if.end.2

if.end.i.2:                                       ; preds = %if.end.1
  %38 = load i32, i32* %global_nodes_z, align 8, !tbaa !180
  %cmp4.not.i.2 = icmp slt i32 %add27.2, %36
  %cmp6.not.i.2 = icmp slt i32 %add28, %35
  %or.cond.i.2 = and i1 %cmp4.not.i.2, %cmp6.not.i.2
  %cmp8.not.i.2 = icmp slt i32 %add29, %38
  %or.cond14.i.2 = and i1 %or.cond.i.2, %cmp8.not.i.2
  br i1 %or.cond14.i.2, label %_ZN6miniFE6get_idIiEET_iiiiii.exit.2, label %if.end.2

_ZN6miniFE6get_idIiEET_iiiiii.exit.2:             ; preds = %if.end.i.2
  %mul11.i.2 = mul i32 %35, %add29
  %reass.add.i.2 = add i32 %mul11.i.2, %add28
  %reass.mul.i.2 = mul i32 %reass.add.i.2, %36
  %add13.i.2 = add i32 %reass.mul.i.2, %add27.2
  %cmp30.2 = icmp sgt i32 %add13.i.2, -1
  %39 = load i32, i32* %global_nrows, align 4
  %cmp31.2 = icmp slt i32 %add13.i.2, %39
  %or.cond.2 = select i1 %cmp30.2, i1 %cmp31.2, i1 false
  br i1 %or.cond.2, label %if.then.2, label %if.end.2

if.then.2:                                        ; preds = %_ZN6miniFE6get_idIiEET_iiiiii.exit.2
  %40 = load %"class.miniFE::simple_mesh_description"*, %"class.miniFE::simple_mesh_description"** %mesh, align 8, !tbaa !186
  %map_ids_to_rows.i.2 = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %40, i64 0, i32 2
  %call.i.2 = tail call noundef signext i32 @_ZN6miniFE15find_row_for_idIiEET_S1_RKSt3mapIS1_S1_St4lessIS1_ESaISt4pairIKS1_S1_EEE(i32 noundef signext %add13.i.2, %"class.std::map"* noundef nonnull align 8 dereferenceable(48) %map_ids_to_rows.i.2)
  %41 = load i32*, i32** %dest_cols, align 8, !tbaa !184
  %add33.2 = add nsw i32 %nnz.3.1, %4
  %idxprom34.2 = sext i32 %add33.2 to i64
  %arrayidx35.2 = getelementptr inbounds i32, i32* %41, i64 %idxprom34.2
  store i32 %call.i.2, i32* %arrayidx35.2, align 4, !tbaa !16
  %42 = load double*, double** %dest_coefs, align 8, !tbaa !185
  %arrayidx38.2 = getelementptr inbounds double, double* %42, i64 %idxprom34.2
  store double 0.000000e+00, double* %arrayidx38.2, align 8, !tbaa !84
  %inc.2 = add nsw i32 %nnz.3.1, 1
  br label %if.end.2

if.end.2:                                         ; preds = %if.then.2, %_ZN6miniFE6get_idIiEET_iiiiii.exit.2, %if.end.i.2, %if.end.1
  %nnz.3.2 = phi i32 [ %inc.2, %if.then.2 ], [ %nnz.3.1, %_ZN6miniFE6get_idIiEET_iiiiii.exit.2 ], [ %nnz.3.1, %if.end.1 ], [ %nnz.3.1, %if.end.i.2 ]
  %inc41 = add nsw i32 %sy.036, 1
  %exitcond.not = icmp eq i32 %inc41, 2
  br i1 %exitcond.not, label %for.cond.cleanup21, label %for.cond23.preheader, !llvm.loop !190
}

declare noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertImEERSoT_(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8), i64 noundef) local_unnamed_addr #0

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIdSaIdEE17_M_default_appendEm(%"class.std::vector.20"* noundef nonnull align 8 dereferenceable(24) %this, i64 noundef %__n) local_unnamed_addr #11 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %cmp.not = icmp eq i64 %__n, 0
  br i1 %cmp.not, label %if.end60, label %if.then

if.then:                                          ; preds = %entry
  %_M_finish.i = getelementptr inbounds %"class.std::vector.20", %"class.std::vector.20"* %this, i64 0, i32 0, i32 0, i32 1
  %0 = load double*, double** %_M_finish.i, align 8, !tbaa !82
  %_M_start.i = getelementptr inbounds %"class.std::vector.20", %"class.std::vector.20"* %this, i64 0, i32 0, i32 0, i32 0
  %1 = load double*, double** %_M_start.i, align 8, !tbaa !78
  %sub.ptr.lhs.cast.i = ptrtoint double* %0 to i64
  %sub.ptr.rhs.cast.i = ptrtoint double* %1 to i64
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %2 = lshr exact i64 %sub.ptr.sub.i, 3
  %_M_end_of_storage = getelementptr inbounds %"class.std::vector.20", %"class.std::vector.20"* %this, i64 0, i32 0, i32 0, i32 2
  %3 = load double*, double** %_M_end_of_storage, align 8, !tbaa !81
  %sub.ptr.lhs.cast = ptrtoint double* %3 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.lhs.cast.i
  %sub.ptr.div = ashr exact i64 %sub.ptr.sub, 3
  %cmp4 = icmp sgt i64 %sub.ptr.sub.i, -1
  tail call void @llvm.assume(i1 %cmp4)
  %sub = xor i64 %2, 2305843009213693951
  %cmp6 = icmp ule i64 %sub.ptr.div, %sub
  tail call void @llvm.assume(i1 %cmp6)
  %cmp8.not = icmp ult i64 %sub.ptr.div, %__n
  br i1 %cmp8.not, label %if.else, label %_ZSt27__uninitialized_default_n_aIPdmdET_S1_T0_RSaIT1_E.exit

_ZSt27__uninitialized_default_n_aIPdmdET_S1_T0_RSaIT1_E.exit: ; preds = %if.then
  %__first2.i.i.i = bitcast double* %0 to i8*
  %4 = shl nuw i64 %__n, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %__first2.i.i.i, i8 0, i64 %4, i1 false)
  %scevgep.i.i.i = getelementptr double, double* %0, i64 %__n
  store double* %scevgep.i.i.i, double** %_M_finish.i, align 8, !tbaa !82
  br label %if.end60

if.else:                                          ; preds = %if.then
  %cmp.i = icmp ult i64 %sub, %__n
  br i1 %cmp.i, label %if.then.i, label %_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc.exit

if.then.i:                                        ; preds = %if.else
  tail call void @_ZSt20__throw_length_errorPKc(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.70, i64 0, i64 0)) #29
  unreachable

_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc.exit:    ; preds = %if.else
  %cmp.i.i = icmp ult i64 %2, %__n
  %.sroa.speculated.i = select i1 %cmp.i.i, i64 %__n, i64 %2
  %add.i = add i64 %.sroa.speculated.i, %2
  %cmp7.i = icmp ult i64 %add.i, %2
  %cmp9.i = icmp ugt i64 %add.i, 2305843009213693951
  %or.cond.i = or i1 %cmp7.i, %cmp9.i
  %cond.i = select i1 %or.cond.i, i64 2305843009213693951, i64 %add.i
  %cmp.not.i = icmp eq i64 %cond.i, 0
  br i1 %cmp.not.i, label %invoke.cont, label %_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i

_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i: ; preds = %_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc.exit
  %mul.i.i.i = shl nuw i64 %cond.i, 3
  %call2.i.i.i = tail call noalias noundef nonnull i8* @_Znwm(i64 noundef %mul.i.i.i) #30
  %5 = bitcast i8* %call2.i.i.i to double*
  %.pre = load double*, double** %_M_start.i, align 8, !tbaa !78
  %.pre43 = load double*, double** %_M_finish.i, align 8, !tbaa !82
  %.pre44 = ptrtoint double* %.pre to i64
  %.pre45 = ptrtoint double* %.pre43 to i64
  %.pre46 = sub i64 %.pre45, %.pre44
  br label %invoke.cont

invoke.cont:                                      ; preds = %_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i, %_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc.exit
  %sub.ptr.sub.i.i.i.i.i.i.i.i.pre-phi = phi i64 [ %.pre46, %_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i ], [ %sub.ptr.sub.i, %_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc.exit ]
  %6 = phi double* [ %.pre, %_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i ], [ %1, %_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc.exit ]
  %cond.i32 = phi double* [ %5, %_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i ], [ null, %_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc.exit ]
  %add.ptr = getelementptr inbounds double, double* %cond.i32, i64 %2
  %__first2.i.i.i34 = bitcast double* %add.ptr to i8*
  %7 = shl nuw i64 %__n, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %__first2.i.i.i34, i8 0, i64 %7, i1 false)
  %tobool.not.i.i.i.i.i.i.i.i = icmp eq i64 %sub.ptr.sub.i.i.i.i.i.i.i.i.pre-phi, 0
  br i1 %tobool.not.i.i.i.i.i.i.i.i, label %try.cont, label %if.then.i.i.i.i.i.i.i.i

if.then.i.i.i.i.i.i.i.i:                          ; preds = %invoke.cont
  %8 = bitcast double* %cond.i32 to i8*
  %9 = bitcast double* %6 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 %sub.ptr.sub.i.i.i.i.i.i.i.i.pre-phi, i1 false) #8
  br label %try.cont

try.cont:                                         ; preds = %if.then.i.i.i.i.i.i.i.i, %invoke.cont
  %tobool.not.i40 = icmp eq double* %6, null
  br i1 %tobool.not.i40, label %_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm.exit42, label %if.then.i41

if.then.i41:                                      ; preds = %try.cont
  %10 = bitcast double* %6 to i8*
  tail call void @_ZdlPv(i8* noundef nonnull %10) #8
  br label %_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm.exit42

_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm.exit42: ; preds = %try.cont, %if.then.i41
  store double* %cond.i32, double** %_M_start.i, align 8, !tbaa !78
  %add.ptr53 = getelementptr inbounds double, double* %add.ptr, i64 %__n
  store double* %add.ptr53, double** %_M_finish.i, align 8, !tbaa !82
  %add.ptr56 = getelementptr inbounds double, double* %cond.i32, i64 %cond.i
  store double* %add.ptr56, double** %_M_end_of_storage, align 8, !tbaa !81
  br label %if.end60

if.end60:                                         ; preds = %_ZSt27__uninitialized_default_n_aIPdmdET_S1_T0_RSaIT1_E.exit, %_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm.exit42, %entry
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZSt16__introsort_loopIPilN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_(i32* noundef %__first, i32* noundef %__last, i64 noundef %__depth_limit, i8 %__comp.coerce) local_unnamed_addr #11 comdat {
entry:
  %__comp.i = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %sub.ptr.rhs.cast = ptrtoint i32* %__first to i64
  %add.ptr1.i = getelementptr inbounds i32, i32* %__first, i64 1
  %sub.ptr.lhs.cast22 = ptrtoint i32* %__last to i64
  %sub.ptr.sub23 = sub i64 %sub.ptr.lhs.cast22, %sub.ptr.rhs.cast
  %cmp24 = icmp sgt i64 %sub.ptr.sub23, 64
  br i1 %cmp24, label %while.body, label %while.end

while.body:                                       ; preds = %entry, %_ZSt27__unguarded_partition_pivotIPiN9__gnu_cxx5__ops15_Iter_less_iterEET_S4_S4_T0_.exit
  %sub.ptr.sub27 = phi i64 [ %sub.ptr.sub, %_ZSt27__unguarded_partition_pivotIPiN9__gnu_cxx5__ops15_Iter_less_iterEET_S4_S4_T0_.exit ], [ %sub.ptr.sub23, %entry ]
  %__last.addr.026 = phi i32* [ %__first.addr.1.i.i, %_ZSt27__unguarded_partition_pivotIPiN9__gnu_cxx5__ops15_Iter_less_iterEET_S4_S4_T0_.exit ], [ %__last, %entry ]
  %__depth_limit.addr.025 = phi i64 [ %dec, %_ZSt27__unguarded_partition_pivotIPiN9__gnu_cxx5__ops15_Iter_less_iterEET_S4_S4_T0_.exit ], [ %__depth_limit, %entry ]
  %cmp1 = icmp eq i64 %__depth_limit.addr.025, 0
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %while.body
  %0 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_less_iter", %"struct.__gnu_cxx::__ops::_Iter_less_iter"* %__comp.i, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %0)
  call void @_ZSt11__make_heapIPiN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_RT0_(i32* noundef %__first, i32* noundef %__last.addr.026, %"struct.__gnu_cxx::__ops::_Iter_less_iter"* noundef nonnull align 1 dereferenceable(1) %__comp.i)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %0)
  br label %while.body.i.i

while.body.i.i:                                   ; preds = %if.then, %_ZSt10__pop_heapIPiN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_S4_RT0_.exit.i.i
  %__last.addr.08.i.i = phi i32* [ %incdec.ptr.i.i, %_ZSt10__pop_heapIPiN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_S4_RT0_.exit.i.i ], [ %__last.addr.026, %if.then ]
  %incdec.ptr.i.i = getelementptr inbounds i32, i32* %__last.addr.08.i.i, i64 -1
  %1 = load i32, i32* %incdec.ptr.i.i, align 4, !tbaa !16
  %2 = load i32, i32* %__first, align 4, !tbaa !16
  store i32 %2, i32* %incdec.ptr.i.i, align 4, !tbaa !16
  %sub.ptr.lhs.cast.i.i.i = ptrtoint i32* %incdec.ptr.i.i to i64
  %sub.ptr.sub.i.i.i = sub i64 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast
  %sub.ptr.div.i.i.i = ashr exact i64 %sub.ptr.sub.i.i.i, 2
  %sub.i.i.i.i = add nsw i64 %sub.ptr.div.i.i.i, -1
  %div.i.i.i.i = sdiv i64 %sub.i.i.i.i, 2
  %cmp26.i.i.i.i = icmp sgt i64 %sub.ptr.sub.i.i.i, 8
  br i1 %cmp26.i.i.i.i, label %while.body.i.i.i.i, label %while.end.i.i.i.i

while.body.i.i.i.i:                               ; preds = %while.body.i.i, %while.body.i.i.i.i
  %__holeIndex.addr.027.i.i.i.i = phi i64 [ %spec.select.i.i.i.i, %while.body.i.i.i.i ], [ 0, %while.body.i.i ]
  %add.i.i.i.i = shl i64 %__holeIndex.addr.027.i.i.i.i, 1
  %mul.i.i.i.i = add i64 %add.i.i.i.i, 2
  %add.ptr.i.i.i.i = getelementptr inbounds i32, i32* %__first, i64 %mul.i.i.i.i
  %sub1.i.i.i.i = or i64 %add.i.i.i.i, 1
  %add.ptr2.i.i.i.i = getelementptr inbounds i32, i32* %__first, i64 %sub1.i.i.i.i
  %3 = load i32, i32* %add.ptr.i.i.i.i, align 4, !tbaa !16
  %4 = load i32, i32* %add.ptr2.i.i.i.i, align 4, !tbaa !16
  %cmp.i.i.i.i.i = icmp slt i32 %3, %4
  %spec.select.i.i.i.i = select i1 %cmp.i.i.i.i.i, i64 %sub1.i.i.i.i, i64 %mul.i.i.i.i
  %add.ptr3.i.i.i.i = getelementptr inbounds i32, i32* %__first, i64 %spec.select.i.i.i.i
  %5 = load i32, i32* %add.ptr3.i.i.i.i, align 4, !tbaa !16
  %add.ptr5.i.i.i.i = getelementptr inbounds i32, i32* %__first, i64 %__holeIndex.addr.027.i.i.i.i
  store i32 %5, i32* %add.ptr5.i.i.i.i, align 4, !tbaa !16
  %cmp.i.i.i.i = icmp slt i64 %spec.select.i.i.i.i, %div.i.i.i.i
  br i1 %cmp.i.i.i.i, label %while.body.i.i.i.i, label %while.end.i.i.i.i, !llvm.loop !191

while.end.i.i.i.i:                                ; preds = %while.body.i.i.i.i, %while.body.i.i
  %__holeIndex.addr.0.lcssa.i.i.i.i = phi i64 [ 0, %while.body.i.i ], [ %spec.select.i.i.i.i, %while.body.i.i.i.i ]
  %6 = and i64 %sub.ptr.sub.i.i.i, 4
  %cmp6.i.i.i.i = icmp eq i64 %6, 0
  br i1 %cmp6.i.i.i.i, label %land.lhs.true.i.i.i.i, label %if.end18.i.i.i.i

land.lhs.true.i.i.i.i:                            ; preds = %while.end.i.i.i.i
  %sub7.i.i.i.i = add nsw i64 %sub.ptr.div.i.i.i, -2
  %div8.i.i.i.i = sdiv i64 %sub7.i.i.i.i, 2
  %cmp9.i.i.i.i = icmp eq i64 %__holeIndex.addr.0.lcssa.i.i.i.i, %div8.i.i.i.i
  br i1 %cmp9.i.i.i.i, label %if.then10.i.i.i.i, label %if.end18.i.i.i.i

if.then10.i.i.i.i:                                ; preds = %land.lhs.true.i.i.i.i
  %add11.i.i.i.i = shl i64 %__holeIndex.addr.0.lcssa.i.i.i.i, 1
  %sub13.i.i.i.i = or i64 %add11.i.i.i.i, 1
  %add.ptr14.i.i.i.i = getelementptr inbounds i32, i32* %__first, i64 %sub13.i.i.i.i
  %7 = load i32, i32* %add.ptr14.i.i.i.i, align 4, !tbaa !16
  %add.ptr16.i.i.i.i = getelementptr inbounds i32, i32* %__first, i64 %__holeIndex.addr.0.lcssa.i.i.i.i
  store i32 %7, i32* %add.ptr16.i.i.i.i, align 4, !tbaa !16
  br label %if.end18.i.i.i.i

if.end18.i.i.i.i:                                 ; preds = %if.then10.i.i.i.i, %land.lhs.true.i.i.i.i, %while.end.i.i.i.i
  %__holeIndex.addr.1.i.i.i.i = phi i64 [ %sub13.i.i.i.i, %if.then10.i.i.i.i ], [ %__holeIndex.addr.0.lcssa.i.i.i.i, %land.lhs.true.i.i.i.i ], [ %__holeIndex.addr.0.lcssa.i.i.i.i, %while.end.i.i.i.i ]
  %cmp14.i.i.i.i.i = icmp sgt i64 %__holeIndex.addr.1.i.i.i.i, 0
  br i1 %cmp14.i.i.i.i.i, label %land.rhs.i.i.i.i.i, label %_ZSt10__pop_heapIPiN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_S4_RT0_.exit.i.i

land.rhs.i.i.i.i.i:                               ; preds = %if.end18.i.i.i.i, %while.body.i.i.i.i.i
  %__holeIndex.addr.015.i.i.i.i.i = phi i64 [ %__parent.016.i.i5.i.i.i, %while.body.i.i.i.i.i ], [ %__holeIndex.addr.1.i.i.i.i, %if.end18.i.i.i.i ]
  %__parent.016.in.i.i.i.i.i = add nsw i64 %__holeIndex.addr.015.i.i.i.i.i, -1
  %__parent.016.i.i5.i.i.i = lshr i64 %__parent.016.in.i.i.i.i.i, 1
  %add.ptr.i.i.i.i.i = getelementptr inbounds i32, i32* %__first, i64 %__parent.016.i.i5.i.i.i
  %8 = load i32, i32* %add.ptr.i.i.i.i.i, align 4, !tbaa !16
  %cmp.i.i.i.i.i.i = icmp slt i32 %8, %1
  br i1 %cmp.i.i.i.i.i.i, label %while.body.i.i.i.i.i, label %_ZSt10__pop_heapIPiN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_S4_RT0_.exit.i.i

while.body.i.i.i.i.i:                             ; preds = %land.rhs.i.i.i.i.i
  %add.ptr3.i.i.i.i.i = getelementptr inbounds i32, i32* %__first, i64 %__holeIndex.addr.015.i.i.i.i.i
  store i32 %8, i32* %add.ptr3.i.i.i.i.i, align 4, !tbaa !16
  %cmp.i25.i.not.i.i.i = icmp ult i64 %__parent.016.in.i.i.i.i.i, 2
  br i1 %cmp.i25.i.not.i.i.i, label %_ZSt10__pop_heapIPiN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_S4_RT0_.exit.i.i, label %land.rhs.i.i.i.i.i, !llvm.loop !192

_ZSt10__pop_heapIPiN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_S4_RT0_.exit.i.i: ; preds = %while.body.i.i.i.i.i, %land.rhs.i.i.i.i.i, %if.end18.i.i.i.i
  %__holeIndex.addr.0.lcssa.i.i.i.i.i = phi i64 [ %__holeIndex.addr.1.i.i.i.i, %if.end18.i.i.i.i ], [ %__holeIndex.addr.015.i.i.i.i.i, %land.rhs.i.i.i.i.i ], [ 0, %while.body.i.i.i.i.i ]
  %add.ptr7.i.i.i.i.i = getelementptr inbounds i32, i32* %__first, i64 %__holeIndex.addr.0.lcssa.i.i.i.i.i
  store i32 %1, i32* %add.ptr7.i.i.i.i.i, align 4, !tbaa !16
  %cmp.i.i = icmp sgt i64 %sub.ptr.sub.i.i.i, 4
  br i1 %cmp.i.i, label %while.body.i.i, label %while.end, !llvm.loop !193

if.end:                                           ; preds = %while.body
  %dec = add nsw i64 %__depth_limit.addr.025, -1
  %div.i17 = lshr i64 %sub.ptr.sub27, 3
  %add.ptr.i = getelementptr inbounds i32, i32* %__first, i64 %div.i17
  %add.ptr2.i = getelementptr inbounds i32, i32* %__last.addr.026, i64 -1
  %9 = load i32, i32* %add.ptr1.i, align 4, !tbaa !16
  %10 = load i32, i32* %add.ptr.i, align 4, !tbaa !16
  %cmp.i.i.i = icmp slt i32 %9, %10
  %11 = load i32, i32* %add.ptr2.i, align 4, !tbaa !16
  br i1 %cmp.i.i.i, label %if.then.i.i, label %if.else7.i.i

if.then.i.i:                                      ; preds = %if.end
  %cmp.i19.i.i = icmp slt i32 %10, %11
  br i1 %cmp.i19.i.i, label %if.then2.i.i, label %if.else.i.i

if.then2.i.i:                                     ; preds = %if.then.i.i
  %12 = load i32, i32* %__first, align 4, !tbaa !16
  store i32 %10, i32* %__first, align 4, !tbaa !16
  store i32 %12, i32* %add.ptr.i, align 4, !tbaa !16
  br label %while.body.i.i11.preheader

if.else.i.i:                                      ; preds = %if.then.i.i
  %cmp.i20.i.i = icmp slt i32 %9, %11
  %13 = load i32, i32* %__first, align 4, !tbaa !16
  br i1 %cmp.i20.i.i, label %if.then4.i.i, label %if.else5.i.i

if.then4.i.i:                                     ; preds = %if.else.i.i
  store i32 %11, i32* %__first, align 4, !tbaa !16
  store i32 %13, i32* %add.ptr2.i, align 4, !tbaa !16
  br label %while.body.i.i11.preheader

if.else5.i.i:                                     ; preds = %if.else.i.i
  store i32 %9, i32* %__first, align 4, !tbaa !16
  store i32 %13, i32* %add.ptr1.i, align 4, !tbaa !16
  br label %while.body.i.i11.preheader

if.else7.i.i:                                     ; preds = %if.end
  %cmp.i21.i.i = icmp slt i32 %9, %11
  br i1 %cmp.i21.i.i, label %if.then9.i.i, label %if.else10.i.i

if.then9.i.i:                                     ; preds = %if.else7.i.i
  %14 = load i32, i32* %__first, align 4, !tbaa !16
  store i32 %9, i32* %__first, align 4, !tbaa !16
  store i32 %14, i32* %add.ptr1.i, align 4, !tbaa !16
  br label %while.body.i.i11.preheader

if.else10.i.i:                                    ; preds = %if.else7.i.i
  %cmp.i22.i.i = icmp slt i32 %10, %11
  %15 = load i32, i32* %__first, align 4, !tbaa !16
  br i1 %cmp.i22.i.i, label %if.then12.i.i, label %if.else13.i.i

if.then12.i.i:                                    ; preds = %if.else10.i.i
  store i32 %11, i32* %__first, align 4, !tbaa !16
  store i32 %15, i32* %add.ptr2.i, align 4, !tbaa !16
  br label %while.body.i.i11.preheader

if.else13.i.i:                                    ; preds = %if.else10.i.i
  store i32 %10, i32* %__first, align 4, !tbaa !16
  store i32 %15, i32* %add.ptr.i, align 4, !tbaa !16
  br label %while.body.i.i11.preheader

while.body.i.i11.preheader:                       ; preds = %if.else13.i.i, %if.then12.i.i, %if.then9.i.i, %if.else5.i.i, %if.then4.i.i, %if.then2.i.i
  br label %while.body.i.i11

while.body.i.i11:                                 ; preds = %while.body.i.i11.preheader, %if.end.i.i
  %__last.addr.0.i.i = phi i32* [ %__last.addr.1.i.i, %if.end.i.i ], [ %__last.addr.026, %while.body.i.i11.preheader ]
  %__first.addr.0.i.i = phi i32* [ %incdec.ptr.i.i12, %if.end.i.i ], [ %add.ptr1.i, %while.body.i.i11.preheader ]
  %16 = load i32, i32* %__first, align 4, !tbaa !16
  br label %while.cond1.i.i

while.cond1.i.i:                                  ; preds = %while.cond1.i.i, %while.body.i.i11
  %__first.addr.1.i.i = phi i32* [ %__first.addr.0.i.i, %while.body.i.i11 ], [ %incdec.ptr.i.i12, %while.cond1.i.i ]
  %17 = load i32, i32* %__first.addr.1.i.i, align 4, !tbaa !16
  %cmp.i.i9.i = icmp slt i32 %17, %16
  %incdec.ptr.i.i12 = getelementptr inbounds i32, i32* %__first.addr.1.i.i, i64 1
  br i1 %cmp.i.i9.i, label %while.cond1.i.i, label %while.cond4.i.i, !llvm.loop !194

while.cond4.i.i:                                  ; preds = %while.cond1.i.i, %while.cond4.i.i
  %__last.addr.0.pn.i.i = phi i32* [ %__last.addr.1.i.i, %while.cond4.i.i ], [ %__last.addr.0.i.i, %while.cond1.i.i ]
  %__last.addr.1.i.i = getelementptr inbounds i32, i32* %__last.addr.0.pn.i.i, i64 -1
  %18 = load i32, i32* %__last.addr.1.i.i, align 4, !tbaa !16
  %cmp.i11.i.i = icmp slt i32 %16, %18
  br i1 %cmp.i11.i.i, label %while.cond4.i.i, label %while.end8.i.i, !llvm.loop !195

while.end8.i.i:                                   ; preds = %while.cond4.i.i
  %cmp.i.i13 = icmp ult i32* %__first.addr.1.i.i, %__last.addr.1.i.i
  br i1 %cmp.i.i13, label %if.end.i.i, label %_ZSt27__unguarded_partition_pivotIPiN9__gnu_cxx5__ops15_Iter_less_iterEET_S4_S4_T0_.exit

if.end.i.i:                                       ; preds = %while.end8.i.i
  store i32 %18, i32* %__first.addr.1.i.i, align 4, !tbaa !16
  store i32 %17, i32* %__last.addr.1.i.i, align 4, !tbaa !16
  br label %while.body.i.i11, !llvm.loop !196

_ZSt27__unguarded_partition_pivotIPiN9__gnu_cxx5__ops15_Iter_less_iterEET_S4_S4_T0_.exit: ; preds = %while.end8.i.i
  tail call void @_ZSt16__introsort_loopIPilN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_(i32* noundef nonnull %__first.addr.1.i.i, i32* noundef %__last.addr.026, i64 noundef %dec, i8 undef)
  %sub.ptr.lhs.cast = ptrtoint i32* %__first.addr.1.i.i to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %cmp = icmp sgt i64 %sub.ptr.sub, 64
  br i1 %cmp, label %while.body, label %while.end, !llvm.loop !197

while.end:                                        ; preds = %_ZSt27__unguarded_partition_pivotIPiN9__gnu_cxx5__ops15_Iter_less_iterEET_S4_S4_T0_.exit, %_ZSt10__pop_heapIPiN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_S4_RT0_.exit.i.i, %entry
  ret void
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZSt22__final_insertion_sortIPiN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_(i32* noundef %__first, i32* noundef %__last, i8 %__comp.coerce) local_unnamed_addr #22 comdat {
entry:
  %sub.ptr.lhs.cast = ptrtoint i32* %__last to i64
  %sub.ptr.rhs.cast = ptrtoint i32* %__first to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %cmp = icmp sgt i64 %sub.ptr.sub, 64
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %0 = bitcast i32* %__first to i8*
  %scevgep = getelementptr i32, i32* %__first, i64 1
  %1 = load i32, i32* %scevgep, align 4, !tbaa !16
  %2 = load i32, i32* %__first, align 4, !tbaa !16
  %cmp.i.i = icmp slt i32 %1, %2
  br i1 %cmp.i.i, label %if.then.i.i.i.i.i, label %for.inc.i

if.then.i.i.i.i.i:                                ; preds = %if.then
  %3 = load i32, i32* %__first, align 4
  store i32 %3, i32* %scevgep, align 4
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then, %if.then.i.i.i.i.i
  %__first.sink.i = phi i32* [ %__first, %if.then.i.i.i.i.i ], [ %scevgep, %if.then ]
  store i32 %1, i32* %__first.sink.i, align 4, !tbaa !16
  %__i.017.i.ptr.1 = getelementptr inbounds i32, i32* %__first, i64 2
  %4 = load i32, i32* %__i.017.i.ptr.1, align 4, !tbaa !16
  %5 = load i32, i32* %__first, align 4, !tbaa !16
  %cmp.i.i.1 = icmp slt i32 %4, %5
  br i1 %cmp.i.i.1, label %if.then.i.i.i.i.i.1, label %if.else.i.1

if.else.i.1:                                      ; preds = %for.inc.i
  %6 = load i32, i32* %scevgep, align 4, !tbaa !16
  %cmp.i12.i.i.1 = icmp slt i32 %4, %6
  br i1 %cmp.i12.i.i.1, label %while.body.i.i.1, label %for.inc.i.1

while.body.i.i.1:                                 ; preds = %if.else.i.1, %while.body.i.i.1
  %7 = phi i32 [ %8, %while.body.i.i.1 ], [ %6, %if.else.i.1 ]
  %__next.014.i.i.1 = phi i32* [ %__next.0.i.i.1, %while.body.i.i.1 ], [ %scevgep, %if.else.i.1 ]
  %__last.addr.013.i.i.1 = phi i32* [ %__next.014.i.i.1, %while.body.i.i.1 ], [ %__i.017.i.ptr.1, %if.else.i.1 ]
  store i32 %7, i32* %__last.addr.013.i.i.1, align 4, !tbaa !16
  %__next.0.i.i.1 = getelementptr inbounds i32, i32* %__next.014.i.i.1, i64 -1
  %8 = load i32, i32* %__next.0.i.i.1, align 4, !tbaa !16
  %cmp.i.i.i.1 = icmp slt i32 %4, %8
  br i1 %cmp.i.i.i.1, label %while.body.i.i.1, label %for.inc.i.1, !llvm.loop !198

if.then.i.i.i.i.i.1:                              ; preds = %for.inc.i
  %9 = bitcast i32* %__first to i64*
  %10 = bitcast i32* %scevgep to i64*
  %11 = load i64, i64* %9, align 4
  store i64 %11, i64* %10, align 4
  br label %for.inc.i.1

for.inc.i.1:                                      ; preds = %while.body.i.i.1, %if.then.i.i.i.i.i.1, %if.else.i.1
  %__first.sink.i.1 = phi i32* [ %__first, %if.then.i.i.i.i.i.1 ], [ %__i.017.i.ptr.1, %if.else.i.1 ], [ %__next.014.i.i.1, %while.body.i.i.1 ]
  store i32 %4, i32* %__first.sink.i.1, align 4, !tbaa !16
  %__i.017.i.ptr.2 = getelementptr inbounds i32, i32* %__first, i64 3
  %12 = load i32, i32* %__i.017.i.ptr.2, align 4, !tbaa !16
  %13 = load i32, i32* %__first, align 4, !tbaa !16
  %cmp.i.i.2 = icmp slt i32 %12, %13
  br i1 %cmp.i.i.2, label %if.then.i.i.i.i.i.2, label %if.else.i.2

if.else.i.2:                                      ; preds = %for.inc.i.1
  %14 = load i32, i32* %__i.017.i.ptr.1, align 4, !tbaa !16
  %cmp.i12.i.i.2 = icmp slt i32 %12, %14
  br i1 %cmp.i12.i.i.2, label %while.body.i.i.2, label %for.inc.i.2

while.body.i.i.2:                                 ; preds = %if.else.i.2, %while.body.i.i.2
  %15 = phi i32 [ %16, %while.body.i.i.2 ], [ %14, %if.else.i.2 ]
  %__next.014.i.i.2 = phi i32* [ %__next.0.i.i.2, %while.body.i.i.2 ], [ %__i.017.i.ptr.1, %if.else.i.2 ]
  %__last.addr.013.i.i.2 = phi i32* [ %__next.014.i.i.2, %while.body.i.i.2 ], [ %__i.017.i.ptr.2, %if.else.i.2 ]
  store i32 %15, i32* %__last.addr.013.i.i.2, align 4, !tbaa !16
  %__next.0.i.i.2 = getelementptr inbounds i32, i32* %__next.014.i.i.2, i64 -1
  %16 = load i32, i32* %__next.0.i.i.2, align 4, !tbaa !16
  %cmp.i.i.i.2 = icmp slt i32 %12, %16
  br i1 %cmp.i.i.i.2, label %while.body.i.i.2, label %for.inc.i.2, !llvm.loop !198

if.then.i.i.i.i.i.2:                              ; preds = %for.inc.i.1
  %17 = bitcast i32* %scevgep to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(12) %17, i8* noundef nonnull align 4 dereferenceable(12) %0, i64 12, i1 false) #8
  br label %for.inc.i.2

for.inc.i.2:                                      ; preds = %while.body.i.i.2, %if.then.i.i.i.i.i.2, %if.else.i.2
  %__first.sink.i.2 = phi i32* [ %__first, %if.then.i.i.i.i.i.2 ], [ %__i.017.i.ptr.2, %if.else.i.2 ], [ %__next.014.i.i.2, %while.body.i.i.2 ]
  store i32 %12, i32* %__first.sink.i.2, align 4, !tbaa !16
  %__i.017.i.ptr.3 = getelementptr inbounds i32, i32* %__first, i64 4
  %18 = load i32, i32* %__i.017.i.ptr.3, align 4, !tbaa !16
  %19 = load i32, i32* %__first, align 4, !tbaa !16
  %cmp.i.i.3 = icmp slt i32 %18, %19
  br i1 %cmp.i.i.3, label %if.then.i.i.i.i.i.3, label %if.else.i.3

if.else.i.3:                                      ; preds = %for.inc.i.2
  %20 = load i32, i32* %__i.017.i.ptr.2, align 4, !tbaa !16
  %cmp.i12.i.i.3 = icmp slt i32 %18, %20
  br i1 %cmp.i12.i.i.3, label %while.body.i.i.3, label %for.inc.i.3

while.body.i.i.3:                                 ; preds = %if.else.i.3, %while.body.i.i.3
  %21 = phi i32 [ %22, %while.body.i.i.3 ], [ %20, %if.else.i.3 ]
  %__next.014.i.i.3 = phi i32* [ %__next.0.i.i.3, %while.body.i.i.3 ], [ %__i.017.i.ptr.2, %if.else.i.3 ]
  %__last.addr.013.i.i.3 = phi i32* [ %__next.014.i.i.3, %while.body.i.i.3 ], [ %__i.017.i.ptr.3, %if.else.i.3 ]
  store i32 %21, i32* %__last.addr.013.i.i.3, align 4, !tbaa !16
  %__next.0.i.i.3 = getelementptr inbounds i32, i32* %__next.014.i.i.3, i64 -1
  %22 = load i32, i32* %__next.0.i.i.3, align 4, !tbaa !16
  %cmp.i.i.i.3 = icmp slt i32 %18, %22
  br i1 %cmp.i.i.i.3, label %while.body.i.i.3, label %for.inc.i.3, !llvm.loop !198

if.then.i.i.i.i.i.3:                              ; preds = %for.inc.i.2
  %23 = bitcast i32* %scevgep to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(16) %23, i8* noundef nonnull align 4 dereferenceable(16) %0, i64 16, i1 false) #8
  br label %for.inc.i.3

for.inc.i.3:                                      ; preds = %while.body.i.i.3, %if.then.i.i.i.i.i.3, %if.else.i.3
  %__first.sink.i.3 = phi i32* [ %__first, %if.then.i.i.i.i.i.3 ], [ %__i.017.i.ptr.3, %if.else.i.3 ], [ %__next.014.i.i.3, %while.body.i.i.3 ]
  store i32 %18, i32* %__first.sink.i.3, align 4, !tbaa !16
  %__i.017.i.ptr.4 = getelementptr inbounds i32, i32* %__first, i64 5
  %24 = load i32, i32* %__i.017.i.ptr.4, align 4, !tbaa !16
  %25 = load i32, i32* %__first, align 4, !tbaa !16
  %cmp.i.i.4 = icmp slt i32 %24, %25
  br i1 %cmp.i.i.4, label %if.then.i.i.i.i.i.4, label %if.else.i.4

if.else.i.4:                                      ; preds = %for.inc.i.3
  %26 = load i32, i32* %__i.017.i.ptr.3, align 4, !tbaa !16
  %cmp.i12.i.i.4 = icmp slt i32 %24, %26
  br i1 %cmp.i12.i.i.4, label %while.body.i.i.4, label %for.inc.i.4

while.body.i.i.4:                                 ; preds = %if.else.i.4, %while.body.i.i.4
  %27 = phi i32 [ %28, %while.body.i.i.4 ], [ %26, %if.else.i.4 ]
  %__next.014.i.i.4 = phi i32* [ %__next.0.i.i.4, %while.body.i.i.4 ], [ %__i.017.i.ptr.3, %if.else.i.4 ]
  %__last.addr.013.i.i.4 = phi i32* [ %__next.014.i.i.4, %while.body.i.i.4 ], [ %__i.017.i.ptr.4, %if.else.i.4 ]
  store i32 %27, i32* %__last.addr.013.i.i.4, align 4, !tbaa !16
  %__next.0.i.i.4 = getelementptr inbounds i32, i32* %__next.014.i.i.4, i64 -1
  %28 = load i32, i32* %__next.0.i.i.4, align 4, !tbaa !16
  %cmp.i.i.i.4 = icmp slt i32 %24, %28
  br i1 %cmp.i.i.i.4, label %while.body.i.i.4, label %for.inc.i.4, !llvm.loop !198

if.then.i.i.i.i.i.4:                              ; preds = %for.inc.i.3
  %29 = bitcast i32* %scevgep to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(20) %29, i8* noundef nonnull align 4 dereferenceable(20) %0, i64 20, i1 false) #8
  br label %for.inc.i.4

for.inc.i.4:                                      ; preds = %while.body.i.i.4, %if.then.i.i.i.i.i.4, %if.else.i.4
  %__first.sink.i.4 = phi i32* [ %__first, %if.then.i.i.i.i.i.4 ], [ %__i.017.i.ptr.4, %if.else.i.4 ], [ %__next.014.i.i.4, %while.body.i.i.4 ]
  store i32 %24, i32* %__first.sink.i.4, align 4, !tbaa !16
  %__i.017.i.ptr.5 = getelementptr inbounds i32, i32* %__first, i64 6
  %30 = load i32, i32* %__i.017.i.ptr.5, align 4, !tbaa !16
  %31 = load i32, i32* %__first, align 4, !tbaa !16
  %cmp.i.i.5 = icmp slt i32 %30, %31
  br i1 %cmp.i.i.5, label %if.then.i.i.i.i.i.5, label %if.else.i.5

if.else.i.5:                                      ; preds = %for.inc.i.4
  %32 = load i32, i32* %__i.017.i.ptr.4, align 4, !tbaa !16
  %cmp.i12.i.i.5 = icmp slt i32 %30, %32
  br i1 %cmp.i12.i.i.5, label %while.body.i.i.5, label %for.inc.i.5

while.body.i.i.5:                                 ; preds = %if.else.i.5, %while.body.i.i.5
  %33 = phi i32 [ %34, %while.body.i.i.5 ], [ %32, %if.else.i.5 ]
  %__next.014.i.i.5 = phi i32* [ %__next.0.i.i.5, %while.body.i.i.5 ], [ %__i.017.i.ptr.4, %if.else.i.5 ]
  %__last.addr.013.i.i.5 = phi i32* [ %__next.014.i.i.5, %while.body.i.i.5 ], [ %__i.017.i.ptr.5, %if.else.i.5 ]
  store i32 %33, i32* %__last.addr.013.i.i.5, align 4, !tbaa !16
  %__next.0.i.i.5 = getelementptr inbounds i32, i32* %__next.014.i.i.5, i64 -1
  %34 = load i32, i32* %__next.0.i.i.5, align 4, !tbaa !16
  %cmp.i.i.i.5 = icmp slt i32 %30, %34
  br i1 %cmp.i.i.i.5, label %while.body.i.i.5, label %for.inc.i.5, !llvm.loop !198

if.then.i.i.i.i.i.5:                              ; preds = %for.inc.i.4
  %35 = bitcast i32* %scevgep to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(24) %35, i8* noundef nonnull align 4 dereferenceable(24) %0, i64 24, i1 false) #8
  br label %for.inc.i.5

for.inc.i.5:                                      ; preds = %while.body.i.i.5, %if.then.i.i.i.i.i.5, %if.else.i.5
  %__first.sink.i.5 = phi i32* [ %__first, %if.then.i.i.i.i.i.5 ], [ %__i.017.i.ptr.5, %if.else.i.5 ], [ %__next.014.i.i.5, %while.body.i.i.5 ]
  store i32 %30, i32* %__first.sink.i.5, align 4, !tbaa !16
  %__i.017.i.ptr.6 = getelementptr inbounds i32, i32* %__first, i64 7
  %36 = load i32, i32* %__i.017.i.ptr.6, align 4, !tbaa !16
  %37 = load i32, i32* %__first, align 4, !tbaa !16
  %cmp.i.i.6 = icmp slt i32 %36, %37
  br i1 %cmp.i.i.6, label %if.then.i.i.i.i.i.6, label %if.else.i.6

if.else.i.6:                                      ; preds = %for.inc.i.5
  %38 = load i32, i32* %__i.017.i.ptr.5, align 4, !tbaa !16
  %cmp.i12.i.i.6 = icmp slt i32 %36, %38
  br i1 %cmp.i12.i.i.6, label %while.body.i.i.6, label %for.inc.i.6

while.body.i.i.6:                                 ; preds = %if.else.i.6, %while.body.i.i.6
  %39 = phi i32 [ %40, %while.body.i.i.6 ], [ %38, %if.else.i.6 ]
  %__next.014.i.i.6 = phi i32* [ %__next.0.i.i.6, %while.body.i.i.6 ], [ %__i.017.i.ptr.5, %if.else.i.6 ]
  %__last.addr.013.i.i.6 = phi i32* [ %__next.014.i.i.6, %while.body.i.i.6 ], [ %__i.017.i.ptr.6, %if.else.i.6 ]
  store i32 %39, i32* %__last.addr.013.i.i.6, align 4, !tbaa !16
  %__next.0.i.i.6 = getelementptr inbounds i32, i32* %__next.014.i.i.6, i64 -1
  %40 = load i32, i32* %__next.0.i.i.6, align 4, !tbaa !16
  %cmp.i.i.i.6 = icmp slt i32 %36, %40
  br i1 %cmp.i.i.i.6, label %while.body.i.i.6, label %for.inc.i.6, !llvm.loop !198

if.then.i.i.i.i.i.6:                              ; preds = %for.inc.i.5
  %41 = bitcast i32* %scevgep to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(28) %41, i8* noundef nonnull align 4 dereferenceable(28) %0, i64 28, i1 false) #8
  br label %for.inc.i.6

for.inc.i.6:                                      ; preds = %while.body.i.i.6, %if.then.i.i.i.i.i.6, %if.else.i.6
  %__first.sink.i.6 = phi i32* [ %__first, %if.then.i.i.i.i.i.6 ], [ %__i.017.i.ptr.6, %if.else.i.6 ], [ %__next.014.i.i.6, %while.body.i.i.6 ]
  store i32 %36, i32* %__first.sink.i.6, align 4, !tbaa !16
  %__i.017.i.ptr.7 = getelementptr inbounds i32, i32* %__first, i64 8
  %42 = load i32, i32* %__i.017.i.ptr.7, align 4, !tbaa !16
  %43 = load i32, i32* %__first, align 4, !tbaa !16
  %cmp.i.i.7 = icmp slt i32 %42, %43
  br i1 %cmp.i.i.7, label %if.then.i.i.i.i.i.7, label %if.else.i.7

if.else.i.7:                                      ; preds = %for.inc.i.6
  %44 = load i32, i32* %__i.017.i.ptr.6, align 4, !tbaa !16
  %cmp.i12.i.i.7 = icmp slt i32 %42, %44
  br i1 %cmp.i12.i.i.7, label %while.body.i.i.7, label %for.inc.i.7

while.body.i.i.7:                                 ; preds = %if.else.i.7, %while.body.i.i.7
  %45 = phi i32 [ %46, %while.body.i.i.7 ], [ %44, %if.else.i.7 ]
  %__next.014.i.i.7 = phi i32* [ %__next.0.i.i.7, %while.body.i.i.7 ], [ %__i.017.i.ptr.6, %if.else.i.7 ]
  %__last.addr.013.i.i.7 = phi i32* [ %__next.014.i.i.7, %while.body.i.i.7 ], [ %__i.017.i.ptr.7, %if.else.i.7 ]
  store i32 %45, i32* %__last.addr.013.i.i.7, align 4, !tbaa !16
  %__next.0.i.i.7 = getelementptr inbounds i32, i32* %__next.014.i.i.7, i64 -1
  %46 = load i32, i32* %__next.0.i.i.7, align 4, !tbaa !16
  %cmp.i.i.i.7 = icmp slt i32 %42, %46
  br i1 %cmp.i.i.i.7, label %while.body.i.i.7, label %for.inc.i.7, !llvm.loop !198

if.then.i.i.i.i.i.7:                              ; preds = %for.inc.i.6
  %47 = bitcast i32* %scevgep to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(32) %47, i8* noundef nonnull align 4 dereferenceable(32) %0, i64 32, i1 false) #8
  br label %for.inc.i.7

for.inc.i.7:                                      ; preds = %while.body.i.i.7, %if.then.i.i.i.i.i.7, %if.else.i.7
  %__first.sink.i.7 = phi i32* [ %__first, %if.then.i.i.i.i.i.7 ], [ %__i.017.i.ptr.7, %if.else.i.7 ], [ %__next.014.i.i.7, %while.body.i.i.7 ]
  store i32 %42, i32* %__first.sink.i.7, align 4, !tbaa !16
  %__i.017.i.ptr.8 = getelementptr inbounds i32, i32* %__first, i64 9
  %48 = load i32, i32* %__i.017.i.ptr.8, align 4, !tbaa !16
  %49 = load i32, i32* %__first, align 4, !tbaa !16
  %cmp.i.i.8 = icmp slt i32 %48, %49
  br i1 %cmp.i.i.8, label %if.then.i.i.i.i.i.8, label %if.else.i.8

if.else.i.8:                                      ; preds = %for.inc.i.7
  %50 = load i32, i32* %__i.017.i.ptr.7, align 4, !tbaa !16
  %cmp.i12.i.i.8 = icmp slt i32 %48, %50
  br i1 %cmp.i12.i.i.8, label %while.body.i.i.8, label %for.inc.i.8

while.body.i.i.8:                                 ; preds = %if.else.i.8, %while.body.i.i.8
  %51 = phi i32 [ %52, %while.body.i.i.8 ], [ %50, %if.else.i.8 ]
  %__next.014.i.i.8 = phi i32* [ %__next.0.i.i.8, %while.body.i.i.8 ], [ %__i.017.i.ptr.7, %if.else.i.8 ]
  %__last.addr.013.i.i.8 = phi i32* [ %__next.014.i.i.8, %while.body.i.i.8 ], [ %__i.017.i.ptr.8, %if.else.i.8 ]
  store i32 %51, i32* %__last.addr.013.i.i.8, align 4, !tbaa !16
  %__next.0.i.i.8 = getelementptr inbounds i32, i32* %__next.014.i.i.8, i64 -1
  %52 = load i32, i32* %__next.0.i.i.8, align 4, !tbaa !16
  %cmp.i.i.i.8 = icmp slt i32 %48, %52
  br i1 %cmp.i.i.i.8, label %while.body.i.i.8, label %for.inc.i.8, !llvm.loop !198

if.then.i.i.i.i.i.8:                              ; preds = %for.inc.i.7
  %53 = bitcast i32* %scevgep to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(36) %53, i8* noundef nonnull align 4 dereferenceable(36) %0, i64 36, i1 false) #8
  br label %for.inc.i.8

for.inc.i.8:                                      ; preds = %while.body.i.i.8, %if.then.i.i.i.i.i.8, %if.else.i.8
  %__first.sink.i.8 = phi i32* [ %__first, %if.then.i.i.i.i.i.8 ], [ %__i.017.i.ptr.8, %if.else.i.8 ], [ %__next.014.i.i.8, %while.body.i.i.8 ]
  store i32 %48, i32* %__first.sink.i.8, align 4, !tbaa !16
  %__i.017.i.ptr.9 = getelementptr inbounds i32, i32* %__first, i64 10
  %54 = load i32, i32* %__i.017.i.ptr.9, align 4, !tbaa !16
  %55 = load i32, i32* %__first, align 4, !tbaa !16
  %cmp.i.i.9 = icmp slt i32 %54, %55
  br i1 %cmp.i.i.9, label %if.then.i.i.i.i.i.9, label %if.else.i.9

if.else.i.9:                                      ; preds = %for.inc.i.8
  %56 = load i32, i32* %__i.017.i.ptr.8, align 4, !tbaa !16
  %cmp.i12.i.i.9 = icmp slt i32 %54, %56
  br i1 %cmp.i12.i.i.9, label %while.body.i.i.9, label %for.inc.i.9

while.body.i.i.9:                                 ; preds = %if.else.i.9, %while.body.i.i.9
  %57 = phi i32 [ %58, %while.body.i.i.9 ], [ %56, %if.else.i.9 ]
  %__next.014.i.i.9 = phi i32* [ %__next.0.i.i.9, %while.body.i.i.9 ], [ %__i.017.i.ptr.8, %if.else.i.9 ]
  %__last.addr.013.i.i.9 = phi i32* [ %__next.014.i.i.9, %while.body.i.i.9 ], [ %__i.017.i.ptr.9, %if.else.i.9 ]
  store i32 %57, i32* %__last.addr.013.i.i.9, align 4, !tbaa !16
  %__next.0.i.i.9 = getelementptr inbounds i32, i32* %__next.014.i.i.9, i64 -1
  %58 = load i32, i32* %__next.0.i.i.9, align 4, !tbaa !16
  %cmp.i.i.i.9 = icmp slt i32 %54, %58
  br i1 %cmp.i.i.i.9, label %while.body.i.i.9, label %for.inc.i.9, !llvm.loop !198

if.then.i.i.i.i.i.9:                              ; preds = %for.inc.i.8
  %59 = bitcast i32* %scevgep to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(40) %59, i8* noundef nonnull align 4 dereferenceable(40) %0, i64 40, i1 false) #8
  br label %for.inc.i.9

for.inc.i.9:                                      ; preds = %while.body.i.i.9, %if.then.i.i.i.i.i.9, %if.else.i.9
  %__first.sink.i.9 = phi i32* [ %__first, %if.then.i.i.i.i.i.9 ], [ %__i.017.i.ptr.9, %if.else.i.9 ], [ %__next.014.i.i.9, %while.body.i.i.9 ]
  store i32 %54, i32* %__first.sink.i.9, align 4, !tbaa !16
  %__i.017.i.ptr.10 = getelementptr inbounds i32, i32* %__first, i64 11
  %60 = load i32, i32* %__i.017.i.ptr.10, align 4, !tbaa !16
  %61 = load i32, i32* %__first, align 4, !tbaa !16
  %cmp.i.i.10 = icmp slt i32 %60, %61
  br i1 %cmp.i.i.10, label %if.then.i.i.i.i.i.10, label %if.else.i.10

if.else.i.10:                                     ; preds = %for.inc.i.9
  %62 = load i32, i32* %__i.017.i.ptr.9, align 4, !tbaa !16
  %cmp.i12.i.i.10 = icmp slt i32 %60, %62
  br i1 %cmp.i12.i.i.10, label %while.body.i.i.10, label %for.inc.i.10

while.body.i.i.10:                                ; preds = %if.else.i.10, %while.body.i.i.10
  %63 = phi i32 [ %64, %while.body.i.i.10 ], [ %62, %if.else.i.10 ]
  %__next.014.i.i.10 = phi i32* [ %__next.0.i.i.10, %while.body.i.i.10 ], [ %__i.017.i.ptr.9, %if.else.i.10 ]
  %__last.addr.013.i.i.10 = phi i32* [ %__next.014.i.i.10, %while.body.i.i.10 ], [ %__i.017.i.ptr.10, %if.else.i.10 ]
  store i32 %63, i32* %__last.addr.013.i.i.10, align 4, !tbaa !16
  %__next.0.i.i.10 = getelementptr inbounds i32, i32* %__next.014.i.i.10, i64 -1
  %64 = load i32, i32* %__next.0.i.i.10, align 4, !tbaa !16
  %cmp.i.i.i.10 = icmp slt i32 %60, %64
  br i1 %cmp.i.i.i.10, label %while.body.i.i.10, label %for.inc.i.10, !llvm.loop !198

if.then.i.i.i.i.i.10:                             ; preds = %for.inc.i.9
  %65 = bitcast i32* %scevgep to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(44) %65, i8* noundef nonnull align 4 dereferenceable(44) %0, i64 44, i1 false) #8
  br label %for.inc.i.10

for.inc.i.10:                                     ; preds = %while.body.i.i.10, %if.then.i.i.i.i.i.10, %if.else.i.10
  %__first.sink.i.10 = phi i32* [ %__first, %if.then.i.i.i.i.i.10 ], [ %__i.017.i.ptr.10, %if.else.i.10 ], [ %__next.014.i.i.10, %while.body.i.i.10 ]
  store i32 %60, i32* %__first.sink.i.10, align 4, !tbaa !16
  %__i.017.i.ptr.11 = getelementptr inbounds i32, i32* %__first, i64 12
  %66 = load i32, i32* %__i.017.i.ptr.11, align 4, !tbaa !16
  %67 = load i32, i32* %__first, align 4, !tbaa !16
  %cmp.i.i.11 = icmp slt i32 %66, %67
  br i1 %cmp.i.i.11, label %if.then.i.i.i.i.i.11, label %if.else.i.11

if.else.i.11:                                     ; preds = %for.inc.i.10
  %68 = load i32, i32* %__i.017.i.ptr.10, align 4, !tbaa !16
  %cmp.i12.i.i.11 = icmp slt i32 %66, %68
  br i1 %cmp.i12.i.i.11, label %while.body.i.i.11, label %for.inc.i.11

while.body.i.i.11:                                ; preds = %if.else.i.11, %while.body.i.i.11
  %69 = phi i32 [ %70, %while.body.i.i.11 ], [ %68, %if.else.i.11 ]
  %__next.014.i.i.11 = phi i32* [ %__next.0.i.i.11, %while.body.i.i.11 ], [ %__i.017.i.ptr.10, %if.else.i.11 ]
  %__last.addr.013.i.i.11 = phi i32* [ %__next.014.i.i.11, %while.body.i.i.11 ], [ %__i.017.i.ptr.11, %if.else.i.11 ]
  store i32 %69, i32* %__last.addr.013.i.i.11, align 4, !tbaa !16
  %__next.0.i.i.11 = getelementptr inbounds i32, i32* %__next.014.i.i.11, i64 -1
  %70 = load i32, i32* %__next.0.i.i.11, align 4, !tbaa !16
  %cmp.i.i.i.11 = icmp slt i32 %66, %70
  br i1 %cmp.i.i.i.11, label %while.body.i.i.11, label %for.inc.i.11, !llvm.loop !198

if.then.i.i.i.i.i.11:                             ; preds = %for.inc.i.10
  %71 = bitcast i32* %scevgep to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(48) %71, i8* noundef nonnull align 4 dereferenceable(48) %0, i64 48, i1 false) #8
  br label %for.inc.i.11

for.inc.i.11:                                     ; preds = %while.body.i.i.11, %if.then.i.i.i.i.i.11, %if.else.i.11
  %__first.sink.i.11 = phi i32* [ %__first, %if.then.i.i.i.i.i.11 ], [ %__i.017.i.ptr.11, %if.else.i.11 ], [ %__next.014.i.i.11, %while.body.i.i.11 ]
  store i32 %66, i32* %__first.sink.i.11, align 4, !tbaa !16
  %__i.017.i.ptr.12 = getelementptr inbounds i32, i32* %__first, i64 13
  %72 = load i32, i32* %__i.017.i.ptr.12, align 4, !tbaa !16
  %73 = load i32, i32* %__first, align 4, !tbaa !16
  %cmp.i.i.12 = icmp slt i32 %72, %73
  br i1 %cmp.i.i.12, label %if.then.i.i.i.i.i.12, label %if.else.i.12

if.else.i.12:                                     ; preds = %for.inc.i.11
  %74 = load i32, i32* %__i.017.i.ptr.11, align 4, !tbaa !16
  %cmp.i12.i.i.12 = icmp slt i32 %72, %74
  br i1 %cmp.i12.i.i.12, label %while.body.i.i.12, label %for.inc.i.12

while.body.i.i.12:                                ; preds = %if.else.i.12, %while.body.i.i.12
  %75 = phi i32 [ %76, %while.body.i.i.12 ], [ %74, %if.else.i.12 ]
  %__next.014.i.i.12 = phi i32* [ %__next.0.i.i.12, %while.body.i.i.12 ], [ %__i.017.i.ptr.11, %if.else.i.12 ]
  %__last.addr.013.i.i.12 = phi i32* [ %__next.014.i.i.12, %while.body.i.i.12 ], [ %__i.017.i.ptr.12, %if.else.i.12 ]
  store i32 %75, i32* %__last.addr.013.i.i.12, align 4, !tbaa !16
  %__next.0.i.i.12 = getelementptr inbounds i32, i32* %__next.014.i.i.12, i64 -1
  %76 = load i32, i32* %__next.0.i.i.12, align 4, !tbaa !16
  %cmp.i.i.i.12 = icmp slt i32 %72, %76
  br i1 %cmp.i.i.i.12, label %while.body.i.i.12, label %for.inc.i.12, !llvm.loop !198

if.then.i.i.i.i.i.12:                             ; preds = %for.inc.i.11
  %77 = bitcast i32* %scevgep to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(52) %77, i8* noundef nonnull align 4 dereferenceable(52) %0, i64 52, i1 false) #8
  br label %for.inc.i.12

for.inc.i.12:                                     ; preds = %while.body.i.i.12, %if.then.i.i.i.i.i.12, %if.else.i.12
  %__first.sink.i.12 = phi i32* [ %__first, %if.then.i.i.i.i.i.12 ], [ %__i.017.i.ptr.12, %if.else.i.12 ], [ %__next.014.i.i.12, %while.body.i.i.12 ]
  store i32 %72, i32* %__first.sink.i.12, align 4, !tbaa !16
  %__i.017.i.ptr.13 = getelementptr inbounds i32, i32* %__first, i64 14
  %78 = load i32, i32* %__i.017.i.ptr.13, align 4, !tbaa !16
  %79 = load i32, i32* %__first, align 4, !tbaa !16
  %cmp.i.i.13 = icmp slt i32 %78, %79
  br i1 %cmp.i.i.13, label %if.then.i.i.i.i.i.13, label %if.else.i.13

if.else.i.13:                                     ; preds = %for.inc.i.12
  %80 = load i32, i32* %__i.017.i.ptr.12, align 4, !tbaa !16
  %cmp.i12.i.i.13 = icmp slt i32 %78, %80
  br i1 %cmp.i12.i.i.13, label %while.body.i.i.13, label %for.inc.i.13

while.body.i.i.13:                                ; preds = %if.else.i.13, %while.body.i.i.13
  %81 = phi i32 [ %82, %while.body.i.i.13 ], [ %80, %if.else.i.13 ]
  %__next.014.i.i.13 = phi i32* [ %__next.0.i.i.13, %while.body.i.i.13 ], [ %__i.017.i.ptr.12, %if.else.i.13 ]
  %__last.addr.013.i.i.13 = phi i32* [ %__next.014.i.i.13, %while.body.i.i.13 ], [ %__i.017.i.ptr.13, %if.else.i.13 ]
  store i32 %81, i32* %__last.addr.013.i.i.13, align 4, !tbaa !16
  %__next.0.i.i.13 = getelementptr inbounds i32, i32* %__next.014.i.i.13, i64 -1
  %82 = load i32, i32* %__next.0.i.i.13, align 4, !tbaa !16
  %cmp.i.i.i.13 = icmp slt i32 %78, %82
  br i1 %cmp.i.i.i.13, label %while.body.i.i.13, label %for.inc.i.13, !llvm.loop !198

if.then.i.i.i.i.i.13:                             ; preds = %for.inc.i.12
  %83 = bitcast i32* %scevgep to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(56) %83, i8* noundef nonnull align 4 dereferenceable(56) %0, i64 56, i1 false) #8
  br label %for.inc.i.13

for.inc.i.13:                                     ; preds = %while.body.i.i.13, %if.then.i.i.i.i.i.13, %if.else.i.13
  %__first.sink.i.13 = phi i32* [ %__first, %if.then.i.i.i.i.i.13 ], [ %__i.017.i.ptr.13, %if.else.i.13 ], [ %__next.014.i.i.13, %while.body.i.i.13 ]
  store i32 %78, i32* %__first.sink.i.13, align 4, !tbaa !16
  %__i.017.i.ptr.14 = getelementptr inbounds i32, i32* %__first, i64 15
  %84 = load i32, i32* %__i.017.i.ptr.14, align 4, !tbaa !16
  %85 = load i32, i32* %__first, align 4, !tbaa !16
  %cmp.i.i.14 = icmp slt i32 %84, %85
  br i1 %cmp.i.i.14, label %if.then.i.i.i.i.i.14, label %if.else.i.14

if.else.i.14:                                     ; preds = %for.inc.i.13
  %86 = load i32, i32* %__i.017.i.ptr.13, align 4, !tbaa !16
  %cmp.i12.i.i.14 = icmp slt i32 %84, %86
  br i1 %cmp.i12.i.i.14, label %while.body.i.i.14, label %for.inc.i.14

while.body.i.i.14:                                ; preds = %if.else.i.14, %while.body.i.i.14
  %87 = phi i32 [ %88, %while.body.i.i.14 ], [ %86, %if.else.i.14 ]
  %__next.014.i.i.14 = phi i32* [ %__next.0.i.i.14, %while.body.i.i.14 ], [ %__i.017.i.ptr.13, %if.else.i.14 ]
  %__last.addr.013.i.i.14 = phi i32* [ %__next.014.i.i.14, %while.body.i.i.14 ], [ %__i.017.i.ptr.14, %if.else.i.14 ]
  store i32 %87, i32* %__last.addr.013.i.i.14, align 4, !tbaa !16
  %__next.0.i.i.14 = getelementptr inbounds i32, i32* %__next.014.i.i.14, i64 -1
  %88 = load i32, i32* %__next.0.i.i.14, align 4, !tbaa !16
  %cmp.i.i.i.14 = icmp slt i32 %84, %88
  br i1 %cmp.i.i.i.14, label %while.body.i.i.14, label %for.inc.i.14, !llvm.loop !198

if.then.i.i.i.i.i.14:                             ; preds = %for.inc.i.13
  %89 = bitcast i32* %scevgep to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(60) %89, i8* noundef nonnull align 4 dereferenceable(60) %0, i64 60, i1 false) #8
  br label %for.inc.i.14

for.inc.i.14:                                     ; preds = %while.body.i.i.14, %if.then.i.i.i.i.i.14, %if.else.i.14
  %__first.sink.i.14 = phi i32* [ %__first, %if.then.i.i.i.i.i.14 ], [ %__i.017.i.ptr.14, %if.else.i.14 ], [ %__next.014.i.i.14, %while.body.i.i.14 ]
  store i32 %84, i32* %__first.sink.i.14, align 4, !tbaa !16
  %add.ptr = getelementptr inbounds i32, i32* %__first, i64 16
  %cmp.not4.i = icmp eq i32* %add.ptr, %__last
  br i1 %cmp.not4.i, label %if.end, label %for.body.i8

for.body.i8:                                      ; preds = %for.inc.i.14, %_ZSt25__unguarded_linear_insertIPiN9__gnu_cxx5__ops14_Val_less_iterEEvT_T0_.exit.i
  %__i.05.i = phi i32* [ %incdec.ptr.i, %_ZSt25__unguarded_linear_insertIPiN9__gnu_cxx5__ops14_Val_less_iterEEvT_T0_.exit.i ], [ %add.ptr, %for.inc.i.14 ]
  %90 = load i32, i32* %__i.05.i, align 4, !tbaa !16
  %__next.011.i.i = getelementptr inbounds i32, i32* %__i.05.i, i64 -1
  %91 = load i32, i32* %__next.011.i.i, align 4, !tbaa !16
  %cmp.i12.i.i7 = icmp slt i32 %90, %91
  br i1 %cmp.i12.i.i7, label %while.body.i.i13, label %_ZSt25__unguarded_linear_insertIPiN9__gnu_cxx5__ops14_Val_less_iterEEvT_T0_.exit.i

while.body.i.i13:                                 ; preds = %for.body.i8, %while.body.i.i13
  %92 = phi i32 [ %93, %while.body.i.i13 ], [ %91, %for.body.i8 ]
  %__next.014.i.i9 = phi i32* [ %__next.0.i.i11, %while.body.i.i13 ], [ %__next.011.i.i, %for.body.i8 ]
  %__last.addr.013.i.i10 = phi i32* [ %__next.014.i.i9, %while.body.i.i13 ], [ %__i.05.i, %for.body.i8 ]
  store i32 %92, i32* %__last.addr.013.i.i10, align 4, !tbaa !16
  %__next.0.i.i11 = getelementptr inbounds i32, i32* %__next.014.i.i9, i64 -1
  %93 = load i32, i32* %__next.0.i.i11, align 4, !tbaa !16
  %cmp.i.i.i12 = icmp slt i32 %90, %93
  br i1 %cmp.i.i.i12, label %while.body.i.i13, label %_ZSt25__unguarded_linear_insertIPiN9__gnu_cxx5__ops14_Val_less_iterEEvT_T0_.exit.i, !llvm.loop !198

_ZSt25__unguarded_linear_insertIPiN9__gnu_cxx5__ops14_Val_less_iterEEvT_T0_.exit.i: ; preds = %while.body.i.i13, %for.body.i8
  %__last.addr.0.lcssa.i.i = phi i32* [ %__i.05.i, %for.body.i8 ], [ %__next.014.i.i9, %while.body.i.i13 ]
  store i32 %90, i32* %__last.addr.0.lcssa.i.i, align 4, !tbaa !16
  %incdec.ptr.i = getelementptr inbounds i32, i32* %__i.05.i, i64 1
  %cmp.not.i = icmp eq i32* %incdec.ptr.i, %__last
  br i1 %cmp.not.i, label %if.end, label %for.body.i8, !llvm.loop !199

if.else:                                          ; preds = %entry
  %cmp.i = icmp eq i32* %__first, %__last
  br i1 %cmp.i, label %if.end, label %for.cond.preheader.i

for.cond.preheader.i:                             ; preds = %if.else
  %94 = bitcast i32* %__first to i8*
  %__i.014.i15 = getelementptr inbounds i32, i32* %__first, i64 1
  %cmp1.not15.i = icmp eq i32* %__i.014.i15, %__last
  br i1 %cmp1.not15.i, label %if.end, label %for.body.i19

for.body.i19:                                     ; preds = %for.cond.preheader.i, %for.inc.i39
  %__i.017.i16 = phi i32* [ %__i.0.i37, %for.inc.i39 ], [ %__i.014.i15, %for.cond.preheader.i ]
  %__first.pn16.i17 = phi i32* [ %__i.017.i16, %for.inc.i39 ], [ %__first, %for.cond.preheader.i ]
  %95 = load i32, i32* %__i.017.i16, align 4, !tbaa !16
  %96 = load i32, i32* %__first, align 4, !tbaa !16
  %cmp.i.i18 = icmp slt i32 %95, %96
  br i1 %cmp.i.i18, label %if.then2.i23, label %if.else.i30

if.then2.i23:                                     ; preds = %for.body.i19
  %sub.ptr.lhs.cast.i.i.i.i.i20 = ptrtoint i32* %__i.017.i16 to i64
  %sub.ptr.sub.i.i.i.i.i21 = sub i64 %sub.ptr.lhs.cast.i.i.i.i.i20, %sub.ptr.rhs.cast
  %tobool.not.i.i.i.i.i22 = icmp eq i64 %sub.ptr.sub.i.i.i.i.i21, 0
  br i1 %tobool.not.i.i.i.i.i22, label %for.inc.i39, label %if.then.i.i.i.i.i28

if.then.i.i.i.i.i28:                              ; preds = %if.then2.i23
  %add.ptr4.i24 = getelementptr inbounds i32, i32* %__first.pn16.i17, i64 2
  %sub.ptr.div.i.i.i.i.i25 = ashr exact i64 %sub.ptr.sub.i.i.i.i.i21, 2
  %idx.neg.i.i.i.i.i26 = sub nsw i64 0, %sub.ptr.div.i.i.i.i.i25
  %add.ptr.i.i.i.i.i27 = getelementptr inbounds i32, i32* %add.ptr4.i24, i64 %idx.neg.i.i.i.i.i26
  %97 = bitcast i32* %add.ptr.i.i.i.i.i27 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 4 %97, i8* nonnull align 4 %94, i64 %sub.ptr.sub.i.i.i.i.i21, i1 false) #8
  br label %for.inc.i39

if.else.i30:                                      ; preds = %for.body.i19
  %98 = load i32, i32* %__first.pn16.i17, align 4, !tbaa !16
  %cmp.i12.i.i29 = icmp slt i32 %95, %98
  br i1 %cmp.i12.i.i29, label %while.body.i.i35, label %for.inc.i39

while.body.i.i35:                                 ; preds = %if.else.i30, %while.body.i.i35
  %99 = phi i32 [ %100, %while.body.i.i35 ], [ %98, %if.else.i30 ]
  %__next.014.i.i31 = phi i32* [ %__next.0.i.i33, %while.body.i.i35 ], [ %__first.pn16.i17, %if.else.i30 ]
  %__last.addr.013.i.i32 = phi i32* [ %__next.014.i.i31, %while.body.i.i35 ], [ %__i.017.i16, %if.else.i30 ]
  store i32 %99, i32* %__last.addr.013.i.i32, align 4, !tbaa !16
  %__next.0.i.i33 = getelementptr inbounds i32, i32* %__next.014.i.i31, i64 -1
  %100 = load i32, i32* %__next.0.i.i33, align 4, !tbaa !16
  %cmp.i.i.i34 = icmp slt i32 %95, %100
  br i1 %cmp.i.i.i34, label %while.body.i.i35, label %for.inc.i39, !llvm.loop !198

for.inc.i39:                                      ; preds = %while.body.i.i35, %if.else.i30, %if.then.i.i.i.i.i28, %if.then2.i23
  %__first.sink.i36 = phi i32* [ %__first, %if.then2.i23 ], [ %__first, %if.then.i.i.i.i.i28 ], [ %__i.017.i16, %if.else.i30 ], [ %__next.014.i.i31, %while.body.i.i35 ]
  store i32 %95, i32* %__first.sink.i36, align 4, !tbaa !16
  %__i.0.i37 = getelementptr inbounds i32, i32* %__i.017.i16, i64 1
  %cmp1.not.i38 = icmp eq i32* %__i.0.i37, %__last
  br i1 %cmp1.not.i38, label %if.end, label %for.body.i19, !llvm.loop !200

if.end:                                           ; preds = %for.inc.i39, %_ZSt25__unguarded_linear_insertIPiN9__gnu_cxx5__ops14_Val_less_iterEEvT_T0_.exit.i, %for.cond.preheader.i, %if.else, %for.inc.i.14
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZSt11__make_heapIPiN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_RT0_(i32* noundef %__first, i32* noundef %__last, %"struct.__gnu_cxx::__ops::_Iter_less_iter"* noundef nonnull align 1 dereferenceable(1) %__comp) local_unnamed_addr #11 comdat {
entry:
  %sub.ptr.lhs.cast = ptrtoint i32* %__last to i64
  %sub.ptr.rhs.cast = ptrtoint i32* %__first to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = ashr exact i64 %sub.ptr.sub, 2
  %cmp = icmp slt i64 %sub.ptr.sub, 8
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %sub = add nsw i64 %sub.ptr.div, -2
  %div = sdiv i64 %sub, 2
  %sub.i = add nsw i64 %sub.ptr.div, -1
  %div.i = sdiv i64 %sub.i, 2
  %0 = and i64 %sub.ptr.sub, 4
  %cmp6.i = icmp eq i64 %0, 0
  br i1 %cmp6.i, label %while.cond.preheader, label %while.cond.us

while.cond.preheader:                             ; preds = %if.end
  %add11.i = shl nsw i64 %div, 1
  %sub13.i = or i64 %add11.i, 1
  %add.ptr14.i = getelementptr inbounds i32, i32* %__first, i64 %sub13.i
  %add.ptr16.i = getelementptr inbounds i32, i32* %__first, i64 %div
  br label %while.cond

while.cond.us:                                    ; preds = %if.end, %_ZSt13__adjust_heapIPiliN9__gnu_cxx5__ops15_Iter_less_iterEEvT_T0_S5_T1_T2_.exit.us
  %__parent.0.us = phi i64 [ %dec.us, %_ZSt13__adjust_heapIPiliN9__gnu_cxx5__ops15_Iter_less_iterEEvT_T0_S5_T1_T2_.exit.us ], [ %div, %if.end ]
  %add.ptr.us = getelementptr inbounds i32, i32* %__first, i64 %__parent.0.us
  %1 = load i32, i32* %add.ptr.us, align 4, !tbaa !16
  %cmp26.i.us = icmp sgt i64 %div.i, %__parent.0.us
  br i1 %cmp26.i.us, label %while.body.i.us, label %_ZSt13__adjust_heapIPiliN9__gnu_cxx5__ops15_Iter_less_iterEEvT_T0_S5_T1_T2_.exit.us

while.body.i.us:                                  ; preds = %while.cond.us, %while.body.i.us
  %__holeIndex.addr.027.i.us = phi i64 [ %spec.select.i.us, %while.body.i.us ], [ %__parent.0.us, %while.cond.us ]
  %add.i.us = shl i64 %__holeIndex.addr.027.i.us, 1
  %mul.i.us = add i64 %add.i.us, 2
  %add.ptr.i.us = getelementptr inbounds i32, i32* %__first, i64 %mul.i.us
  %sub1.i.us = or i64 %add.i.us, 1
  %add.ptr2.i.us = getelementptr inbounds i32, i32* %__first, i64 %sub1.i.us
  %2 = load i32, i32* %add.ptr.i.us, align 4, !tbaa !16
  %3 = load i32, i32* %add.ptr2.i.us, align 4, !tbaa !16
  %cmp.i.i.us = icmp slt i32 %2, %3
  %spec.select.i.us = select i1 %cmp.i.i.us, i64 %sub1.i.us, i64 %mul.i.us
  %add.ptr3.i.us = getelementptr inbounds i32, i32* %__first, i64 %spec.select.i.us
  %4 = load i32, i32* %add.ptr3.i.us, align 4, !tbaa !16
  %add.ptr5.i.us = getelementptr inbounds i32, i32* %__first, i64 %__holeIndex.addr.027.i.us
  store i32 %4, i32* %add.ptr5.i.us, align 4, !tbaa !16
  %cmp.i.us = icmp slt i64 %spec.select.i.us, %div.i
  br i1 %cmp.i.us, label %while.body.i.us, label %while.end.i.us, !llvm.loop !191

while.end.i.us:                                   ; preds = %while.body.i.us
  %cmp14.i.i.us = icmp sgt i64 %spec.select.i.us, %__parent.0.us
  br i1 %cmp14.i.i.us, label %land.rhs.i.i.us, label %_ZSt13__adjust_heapIPiliN9__gnu_cxx5__ops15_Iter_less_iterEEvT_T0_S5_T1_T2_.exit.us

land.rhs.i.i.us:                                  ; preds = %while.end.i.us, %while.body.i.i.us
  %__holeIndex.addr.015.i.i.us = phi i64 [ %__parent.016.i.i.us, %while.body.i.i.us ], [ %spec.select.i.us, %while.end.i.us ]
  %__parent.016.in.i.i.us = add nsw i64 %__holeIndex.addr.015.i.i.us, -1
  %__parent.016.i.i.us = sdiv i64 %__parent.016.in.i.i.us, 2
  %add.ptr.i.i.us = getelementptr inbounds i32, i32* %__first, i64 %__parent.016.i.i.us
  %5 = load i32, i32* %add.ptr.i.i.us, align 4, !tbaa !16
  %cmp.i.i.i.us = icmp slt i32 %5, %1
  br i1 %cmp.i.i.i.us, label %while.body.i.i.us, label %_ZSt13__adjust_heapIPiliN9__gnu_cxx5__ops15_Iter_less_iterEEvT_T0_S5_T1_T2_.exit.us

while.body.i.i.us:                                ; preds = %land.rhs.i.i.us
  %add.ptr3.i.i.us = getelementptr inbounds i32, i32* %__first, i64 %__holeIndex.addr.015.i.i.us
  store i32 %5, i32* %add.ptr3.i.i.us, align 4, !tbaa !16
  %cmp.i25.i.us = icmp sgt i64 %__parent.016.i.i.us, %__parent.0.us
  br i1 %cmp.i25.i.us, label %land.rhs.i.i.us, label %_ZSt13__adjust_heapIPiliN9__gnu_cxx5__ops15_Iter_less_iterEEvT_T0_S5_T1_T2_.exit.us, !llvm.loop !192

_ZSt13__adjust_heapIPiliN9__gnu_cxx5__ops15_Iter_less_iterEEvT_T0_S5_T1_T2_.exit.us: ; preds = %land.rhs.i.i.us, %while.body.i.i.us, %while.cond.us, %while.end.i.us
  %__holeIndex.addr.0.lcssa.i.i.us = phi i64 [ %spec.select.i.us, %while.end.i.us ], [ %__parent.0.us, %while.cond.us ], [ %__parent.016.i.i.us, %while.body.i.i.us ], [ %__holeIndex.addr.015.i.i.us, %land.rhs.i.i.us ]
  %add.ptr7.i.i.us = getelementptr inbounds i32, i32* %__first, i64 %__holeIndex.addr.0.lcssa.i.i.us
  store i32 %1, i32* %add.ptr7.i.i.us, align 4, !tbaa !16
  %cmp6.us = icmp eq i64 %__parent.0.us, 0
  %dec.us = add nsw i64 %__parent.0.us, -1
  br i1 %cmp6.us, label %return, label %while.cond.us, !llvm.loop !201

while.cond:                                       ; preds = %while.cond.preheader, %_ZSt13__adjust_heapIPiliN9__gnu_cxx5__ops15_Iter_less_iterEEvT_T0_S5_T1_T2_.exit
  %__parent.0 = phi i64 [ %dec, %_ZSt13__adjust_heapIPiliN9__gnu_cxx5__ops15_Iter_less_iterEEvT_T0_S5_T1_T2_.exit ], [ %div, %while.cond.preheader ]
  %add.ptr = getelementptr inbounds i32, i32* %__first, i64 %__parent.0
  %6 = load i32, i32* %add.ptr, align 4, !tbaa !16
  %cmp26.i = icmp sgt i64 %div.i, %__parent.0
  br i1 %cmp26.i, label %while.body.i, label %while.end.i

while.body.i:                                     ; preds = %while.cond, %while.body.i
  %__holeIndex.addr.027.i = phi i64 [ %spec.select.i, %while.body.i ], [ %__parent.0, %while.cond ]
  %add.i = shl i64 %__holeIndex.addr.027.i, 1
  %mul.i = add i64 %add.i, 2
  %add.ptr.i = getelementptr inbounds i32, i32* %__first, i64 %mul.i
  %sub1.i = or i64 %add.i, 1
  %add.ptr2.i = getelementptr inbounds i32, i32* %__first, i64 %sub1.i
  %7 = load i32, i32* %add.ptr.i, align 4, !tbaa !16
  %8 = load i32, i32* %add.ptr2.i, align 4, !tbaa !16
  %cmp.i.i = icmp slt i32 %7, %8
  %spec.select.i = select i1 %cmp.i.i, i64 %sub1.i, i64 %mul.i
  %add.ptr3.i = getelementptr inbounds i32, i32* %__first, i64 %spec.select.i
  %9 = load i32, i32* %add.ptr3.i, align 4, !tbaa !16
  %add.ptr5.i = getelementptr inbounds i32, i32* %__first, i64 %__holeIndex.addr.027.i
  store i32 %9, i32* %add.ptr5.i, align 4, !tbaa !16
  %cmp.i = icmp slt i64 %spec.select.i, %div.i
  br i1 %cmp.i, label %while.body.i, label %while.end.i, !llvm.loop !191

while.end.i:                                      ; preds = %while.body.i, %while.cond
  %__holeIndex.addr.0.lcssa.i = phi i64 [ %__parent.0, %while.cond ], [ %spec.select.i, %while.body.i ]
  %cmp9.i = icmp eq i64 %__holeIndex.addr.0.lcssa.i, %div
  br i1 %cmp9.i, label %if.then10.i, label %if.end18.i

if.then10.i:                                      ; preds = %while.end.i
  %10 = load i32, i32* %add.ptr14.i, align 4, !tbaa !16
  store i32 %10, i32* %add.ptr16.i, align 4, !tbaa !16
  br label %if.end18.i

if.end18.i:                                       ; preds = %if.then10.i, %while.end.i
  %__holeIndex.addr.1.i = phi i64 [ %sub13.i, %if.then10.i ], [ %__holeIndex.addr.0.lcssa.i, %while.end.i ]
  %cmp14.i.i = icmp sgt i64 %__holeIndex.addr.1.i, %__parent.0
  br i1 %cmp14.i.i, label %land.rhs.i.i, label %_ZSt13__adjust_heapIPiliN9__gnu_cxx5__ops15_Iter_less_iterEEvT_T0_S5_T1_T2_.exit

land.rhs.i.i:                                     ; preds = %if.end18.i, %while.body.i.i
  %__holeIndex.addr.015.i.i = phi i64 [ %__parent.016.i.i, %while.body.i.i ], [ %__holeIndex.addr.1.i, %if.end18.i ]
  %__parent.016.in.i.i = add nsw i64 %__holeIndex.addr.015.i.i, -1
  %__parent.016.i.i = sdiv i64 %__parent.016.in.i.i, 2
  %add.ptr.i.i = getelementptr inbounds i32, i32* %__first, i64 %__parent.016.i.i
  %11 = load i32, i32* %add.ptr.i.i, align 4, !tbaa !16
  %cmp.i.i.i = icmp slt i32 %11, %6
  br i1 %cmp.i.i.i, label %while.body.i.i, label %_ZSt13__adjust_heapIPiliN9__gnu_cxx5__ops15_Iter_less_iterEEvT_T0_S5_T1_T2_.exit

while.body.i.i:                                   ; preds = %land.rhs.i.i
  %add.ptr3.i.i = getelementptr inbounds i32, i32* %__first, i64 %__holeIndex.addr.015.i.i
  store i32 %11, i32* %add.ptr3.i.i, align 4, !tbaa !16
  %cmp.i25.i = icmp sgt i64 %__parent.016.i.i, %__parent.0
  br i1 %cmp.i25.i, label %land.rhs.i.i, label %_ZSt13__adjust_heapIPiliN9__gnu_cxx5__ops15_Iter_less_iterEEvT_T0_S5_T1_T2_.exit, !llvm.loop !192

_ZSt13__adjust_heapIPiliN9__gnu_cxx5__ops15_Iter_less_iterEEvT_T0_S5_T1_T2_.exit: ; preds = %land.rhs.i.i, %while.body.i.i, %if.end18.i
  %__holeIndex.addr.0.lcssa.i.i = phi i64 [ %__holeIndex.addr.1.i, %if.end18.i ], [ %__parent.016.i.i, %while.body.i.i ], [ %__holeIndex.addr.015.i.i, %land.rhs.i.i ]
  %add.ptr7.i.i = getelementptr inbounds i32, i32* %__first, i64 %__holeIndex.addr.0.lcssa.i.i
  store i32 %6, i32* %add.ptr7.i.i, align 4, !tbaa !16
  %cmp6 = icmp eq i64 %__parent.0, 0
  %dec = add nsw i64 %__parent.0, -1
  br i1 %cmp6, label %return, label %while.cond, !llvm.loop !201

return:                                           ; preds = %_ZSt13__adjust_heapIPiliN9__gnu_cxx5__ops15_Iter_less_iterEEvT_T0_S5_T1_T2_.exit.us, %_ZSt13__adjust_heapIPiliN9__gnu_cxx5__ops15_Iter_less_iterEEvT_T0_S5_T1_T2_.exit, %entry
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #20

; Function Attrs: alwaysinline norecurse nounwind uwtable
define internal void @.omp_outlined..76(i32* noalias nocapture noundef readonly %.global_tid., i32* noalias nocapture noundef readnone %.bound_tid., %"struct.miniFE::Vector"* nocapture noundef readonly %this) #7 {
entry:
  %.omp.lb = alloca i32, align 4
  %.omp.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %local_size = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %this, i64 0, i32 1
  %0 = load i32, i32* %local_size, align 4, !tbaa !77
  %sub2 = add nsw i32 %0, -1
  %cmp = icmp sgt i32 %0, 0
  br i1 %cmp, label %omp.precond.then, label %omp.precond.end

omp.precond.then:                                 ; preds = %entry
  %1 = bitcast i32* %.omp.lb to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8
  store i32 0, i32* %.omp.lb, align 4, !tbaa !16
  %2 = bitcast i32* %.omp.ub to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #8
  store i32 %sub2, i32* %.omp.ub, align 4, !tbaa !16
  %3 = bitcast i32* %.omp.stride to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #8
  store i32 1, i32* %.omp.stride, align 4, !tbaa !16
  %4 = bitcast i32* %.omp.is_last to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #8
  store i32 0, i32* %.omp.is_last, align 4, !tbaa !16
  %5 = load i32, i32* %.global_tid., align 4, !tbaa !16
  call void @__kmpc_for_static_init_4(%struct.ident_t* nonnull @1, i32 %5, i32 34, i32* nonnull %.omp.is_last, i32* nonnull %.omp.lb, i32* nonnull %.omp.ub, i32* nonnull %.omp.stride, i32 1, i32 1)
  %6 = load i32, i32* %.omp.ub, align 4, !tbaa !16
  %cmp4 = icmp sgt i32 %6, %sub2
  %cond = select i1 %cmp4, i32 %sub2, i32 %6
  store i32 %cond, i32* %.omp.ub, align 4, !tbaa !16
  %7 = load i32, i32* %.omp.lb, align 4, !tbaa !16
  %cmp5.not12 = icmp slt i32 %cond, %7
  br i1 %cmp5.not12, label %omp.loop.exit, label %omp.inner.for.body.lr.ph

omp.inner.for.body.lr.ph:                         ; preds = %omp.precond.then
  %_M_start.i = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %this, i64 0, i32 2, i32 0, i32 0, i32 0
  %8 = load double*, double** %_M_start.i, align 8, !tbaa !78
  %9 = sext i32 %7 to i64
  %scevgep = getelementptr double, double* %8, i64 %9
  %scevgep14 = bitcast double* %scevgep to i8*
  %10 = sub i32 %cond, %7
  %11 = zext i32 %10 to i64
  %12 = shl nuw nsw i64 %11, 3
  %13 = add nuw nsw i64 %12, 8
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(1) %scevgep14, i8 0, i64 %13, i1 false)
  br label %omp.loop.exit

omp.loop.exit:                                    ; preds = %omp.inner.for.body.lr.ph, %omp.precond.then
  call void @__kmpc_for_static_fini(%struct.ident_t* nonnull @1, i32 %5)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8
  br label %omp.precond.end

omp.precond.end:                                  ; preds = %omp.loop.exit, %entry
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN6miniFE20perform_element_loopIiNS_9CSRMatrixIdiiEENS_6VectorIdiiEEEEvRKNS_23simple_mesh_descriptionIT_EERK3BoxRT0_RT1_RNS_10ParametersE(%"class.miniFE::simple_mesh_description"* noundef nonnull align 8 dereferenceable(192) %mesh, %struct.Box* noundef nonnull align 4 dereferenceable(24) %local_elem_box, %"struct.miniFE::CSRMatrix"* noundef nonnull align 8 dereferenceable(132) %A, %"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %b, %"struct.miniFE::Parameters"* noundef nonnull align 8 dereferenceable(68) %0) local_unnamed_addr #11 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %elemIDs = alloca %"class.std::vector.15", align 8
  %elemID_size = alloca i32, align 4
  %arrayidx = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %mesh, i64 0, i32 3, i32 0, i64 1
  %1 = load i32, i32* %arrayidx, align 4, !tbaa !16
  %arrayidx3 = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %mesh, i64 0, i32 3, i32 0, i64 3
  %2 = load i32, i32* %arrayidx3, align 4, !tbaa !16
  %arrayidx6 = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %mesh, i64 0, i32 3, i32 0, i64 5
  %3 = load i32, i32* %arrayidx6, align 4, !tbaa !16
  %arrayidx.i.i = getelementptr inbounds %struct.Box, %struct.Box* %local_elem_box, i64 0, i32 0, i64 0
  %arrayidx.i26 = getelementptr inbounds %struct.Box, %struct.Box* %local_elem_box, i64 0, i32 0, i64 1
  %4 = load i32, i32* %arrayidx.i26, align 4, !tbaa !16
  %5 = load i32, i32* %arrayidx.i.i, align 4, !tbaa !16
  %sub.i = sub nsw i32 %4, %5
  %arrayidx.i12.i = getelementptr inbounds %struct.Box, %struct.Box* %local_elem_box, i64 0, i32 0, i64 2
  %arrayidx4.i = getelementptr inbounds %struct.Box, %struct.Box* %local_elem_box, i64 0, i32 0, i64 3
  %6 = load i32, i32* %arrayidx4.i, align 4, !tbaa !16
  %7 = load i32, i32* %arrayidx.i12.i, align 4, !tbaa !16
  %sub7.i = sub nsw i32 %6, %7
  %arrayidx.i14.i = getelementptr inbounds %struct.Box, %struct.Box* %local_elem_box, i64 0, i32 0, i64 4
  %arrayidx9.i = getelementptr inbounds %struct.Box, %struct.Box* %local_elem_box, i64 0, i32 0, i64 5
  %8 = load i32, i32* %arrayidx9.i, align 4, !tbaa !16
  %9 = load i32, i32* %arrayidx.i14.i, align 4, !tbaa !16
  %sub12.i = sub nsw i32 %8, %9
  %mul.i = mul nsw i32 %sub7.i, %sub.i
  %mul13.i = mul nsw i32 %mul.i, %sub12.i
  %10 = bitcast %"class.std::vector.15"* %elemIDs to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #8
  %conv = sext i32 %mul13.i to i64
  %cmp.not.i.i.i.i = icmp eq i32 %mul13.i, 0
  br i1 %cmp.not.i.i.i.i, label %_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_.exit.thread.i, label %cond.true.i.i.i.i

_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_.exit.thread.i: ; preds = %entry
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(24) %10, i8 0, i64 24, i1 false)
  br label %invoke.cont9

cond.true.i.i.i.i:                                ; preds = %entry
  %cmp.i.i.i.i.i.i = icmp slt i32 %mul13.i, 0
  br i1 %cmp.i.i.i.i.i.i, label %if.then.i.i.i.i.i.i, label %for.body.i.i.preheader.i.i.i.i.i

if.then.i.i.i.i.i.i:                              ; preds = %cond.true.i.i.i.i
  tail call void @_ZSt17__throw_bad_allocv() #29
  unreachable

for.body.i.i.preheader.i.i.i.i.i:                 ; preds = %cond.true.i.i.i.i
  %mul.i.i.i.i.i.i = shl nuw nsw i64 %conv, 2
  %call2.i.i.i.i1.i.i27 = tail call noalias noundef nonnull i8* @_Znwm(i64 noundef %mul.i.i.i.i.i.i) #30
  %11 = bitcast i8* %call2.i.i.i.i1.i.i27 to i32*
  %12 = bitcast %"class.std::vector.15"* %elemIDs to i8**
  store i8* %call2.i.i.i.i1.i.i27, i8** %12, align 8, !tbaa !74
  %add.ptr.i.i.i = getelementptr i32, i32* %11, i64 %conv
  %_M_end_of_storage.i.i.i = getelementptr inbounds %"class.std::vector.15", %"class.std::vector.15"* %elemIDs, i64 0, i32 0, i32 0, i32 2
  store i32* %add.ptr.i.i.i, i32** %_M_end_of_storage.i.i.i, align 8, !tbaa !109
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %call2.i.i.i.i1.i.i27, i8 0, i64 %mul.i.i.i.i.i.i, i1 false)
  %.pre = load i32, i32* %arrayidx.i.i, align 4, !tbaa !16, !noalias !202
  %.pre105 = load i32, i32* %arrayidx.i12.i, align 4, !tbaa !16, !noalias !202
  %.pre106 = load i32, i32* %arrayidx.i14.i, align 4, !tbaa !16, !noalias !202
  %.pre107 = load i32, i32* %arrayidx.i26, align 4, !tbaa !16, !noalias !202
  %.pre108 = load i32, i32* %arrayidx4.i, align 4, !tbaa !16, !noalias !202
  %.pre109 = load i32, i32* %arrayidx9.i, align 4, !tbaa !16, !noalias !202
  br label %invoke.cont9

invoke.cont9:                                     ; preds = %_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_.exit.thread.i, %for.body.i.i.preheader.i.i.i.i.i
  %13 = phi i32* [ %11, %for.body.i.i.preheader.i.i.i.i.i ], [ null, %_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_.exit.thread.i ]
  %14 = phi i32 [ %.pre109, %for.body.i.i.preheader.i.i.i.i.i ], [ %8, %_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_.exit.thread.i ]
  %15 = phi i32 [ %.pre108, %for.body.i.i.preheader.i.i.i.i.i ], [ %6, %_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_.exit.thread.i ]
  %16 = phi i32 [ %.pre107, %for.body.i.i.preheader.i.i.i.i.i ], [ %4, %_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_.exit.thread.i ]
  %17 = phi i32 [ %.pre106, %for.body.i.i.preheader.i.i.i.i.i ], [ %9, %_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_.exit.thread.i ]
  %18 = phi i32 [ %.pre105, %for.body.i.i.preheader.i.i.i.i.i ], [ %7, %_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_.exit.thread.i ]
  %19 = phi i32 [ %.pre, %for.body.i.i.preheader.i.i.i.i.i ], [ %5, %_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_.exit.thread.i ]
  %__first.addr.0.lcssa.i.i.i.i.i.i.i = phi i32* [ %add.ptr.i.i.i, %for.body.i.i.preheader.i.i.i.i.i ], [ null, %_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_.exit.thread.i ]
  %_M_finish.i.i = getelementptr inbounds %"class.std::vector.15", %"class.std::vector.15"* %elemIDs, i64 0, i32 0, i32 0, i32 1
  store i32* %__first.addr.0.lcssa.i.i.i.i.i.i.i, i32** %_M_finish.i.i, align 8, !tbaa !71
  %_M_start.i46 = getelementptr inbounds %"class.std::vector.15", %"class.std::vector.15"* %elemIDs, i64 0, i32 0, i32 0, i32 0
  %cmp.i.i96 = icmp ne i32 %19, %16
  %cmp4.i.i97 = icmp ne i32 %18, %15
  %or.cond98 = select i1 %cmp.i.i96, i1 true, i1 %cmp4.i.i97
  %cmp6.i.i99 = icmp ne i32 %17, %14
  %or.cond95100 = select i1 %or.cond98, i1 true, i1 %cmp6.i.i99
  br i1 %or.cond95100, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %_ZN6miniFE11BoxIteratorppEv.exit, %invoke.cont9
  %20 = bitcast i32* %elemID_size to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #8
  %sub.ptr.lhs.cast.i = ptrtoint i32* %__first.addr.0.lcssa.i.i.i.i.i.i.i to i64
  %sub.ptr.rhs.cast.i = ptrtoint i32* %13 to i64
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %21 = lshr exact i64 %sub.ptr.sub.i, 2
  %conv20 = trunc i64 %21 to i32
  store i32 %conv20, i32* %elemID_size, align 4, !tbaa !16
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull @3, i32 5, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i32*, %"class.miniFE::simple_mesh_description"*, %"class.std::vector.15"*, %"struct.miniFE::CSRMatrix"*, %"struct.miniFE::Vector"*)* @.omp_outlined..77 to void (i32*, i32*, ...)*), i32* nonnull %elemID_size, %"class.miniFE::simple_mesh_description"* nonnull %mesh, %"class.std::vector.15"* nonnull %elemIDs, %"struct.miniFE::CSRMatrix"* nonnull %A, %"struct.miniFE::Vector"* nonnull %b)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #8
  %22 = load i32*, i32** %_M_start.i46, align 8, !tbaa !74
  %tobool.not.i.i.i = icmp eq i32* %22, null
  br i1 %tobool.not.i.i.i, label %_ZNSt6vectorIiSaIiEED2Ev.exit, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %for.cond.cleanup
  %23 = bitcast i32* %22 to i8*
  call void @_ZdlPv(i8* noundef nonnull %23) #8
  br label %_ZNSt6vectorIiSaIiEED2Ev.exit

_ZNSt6vectorIiSaIiEED2Ev.exit:                    ; preds = %for.cond.cleanup, %if.then.i.i.i
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #8
  ret void

for.body:                                         ; preds = %invoke.cont9, %_ZN6miniFE11BoxIteratorppEv.exit
  %i.0104 = phi i64 [ %inc, %_ZN6miniFE11BoxIteratorppEv.exit ], [ 0, %invoke.cont9 ]
  %iter.sroa.17.0103 = phi i32 [ %iter.sroa.17.1, %_ZN6miniFE11BoxIteratorppEv.exit ], [ %17, %invoke.cont9 ]
  %iter.sroa.10.0102 = phi i32 [ %iter.sroa.10.1, %_ZN6miniFE11BoxIteratorppEv.exit ], [ %18, %invoke.cont9 ]
  %iter.sroa.0.0101 = phi i32 [ %iter.sroa.0.1, %_ZN6miniFE11BoxIteratorppEv.exit ], [ %19, %invoke.cont9 ]
  %24 = or i32 %iter.sroa.10.0102, %iter.sroa.0.0101
  %25 = or i32 %24, %iter.sroa.17.0103
  %.not.i = icmp sgt i32 %25, -1
  br i1 %.not.i, label %if.end.i, label %_ZN6miniFE6get_idIiEET_iiiiii.exit

if.end.i:                                         ; preds = %for.body
  %cmp4.not.i = icmp slt i32 %iter.sroa.0.0101, %1
  %cmp6.not.i = icmp slt i32 %iter.sroa.10.0102, %2
  %or.cond.i = and i1 %cmp4.not.i, %cmp6.not.i
  %cmp8.not.i = icmp slt i32 %iter.sroa.17.0103, %3
  %or.cond14.i = and i1 %or.cond.i, %cmp8.not.i
  br i1 %or.cond14.i, label %if.end10.i, label %_ZN6miniFE6get_idIiEET_iiiiii.exit

if.end10.i:                                       ; preds = %if.end.i
  %mul11.i = mul i32 %iter.sroa.17.0103, %2
  %reass.add.i = add i32 %mul11.i, %iter.sroa.10.0102
  %reass.mul.i = mul i32 %reass.add.i, %1
  %add13.i = add i32 %reass.mul.i, %iter.sroa.0.0101
  br label %_ZN6miniFE6get_idIiEET_iiiiii.exit

_ZN6miniFE6get_idIiEET_iiiiii.exit:               ; preds = %for.body, %if.end.i, %if.end10.i
  %retval.0.i = phi i32 [ %add13.i, %if.end10.i ], [ -1, %for.body ], [ -1, %if.end.i ]
  %add.ptr.i = getelementptr inbounds i32, i32* %13, i64 %i.0104
  store i32 %retval.0.i, i32* %add.ptr.i, align 4, !tbaa !16
  %inc.i = add nsw i32 %iter.sroa.0.0101, 1
  %cmp.not.i = icmp slt i32 %inc.i, %16
  br i1 %cmp.not.i, label %_ZN6miniFE11BoxIteratorppEv.exit, label %if.then.i

if.then.i:                                        ; preds = %_ZN6miniFE6get_idIiEET_iiiiii.exit
  %inc7.i = add nsw i32 %iter.sroa.10.0102, 1
  %cmp12.not.i = icmp slt i32 %inc7.i, %15
  br i1 %cmp12.not.i, label %_ZN6miniFE11BoxIteratorppEv.exit, label %if.then13.i

if.then13.i:                                      ; preds = %if.then.i
  %inc18.i = add nsw i32 %iter.sroa.17.0103, 1
  %cmp23.not.i = icmp slt i32 %inc18.i, %14
  br i1 %cmp23.not.i, label %_ZN6miniFE11BoxIteratorppEv.exit, label %if.then24.i

if.then24.i:                                      ; preds = %if.then13.i
  br label %_ZN6miniFE11BoxIteratorppEv.exit

_ZN6miniFE11BoxIteratorppEv.exit:                 ; preds = %_ZN6miniFE6get_idIiEET_iiiiii.exit, %if.then.i, %if.then13.i, %if.then24.i
  %iter.sroa.0.1 = phi i32 [ %inc.i, %_ZN6miniFE6get_idIiEET_iiiiii.exit ], [ %19, %if.then.i ], [ %19, %if.then13.i ], [ %16, %if.then24.i ]
  %iter.sroa.10.1 = phi i32 [ %iter.sroa.10.0102, %_ZN6miniFE6get_idIiEET_iiiiii.exit ], [ %inc7.i, %if.then.i ], [ %18, %if.then13.i ], [ %15, %if.then24.i ]
  %iter.sroa.17.1 = phi i32 [ %iter.sroa.17.0103, %_ZN6miniFE6get_idIiEET_iiiiii.exit ], [ %iter.sroa.17.0103, %if.then.i ], [ %inc18.i, %if.then13.i ], [ %14, %if.then24.i ]
  %inc = add i64 %i.0104, 1
  %cmp.i.i = icmp ne i32 %iter.sroa.0.1, %16
  %cmp4.i.i = icmp ne i32 %iter.sroa.10.1, %15
  %or.cond = select i1 %cmp.i.i, i1 true, i1 %cmp4.i.i
  %cmp6.i.i = icmp ne i32 %iter.sroa.17.1, %14
  %or.cond95 = select i1 %or.cond, i1 true, i1 %cmp6.i.i
  br i1 %or.cond95, label %for.body, label %for.cond.cleanup, !llvm.loop !205
}

; Function Attrs: alwaysinline norecurse nounwind uwtable
define internal void @.omp_outlined..77(i32* noalias nocapture noundef readonly %.global_tid., i32* noalias nocapture noundef readnone %.bound_tid., i32* nocapture noundef nonnull readonly align 4 dereferenceable(4) %elemID_size, %"class.miniFE::simple_mesh_description"* noundef nonnull align 8 dereferenceable(192) %mesh, %"class.std::vector.15"* nocapture noundef nonnull readonly align 8 dereferenceable(24) %elemIDs, %"struct.miniFE::CSRMatrix"* noundef nonnull align 8 dereferenceable(132) %A, %"struct.miniFE::Vector"* nocapture noundef nonnull readonly align 8 dereferenceable(32) %b) #7 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %.omp.lb = alloca i32, align 4
  %.omp.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %elem_data = alloca %"struct.miniFE::ElemData", align 8
  %0 = load i32, i32* %elemID_size, align 4, !tbaa !16
  %sub5 = add nsw i32 %0, -1
  %cmp = icmp sgt i32 %0, 0
  br i1 %cmp, label %omp.precond.then, label %omp.precond.end

omp.precond.then:                                 ; preds = %entry
  %1 = bitcast i32* %.omp.lb to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8
  store i32 0, i32* %.omp.lb, align 4, !tbaa !16
  %2 = bitcast i32* %.omp.ub to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #8
  store i32 %sub5, i32* %.omp.ub, align 4, !tbaa !16
  %3 = bitcast i32* %.omp.stride to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #8
  store i32 1, i32* %.omp.stride, align 4, !tbaa !16
  %4 = bitcast i32* %.omp.is_last to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #8
  store i32 0, i32* %.omp.is_last, align 4, !tbaa !16
  %5 = load i32, i32* %.global_tid., align 4, !tbaa !16
  call void @__kmpc_for_static_init_4(%struct.ident_t* nonnull @1, i32 %5, i32 34, i32* nonnull %.omp.is_last, i32* nonnull %.omp.lb, i32* nonnull %.omp.ub, i32* nonnull %.omp.stride, i32 1, i32 1)
  %6 = load i32, i32* %.omp.ub, align 4, !tbaa !16
  %cmp7 = icmp sgt i32 %6, %sub5
  %cond = select i1 %cmp7, i32 %sub5, i32 %6
  store i32 %cond, i32* %.omp.ub, align 4, !tbaa !16
  %7 = load i32, i32* %.omp.lb, align 4, !tbaa !16
  %8 = bitcast %"struct.miniFE::ElemData"* %elem_data to i8*
  %nodes_per_elem.i = getelementptr inbounds %"struct.miniFE::ElemData", %"struct.miniFE::ElemData"* %elem_data, i64 0, i32 0
  %arraydecay = getelementptr inbounds %"struct.miniFE::ElemData", %"struct.miniFE::ElemData"* %elem_data, i64 0, i32 2, i64 0
  %_M_start.i = getelementptr inbounds %"class.std::vector.15", %"class.std::vector.15"* %elemIDs, i64 0, i32 0, i32 0, i32 0
  %arraydecay.i = getelementptr inbounds %"struct.miniFE::ElemData", %"struct.miniFE::ElemData"* %elem_data, i64 0, i32 1, i64 0
  %arraydecay1.i = getelementptr inbounds %"struct.miniFE::ElemData", %"struct.miniFE::ElemData"* %elem_data, i64 0, i32 3, i64 0
  %arraydecay2.i = getelementptr inbounds %"struct.miniFE::ElemData", %"struct.miniFE::ElemData"* %elem_data, i64 0, i32 4, i64 0
  %arraydecay7.i = getelementptr inbounds %"struct.miniFE::ElemData", %"struct.miniFE::ElemData"* %elem_data, i64 0, i32 5, i64 0
  %startIndex.i.i = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %b, i64 0, i32 0
  %local_size.i.i = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %b, i64 0, i32 1
  %_M_start.i.i.i = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %b, i64 0, i32 2, i32 0, i32 0, i32 0
  %cmp8.not23 = icmp sgt i32 %7, %cond
  br i1 %cmp8.not23, label %omp.loop.exit, label %omp.inner.for.body.preheader

omp.inner.for.body.preheader:                     ; preds = %omp.precond.then
  %9 = sext i32 %7 to i64
  br label %omp.inner.for.body

omp.inner.for.body:                               ; preds = %omp.inner.for.body.preheader, %invoke.cont13
  %indvars.iv = phi i64 [ %9, %omp.inner.for.body.preheader ], [ %indvars.iv.next, %invoke.cont13 ]
  call void @llvm.lifetime.start.p0i8(i64 2120, i8* nonnull %8) #8
  store i64 8, i64* %nodes_per_elem.i, align 8, !tbaa !206
  invoke void @_ZN6miniFE23compute_gradient_valuesIdEEvPT_(double* noundef nonnull %arraydecay)
          to label %invoke.cont10 unwind label %lpad9

invoke.cont10:                                    ; preds = %omp.inner.for.body
  %10 = load i32*, i32** %_M_start.i, align 8, !tbaa !74
  %add.ptr.i = getelementptr inbounds i32, i32* %10, i64 %indvars.iv
  %11 = load i32, i32* %add.ptr.i, align 4, !tbaa !16
  invoke void @_ZN6miniFE25get_elem_nodes_and_coordsIidEEvRKNS_23simple_mesh_descriptionIT_EES2_PS2_PT0_(%"class.miniFE::simple_mesh_description"* noundef nonnull align 8 dereferenceable(192) %mesh, i32 noundef signext %11, i32* noundef nonnull %arraydecay.i, double* noundef nonnull %arraydecay1.i)
          to label %invoke.cont11 unwind label %lpad9

invoke.cont11:                                    ; preds = %invoke.cont10
  invoke void @_ZN6miniFE4Hex820diffusionMatrix_symmIdEEvPKT_S4_PS2_(double* noundef nonnull %arraydecay1.i, double* noundef nonnull %arraydecay, double* noundef nonnull %arraydecay2.i)
          to label %.noexc unwind label %lpad9

.noexc:                                           ; preds = %invoke.cont11
  invoke void @_ZN6miniFE4Hex812sourceVectorIdEEvPKT_S4_PS2_(double* noundef nonnull %arraydecay1.i, double* noundef nonnull %arraydecay, double* noundef nonnull %arraydecay7.i)
          to label %invoke.cont12 unwind label %lpad9

invoke.cont12:                                    ; preds = %.noexc
  %12 = load i64, i64* %nodes_per_elem.i, align 8, !tbaa !206
  invoke void @_ZN6miniFE23sum_in_symm_elem_matrixINS_9CSRMatrixIdiiEEEEvmPKNT_17GlobalOrdinalTypeEPKNS3_10ScalarTypeERS3_(i64 noundef %12, i32* noundef nonnull %arraydecay.i, double* noundef nonnull %arraydecay2.i, %"struct.miniFE::CSRMatrix"* noundef nonnull align 8 dereferenceable(132) %A)
          to label %.noexc22 unwind label %lpad9

.noexc22:                                         ; preds = %invoke.cont12
  %13 = load i64, i64* %nodes_per_elem.i, align 8, !tbaa !206
  %14 = load i32, i32* %startIndex.i.i, align 8, !tbaa !75
  %15 = load i32, i32* %local_size.i.i, align 4, !tbaa !77
  %add.i.i = add nsw i32 %15, %14
  %cmp18.not.i.i = icmp eq i64 %13, 0
  br i1 %cmp18.not.i.i, label %invoke.cont13, label %for.body.i.i.preheader

for.body.i.i.preheader:                           ; preds = %.noexc22
  %xtraiter = and i64 %13, 1
  %16 = icmp eq i64 %13, 1
  br i1 %16, label %invoke.cont13.loopexit.unr-lcssa, label %for.body.i.i.preheader.new

for.body.i.i.preheader.new:                       ; preds = %for.body.i.i.preheader
  %unroll_iter = and i64 %13, -2
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.inc.i.i.1, %for.body.i.i.preheader.new
  %i.019.i.i = phi i64 [ 0, %for.body.i.i.preheader.new ], [ %inc.i.i.1, %for.inc.i.i.1 ]
  %niter = phi i64 [ 0, %for.body.i.i.preheader.new ], [ %niter.next.1, %for.inc.i.i.1 ]
  %arrayidx.i.i = getelementptr inbounds %"struct.miniFE::ElemData", %"struct.miniFE::ElemData"* %elem_data, i64 0, i32 1, i64 %i.019.i.i
  %17 = load i32, i32* %arrayidx.i.i, align 8, !tbaa !16
  %cmp2.i.i = icmp sge i32 %17, %14
  %cmp4.not.i.i = icmp slt i32 %17, %add.i.i
  %or.cond.i.i = select i1 %cmp2.i.i, i1 %cmp4.not.i.i, i1 false
  br i1 %or.cond.i.i, label %if.end.i.i, label %for.inc.i.i

if.end.i.i:                                       ; preds = %for.body.i.i
  %sub6.i.i = sub nsw i32 %17, %14
  %conv.i.i = sext i32 %sub6.i.i to i64
  %18 = load double*, double** %_M_start.i.i.i, align 8, !tbaa !78
  %add.ptr.i.i.i = getelementptr inbounds double, double* %18, i64 %conv.i.i
  %arrayidx7.i.i = getelementptr inbounds %"struct.miniFE::ElemData", %"struct.miniFE::ElemData"* %elem_data, i64 0, i32 5, i64 %i.019.i.i
  %19 = load double, double* %arrayidx7.i.i, align 8, !tbaa !84
  %20 = bitcast double* %add.ptr.i.i.i to i64*
  %atomic-load.i.i = load atomic i64, i64* %20 monotonic, align 8, !tbaa !84
  br label %atomic_cont.i.i

atomic_cont.i.i:                                  ; preds = %atomic_cont.i.i, %if.end.i.i
  %21 = phi i64 [ %atomic-load.i.i, %if.end.i.i ], [ %25, %atomic_cont.i.i ]
  %22 = bitcast i64 %21 to double
  %add8.i.i = fadd contract double %19, %22
  %23 = bitcast double %add8.i.i to i64
  %24 = cmpxchg i64* %20, i64 %21, i64 %23 monotonic monotonic, align 8
  %25 = extractvalue { i64, i1 } %24, 0
  %26 = extractvalue { i64, i1 } %24, 1
  br i1 %26, label %for.inc.i.i, label %atomic_cont.i.i

for.inc.i.i:                                      ; preds = %atomic_cont.i.i, %for.body.i.i
  %inc.i.i = or i64 %i.019.i.i, 1
  %arrayidx.i.i.1 = getelementptr inbounds %"struct.miniFE::ElemData", %"struct.miniFE::ElemData"* %elem_data, i64 0, i32 1, i64 %inc.i.i
  %27 = load i32, i32* %arrayidx.i.i.1, align 4, !tbaa !16
  %cmp2.i.i.1 = icmp sge i32 %27, %14
  %cmp4.not.i.i.1 = icmp slt i32 %27, %add.i.i
  %or.cond.i.i.1 = select i1 %cmp2.i.i.1, i1 %cmp4.not.i.i.1, i1 false
  br i1 %or.cond.i.i.1, label %if.end.i.i.1, label %for.inc.i.i.1

if.end.i.i.1:                                     ; preds = %for.inc.i.i
  %sub6.i.i.1 = sub nsw i32 %27, %14
  %conv.i.i.1 = sext i32 %sub6.i.i.1 to i64
  %28 = load double*, double** %_M_start.i.i.i, align 8, !tbaa !78
  %add.ptr.i.i.i.1 = getelementptr inbounds double, double* %28, i64 %conv.i.i.1
  %arrayidx7.i.i.1 = getelementptr inbounds %"struct.miniFE::ElemData", %"struct.miniFE::ElemData"* %elem_data, i64 0, i32 5, i64 %inc.i.i
  %29 = load double, double* %arrayidx7.i.i.1, align 8, !tbaa !84
  %30 = bitcast double* %add.ptr.i.i.i.1 to i64*
  %atomic-load.i.i.1 = load atomic i64, i64* %30 monotonic, align 8, !tbaa !84
  br label %atomic_cont.i.i.1

atomic_cont.i.i.1:                                ; preds = %atomic_cont.i.i.1, %if.end.i.i.1
  %31 = phi i64 [ %atomic-load.i.i.1, %if.end.i.i.1 ], [ %35, %atomic_cont.i.i.1 ]
  %32 = bitcast i64 %31 to double
  %add8.i.i.1 = fadd contract double %29, %32
  %33 = bitcast double %add8.i.i.1 to i64
  %34 = cmpxchg i64* %30, i64 %31, i64 %33 monotonic monotonic, align 8
  %35 = extractvalue { i64, i1 } %34, 0
  %36 = extractvalue { i64, i1 } %34, 1
  br i1 %36, label %for.inc.i.i.1, label %atomic_cont.i.i.1

for.inc.i.i.1:                                    ; preds = %atomic_cont.i.i.1, %for.inc.i.i
  %inc.i.i.1 = add nuw i64 %i.019.i.i, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %invoke.cont13.loopexit.unr-lcssa, label %for.body.i.i, !llvm.loop !208

invoke.cont13.loopexit.unr-lcssa:                 ; preds = %for.inc.i.i.1, %for.body.i.i.preheader
  %i.019.i.i.unr = phi i64 [ 0, %for.body.i.i.preheader ], [ %inc.i.i.1, %for.inc.i.i.1 ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %invoke.cont13, label %for.body.i.i.epil

for.body.i.i.epil:                                ; preds = %invoke.cont13.loopexit.unr-lcssa
  %arrayidx.i.i.epil = getelementptr inbounds %"struct.miniFE::ElemData", %"struct.miniFE::ElemData"* %elem_data, i64 0, i32 1, i64 %i.019.i.i.unr
  %37 = load i32, i32* %arrayidx.i.i.epil, align 4, !tbaa !16
  %cmp2.i.i.epil = icmp sge i32 %37, %14
  %cmp4.not.i.i.epil = icmp slt i32 %37, %add.i.i
  %or.cond.i.i.epil = select i1 %cmp2.i.i.epil, i1 %cmp4.not.i.i.epil, i1 false
  br i1 %or.cond.i.i.epil, label %if.end.i.i.epil, label %invoke.cont13

if.end.i.i.epil:                                  ; preds = %for.body.i.i.epil
  %sub6.i.i.epil = sub nsw i32 %37, %14
  %conv.i.i.epil = sext i32 %sub6.i.i.epil to i64
  %38 = load double*, double** %_M_start.i.i.i, align 8, !tbaa !78
  %add.ptr.i.i.i.epil = getelementptr inbounds double, double* %38, i64 %conv.i.i.epil
  %arrayidx7.i.i.epil = getelementptr inbounds %"struct.miniFE::ElemData", %"struct.miniFE::ElemData"* %elem_data, i64 0, i32 5, i64 %i.019.i.i.unr
  %39 = load double, double* %arrayidx7.i.i.epil, align 8, !tbaa !84
  %40 = bitcast double* %add.ptr.i.i.i.epil to i64*
  %atomic-load.i.i.epil = load atomic i64, i64* %40 monotonic, align 8, !tbaa !84
  br label %atomic_cont.i.i.epil

atomic_cont.i.i.epil:                             ; preds = %atomic_cont.i.i.epil, %if.end.i.i.epil
  %41 = phi i64 [ %atomic-load.i.i.epil, %if.end.i.i.epil ], [ %45, %atomic_cont.i.i.epil ]
  %42 = bitcast i64 %41 to double
  %add8.i.i.epil = fadd contract double %39, %42
  %43 = bitcast double %add8.i.i.epil to i64
  %44 = cmpxchg i64* %40, i64 %41, i64 %43 monotonic monotonic, align 8
  %45 = extractvalue { i64, i1 } %44, 0
  %46 = extractvalue { i64, i1 } %44, 1
  br i1 %46, label %invoke.cont13, label %atomic_cont.i.i.epil

invoke.cont13:                                    ; preds = %invoke.cont13.loopexit.unr-lcssa, %atomic_cont.i.i.epil, %for.body.i.i.epil, %.noexc22
  call void @llvm.lifetime.end.p0i8(i64 2120, i8* nonnull %8) #8
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %47 = load i32, i32* %.omp.ub, align 4, !tbaa !16
  %48 = sext i32 %47 to i64
  %cmp8.not.not = icmp slt i64 %indvars.iv, %48
  br i1 %cmp8.not.not, label %omp.inner.for.body, label %omp.loop.exit

lpad9:                                            ; preds = %invoke.cont12, %.noexc, %invoke.cont11, %invoke.cont10, %omp.inner.for.body
  %49 = landingpad { i8*, i32 }
          catch i8* null
  %50 = extractvalue { i8*, i32 } %49, 0
  call void @llvm.lifetime.end.p0i8(i64 2120, i8* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8
  call void @__clang_call_terminate(i8* %50) #31
  unreachable

omp.loop.exit:                                    ; preds = %invoke.cont13, %omp.precond.then
  call void @__kmpc_for_static_fini(%struct.ident_t* nonnull @1, i32 %5)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8
  br label %omp.precond.end

omp.precond.end:                                  ; preds = %omp.loop.exit, %entry
  ret void
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZN6miniFE23compute_gradient_valuesIdEEvPT_(double* noundef %grad_vals) local_unnamed_addr #22 comdat {
entry:
  %gpts = alloca <2 x double>, align 16
  %0 = bitcast <2 x double>* %gpts to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8
  store <2 x double> <double 0xBFE279A74576233F, double 0x3FE279A74576233F>, <2 x double>* %gpts, align 16, !tbaa !84
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8
  ret void

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry
  %1 = phi double [ 0x3FE279A74576233F, %entry ], [ %115, %for.body.for.body_crit_edge ]
  %ig.022 = phi i64 [ 0, %entry ], [ %inc20, %for.body.for.body_crit_edge ]
  %grad_vals_ptr.021 = phi double* [ %grad_vals, %entry ], [ %add.ptr.1.1, %for.body.for.body_crit_edge ]
  %2 = phi <2 x double> [ <double 0xBFE279A74576233F, double 0xBFE279A74576233F>, %entry ], [ %114, %for.body.for.body_crit_edge ]
  %3 = fsub contract <2 x double> <double 1.000000e+00, double 1.000000e+00>, %2
  %4 = fadd contract <2 x double> %2, <double 1.000000e+00, double 1.000000e+00>
  %5 = fmul contract <2 x double> %3, <double -1.250000e-01, double -1.250000e-01>
  %6 = shufflevector <2 x double> %3, <2 x double> %4, <2 x i32> <i32 0, i32 3>
  %7 = fmul contract <2 x double> %6, <double 1.250000e-01, double -1.250000e-01>
  %8 = fmul contract <2 x double> %4, <double 1.250000e-01, double 1.250000e-01>
  %9 = shufflevector <2 x double> %4, <2 x double> %3, <2 x i32> <i32 0, i32 3>
  %10 = fmul contract <2 x double> %9, <double -1.250000e-01, double 1.250000e-01>
  %11 = shufflevector <2 x double> %10, <2 x double> undef, <2 x i32> <i32 1, i32 undef>
  %12 = shufflevector <2 x double> %11, <2 x double> %5, <2 x i32> <i32 0, i32 3>
  %13 = shufflevector <2 x double> %3, <2 x double> %4, <2 x i32> <i32 0, i32 2>
  %14 = fmul contract <2 x double> %12, %13
  %15 = shufflevector <2 x double> %3, <2 x double> poison, <2 x i32> zeroinitializer
  %16 = fmul contract <2 x double> %5, %15
  %17 = bitcast double* %grad_vals_ptr.021 to <2 x double>*
  store <2 x double> %16, <2 x double>* %17, align 8, !tbaa !84
  %arrayidx17.i = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 2
  %18 = extractelement <2 x double> %16, i64 1
  store double %18, double* %arrayidx17.i, align 8, !tbaa !84
  %19 = fmul contract <2 x double> %7, %15
  %arrayidx20.i = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 3
  %20 = bitcast double* %arrayidx20.i to <2 x double>*
  store <2 x double> %19, <2 x double>* %20, align 8, !tbaa !84
  %arrayidx26.i = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 5
  %21 = extractelement <2 x double> %19, i64 1
  store double %21, double* %arrayidx26.i, align 8, !tbaa !84
  %22 = fmul contract <2 x double> %8, %15
  %arrayidx29.i = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 6
  %23 = bitcast double* %arrayidx29.i to <2 x double>*
  store <2 x double> %22, <2 x double>* %23, align 8, !tbaa !84
  %arrayidx35.i = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 8
  %24 = shufflevector <2 x double> %7, <2 x double> %10, <2 x i32> <i32 1, i32 2>
  %25 = shufflevector <2 x double> %4, <2 x double> %3, <2 x i32> <i32 0, i32 2>
  %26 = fmul contract <2 x double> %24, %25
  %27 = bitcast double* %arrayidx35.i to <2 x double>*
  store <2 x double> %26, <2 x double>* %27, align 8, !tbaa !84
  %arrayidx41.i = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 10
  %28 = bitcast double* %arrayidx41.i to <2 x double>*
  store <2 x double> %14, <2 x double>* %28, align 8, !tbaa !84
  %29 = fmul contract <2 x double> %5, %4
  %mul46.i = extractelement <2 x double> %29, i64 0
  %arrayidx47.i = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 12
  store double %mul46.i, double* %arrayidx47.i, align 8, !tbaa !84
  %arrayidx50.i = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 13
  %shuffle = shufflevector <2 x double> %14, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %30 = bitcast double* %arrayidx50.i to <2 x double>*
  store <2 x double> %shuffle, <2 x double>* %30, align 8, !tbaa !84
  %31 = fmul contract <2 x double> %7, %4
  %mul55.i = extractelement <2 x double> %31, i64 0
  %arrayidx56.i = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 15
  store double %mul55.i, double* %arrayidx56.i, align 8, !tbaa !84
  %arrayidx59.i = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 16
  %32 = extractelement <2 x double> %26, i64 0
  %33 = extractelement <2 x double> %22, i64 1
  %34 = shufflevector <2 x double> %26, <2 x double> %22, <2 x i32> <i32 0, i32 3>
  %35 = bitcast double* %arrayidx59.i to <2 x double>*
  store <2 x double> %34, <2 x double>* %35, align 8, !tbaa !84
  %36 = shufflevector <2 x double> %4, <2 x double> poison, <2 x i32> zeroinitializer
  %37 = fmul contract <2 x double> %8, %36
  %arrayidx65.i = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 18
  %38 = bitcast double* %arrayidx65.i to <2 x double>*
  store <2 x double> %37, <2 x double>* %38, align 8, !tbaa !84
  %arrayidx71.i = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 20
  %39 = extractelement <2 x double> %37, i64 1
  store double %39, double* %arrayidx71.i, align 8, !tbaa !84
  %40 = fmul contract <2 x double> %10, %36
  %arrayidx74.i = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 21
  %41 = bitcast double* %arrayidx74.i to <2 x double>*
  store <2 x double> %40, <2 x double>* %41, align 8, !tbaa !84
  %arrayidx80.i = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 23
  %42 = extractelement <2 x double> %40, i64 1
  store double %42, double* %arrayidx80.i, align 8, !tbaa !84
  %add.ptr = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 24
  %sub4.i.1 = fsub contract double 1.000000e+00, %1
  %add9.i.1 = fadd contract double %1, 1.000000e+00
  %43 = insertelement <2 x double> poison, double %sub4.i.1, i64 0
  %44 = shufflevector <2 x double> %43, <2 x double> poison, <2 x i32> zeroinitializer
  %45 = fmul contract <2 x double> %5, %44
  %46 = bitcast double* %add.ptr to <2 x double>*
  store <2 x double> %45, <2 x double>* %46, align 8, !tbaa !84
  %arrayidx17.i.1 = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 26
  store double %18, double* %arrayidx17.i.1, align 8, !tbaa !84
  %arrayidx20.i.1 = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 27
  %47 = fmul contract <2 x double> %7, %44
  %48 = bitcast double* %arrayidx20.i.1 to <2 x double>*
  store <2 x double> %47, <2 x double>* %48, align 8, !tbaa !84
  %arrayidx26.i.1 = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 29
  store double %21, double* %arrayidx26.i.1, align 8, !tbaa !84
  %arrayidx29.i.1 = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 30
  %49 = fmul contract <2 x double> %8, %44
  %50 = bitcast double* %arrayidx29.i.1 to <2 x double>*
  store <2 x double> %49, <2 x double>* %50, align 8, !tbaa !84
  %arrayidx35.i.1 = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 32
  store double %32, double* %arrayidx35.i.1, align 8, !tbaa !84
  %arrayidx38.i.1 = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 33
  %51 = fmul contract <2 x double> %10, %44
  %52 = bitcast double* %arrayidx38.i.1 to <2 x double>*
  store <2 x double> %51, <2 x double>* %52, align 8, !tbaa !84
  %arrayidx44.i.1 = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 35
  %53 = extractelement <2 x double> %14, i64 1
  store double %53, double* %arrayidx44.i.1, align 8, !tbaa !84
  %arrayidx47.i.1 = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 36
  %54 = insertelement <2 x double> poison, double %add9.i.1, i64 0
  %55 = shufflevector <2 x double> %54, <2 x double> poison, <2 x i32> zeroinitializer
  %56 = fmul contract <2 x double> %5, %55
  %57 = bitcast double* %arrayidx47.i.1 to <2 x double>*
  store <2 x double> %56, <2 x double>* %57, align 8, !tbaa !84
  %arrayidx53.i.1 = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 38
  %58 = extractelement <2 x double> %14, i64 0
  store double %58, double* %arrayidx53.i.1, align 8, !tbaa !84
  %arrayidx56.i.1 = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 39
  %59 = fmul contract <2 x double> %7, %55
  %60 = bitcast double* %arrayidx56.i.1 to <2 x double>*
  store <2 x double> %59, <2 x double>* %60, align 8, !tbaa !84
  %arrayidx62.i.1 = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 41
  store double %33, double* %arrayidx62.i.1, align 8, !tbaa !84
  %arrayidx65.i.1 = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 42
  %61 = fmul contract <2 x double> %8, %55
  %62 = bitcast double* %arrayidx65.i.1 to <2 x double>*
  store <2 x double> %61, <2 x double>* %62, align 8, !tbaa !84
  %arrayidx71.i.1 = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 44
  store double %39, double* %arrayidx71.i.1, align 8, !tbaa !84
  %arrayidx74.i.1 = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 45
  %63 = fmul contract <2 x double> %10, %55
  %64 = bitcast double* %arrayidx74.i.1 to <2 x double>*
  store <2 x double> %63, <2 x double>* %64, align 8, !tbaa !84
  %arrayidx80.i.1 = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 47
  store double %42, double* %arrayidx80.i.1, align 8, !tbaa !84
  %add.ptr.1 = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 48
  %65 = load <2 x double>, <2 x double>* %gpts, align 16, !tbaa !84
  %66 = fsub contract <2 x double> <double 1.000000e+00, double 1.000000e+00>, %65
  %67 = extractelement <2 x double> %66, i64 1
  %mul.i.1 = fmul contract double %67, -1.250000e-01
  %mul18.i.1 = fmul contract double %67, 1.250000e-01
  %68 = fadd contract <2 x double> %65, <double 1.000000e+00, double 1.000000e+00>
  %69 = extractelement <2 x double> %68, i64 1
  %mul27.i.1 = fmul contract double %69, 1.250000e-01
  %70 = fmul contract <2 x double> %7, %68
  %mul34.i.1 = extractelement <2 x double> %70, i64 1
  %mul36.i.1 = fmul contract double %69, -1.250000e-01
  %71 = extractelement <2 x double> %8, i64 1
  %72 = fmul contract <2 x double> %8, %66
  %mul61.i.1 = extractelement <2 x double> %72, i64 1
  %73 = extractelement <2 x double> %66, i64 0
  %mul10.i.125 = fmul contract double %mul.i.1, %73
  store double %mul10.i.125, double* %add.ptr.1, align 8, !tbaa !84
  %74 = shufflevector <2 x double> %5, <2 x double> undef, <2 x i32> <i32 1, i32 undef>
  %75 = shufflevector <2 x double> %5, <2 x double> poison, <2 x i32> <i32 1, i32 1>
  %76 = fmul contract <2 x double> %75, %66
  %arrayidx14.i.127 = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 49
  %77 = bitcast double* %arrayidx14.i.127 to <2 x double>*
  store <2 x double> %76, <2 x double>* %77, align 8, !tbaa !84
  %arrayidx20.i.130 = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 51
  %78 = insertelement <2 x double> %7, double %mul18.i.1, i64 0
  %79 = shufflevector <2 x double> %66, <2 x double> undef, <2 x i32> zeroinitializer
  %80 = fmul contract <2 x double> %78, %79
  %81 = bitcast double* %arrayidx20.i.130 to <2 x double>*
  store <2 x double> %80, <2 x double>* %81, align 8, !tbaa !84
  %arrayidx26.i.133 = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 53
  %82 = insertelement <2 x double> %7, double %mul27.i.1, i64 0
  %83 = fmul contract <2 x double> %82, %66
  %shuffle66 = shufflevector <2 x double> %83, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %84 = bitcast double* %arrayidx26.i.133 to <2 x double>*
  store <2 x double> %shuffle66, <2 x double>* %84, align 8, !tbaa !84
  %mul31.i.136 = fmul contract double %71, %73
  %arrayidx32.i.137 = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 55
  store double %mul31.i.136, double* %arrayidx32.i.137, align 8, !tbaa !84
  %arrayidx35.i.138 = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 56
  store double %mul34.i.1, double* %arrayidx35.i.138, align 8, !tbaa !84
  %arrayidx38.i.140 = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 57
  %85 = insertelement <2 x double> %10, double %mul36.i.1, i64 0
  %86 = fmul contract <2 x double> %85, %79
  %87 = bitcast double* %arrayidx38.i.140 to <2 x double>*
  store <2 x double> %86, <2 x double>* %87, align 8, !tbaa !84
  %arrayidx44.i.143 = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 59
  %88 = insertelement <2 x double> %5, double %mul.i.1, i64 0
  %89 = fmul contract <2 x double> %88, %68
  %shuffle67 = shufflevector <2 x double> %89, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %90 = bitcast double* %arrayidx44.i.143 to <2 x double>*
  store <2 x double> %shuffle67, <2 x double>* %90, align 8, !tbaa !84
  %91 = shufflevector <2 x double> %74, <2 x double> %10, <2 x i32> <i32 0, i32 3>
  %92 = shufflevector <2 x double> %68, <2 x double> %66, <2 x i32> <i32 0, i32 3>
  %93 = fmul contract <2 x double> %91, %92
  %arrayidx50.i.147 = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 61
  %94 = bitcast double* %arrayidx50.i.147 to <2 x double>*
  store <2 x double> %93, <2 x double>* %94, align 8, !tbaa !84
  %arrayidx56.i.150 = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 63
  %95 = shufflevector <2 x double> %68, <2 x double> poison, <2 x i32> zeroinitializer
  %96 = fmul contract <2 x double> %78, %95
  %97 = bitcast double* %arrayidx56.i.150 to <2 x double>*
  store <2 x double> %96, <2 x double>* %97, align 8, !tbaa !84
  %arrayidx62.i.153 = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 65
  store double %mul61.i.1, double* %arrayidx62.i.153, align 8, !tbaa !84
  %arrayidx65.i.155 = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 66
  %98 = insertelement <2 x double> %8, double %mul27.i.1, i64 0
  %99 = fmul contract <2 x double> %98, %95
  %100 = bitcast double* %arrayidx65.i.155 to <2 x double>*
  store <2 x double> %99, <2 x double>* %100, align 8, !tbaa !84
  %arrayidx71.i.158 = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 68
  %101 = insertelement <2 x double> %8, double %mul36.i.1, i64 0
  %102 = fmul contract <2 x double> %101, %68
  %shuffle68 = shufflevector <2 x double> %102, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %103 = bitcast double* %arrayidx71.i.158 to <2 x double>*
  store <2 x double> %shuffle68, <2 x double>* %103, align 8, !tbaa !84
  %104 = shufflevector <2 x double> %10, <2 x double> poison, <2 x i32> <i32 1, i32 1>
  %105 = fmul contract <2 x double> %104, %68
  %arrayidx77.i.162 = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 70
  %106 = bitcast double* %arrayidx77.i.162 to <2 x double>*
  store <2 x double> %105, <2 x double>* %106, align 8, !tbaa !84
  %add.ptr.164 = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 72
  %mul10.i.1.1 = fmul contract double %mul.i.1, %67
  store double %mul10.i.1.1, double* %add.ptr.164, align 8, !tbaa !84
  %arrayidx14.i.1.1 = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 73
  %107 = extractelement <2 x double> %76, i64 1
  store double %107, double* %arrayidx14.i.1.1, align 8, !tbaa !84
  %arrayidx17.i.1.1 = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 74
  store double %107, double* %arrayidx17.i.1.1, align 8, !tbaa !84
  %mul19.i.1.1 = fmul contract double %mul18.i.1, %67
  %arrayidx20.i.1.1 = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 75
  store double %mul19.i.1.1, double* %arrayidx20.i.1.1, align 8, !tbaa !84
  %arrayidx23.i.1.1 = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 76
  %108 = extractelement <2 x double> %83, i64 1
  store double %108, double* %arrayidx23.i.1.1, align 8, !tbaa !84
  %arrayidx26.i.1.1 = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 77
  store double %108, double* %arrayidx26.i.1.1, align 8, !tbaa !84
  %mul28.i.1.1 = fmul contract double %mul27.i.1, %67
  %arrayidx29.i.1.1 = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 78
  store double %mul28.i.1.1, double* %arrayidx29.i.1.1, align 8, !tbaa !84
  %arrayidx32.i.1.1 = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 79
  store double %mul61.i.1, double* %arrayidx32.i.1.1, align 8, !tbaa !84
  %arrayidx35.i.1.1 = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 80
  store double %mul34.i.1, double* %arrayidx35.i.1.1, align 8, !tbaa !84
  %mul37.i.1.1 = fmul contract double %mul36.i.1, %67
  %arrayidx38.i.1.1 = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 81
  store double %mul37.i.1.1, double* %arrayidx38.i.1.1, align 8, !tbaa !84
  %arrayidx41.i.1.1 = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 82
  %109 = extractelement <2 x double> %93, i64 1
  store double %109, double* %arrayidx41.i.1.1, align 8, !tbaa !84
  %arrayidx44.i.1.1 = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 83
  %110 = extractelement <2 x double> %89, i64 1
  store double %110, double* %arrayidx44.i.1.1, align 8, !tbaa !84
  %mul46.i.1.1 = fmul contract double %mul.i.1, %69
  %arrayidx47.i.1.1 = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 84
  store double %mul46.i.1.1, double* %arrayidx47.i.1.1, align 8, !tbaa !84
  %arrayidx50.i.1.1 = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 85
  store double %110, double* %arrayidx50.i.1.1, align 8, !tbaa !84
  %arrayidx53.i.1.1 = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 86
  store double %109, double* %arrayidx53.i.1.1, align 8, !tbaa !84
  %mul55.i.1.1 = fmul contract double %mul18.i.1, %69
  %arrayidx56.i.1.1 = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 87
  store double %mul55.i.1.1, double* %arrayidx56.i.1.1, align 8, !tbaa !84
  %arrayidx59.i.1.1 = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 88
  store double %mul34.i.1, double* %arrayidx59.i.1.1, align 8, !tbaa !84
  %arrayidx62.i.1.1 = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 89
  store double %mul61.i.1, double* %arrayidx62.i.1.1, align 8, !tbaa !84
  %mul64.i.1.1 = fmul contract double %mul27.i.1, %69
  %arrayidx65.i.1.1 = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 90
  store double %mul64.i.1.1, double* %arrayidx65.i.1.1, align 8, !tbaa !84
  %arrayidx68.i.1.1 = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 91
  %111 = extractelement <2 x double> %102, i64 1
  store double %111, double* %arrayidx68.i.1.1, align 8, !tbaa !84
  %arrayidx71.i.1.1 = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 92
  store double %111, double* %arrayidx71.i.1.1, align 8, !tbaa !84
  %mul73.i.1.1 = fmul contract double %mul36.i.1, %69
  %arrayidx74.i.1.1 = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 93
  store double %mul73.i.1.1, double* %arrayidx74.i.1.1, align 8, !tbaa !84
  %arrayidx77.i.1.1 = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 94
  %112 = extractelement <2 x double> %105, i64 1
  store double %112, double* %arrayidx77.i.1.1, align 8, !tbaa !84
  %arrayidx80.i.1.1 = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 95
  store double %112, double* %arrayidx80.i.1.1, align 8, !tbaa !84
  %inc20 = add nuw nsw i64 %ig.022, 1
  %exitcond.not = icmp eq i64 %inc20, 2
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body.for.body_crit_edge, !llvm.loop !209

for.body.for.body_crit_edge:                      ; preds = %for.body
  %add.ptr.1.1 = getelementptr inbounds double, double* %grad_vals_ptr.021, i64 96
  %arrayidx.phi.trans.insert = getelementptr inbounds <2 x double>, <2 x double>* %gpts, i64 0, i64 %inc20
  %.pre = load double, double* %arrayidx.phi.trans.insert, align 8, !tbaa !84
  %113 = load <2 x double>, <2 x double>* %gpts, align 16
  %114 = insertelement <2 x double> %113, double %.pre, i64 1
  %115 = extractelement <2 x double> %65, i64 1
  br label %for.body
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZN6miniFE25get_elem_nodes_and_coordsIidEEvRKNS_23simple_mesh_descriptionIT_EES2_PS2_PT0_(%"class.miniFE::simple_mesh_description"* noundef nonnull align 8 dereferenceable(192) %mesh, i32 noundef signext %elemID, i32* noundef %node_ords, double* noundef %node_coords) local_unnamed_addr #22 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %arrayidx = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %mesh, i64 0, i32 3, i32 0, i64 1
  %0 = load i32, i32* %arrayidx, align 4, !tbaa !16
  %add = add nsw i32 %0, 1
  %arrayidx3 = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %mesh, i64 0, i32 3, i32 0, i64 3
  %1 = load i32, i32* %arrayidx3, align 4, !tbaa !16
  %add4 = add nsw i32 %1, 1
  %arrayidx7 = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %mesh, i64 0, i32 3, i32 0, i64 5
  %2 = load i32, i32* %arrayidx7, align 4, !tbaa !16
  %cmp = icmp slt i32 %elemID, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %exception = tail call i8* @__cxa_allocate_exception(i64 16) #8
  %3 = bitcast i8* %exception to %"class.std::runtime_error"*
  invoke void @_ZNSt13runtime_errorC1EPKc(%"class.std::runtime_error"* noundef nonnull align 8 dereferenceable(16) %3, i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.78, i64 0, i64 0))
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %if.then
  tail call void @__cxa_throw(i8* %exception, i8* bitcast (i8** @_ZTISt13runtime_error to i8*), i8* bitcast (void (%"class.std::runtime_error"*)* @_ZNSt13runtime_errorD1Ev to i8*)) #29
  unreachable

lpad:                                             ; preds = %if.then
  %4 = landingpad { i8*, i32 }
          cleanup
  tail call void @__cxa_free_exception(i8* %exception) #8
  resume { i8*, i32 } %4

if.end:                                           ; preds = %entry
  %mul.i = mul nsw i32 %1, %0
  %mul.i.frozen = freeze i32 %mul.i
  %div.i = sdiv i32 %elemID, %mul.i.frozen
  %5 = mul i32 %div.i, %mul.i.frozen
  %rem.i.decomposed = sub i32 %elemID, %5
  %div2.i = sdiv i32 %rem.i.decomposed, %0
  %rem3.i = srem i32 %elemID, %0
  %6 = or i32 %div2.i, %div.i
  %7 = or i32 %6, %rem3.i
  %.not.i = icmp sgt i32 %7, -1
  br i1 %.not.i, label %if.end.i, label %_ZN6miniFE6get_idIiEET_iiiiii.exit

if.end.i:                                         ; preds = %if.end
  %cmp4.not.i = icmp sgt i32 %0, -1
  %cmp6.not.i = icmp sle i32 %div2.i, %1
  %or.cond.i = and i1 %cmp4.not.i, %cmp6.not.i
  %cmp8.not.i = icmp sle i32 %div.i, %2
  %or.cond14.i = and i1 %cmp8.not.i, %or.cond.i
  br i1 %or.cond14.i, label %if.end10.i, label %_ZN6miniFE6get_idIiEET_iiiiii.exit

if.end10.i:                                       ; preds = %if.end.i
  %mul11.i = mul i32 %div.i, %add4
  %reass.add.i = add i32 %div2.i, %mul11.i
  %reass.mul.i = mul i32 %reass.add.i, %add
  %add13.i = add i32 %reass.mul.i, %rem3.i
  br label %_ZN6miniFE6get_idIiEET_iiiiii.exit

_ZN6miniFE6get_idIiEET_iiiiii.exit:               ; preds = %if.end, %if.end.i, %if.end10.i
  %retval.0.i = phi i32 [ %add13.i, %if.end10.i ], [ -1, %if.end ], [ -1, %if.end.i ]
  store i32 %retval.0.i, i32* %node_ords, align 4, !tbaa !16
  %add.i = add nsw i32 %retval.0.i, 1
  %arrayidx1.i = getelementptr inbounds i32, i32* %node_ords, i64 1
  store i32 %add.i, i32* %arrayidx1.i, align 4, !tbaa !16
  %add2.i = add nsw i32 %retval.0.i, %add
  %add3.i = add nsw i32 %add2.i, 1
  %arrayidx4.i = getelementptr inbounds i32, i32* %node_ords, i64 2
  store i32 %add3.i, i32* %arrayidx4.i, align 4, !tbaa !16
  %arrayidx6.i = getelementptr inbounds i32, i32* %node_ords, i64 3
  store i32 %add2.i, i32* %arrayidx6.i, align 4, !tbaa !16
  %mul.i38 = mul nsw i32 %add4, %add
  %add7.i = add nsw i32 %retval.0.i, %mul.i38
  %arrayidx8.i = getelementptr inbounds i32, i32* %node_ords, i64 4
  store i32 %add7.i, i32* %arrayidx8.i, align 4, !tbaa !16
  %add11.i = add nsw i32 %add.i, %mul.i38
  %arrayidx12.i = getelementptr inbounds i32, i32* %node_ords, i64 5
  store i32 %add11.i, i32* %arrayidx12.i, align 4, !tbaa !16
  %add15.i = add nsw i32 %add2.i, %mul.i38
  %add16.i = add nsw i32 %add15.i, 1
  %arrayidx17.i = getelementptr inbounds i32, i32* %node_ords, i64 6
  store i32 %add16.i, i32* %arrayidx17.i, align 4, !tbaa !16
  %arrayidx21.i = getelementptr inbounds i32, i32* %node_ords, i64 7
  store i32 %add15.i, i32* %arrayidx21.i, align 4, !tbaa !16
  %map_ids_to_rows.i = getelementptr inbounds %"class.miniFE::simple_mesh_description", %"class.miniFE::simple_mesh_description"* %mesh, i64 0, i32 2
  %call.i = tail call noundef signext i32 @_ZN6miniFE15find_row_for_idIiEET_S1_RKSt3mapIS1_S1_St4lessIS1_ESaISt4pairIKS1_S1_EEE(i32 noundef signext %retval.0.i, %"class.std::map"* noundef nonnull align 8 dereferenceable(48) %map_ids_to_rows.i)
  store i32 %call.i, i32* %node_ords, align 4, !tbaa !16
  %8 = load i32, i32* %arrayidx1.i, align 4, !tbaa !16
  %call.i.1 = tail call noundef signext i32 @_ZN6miniFE15find_row_for_idIiEET_S1_RKSt3mapIS1_S1_St4lessIS1_ESaISt4pairIKS1_S1_EEE(i32 noundef signext %8, %"class.std::map"* noundef nonnull align 8 dereferenceable(48) %map_ids_to_rows.i)
  store i32 %call.i.1, i32* %arrayidx1.i, align 4, !tbaa !16
  %9 = load i32, i32* %arrayidx4.i, align 4, !tbaa !16
  %call.i.2 = tail call noundef signext i32 @_ZN6miniFE15find_row_for_idIiEET_S1_RKSt3mapIS1_S1_St4lessIS1_ESaISt4pairIKS1_S1_EEE(i32 noundef signext %9, %"class.std::map"* noundef nonnull align 8 dereferenceable(48) %map_ids_to_rows.i)
  store i32 %call.i.2, i32* %arrayidx4.i, align 4, !tbaa !16
  %10 = load i32, i32* %arrayidx6.i, align 4, !tbaa !16
  %call.i.3 = tail call noundef signext i32 @_ZN6miniFE15find_row_for_idIiEET_S1_RKSt3mapIS1_S1_St4lessIS1_ESaISt4pairIKS1_S1_EEE(i32 noundef signext %10, %"class.std::map"* noundef nonnull align 8 dereferenceable(48) %map_ids_to_rows.i)
  store i32 %call.i.3, i32* %arrayidx6.i, align 4, !tbaa !16
  %11 = load i32, i32* %arrayidx8.i, align 4, !tbaa !16
  %call.i.4 = tail call noundef signext i32 @_ZN6miniFE15find_row_for_idIiEET_S1_RKSt3mapIS1_S1_St4lessIS1_ESaISt4pairIKS1_S1_EEE(i32 noundef signext %11, %"class.std::map"* noundef nonnull align 8 dereferenceable(48) %map_ids_to_rows.i)
  store i32 %call.i.4, i32* %arrayidx8.i, align 4, !tbaa !16
  %12 = load i32, i32* %arrayidx12.i, align 4, !tbaa !16
  %call.i.5 = tail call noundef signext i32 @_ZN6miniFE15find_row_for_idIiEET_S1_RKSt3mapIS1_S1_St4lessIS1_ESaISt4pairIKS1_S1_EEE(i32 noundef signext %12, %"class.std::map"* noundef nonnull align 8 dereferenceable(48) %map_ids_to_rows.i)
  store i32 %call.i.5, i32* %arrayidx12.i, align 4, !tbaa !16
  %13 = load i32, i32* %arrayidx17.i, align 4, !tbaa !16
  %call.i.6 = tail call noundef signext i32 @_ZN6miniFE15find_row_for_idIiEET_S1_RKSt3mapIS1_S1_St4lessIS1_ESaISt4pairIKS1_S1_EEE(i32 noundef signext %13, %"class.std::map"* noundef nonnull align 8 dereferenceable(48) %map_ids_to_rows.i)
  store i32 %call.i.6, i32* %arrayidx17.i, align 4, !tbaa !16
  %14 = load i32, i32* %arrayidx21.i, align 4, !tbaa !16
  %call.i.7 = tail call noundef signext i32 @_ZN6miniFE15find_row_for_idIiEET_S1_RKSt3mapIS1_S1_St4lessIS1_ESaISt4pairIKS1_S1_EEE(i32 noundef signext %14, %"class.std::map"* noundef nonnull align 8 dereferenceable(48) %map_ids_to_rows.i)
  store i32 %call.i.7, i32* %arrayidx21.i, align 4, !tbaa !16
  %15 = load i32, i32* %arrayidx, align 4, !tbaa !16
  %16 = load i32, i32* %arrayidx3, align 4, !tbaa !16
  %17 = load i32, i32* %arrayidx7, align 4, !tbaa !16
  %18 = icmp sgt i32 %0, 1
  %cond.i = select i1 %18, i32 %0, i32 1
  %19 = icmp sgt i32 %1, 1
  %cond6.i = select i1 %19, i32 %1, i32 1
  %20 = icmp sgt i32 %2, 1
  %cond12.i = select i1 %20, i32 %2, i32 1
  %mul.i38.frozen = freeze i32 %mul.i38
  %div.i43 = sdiv i32 %retval.0.i, %mul.i38.frozen
  %conv.i = sitofp i32 %div.i43 to double
  %conv14.i = sitofp i32 %cond12.i to double
  %div15.i = fdiv contract double %conv.i, %conv14.i
  %21 = mul i32 %div.i43, %mul.i38.frozen
  %rem.i44.decomposed = sub i32 %retval.0.i, %21
  %div17.i = sdiv i32 %rem.i44.decomposed, %add
  %conv18.i = sitofp i32 %div17.i to double
  %conv20.i = sitofp i32 %cond6.i to double
  %div21.i = fdiv contract double %conv18.i, %conv20.i
  %rem22.i = srem i32 %retval.0.i, %add
  %conv23.i = sitofp i32 %rem22.i to double
  %conv25.i = sitofp i32 %cond.i to double
  %div26.i = fdiv contract double %conv23.i, %conv25.i
  %conv = sitofp i32 %15 to double
  %div = fdiv contract double 1.000000e+00, %conv
  %conv26 = sitofp i32 %16 to double
  %div27 = fdiv contract double 1.000000e+00, %conv26
  %conv28 = sitofp i32 %17 to double
  %div29 = fdiv contract double 1.000000e+00, %conv28
  store double %div26.i, double* %node_coords, align 8, !tbaa !84
  %arrayidx1.i45 = getelementptr inbounds double, double* %node_coords, i64 1
  store double %div21.i, double* %arrayidx1.i45, align 8, !tbaa !84
  %arrayidx2.i = getelementptr inbounds double, double* %node_coords, i64 2
  store double %div15.i, double* %arrayidx2.i, align 8, !tbaa !84
  %add.i46 = fadd contract double %div, %div26.i
  %arrayidx3.i = getelementptr inbounds double, double* %node_coords, i64 3
  store double %add.i46, double* %arrayidx3.i, align 8, !tbaa !84
  %arrayidx4.i47 = getelementptr inbounds double, double* %node_coords, i64 4
  store double %div21.i, double* %arrayidx4.i47, align 8, !tbaa !84
  %arrayidx5.i = getelementptr inbounds double, double* %node_coords, i64 5
  store double %div15.i, double* %arrayidx5.i, align 8, !tbaa !84
  %arrayidx7.i = getelementptr inbounds double, double* %node_coords, i64 6
  store double %add.i46, double* %arrayidx7.i, align 8, !tbaa !84
  %add8.i = fadd contract double %div27, %div21.i
  %arrayidx9.i = getelementptr inbounds double, double* %node_coords, i64 7
  store double %add8.i, double* %arrayidx9.i, align 8, !tbaa !84
  %arrayidx10.i = getelementptr inbounds double, double* %node_coords, i64 8
  store double %div15.i, double* %arrayidx10.i, align 8, !tbaa !84
  %arrayidx11.i = getelementptr inbounds double, double* %node_coords, i64 9
  store double %div26.i, double* %arrayidx11.i, align 8, !tbaa !84
  %arrayidx13.i = getelementptr inbounds double, double* %node_coords, i64 10
  store double %add8.i, double* %arrayidx13.i, align 8, !tbaa !84
  %arrayidx14.i = getelementptr inbounds double, double* %node_coords, i64 11
  store double %div15.i, double* %arrayidx14.i, align 8, !tbaa !84
  %arrayidx15.i = getelementptr inbounds double, double* %node_coords, i64 12
  store double %div26.i, double* %arrayidx15.i, align 8, !tbaa !84
  %arrayidx16.i = getelementptr inbounds double, double* %node_coords, i64 13
  store double %div21.i, double* %arrayidx16.i, align 8, !tbaa !84
  %add17.i = fadd contract double %div29, %div15.i
  %arrayidx18.i = getelementptr inbounds double, double* %node_coords, i64 14
  store double %add17.i, double* %arrayidx18.i, align 8, !tbaa !84
  %arrayidx20.i = getelementptr inbounds double, double* %node_coords, i64 15
  store double %add.i46, double* %arrayidx20.i, align 8, !tbaa !84
  %arrayidx21.i48 = getelementptr inbounds double, double* %node_coords, i64 16
  store double %div21.i, double* %arrayidx21.i48, align 8, !tbaa !84
  %arrayidx23.i = getelementptr inbounds double, double* %node_coords, i64 17
  store double %add17.i, double* %arrayidx23.i, align 8, !tbaa !84
  %arrayidx25.i = getelementptr inbounds double, double* %node_coords, i64 18
  store double %add.i46, double* %arrayidx25.i, align 8, !tbaa !84
  %arrayidx27.i = getelementptr inbounds double, double* %node_coords, i64 19
  store double %add8.i, double* %arrayidx27.i, align 8, !tbaa !84
  %arrayidx29.i = getelementptr inbounds double, double* %node_coords, i64 20
  store double %add17.i, double* %arrayidx29.i, align 8, !tbaa !84
  %arrayidx30.i = getelementptr inbounds double, double* %node_coords, i64 21
  store double %div26.i, double* %arrayidx30.i, align 8, !tbaa !84
  %arrayidx32.i = getelementptr inbounds double, double* %node_coords, i64 22
  store double %add8.i, double* %arrayidx32.i, align 8, !tbaa !84
  %arrayidx34.i = getelementptr inbounds double, double* %node_coords, i64 23
  store double %add17.i, double* %arrayidx34.i, align 8, !tbaa !84
  ret void
}

declare void @_ZNSt13runtime_errorC1EPKc(%"class.std::runtime_error"* noundef nonnull align 8 dereferenceable(16), i8* noundef) unnamed_addr #0

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZN6miniFE4Hex820diffusionMatrix_symmIdEEvPKT_S4_PS2_(double* noundef %elemNodeCoords, double* noundef %grad_vals, double* noundef %elem_mat) local_unnamed_addr #22 comdat {
entry:
  %elem_mat83 = bitcast double* %elem_mat to i8*
  %gwts = alloca <2 x double>, align 16
  %detJ = alloca double, align 8
  %dpsidx = alloca [8 x double], align 16
  %dpsidy = alloca [8 x double], align 16
  %dpsidz = alloca [8 x double], align 16
  %invJ = alloca [9 x double], align 16
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(288) %elem_mat83, i8 0, i64 288, i1 false)
  %0 = bitcast <2 x double>* %gwts to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8
  store <2 x double> <double 1.000000e+00, double 1.000000e+00>, <2 x double>* %gwts, align 16, !tbaa !84
  %1 = bitcast double* %detJ to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8
  store double 0.000000e+00, double* %detJ, align 8, !tbaa !84
  %2 = bitcast [8 x double]* %dpsidx to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %2) #8
  %3 = bitcast [8 x double]* %dpsidy to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %3) #8
  %4 = bitcast [8 x double]* %dpsidz to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %4) #8
  %5 = bitcast [9 x double]* %invJ to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %5) #8
  %arraydecay14 = getelementptr inbounds [9 x double], [9 x double]* %invJ, i64 0, i64 0
  %arrayidx29 = getelementptr inbounds [9 x double], [9 x double]* %invJ, i64 0, i64 2
  %arrayidx33 = getelementptr inbounds [9 x double], [9 x double]* %invJ, i64 0, i64 3
  %arrayidx38 = getelementptr inbounds [9 x double], [9 x double]* %invJ, i64 0, i64 5
  %arrayidx43 = getelementptr inbounds [9 x double], [9 x double]* %invJ, i64 0, i64 6
  %arrayidx48 = getelementptr inbounds [9 x double], [9 x double]* %invJ, i64 0, i64 8
  %arrayidx32.2 = getelementptr inbounds [8 x double], [8 x double]* %dpsidx, i64 0, i64 2
  %arrayidx42.2 = getelementptr inbounds [8 x double], [8 x double]* %dpsidy, i64 0, i64 2
  %arrayidx52.2 = getelementptr inbounds [8 x double], [8 x double]* %dpsidz, i64 0, i64 2
  %arrayidx32.4 = getelementptr inbounds [8 x double], [8 x double]* %dpsidx, i64 0, i64 4
  %arrayidx42.4 = getelementptr inbounds [8 x double], [8 x double]* %dpsidy, i64 0, i64 4
  %arrayidx52.4 = getelementptr inbounds [8 x double], [8 x double]* %dpsidz, i64 0, i64 4
  %arrayidx32.6 = getelementptr inbounds [8 x double], [8 x double]* %dpsidx, i64 0, i64 6
  %arrayidx42.6 = getelementptr inbounds [8 x double], [8 x double]* %dpsidy, i64 0, i64 6
  %arrayidx52.6 = getelementptr inbounds [8 x double], [8 x double]* %dpsidz, i64 0, i64 6
  %6 = bitcast [9 x double]* %invJ to <2 x double>*
  %7 = bitcast double* %arrayidx33 to <2 x double>*
  %8 = bitcast double* %arrayidx43 to <2 x double>*
  %9 = bitcast [8 x double]* %dpsidx to <2 x double>*
  %10 = bitcast [8 x double]* %dpsidy to <2 x double>*
  %11 = bitcast [8 x double]* %dpsidz to <2 x double>*
  %12 = bitcast double* %arrayidx32.2 to <2 x double>*
  %13 = bitcast double* %arrayidx42.2 to <2 x double>*
  %14 = bitcast double* %arrayidx52.2 to <2 x double>*
  %15 = bitcast double* %arrayidx32.4 to <2 x double>*
  %16 = bitcast double* %arrayidx42.4 to <2 x double>*
  %17 = bitcast double* %arrayidx52.4 to <2 x double>*
  %18 = bitcast double* %arrayidx32.6 to <2 x double>*
  %19 = bitcast double* %arrayidx42.6 to <2 x double>*
  %20 = bitcast double* %arrayidx52.6 to <2 x double>*
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.cond.cleanup4
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8
  ret void

for.body:                                         ; preds = %for.cond.cleanup4.for.body_crit_edge, %entry
  %21 = phi double [ 1.000000e+00, %entry ], [ %.pre, %for.cond.cleanup4.for.body_crit_edge ]
  %gv_offset.081 = phi i64 [ 0, %entry ], [ %add, %for.cond.cleanup4.for.body_crit_edge ]
  %ig.080 = phi i64 [ 0, %entry ], [ %inc108, %for.cond.cleanup4.for.body_crit_edge ]
  br label %for.body5

for.cond.cleanup4:                                ; preds = %for.cond.cleanup9
  %inc108 = add nuw nsw i64 %ig.080, 1
  %exitcond98.not = icmp eq i64 %inc108, 2
  br i1 %exitcond98.not, label %for.cond.cleanup, label %for.cond.cleanup4.for.body_crit_edge, !llvm.loop !210

for.cond.cleanup4.for.body_crit_edge:             ; preds = %for.cond.cleanup4
  %arrayidx.phi.trans.insert = getelementptr inbounds <2 x double>, <2 x double>* %gwts, i64 0, i64 %inc108
  %.pre = load double, double* %arrayidx.phi.trans.insert, align 8, !tbaa !84
  br label %for.body

for.body5:                                        ; preds = %for.body, %for.cond.cleanup9
  %gv_offset.179 = phi i64 [ %gv_offset.081, %for.body ], [ %add, %for.cond.cleanup9 ]
  %jg.078 = phi i64 [ 0, %for.body ], [ %inc105, %for.cond.cleanup9 ]
  %arrayidx6 = getelementptr inbounds <2 x double>, <2 x double>* %gwts, i64 0, i64 %jg.078
  %22 = load double, double* %arrayidx6, align 8, !tbaa !84
  %mul = fmul contract double %21, %22
  br label %for.body10

for.cond.cleanup9:                                ; preds = %for.cond.cleanup56
  %inc105 = add nuw nsw i64 %jg.078, 1
  %exitcond97.not = icmp eq i64 %inc105, 2
  br i1 %exitcond97.not, label %for.cond.cleanup4, label %for.body5, !llvm.loop !211

for.body10:                                       ; preds = %for.body5, %for.cond.cleanup56
  %gv_offset.277 = phi i64 [ %gv_offset.179, %for.body5 ], [ %add, %for.cond.cleanup56 ]
  %kg.076 = phi i64 [ 0, %for.body5 ], [ %inc102, %for.cond.cleanup56 ]
  %arrayidx11 = getelementptr inbounds <2 x double>, <2 x double>* %gwts, i64 0, i64 %kg.076
  %23 = load double, double* %arrayidx11, align 8, !tbaa !84
  %arrayidx13 = getelementptr inbounds double, double* %grad_vals, i64 %gv_offset.277
  call void @_ZN6miniFE4Hex827gradients_and_invJ_and_detJIdEEvPKT_S4_PS2_RS2_(double* noundef %elemNodeCoords, double* noundef %arrayidx13, double* noundef nonnull %arraydecay14, double* noundef nonnull align 8 dereferenceable(8) %detJ)
  %24 = load double, double* %detJ, align 8, !tbaa !84
  %25 = load <2 x double>, <2 x double>* %6, align 16, !tbaa !84
  %26 = load double, double* %arrayidx29, align 16, !tbaa !84
  %27 = load <2 x double>, <2 x double>* %7, align 8, !tbaa !84
  %28 = load double, double* %arrayidx38, align 8, !tbaa !84
  %29 = load <2 x double>, <2 x double>* %8, align 16, !tbaa !84
  %30 = load double, double* %arrayidx48, align 16, !tbaa !84
  %31 = load double, double* %arrayidx13, align 8, !tbaa !84
  %arrayidx22 = getelementptr inbounds double, double* %arrayidx13, i64 1
  %32 = load double, double* %arrayidx22, align 8, !tbaa !84
  %arrayidx23 = getelementptr inbounds double, double* %arrayidx13, i64 2
  %33 = load double, double* %arrayidx23, align 8, !tbaa !84
  %add.ptr53 = getelementptr inbounds double, double* %arrayidx13, i64 3
  %34 = load double, double* %add.ptr53, align 8, !tbaa !84
  %arrayidx22.1 = getelementptr inbounds double, double* %add.ptr53, i64 1
  %35 = load double, double* %arrayidx22.1, align 8, !tbaa !84
  %arrayidx23.1 = getelementptr inbounds double, double* %add.ptr53, i64 2
  %36 = load double, double* %arrayidx23.1, align 8, !tbaa !84
  %37 = insertelement <2 x double> poison, double %34, i64 0
  %38 = insertelement <2 x double> %37, double %32, i64 1
  %39 = fmul contract <2 x double> %38, %25
  %shuffle = shufflevector <2 x double> %39, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %40 = insertelement <2 x double> poison, double %31, i64 0
  %41 = insertelement <2 x double> %40, double %35, i64 1
  %42 = fmul contract <2 x double> %41, %25
  %43 = fadd contract <2 x double> %shuffle, %42
  %44 = insertelement <2 x double> poison, double %33, i64 0
  %45 = insertelement <2 x double> %44, double %36, i64 1
  %46 = insertelement <2 x double> poison, double %26, i64 0
  %47 = shufflevector <2 x double> %46, <2 x double> poison, <2 x i32> zeroinitializer
  %48 = fmul contract <2 x double> %45, %47
  %49 = fadd contract <2 x double> %43, %48
  store <2 x double> %49, <2 x double>* %9, align 16, !tbaa !84
  %50 = fmul contract <2 x double> %38, %27
  %shuffle111 = shufflevector <2 x double> %50, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %51 = fmul contract <2 x double> %41, %27
  %52 = fadd contract <2 x double> %shuffle111, %51
  %53 = insertelement <2 x double> poison, double %28, i64 0
  %54 = shufflevector <2 x double> %53, <2 x double> poison, <2 x i32> zeroinitializer
  %55 = fmul contract <2 x double> %45, %54
  %56 = fadd contract <2 x double> %52, %55
  store <2 x double> %56, <2 x double>* %10, align 16, !tbaa !84
  %57 = fmul contract <2 x double> %38, %29
  %shuffle112 = shufflevector <2 x double> %57, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %58 = fmul contract <2 x double> %41, %29
  %59 = fadd contract <2 x double> %shuffle112, %58
  %60 = insertelement <2 x double> poison, double %30, i64 0
  %61 = shufflevector <2 x double> %60, <2 x double> poison, <2 x i32> zeroinitializer
  %62 = fmul contract <2 x double> %45, %61
  %63 = fadd contract <2 x double> %59, %62
  store <2 x double> %63, <2 x double>* %11, align 16, !tbaa !84
  %add.ptr53.1 = getelementptr inbounds double, double* %add.ptr53, i64 3
  %64 = load double, double* %add.ptr53.1, align 8, !tbaa !84
  %arrayidx22.2 = getelementptr inbounds double, double* %add.ptr53.1, i64 1
  %65 = load double, double* %arrayidx22.2, align 8, !tbaa !84
  %arrayidx23.2 = getelementptr inbounds double, double* %add.ptr53.1, i64 2
  %66 = load double, double* %arrayidx23.2, align 8, !tbaa !84
  %add.ptr53.2 = getelementptr inbounds double, double* %add.ptr53.1, i64 3
  %67 = load double, double* %add.ptr53.2, align 8, !tbaa !84
  %arrayidx22.3 = getelementptr inbounds double, double* %add.ptr53.2, i64 1
  %68 = load double, double* %arrayidx22.3, align 8, !tbaa !84
  %arrayidx23.3 = getelementptr inbounds double, double* %add.ptr53.2, i64 2
  %69 = load double, double* %arrayidx23.3, align 8, !tbaa !84
  %70 = insertelement <2 x double> poison, double %64, i64 0
  %71 = insertelement <2 x double> %70, double %67, i64 1
  %72 = shufflevector <2 x double> %25, <2 x double> undef, <2 x i32> zeroinitializer
  %73 = fmul contract <2 x double> %71, %72
  %74 = insertelement <2 x double> poison, double %65, i64 0
  %75 = insertelement <2 x double> %74, double %68, i64 1
  %76 = shufflevector <2 x double> %25, <2 x double> undef, <2 x i32> <i32 1, i32 1>
  %77 = fmul contract <2 x double> %75, %76
  %78 = fadd contract <2 x double> %73, %77
  %79 = insertelement <2 x double> poison, double %66, i64 0
  %80 = insertelement <2 x double> %79, double %69, i64 1
  %81 = fmul contract <2 x double> %80, %47
  %82 = fadd contract <2 x double> %78, %81
  store <2 x double> %82, <2 x double>* %12, align 16, !tbaa !84
  %83 = shufflevector <2 x double> %27, <2 x double> undef, <2 x i32> zeroinitializer
  %84 = fmul contract <2 x double> %71, %83
  %85 = shufflevector <2 x double> %27, <2 x double> undef, <2 x i32> <i32 1, i32 1>
  %86 = fmul contract <2 x double> %75, %85
  %87 = fadd contract <2 x double> %84, %86
  %88 = fmul contract <2 x double> %80, %54
  %89 = fadd contract <2 x double> %87, %88
  store <2 x double> %89, <2 x double>* %13, align 16, !tbaa !84
  %90 = shufflevector <2 x double> %29, <2 x double> undef, <2 x i32> zeroinitializer
  %91 = fmul contract <2 x double> %71, %90
  %92 = shufflevector <2 x double> %29, <2 x double> undef, <2 x i32> <i32 1, i32 1>
  %93 = fmul contract <2 x double> %75, %92
  %94 = fadd contract <2 x double> %91, %93
  %95 = fmul contract <2 x double> %80, %61
  %96 = fadd contract <2 x double> %94, %95
  store <2 x double> %96, <2 x double>* %14, align 16, !tbaa !84
  %add.ptr53.3 = getelementptr inbounds double, double* %add.ptr53.2, i64 3
  %97 = load double, double* %add.ptr53.3, align 8, !tbaa !84
  %arrayidx22.4 = getelementptr inbounds double, double* %add.ptr53.3, i64 1
  %98 = load double, double* %arrayidx22.4, align 8, !tbaa !84
  %arrayidx23.4 = getelementptr inbounds double, double* %add.ptr53.3, i64 2
  %99 = load double, double* %arrayidx23.4, align 8, !tbaa !84
  %add.ptr53.4 = getelementptr inbounds double, double* %add.ptr53.3, i64 3
  %100 = load double, double* %add.ptr53.4, align 8, !tbaa !84
  %arrayidx22.5 = getelementptr inbounds double, double* %add.ptr53.4, i64 1
  %101 = load double, double* %arrayidx22.5, align 8, !tbaa !84
  %arrayidx23.5 = getelementptr inbounds double, double* %add.ptr53.4, i64 2
  %102 = load double, double* %arrayidx23.5, align 8, !tbaa !84
  %103 = insertelement <2 x double> poison, double %97, i64 0
  %104 = insertelement <2 x double> %103, double %100, i64 1
  %105 = fmul contract <2 x double> %104, %72
  %106 = insertelement <2 x double> poison, double %98, i64 0
  %107 = insertelement <2 x double> %106, double %101, i64 1
  %108 = fmul contract <2 x double> %107, %76
  %109 = fadd contract <2 x double> %105, %108
  %110 = insertelement <2 x double> poison, double %99, i64 0
  %111 = insertelement <2 x double> %110, double %102, i64 1
  %112 = fmul contract <2 x double> %111, %47
  %113 = fadd contract <2 x double> %109, %112
  store <2 x double> %113, <2 x double>* %15, align 16, !tbaa !84
  %114 = fmul contract <2 x double> %104, %83
  %115 = fmul contract <2 x double> %107, %85
  %116 = fadd contract <2 x double> %114, %115
  %117 = fmul contract <2 x double> %111, %54
  %118 = fadd contract <2 x double> %116, %117
  store <2 x double> %118, <2 x double>* %16, align 16, !tbaa !84
  %119 = fmul contract <2 x double> %104, %90
  %120 = fmul contract <2 x double> %107, %92
  %121 = fadd contract <2 x double> %119, %120
  %122 = fmul contract <2 x double> %111, %61
  %123 = fadd contract <2 x double> %121, %122
  store <2 x double> %123, <2 x double>* %17, align 16, !tbaa !84
  %add.ptr53.5 = getelementptr inbounds double, double* %add.ptr53.4, i64 3
  %124 = load double, double* %add.ptr53.5, align 8, !tbaa !84
  %arrayidx22.6 = getelementptr inbounds double, double* %add.ptr53.5, i64 1
  %125 = load double, double* %arrayidx22.6, align 8, !tbaa !84
  %arrayidx23.6 = getelementptr inbounds double, double* %add.ptr53.5, i64 2
  %126 = load double, double* %arrayidx23.6, align 8, !tbaa !84
  %add.ptr53.6 = getelementptr inbounds double, double* %add.ptr53.5, i64 3
  %127 = load double, double* %add.ptr53.6, align 8, !tbaa !84
  %arrayidx22.7 = getelementptr inbounds double, double* %add.ptr53.6, i64 1
  %128 = load double, double* %arrayidx22.7, align 8, !tbaa !84
  %arrayidx23.7 = getelementptr inbounds double, double* %add.ptr53.6, i64 2
  %129 = load double, double* %arrayidx23.7, align 8, !tbaa !84
  %130 = insertelement <2 x double> poison, double %124, i64 0
  %131 = insertelement <2 x double> %130, double %127, i64 1
  %132 = fmul contract <2 x double> %131, %72
  %133 = insertelement <2 x double> poison, double %125, i64 0
  %134 = insertelement <2 x double> %133, double %128, i64 1
  %135 = fmul contract <2 x double> %134, %76
  %136 = fadd contract <2 x double> %132, %135
  %137 = insertelement <2 x double> poison, double %126, i64 0
  %138 = insertelement <2 x double> %137, double %129, i64 1
  %139 = fmul contract <2 x double> %138, %47
  %140 = fadd contract <2 x double> %136, %139
  store <2 x double> %140, <2 x double>* %18, align 16, !tbaa !84
  %141 = fmul contract <2 x double> %131, %83
  %142 = fmul contract <2 x double> %134, %85
  %143 = fadd contract <2 x double> %141, %142
  %144 = fmul contract <2 x double> %138, %54
  %145 = fadd contract <2 x double> %143, %144
  store <2 x double> %145, <2 x double>* %19, align 16, !tbaa !84
  %146 = fmul contract <2 x double> %131, %90
  %147 = fmul contract <2 x double> %134, %92
  %148 = fadd contract <2 x double> %146, %147
  %149 = fmul contract <2 x double> %138, %61
  %150 = fadd contract <2 x double> %148, %149
  store <2 x double> %150, <2 x double>* %20, align 16, !tbaa !84
  %mul12 = fmul contract double %mul, %23
  %mul16 = fmul contract double %mul12, %24
  %broadcast.splatinsert108 = insertelement <2 x double> poison, double %mul16, i64 0
  %broadcast.splat109 = shufflevector <2 x double> %broadcast.splatinsert108, <2 x double> poison, <2 x i32> zeroinitializer
  br label %for.body57

for.cond54.loopexit.loopexit:                     ; preds = %for.body78, %middle.block
  %indvars.iv.next.lcssa = phi i64 [ %ind.end100, %middle.block ], [ %indvars.iv.next, %for.body78 ]
  %151 = trunc i64 %indvars.iv.next.lcssa to i32
  br label %for.cond54.loopexit

for.cond54.loopexit:                              ; preds = %for.cond54.loopexit.loopexit, %for.body57
  %offset.1.lcssa = phi i32 [ %offset.170, %for.body57 ], [ %151, %for.cond54.loopexit.loopexit ]
  %indvars.iv.next86 = add nuw nsw i64 %indvars.iv85, 1
  %exitcond95.not = icmp eq i64 %indvars.iv.next93, 8
  br i1 %exitcond95.not, label %for.cond.cleanup56, label %for.body57, !llvm.loop !212

for.cond.cleanup56:                               ; preds = %for.cond54.loopexit
  %add = add i64 %gv_offset.277, 24
  %inc102 = add nuw nsw i64 %kg.076, 1
  %exitcond96.not = icmp eq i64 %inc102, 2
  br i1 %exitcond96.not, label %for.cond.cleanup9, label %for.body10, !llvm.loop !213

for.body57:                                       ; preds = %for.body10, %for.cond54.loopexit
  %indvars.iv92 = phi i64 [ 0, %for.body10 ], [ %indvars.iv.next93, %for.cond54.loopexit ]
  %indvars.iv85 = phi i64 [ 1, %for.body10 ], [ %indvars.iv.next86, %for.cond54.loopexit ]
  %offset.074 = phi i32 [ 0, %for.body10 ], [ %offset.1.lcssa, %for.cond54.loopexit ]
  %152 = sub nsw i64 5, %indvars.iv92
  %153 = lshr i64 %152, 1
  %154 = add nuw i64 %153, 1
  %155 = sub nsw i64 7, %indvars.iv92
  %arrayidx59 = getelementptr inbounds [8 x double], [8 x double]* %dpsidx, i64 0, i64 %indvars.iv92
  %156 = load double, double* %arrayidx59, align 8, !tbaa !84
  %arrayidx61 = getelementptr inbounds [8 x double], [8 x double]* %dpsidy, i64 0, i64 %indvars.iv92
  %157 = load double, double* %arrayidx61, align 8, !tbaa !84
  %arrayidx63 = getelementptr inbounds [8 x double], [8 x double]* %dpsidz, i64 0, i64 %indvars.iv92
  %158 = load double, double* %arrayidx63, align 8, !tbaa !84
  %mul64 = fmul contract double %156, %156
  %mul65 = fmul contract double %157, %157
  %add66 = fadd contract double %mul64, %mul65
  %mul67 = fmul contract double %158, %158
  %add68 = fadd contract double %add66, %mul67
  %mul69 = fmul contract double %mul16, %add68
  %idxprom71 = sext i32 %offset.074 to i64
  %arrayidx72 = getelementptr inbounds double, double* %elem_mat, i64 %idxprom71
  %159 = load double, double* %arrayidx72, align 8, !tbaa !84
  %add73 = fadd contract double %159, %mul69
  store double %add73, double* %arrayidx72, align 8, !tbaa !84
  %indvars.iv.next93 = add nuw nsw i64 %indvars.iv92, 1
  %offset.170 = add i32 %offset.074, 1
  %cmp7671 = icmp ult i64 %indvars.iv92, 7
  br i1 %cmp7671, label %for.body78.preheader, label %for.cond54.loopexit

for.body78.preheader:                             ; preds = %for.body57
  %160 = sext i32 %offset.170 to i64
  %min.iters.check = icmp ult i64 %155, 2
  br i1 %min.iters.check, label %for.body78.preheader113, label %vector.ph

vector.ph:                                        ; preds = %for.body78.preheader
  %n.vec = and i64 %155, -2
  %ind.end = add i64 %indvars.iv85, %n.vec
  %ind.end100 = add i64 %n.vec, %160
  %broadcast.splatinsert = insertelement <2 x double> poison, double %156, i64 0
  %broadcast.splat = shufflevector <2 x double> %broadcast.splatinsert, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert103 = insertelement <2 x double> poison, double %157, i64 0
  %broadcast.splat104 = shufflevector <2 x double> %broadcast.splatinsert103, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert106 = insertelement <2 x double> poison, double %158, i64 0
  %broadcast.splat107 = shufflevector <2 x double> %broadcast.splatinsert106, <2 x double> poison, <2 x i32> zeroinitializer
  %xtraiter = and i64 %154, 1
  %161 = icmp ult i64 %152, 2
  br i1 %161, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter = and i64 %154, -2
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.1, %vector.body ]
  %niter = phi i64 [ 0, %vector.ph.new ], [ %niter.next.1, %vector.body ]
  %offset.idx = add i64 %indvars.iv85, %index
  %offset.idx101 = add i64 %index, %160
  %162 = getelementptr inbounds [8 x double], [8 x double]* %dpsidx, i64 0, i64 %offset.idx
  %163 = bitcast double* %162 to <2 x double>*
  %wide.load = load <2 x double>, <2 x double>* %163, align 8, !tbaa !84
  %164 = fmul contract <2 x double> %broadcast.splat, %wide.load
  %165 = getelementptr inbounds [8 x double], [8 x double]* %dpsidy, i64 0, i64 %offset.idx
  %166 = bitcast double* %165 to <2 x double>*
  %wide.load102 = load <2 x double>, <2 x double>* %166, align 8, !tbaa !84
  %167 = fmul contract <2 x double> %broadcast.splat104, %wide.load102
  %168 = fadd contract <2 x double> %164, %167
  %169 = getelementptr inbounds [8 x double], [8 x double]* %dpsidz, i64 0, i64 %offset.idx
  %170 = bitcast double* %169 to <2 x double>*
  %wide.load105 = load <2 x double>, <2 x double>* %170, align 8, !tbaa !84
  %171 = fmul contract <2 x double> %broadcast.splat107, %wide.load105
  %172 = fadd contract <2 x double> %168, %171
  %173 = fmul contract <2 x double> %broadcast.splat109, %172
  %174 = getelementptr inbounds double, double* %elem_mat, i64 %offset.idx101
  %175 = bitcast double* %174 to <2 x double>*
  %wide.load110 = load <2 x double>, <2 x double>* %175, align 8, !tbaa !84
  %176 = fadd contract <2 x double> %wide.load110, %173
  %177 = bitcast double* %174 to <2 x double>*
  store <2 x double> %176, <2 x double>* %177, align 8, !tbaa !84
  %index.next = or i64 %index, 2
  %offset.idx.1 = add i64 %indvars.iv85, %index.next
  %offset.idx101.1 = add i64 %index.next, %160
  %178 = getelementptr inbounds [8 x double], [8 x double]* %dpsidx, i64 0, i64 %offset.idx.1
  %179 = bitcast double* %178 to <2 x double>*
  %wide.load.1 = load <2 x double>, <2 x double>* %179, align 8, !tbaa !84
  %180 = fmul contract <2 x double> %broadcast.splat, %wide.load.1
  %181 = getelementptr inbounds [8 x double], [8 x double]* %dpsidy, i64 0, i64 %offset.idx.1
  %182 = bitcast double* %181 to <2 x double>*
  %wide.load102.1 = load <2 x double>, <2 x double>* %182, align 8, !tbaa !84
  %183 = fmul contract <2 x double> %broadcast.splat104, %wide.load102.1
  %184 = fadd contract <2 x double> %180, %183
  %185 = getelementptr inbounds [8 x double], [8 x double]* %dpsidz, i64 0, i64 %offset.idx.1
  %186 = bitcast double* %185 to <2 x double>*
  %wide.load105.1 = load <2 x double>, <2 x double>* %186, align 8, !tbaa !84
  %187 = fmul contract <2 x double> %broadcast.splat107, %wide.load105.1
  %188 = fadd contract <2 x double> %184, %187
  %189 = fmul contract <2 x double> %broadcast.splat109, %188
  %190 = getelementptr inbounds double, double* %elem_mat, i64 %offset.idx101.1
  %191 = bitcast double* %190 to <2 x double>*
  %wide.load110.1 = load <2 x double>, <2 x double>* %191, align 8, !tbaa !84
  %192 = fadd contract <2 x double> %wide.load110.1, %189
  %193 = bitcast double* %190 to <2 x double>*
  store <2 x double> %192, <2 x double>* %193, align 8, !tbaa !84
  %index.next.1 = add nuw i64 %index, 4
  %niter.next.1 = add nuw i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !214

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %offset.idx.epil = add i64 %indvars.iv85, %index.unr
  %offset.idx101.epil = add i64 %index.unr, %160
  %194 = getelementptr inbounds [8 x double], [8 x double]* %dpsidx, i64 0, i64 %offset.idx.epil
  %195 = bitcast double* %194 to <2 x double>*
  %wide.load.epil = load <2 x double>, <2 x double>* %195, align 8, !tbaa !84
  %196 = fmul contract <2 x double> %broadcast.splat, %wide.load.epil
  %197 = getelementptr inbounds [8 x double], [8 x double]* %dpsidy, i64 0, i64 %offset.idx.epil
  %198 = bitcast double* %197 to <2 x double>*
  %wide.load102.epil = load <2 x double>, <2 x double>* %198, align 8, !tbaa !84
  %199 = fmul contract <2 x double> %broadcast.splat104, %wide.load102.epil
  %200 = fadd contract <2 x double> %196, %199
  %201 = getelementptr inbounds [8 x double], [8 x double]* %dpsidz, i64 0, i64 %offset.idx.epil
  %202 = bitcast double* %201 to <2 x double>*
  %wide.load105.epil = load <2 x double>, <2 x double>* %202, align 8, !tbaa !84
  %203 = fmul contract <2 x double> %broadcast.splat107, %wide.load105.epil
  %204 = fadd contract <2 x double> %200, %203
  %205 = fmul contract <2 x double> %broadcast.splat109, %204
  %206 = getelementptr inbounds double, double* %elem_mat, i64 %offset.idx101.epil
  %207 = bitcast double* %206 to <2 x double>*
  %wide.load110.epil = load <2 x double>, <2 x double>* %207, align 8, !tbaa !84
  %208 = fadd contract <2 x double> %wide.load110.epil, %205
  %209 = bitcast double* %206 to <2 x double>*
  store <2 x double> %208, <2 x double>* %209, align 8, !tbaa !84
  br label %middle.block

middle.block:                                     ; preds = %middle.block.unr-lcssa, %vector.body.epil
  %cmp.n = icmp eq i64 %155, %n.vec
  br i1 %cmp.n, label %for.cond54.loopexit.loopexit, label %for.body78.preheader113

for.body78.preheader113:                          ; preds = %for.body78.preheader, %middle.block
  %indvars.iv87.ph = phi i64 [ %indvars.iv85, %for.body78.preheader ], [ %ind.end, %middle.block ]
  %indvars.iv.ph = phi i64 [ %160, %for.body78.preheader ], [ %ind.end100, %middle.block ]
  br label %for.body78

for.body78:                                       ; preds = %for.body78.preheader113, %for.body78
  %indvars.iv87 = phi i64 [ %indvars.iv.next88, %for.body78 ], [ %indvars.iv87.ph, %for.body78.preheader113 ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body78 ], [ %indvars.iv.ph, %for.body78.preheader113 ]
  %arrayidx80 = getelementptr inbounds [8 x double], [8 x double]* %dpsidx, i64 0, i64 %indvars.iv87
  %210 = load double, double* %arrayidx80, align 8, !tbaa !84
  %mul81 = fmul contract double %156, %210
  %arrayidx83 = getelementptr inbounds [8 x double], [8 x double]* %dpsidy, i64 0, i64 %indvars.iv87
  %211 = load double, double* %arrayidx83, align 8, !tbaa !84
  %mul84 = fmul contract double %157, %211
  %add85 = fadd contract double %mul81, %mul84
  %arrayidx87 = getelementptr inbounds [8 x double], [8 x double]* %dpsidz, i64 0, i64 %indvars.iv87
  %212 = load double, double* %arrayidx87, align 8, !tbaa !84
  %mul88 = fmul contract double %158, %212
  %add89 = fadd contract double %add85, %mul88
  %mul90 = fmul contract double %mul16, %add89
  %arrayidx93 = getelementptr inbounds double, double* %elem_mat, i64 %indvars.iv
  %213 = load double, double* %arrayidx93, align 8, !tbaa !84
  %add94 = fadd contract double %213, %mul90
  store double %add94, double* %arrayidx93, align 8, !tbaa !84
  %indvars.iv.next88 = add nuw nsw i64 %indvars.iv87, 1
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next88, 8
  br i1 %exitcond.not, label %for.cond54.loopexit.loopexit, label %for.body78, !llvm.loop !215
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZN6miniFE4Hex812sourceVectorIdEEvPKT_S4_PS2_(double* noundef %elemNodeCoords, double* noundef %grad_vals, double* noundef %elem_vec) local_unnamed_addr #22 comdat {
entry:
  %elem_vec39 = bitcast double* %elem_vec to i8*
  %gpts = alloca <2 x double>, align 16
  %gwts = alloca <2 x double>, align 16
  %detJ = alloca double, align 8
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 8 dereferenceable(64) %elem_vec39, i8 0, i64 64, i1 false)
  %0 = bitcast <2 x double>* %gpts to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8
  %1 = bitcast <2 x double>* %gwts to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8
  store <2 x double> <double 0xBFE279A74576233F, double 0x3FE279A74576233F>, <2 x double>* %gpts, align 16, !tbaa !84
  store <2 x double> <double 1.000000e+00, double 1.000000e+00>, <2 x double>* %gwts, align 16, !tbaa !84
  %2 = bitcast double* %detJ to i8*
  %arrayidx31.2 = getelementptr inbounds double, double* %elem_vec, i64 2
  %arrayidx31.4 = getelementptr inbounds double, double* %elem_vec, i64 4
  %arrayidx31.6 = getelementptr inbounds double, double* %elem_vec, i64 6
  %arrayidx8 = getelementptr inbounds <2 x double>, <2 x double>* %gpts, i64 0, i64 0
  %3 = load double, double* %arrayidx8, align 16, !tbaa !84
  %arrayidx10 = getelementptr inbounds <2 x double>, <2 x double>* %gwts, i64 0, i64 0
  %4 = load double, double* %arrayidx10, align 16, !tbaa !84
  %sub2.i = fsub contract double 1.000000e+00, %3
  %add7.i = fadd contract double %3, 1.000000e+00
  %5 = insertelement <2 x double> poison, double %sub2.i, i64 0
  %6 = shufflevector <2 x double> %5, <2 x double> poison, <2 x i32> zeroinitializer
  %7 = insertelement <2 x double> poison, double %add7.i, i64 0
  %8 = shufflevector <2 x double> %7, <2 x double> poison, <2 x i32> zeroinitializer
  %9 = bitcast double* %elem_vec to <2 x double>*
  %10 = bitcast double* %elem_vec to <2 x double>*
  %11 = bitcast double* %arrayidx31.2 to <2 x double>*
  %12 = bitcast double* %arrayidx31.2 to <2 x double>*
  %13 = bitcast double* %arrayidx31.4 to <2 x double>*
  %14 = bitcast double* %arrayidx31.4 to <2 x double>*
  %15 = bitcast double* %arrayidx31.6 to <2 x double>*
  %16 = bitcast double* %arrayidx31.6 to <2 x double>*
  %17 = bitcast double* %elem_vec to <2 x double>*
  %18 = bitcast double* %elem_vec to <2 x double>*
  %19 = bitcast double* %arrayidx31.2 to <2 x double>*
  %20 = bitcast double* %arrayidx31.2 to <2 x double>*
  %21 = bitcast double* %arrayidx31.4 to <2 x double>*
  %22 = bitcast double* %arrayidx31.4 to <2 x double>*
  %23 = bitcast double* %arrayidx31.6 to <2 x double>*
  %24 = bitcast double* %arrayidx31.6 to <2 x double>*
  %arrayidx8.1 = getelementptr inbounds <2 x double>, <2 x double>* %gpts, i64 0, i64 1
  %25 = load double, double* %arrayidx8.1, align 8
  %arrayidx10.1 = getelementptr inbounds <2 x double>, <2 x double>* %gwts, i64 0, i64 1
  %26 = load double, double* %arrayidx10.1, align 8
  %sub2.i.1 = fsub contract double 1.000000e+00, %25
  %add7.i.1 = fadd contract double %25, 1.000000e+00
  %27 = insertelement <2 x double> poison, double %sub2.i.1, i64 0
  %28 = shufflevector <2 x double> %27, <2 x double> poison, <2 x i32> zeroinitializer
  %29 = insertelement <2 x double> poison, double %add7.i.1, i64 0
  %30 = shufflevector <2 x double> %29, <2 x double> poison, <2 x i32> zeroinitializer
  %31 = bitcast double* %elem_vec to <2 x double>*
  %32 = bitcast double* %elem_vec to <2 x double>*
  %33 = bitcast double* %arrayidx31.2 to <2 x double>*
  %34 = bitcast double* %arrayidx31.2 to <2 x double>*
  %35 = bitcast double* %arrayidx31.4 to <2 x double>*
  %36 = bitcast double* %arrayidx31.4 to <2 x double>*
  %37 = bitcast double* %arrayidx31.6 to <2 x double>*
  %38 = bitcast double* %arrayidx31.6 to <2 x double>*
  %39 = bitcast double* %elem_vec to <2 x double>*
  %40 = bitcast double* %elem_vec to <2 x double>*
  %41 = bitcast double* %arrayidx31.2 to <2 x double>*
  %42 = bitcast double* %arrayidx31.2 to <2 x double>*
  %43 = bitcast double* %arrayidx31.4 to <2 x double>*
  %44 = bitcast double* %arrayidx31.4 to <2 x double>*
  %45 = bitcast double* %arrayidx31.6 to <2 x double>*
  %46 = bitcast double* %arrayidx31.6 to <2 x double>*
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8
  ret void

for.body:                                         ; preds = %for.cond.cleanup6.for.body_crit_edge, %entry
  %47 = phi double [ 1.000000e+00, %entry ], [ %.pre60, %for.cond.cleanup6.for.body_crit_edge ]
  %48 = phi double [ 0xBFE279A74576233F, %entry ], [ %.pre, %for.cond.cleanup6.for.body_crit_edge ]
  %gv_offset.038 = phi i64 [ 0, %entry ], [ %add.1.1, %for.cond.cleanup6.for.body_crit_edge ]
  %ig.037 = phi i64 [ 0, %entry ], [ %inc40, %for.cond.cleanup6.for.body_crit_edge ]
  %49 = insertelement <2 x double> poison, double %48, i64 0
  %50 = shufflevector <2 x double> %49, <2 x double> poison, <2 x i32> zeroinitializer
  %51 = fsub contract <2 x double> <double 1.000000e+00, double poison>, %50
  %52 = fadd contract <2 x double> %50, <double poison, double 1.000000e+00>
  %53 = shufflevector <2 x double> %51, <2 x double> %52, <2 x i32> <i32 0, i32 3>
  %54 = fmul contract <2 x double> %53, <double 1.250000e-01, double 1.250000e-01>
  %55 = fmul contract <2 x double> %54, %6
  %56 = fmul contract <2 x double> %54, %8
  %57 = fmul contract <2 x double> %55, <double 0x3FF93CD3A2BB11A0, double 0x3FF93CD3A2BB11A0>
  %58 = fmul contract <2 x double> %56, <double 0x3FF93CD3A2BB11A0, double 0x3FF93CD3A2BB11A0>
  %59 = fmul contract <2 x double> %55, <double 0x3FDB0CB17513B982, double 0x3FDB0CB17513B982>
  %60 = fmul contract <2 x double> %56, <double 0x3FDB0CB17513B982, double 0x3FDB0CB17513B982>
  %arrayidx20 = getelementptr inbounds double, double* %grad_vals, i64 %gv_offset.038
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8
  call void @_ZN6miniFE4Hex818gradients_and_detJIdEEvPKT_S4_RS2_(double* noundef %elemNodeCoords, double* noundef %arrayidx20, double* noundef nonnull align 8 dereferenceable(8) %detJ)
  %61 = load double, double* %detJ, align 8, !tbaa !84
  %mul21 = fmul contract double %47, %61
  %mul22 = fmul contract double %4, %mul21
  %62 = insertelement <2 x double> poison, double %mul22, i64 0
  %63 = shufflevector <2 x double> %62, <2 x double> poison, <2 x i32> zeroinitializer
  %64 = fmul contract <2 x double> %63, %57
  %65 = load <2 x double>, <2 x double>* %9, align 8, !tbaa !84
  %66 = fadd contract <2 x double> %65, %64
  store <2 x double> %66, <2 x double>* %10, align 8, !tbaa !84
  %67 = fmul contract <2 x double> %63, %58
  %shuffle62 = shufflevector <2 x double> %67, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %68 = load <2 x double>, <2 x double>* %11, align 8, !tbaa !84
  %69 = fadd contract <2 x double> %68, %shuffle62
  store <2 x double> %69, <2 x double>* %12, align 8, !tbaa !84
  %70 = fmul contract <2 x double> %63, %59
  %71 = load <2 x double>, <2 x double>* %13, align 8, !tbaa !84
  %72 = fadd contract <2 x double> %71, %70
  store <2 x double> %72, <2 x double>* %14, align 8, !tbaa !84
  %73 = fmul contract <2 x double> %63, %60
  %shuffle63 = shufflevector <2 x double> %73, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %74 = load <2 x double>, <2 x double>* %15, align 8, !tbaa !84
  %75 = fadd contract <2 x double> %74, %shuffle63
  store <2 x double> %75, <2 x double>* %16, align 8, !tbaa !84
  %add = or i64 %gv_offset.038, 24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8
  %76 = fmul contract <2 x double> %55, <double 0x3FDB0CB17513B982, double 0x3FDB0CB17513B982>
  %77 = fmul contract <2 x double> %56, <double 0x3FDB0CB17513B982, double 0x3FDB0CB17513B982>
  %78 = fmul contract <2 x double> %55, <double 0x3FF93CD3A2BB11A0, double 0x3FF93CD3A2BB11A0>
  %79 = fmul contract <2 x double> %56, <double 0x3FF93CD3A2BB11A0, double 0x3FF93CD3A2BB11A0>
  %arrayidx20.1 = getelementptr inbounds double, double* %grad_vals, i64 %add
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8
  call void @_ZN6miniFE4Hex818gradients_and_detJIdEEvPKT_S4_RS2_(double* noundef %elemNodeCoords, double* noundef nonnull %arrayidx20.1, double* noundef nonnull align 8 dereferenceable(8) %detJ)
  %80 = load double, double* %detJ, align 8, !tbaa !84
  %mul21.1 = fmul contract double %47, %80
  %mul22.1 = fmul contract double %4, %mul21.1
  %81 = insertelement <2 x double> poison, double %mul22.1, i64 0
  %82 = shufflevector <2 x double> %81, <2 x double> poison, <2 x i32> zeroinitializer
  %83 = fmul contract <2 x double> %82, %76
  %84 = load <2 x double>, <2 x double>* %17, align 8, !tbaa !84
  %85 = fadd contract <2 x double> %84, %83
  store <2 x double> %85, <2 x double>* %18, align 8, !tbaa !84
  %86 = fmul contract <2 x double> %82, %77
  %shuffle = shufflevector <2 x double> %86, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %87 = load <2 x double>, <2 x double>* %19, align 8, !tbaa !84
  %88 = fadd contract <2 x double> %87, %shuffle
  store <2 x double> %88, <2 x double>* %20, align 8, !tbaa !84
  %89 = fmul contract <2 x double> %82, %78
  %90 = load <2 x double>, <2 x double>* %21, align 8, !tbaa !84
  %91 = fadd contract <2 x double> %90, %89
  store <2 x double> %91, <2 x double>* %22, align 8, !tbaa !84
  %92 = fmul contract <2 x double> %82, %79
  %shuffle61 = shufflevector <2 x double> %92, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %93 = load <2 x double>, <2 x double>* %23, align 8, !tbaa !84
  %94 = fadd contract <2 x double> %93, %shuffle61
  store <2 x double> %94, <2 x double>* %24, align 8, !tbaa !84
  %add.1 = add i64 %gv_offset.038, 48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8
  %95 = fmul contract <2 x double> %54, %28
  %96 = fmul contract <2 x double> %54, %30
  %97 = fmul contract <2 x double> %95, <double 0x3FF93CD3A2BB11A0, double 0x3FF93CD3A2BB11A0>
  %98 = fmul contract <2 x double> %96, <double 0x3FF93CD3A2BB11A0, double 0x3FF93CD3A2BB11A0>
  %99 = fmul contract <2 x double> %95, <double 0x3FDB0CB17513B982, double 0x3FDB0CB17513B982>
  %100 = fmul contract <2 x double> %96, <double 0x3FDB0CB17513B982, double 0x3FDB0CB17513B982>
  %arrayidx20.165 = getelementptr inbounds double, double* %grad_vals, i64 %add.1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8
  call void @_ZN6miniFE4Hex818gradients_and_detJIdEEvPKT_S4_RS2_(double* noundef %elemNodeCoords, double* noundef nonnull %arrayidx20.165, double* noundef nonnull align 8 dereferenceable(8) %detJ)
  %101 = load double, double* %detJ, align 8, !tbaa !84
  %mul21.166 = fmul contract double %47, %101
  %mul22.167 = fmul contract double %26, %mul21.166
  %102 = insertelement <2 x double> poison, double %mul22.167, i64 0
  %103 = shufflevector <2 x double> %102, <2 x double> poison, <2 x i32> zeroinitializer
  %104 = fmul contract <2 x double> %103, %97
  %105 = load <2 x double>, <2 x double>* %31, align 8, !tbaa !84
  %106 = fadd contract <2 x double> %105, %104
  store <2 x double> %106, <2 x double>* %32, align 8, !tbaa !84
  %107 = fmul contract <2 x double> %103, %98
  %shuffle62.1 = shufflevector <2 x double> %107, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %108 = load <2 x double>, <2 x double>* %33, align 8, !tbaa !84
  %109 = fadd contract <2 x double> %108, %shuffle62.1
  store <2 x double> %109, <2 x double>* %34, align 8, !tbaa !84
  %110 = fmul contract <2 x double> %103, %99
  %111 = load <2 x double>, <2 x double>* %35, align 8, !tbaa !84
  %112 = fadd contract <2 x double> %111, %110
  store <2 x double> %112, <2 x double>* %36, align 8, !tbaa !84
  %113 = fmul contract <2 x double> %103, %100
  %shuffle63.1 = shufflevector <2 x double> %113, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %114 = load <2 x double>, <2 x double>* %37, align 8, !tbaa !84
  %115 = fadd contract <2 x double> %114, %shuffle63.1
  store <2 x double> %115, <2 x double>* %38, align 8, !tbaa !84
  %add.168 = add i64 %gv_offset.038, 72
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8
  %116 = fmul contract <2 x double> %95, <double 0x3FDB0CB17513B982, double 0x3FDB0CB17513B982>
  %117 = fmul contract <2 x double> %96, <double 0x3FDB0CB17513B982, double 0x3FDB0CB17513B982>
  %118 = fmul contract <2 x double> %95, <double 0x3FF93CD3A2BB11A0, double 0x3FF93CD3A2BB11A0>
  %119 = fmul contract <2 x double> %96, <double 0x3FF93CD3A2BB11A0, double 0x3FF93CD3A2BB11A0>
  %arrayidx20.1.1 = getelementptr inbounds double, double* %grad_vals, i64 %add.168
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8
  call void @_ZN6miniFE4Hex818gradients_and_detJIdEEvPKT_S4_RS2_(double* noundef %elemNodeCoords, double* noundef nonnull %arrayidx20.1.1, double* noundef nonnull align 8 dereferenceable(8) %detJ)
  %120 = load double, double* %detJ, align 8, !tbaa !84
  %mul21.1.1 = fmul contract double %47, %120
  %mul22.1.1 = fmul contract double %26, %mul21.1.1
  %121 = insertelement <2 x double> poison, double %mul22.1.1, i64 0
  %122 = shufflevector <2 x double> %121, <2 x double> poison, <2 x i32> zeroinitializer
  %123 = fmul contract <2 x double> %122, %116
  %124 = load <2 x double>, <2 x double>* %39, align 8, !tbaa !84
  %125 = fadd contract <2 x double> %124, %123
  store <2 x double> %125, <2 x double>* %40, align 8, !tbaa !84
  %126 = fmul contract <2 x double> %122, %117
  %shuffle.1 = shufflevector <2 x double> %126, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %127 = load <2 x double>, <2 x double>* %41, align 8, !tbaa !84
  %128 = fadd contract <2 x double> %127, %shuffle.1
  store <2 x double> %128, <2 x double>* %42, align 8, !tbaa !84
  %129 = fmul contract <2 x double> %122, %118
  %130 = load <2 x double>, <2 x double>* %43, align 8, !tbaa !84
  %131 = fadd contract <2 x double> %130, %129
  store <2 x double> %131, <2 x double>* %44, align 8, !tbaa !84
  %132 = fmul contract <2 x double> %122, %119
  %shuffle61.1 = shufflevector <2 x double> %132, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %133 = load <2 x double>, <2 x double>* %45, align 8, !tbaa !84
  %134 = fadd contract <2 x double> %133, %shuffle61.1
  store <2 x double> %134, <2 x double>* %46, align 8, !tbaa !84
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8
  %inc40 = add nuw nsw i64 %ig.037, 1
  %exitcond43.not = icmp eq i64 %inc40, 2
  br i1 %exitcond43.not, label %for.cond.cleanup, label %for.cond.cleanup6.for.body_crit_edge, !llvm.loop !217

for.cond.cleanup6.for.body_crit_edge:             ; preds = %for.body
  %add.1.1 = add i64 %gv_offset.038, 96
  %arrayidx.phi.trans.insert = getelementptr inbounds <2 x double>, <2 x double>* %gpts, i64 0, i64 %inc40
  %.pre = load double, double* %arrayidx.phi.trans.insert, align 8, !tbaa !84
  %arrayidx3.phi.trans.insert = getelementptr inbounds <2 x double>, <2 x double>* %gwts, i64 0, i64 %inc40
  %.pre60 = load double, double* %arrayidx3.phi.trans.insert, align 8, !tbaa !84
  br label %for.body
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr dso_local void @_ZN6miniFE4Hex827gradients_and_invJ_and_detJIdEEvPKT_S4_PS2_RS2_(double* noundef %elemNodeCoords, double* noundef %grad_vals, double* noundef %invJ, double* noundef nonnull align 8 dereferenceable(8) %detJ) local_unnamed_addr #24 comdat {
entry:
  %0 = load double, double* %grad_vals, align 8, !tbaa !84
  %1 = load double, double* %elemNodeCoords, align 8, !tbaa !84
  %mul = fmul contract double %0, %1
  %add3 = fadd contract double %mul, 0.000000e+00
  %arrayidx7 = getelementptr inbounds double, double* %elemNodeCoords, i64 1
  %2 = load double, double* %arrayidx7, align 8, !tbaa !84
  %mul8 = fmul contract double %0, %2
  %add9 = fadd contract double %mul8, 0.000000e+00
  %arrayidx13 = getelementptr inbounds double, double* %elemNodeCoords, i64 2
  %3 = load double, double* %arrayidx13, align 8, !tbaa !84
  %mul14 = fmul contract double %0, %3
  %add15 = fadd contract double %mul14, 0.000000e+00
  %arrayidx17 = getelementptr inbounds double, double* %grad_vals, i64 1
  %4 = load double, double* %arrayidx17, align 8, !tbaa !84
  %mul20 = fmul contract double %1, %4
  %add21 = fadd contract double %mul20, 0.000000e+00
  %mul26 = fmul contract double %2, %4
  %add27 = fadd contract double %mul26, 0.000000e+00
  %mul32 = fmul contract double %3, %4
  %add33 = fadd contract double %mul32, 0.000000e+00
  %arrayidx35 = getelementptr inbounds double, double* %grad_vals, i64 2
  %5 = load double, double* %arrayidx35, align 8, !tbaa !84
  %mul38 = fmul contract double %1, %5
  %add39 = fadd contract double %mul38, 0.000000e+00
  %mul44 = fmul contract double %2, %5
  %add45 = fadd contract double %mul44, 0.000000e+00
  %mul50 = fmul contract double %3, %5
  %add51 = fadd contract double %mul50, 0.000000e+00
  %arrayidx.1 = getelementptr inbounds double, double* %grad_vals, i64 3
  %6 = load double, double* %arrayidx.1, align 8, !tbaa !84
  %arrayidx2.1 = getelementptr inbounds double, double* %elemNodeCoords, i64 3
  %7 = load double, double* %arrayidx2.1, align 8, !tbaa !84
  %mul.1 = fmul contract double %6, %7
  %add3.1 = fadd contract double %add3, %mul.1
  %arrayidx7.1 = getelementptr inbounds double, double* %elemNodeCoords, i64 4
  %8 = load double, double* %arrayidx7.1, align 8, !tbaa !84
  %mul8.1 = fmul contract double %6, %8
  %add9.1 = fadd contract double %add9, %mul8.1
  %arrayidx13.1 = getelementptr inbounds double, double* %elemNodeCoords, i64 5
  %9 = load double, double* %arrayidx13.1, align 8, !tbaa !84
  %mul14.1 = fmul contract double %6, %9
  %add15.1 = fadd contract double %add15, %mul14.1
  %arrayidx17.1 = getelementptr inbounds double, double* %grad_vals, i64 4
  %10 = load double, double* %arrayidx17.1, align 8, !tbaa !84
  %mul20.1 = fmul contract double %7, %10
  %add21.1 = fadd contract double %add21, %mul20.1
  %mul26.1 = fmul contract double %8, %10
  %add27.1 = fadd contract double %add27, %mul26.1
  %mul32.1 = fmul contract double %9, %10
  %add33.1 = fadd contract double %add33, %mul32.1
  %arrayidx35.1 = getelementptr inbounds double, double* %grad_vals, i64 5
  %11 = load double, double* %arrayidx35.1, align 8, !tbaa !84
  %mul38.1 = fmul contract double %7, %11
  %add39.1 = fadd contract double %add39, %mul38.1
  %mul44.1 = fmul contract double %8, %11
  %add45.1 = fadd contract double %add45, %mul44.1
  %mul50.1 = fmul contract double %9, %11
  %add51.1 = fadd contract double %add51, %mul50.1
  %arrayidx.2 = getelementptr inbounds double, double* %grad_vals, i64 6
  %12 = load double, double* %arrayidx.2, align 8, !tbaa !84
  %arrayidx2.2 = getelementptr inbounds double, double* %elemNodeCoords, i64 6
  %13 = load double, double* %arrayidx2.2, align 8, !tbaa !84
  %mul.2 = fmul contract double %12, %13
  %add3.2 = fadd contract double %add3.1, %mul.2
  %arrayidx7.2 = getelementptr inbounds double, double* %elemNodeCoords, i64 7
  %14 = load double, double* %arrayidx7.2, align 8, !tbaa !84
  %mul8.2 = fmul contract double %12, %14
  %add9.2 = fadd contract double %add9.1, %mul8.2
  %arrayidx13.2 = getelementptr inbounds double, double* %elemNodeCoords, i64 8
  %15 = load double, double* %arrayidx13.2, align 8, !tbaa !84
  %mul14.2 = fmul contract double %12, %15
  %add15.2 = fadd contract double %add15.1, %mul14.2
  %arrayidx17.2 = getelementptr inbounds double, double* %grad_vals, i64 7
  %16 = load double, double* %arrayidx17.2, align 8, !tbaa !84
  %mul20.2 = fmul contract double %13, %16
  %add21.2 = fadd contract double %add21.1, %mul20.2
  %mul26.2 = fmul contract double %14, %16
  %add27.2 = fadd contract double %add27.1, %mul26.2
  %mul32.2 = fmul contract double %15, %16
  %add33.2 = fadd contract double %add33.1, %mul32.2
  %arrayidx35.2 = getelementptr inbounds double, double* %grad_vals, i64 8
  %17 = load double, double* %arrayidx35.2, align 8, !tbaa !84
  %mul38.2 = fmul contract double %13, %17
  %add39.2 = fadd contract double %add39.1, %mul38.2
  %mul44.2 = fmul contract double %14, %17
  %add45.2 = fadd contract double %add45.1, %mul44.2
  %mul50.2 = fmul contract double %15, %17
  %add51.2 = fadd contract double %add51.1, %mul50.2
  %arrayidx.3 = getelementptr inbounds double, double* %grad_vals, i64 9
  %18 = load double, double* %arrayidx.3, align 8, !tbaa !84
  %arrayidx2.3 = getelementptr inbounds double, double* %elemNodeCoords, i64 9
  %19 = load double, double* %arrayidx2.3, align 8, !tbaa !84
  %mul.3 = fmul contract double %18, %19
  %add3.3 = fadd contract double %add3.2, %mul.3
  %arrayidx7.3 = getelementptr inbounds double, double* %elemNodeCoords, i64 10
  %20 = load double, double* %arrayidx7.3, align 8, !tbaa !84
  %mul8.3 = fmul contract double %18, %20
  %add9.3 = fadd contract double %add9.2, %mul8.3
  %arrayidx13.3 = getelementptr inbounds double, double* %elemNodeCoords, i64 11
  %21 = load double, double* %arrayidx13.3, align 8, !tbaa !84
  %mul14.3 = fmul contract double %18, %21
  %add15.3 = fadd contract double %add15.2, %mul14.3
  %arrayidx17.3 = getelementptr inbounds double, double* %grad_vals, i64 10
  %22 = load double, double* %arrayidx17.3, align 8, !tbaa !84
  %mul20.3 = fmul contract double %19, %22
  %add21.3 = fadd contract double %add21.2, %mul20.3
  %mul26.3 = fmul contract double %20, %22
  %add27.3 = fadd contract double %add27.2, %mul26.3
  %mul32.3 = fmul contract double %21, %22
  %add33.3 = fadd contract double %add33.2, %mul32.3
  %arrayidx35.3 = getelementptr inbounds double, double* %grad_vals, i64 11
  %23 = load double, double* %arrayidx35.3, align 8, !tbaa !84
  %mul38.3 = fmul contract double %19, %23
  %add39.3 = fadd contract double %add39.2, %mul38.3
  %mul44.3 = fmul contract double %20, %23
  %add45.3 = fadd contract double %add45.2, %mul44.3
  %mul50.3 = fmul contract double %21, %23
  %add51.3 = fadd contract double %add51.2, %mul50.3
  %arrayidx.4 = getelementptr inbounds double, double* %grad_vals, i64 12
  %24 = load double, double* %arrayidx.4, align 8, !tbaa !84
  %arrayidx2.4 = getelementptr inbounds double, double* %elemNodeCoords, i64 12
  %25 = load double, double* %arrayidx2.4, align 8, !tbaa !84
  %mul.4 = fmul contract double %24, %25
  %add3.4 = fadd contract double %add3.3, %mul.4
  %arrayidx7.4 = getelementptr inbounds double, double* %elemNodeCoords, i64 13
  %26 = load double, double* %arrayidx7.4, align 8, !tbaa !84
  %mul8.4 = fmul contract double %24, %26
  %add9.4 = fadd contract double %add9.3, %mul8.4
  %arrayidx13.4 = getelementptr inbounds double, double* %elemNodeCoords, i64 14
  %27 = load double, double* %arrayidx13.4, align 8, !tbaa !84
  %mul14.4 = fmul contract double %24, %27
  %add15.4 = fadd contract double %add15.3, %mul14.4
  %arrayidx17.4 = getelementptr inbounds double, double* %grad_vals, i64 13
  %28 = load double, double* %arrayidx17.4, align 8, !tbaa !84
  %mul20.4 = fmul contract double %25, %28
  %add21.4 = fadd contract double %add21.3, %mul20.4
  %mul26.4 = fmul contract double %26, %28
  %add27.4 = fadd contract double %add27.3, %mul26.4
  %mul32.4 = fmul contract double %27, %28
  %add33.4 = fadd contract double %add33.3, %mul32.4
  %arrayidx35.4 = getelementptr inbounds double, double* %grad_vals, i64 14
  %29 = load double, double* %arrayidx35.4, align 8, !tbaa !84
  %mul38.4 = fmul contract double %25, %29
  %add39.4 = fadd contract double %add39.3, %mul38.4
  %mul44.4 = fmul contract double %26, %29
  %add45.4 = fadd contract double %add45.3, %mul44.4
  %mul50.4 = fmul contract double %27, %29
  %add51.4 = fadd contract double %add51.3, %mul50.4
  %arrayidx.5 = getelementptr inbounds double, double* %grad_vals, i64 15
  %30 = load double, double* %arrayidx.5, align 8, !tbaa !84
  %arrayidx2.5 = getelementptr inbounds double, double* %elemNodeCoords, i64 15
  %31 = load double, double* %arrayidx2.5, align 8, !tbaa !84
  %mul.5 = fmul contract double %30, %31
  %add3.5 = fadd contract double %add3.4, %mul.5
  %arrayidx7.5 = getelementptr inbounds double, double* %elemNodeCoords, i64 16
  %32 = load double, double* %arrayidx7.5, align 8, !tbaa !84
  %mul8.5 = fmul contract double %30, %32
  %add9.5 = fadd contract double %add9.4, %mul8.5
  %arrayidx13.5 = getelementptr inbounds double, double* %elemNodeCoords, i64 17
  %33 = load double, double* %arrayidx13.5, align 8, !tbaa !84
  %mul14.5 = fmul contract double %30, %33
  %add15.5 = fadd contract double %add15.4, %mul14.5
  %arrayidx17.5 = getelementptr inbounds double, double* %grad_vals, i64 16
  %34 = load double, double* %arrayidx17.5, align 8, !tbaa !84
  %mul20.5 = fmul contract double %31, %34
  %add21.5 = fadd contract double %add21.4, %mul20.5
  %mul26.5 = fmul contract double %32, %34
  %add27.5 = fadd contract double %add27.4, %mul26.5
  %mul32.5 = fmul contract double %33, %34
  %add33.5 = fadd contract double %add33.4, %mul32.5
  %arrayidx35.5 = getelementptr inbounds double, double* %grad_vals, i64 17
  %35 = load double, double* %arrayidx35.5, align 8, !tbaa !84
  %mul38.5 = fmul contract double %31, %35
  %add39.5 = fadd contract double %add39.4, %mul38.5
  %mul44.5 = fmul contract double %32, %35
  %add45.5 = fadd contract double %add45.4, %mul44.5
  %mul50.5 = fmul contract double %33, %35
  %add51.5 = fadd contract double %add51.4, %mul50.5
  %arrayidx.6 = getelementptr inbounds double, double* %grad_vals, i64 18
  %36 = load double, double* %arrayidx.6, align 8, !tbaa !84
  %arrayidx2.6 = getelementptr inbounds double, double* %elemNodeCoords, i64 18
  %37 = load double, double* %arrayidx2.6, align 8, !tbaa !84
  %mul.6 = fmul contract double %36, %37
  %add3.6 = fadd contract double %add3.5, %mul.6
  %arrayidx7.6 = getelementptr inbounds double, double* %elemNodeCoords, i64 19
  %38 = load double, double* %arrayidx7.6, align 8, !tbaa !84
  %mul8.6 = fmul contract double %36, %38
  %add9.6 = fadd contract double %add9.5, %mul8.6
  %arrayidx13.6 = getelementptr inbounds double, double* %elemNodeCoords, i64 20
  %39 = load double, double* %arrayidx13.6, align 8, !tbaa !84
  %mul14.6 = fmul contract double %36, %39
  %add15.6 = fadd contract double %add15.5, %mul14.6
  %arrayidx17.6 = getelementptr inbounds double, double* %grad_vals, i64 19
  %40 = load double, double* %arrayidx17.6, align 8, !tbaa !84
  %mul20.6 = fmul contract double %37, %40
  %add21.6 = fadd contract double %add21.5, %mul20.6
  %mul26.6 = fmul contract double %38, %40
  %add27.6 = fadd contract double %add27.5, %mul26.6
  %mul32.6 = fmul contract double %39, %40
  %add33.6 = fadd contract double %add33.5, %mul32.6
  %arrayidx35.6 = getelementptr inbounds double, double* %grad_vals, i64 20
  %41 = load double, double* %arrayidx35.6, align 8, !tbaa !84
  %mul38.6 = fmul contract double %37, %41
  %add39.6 = fadd contract double %add39.5, %mul38.6
  %mul44.6 = fmul contract double %38, %41
  %add45.6 = fadd contract double %add45.5, %mul44.6
  %mul50.6 = fmul contract double %39, %41
  %add51.6 = fadd contract double %add51.5, %mul50.6
  %arrayidx.7 = getelementptr inbounds double, double* %grad_vals, i64 21
  %42 = load double, double* %arrayidx.7, align 8, !tbaa !84
  %arrayidx2.7 = getelementptr inbounds double, double* %elemNodeCoords, i64 21
  %43 = load double, double* %arrayidx2.7, align 8, !tbaa !84
  %mul.7 = fmul contract double %42, %43
  %add3.7 = fadd contract double %add3.6, %mul.7
  %arrayidx7.7 = getelementptr inbounds double, double* %elemNodeCoords, i64 22
  %44 = load double, double* %arrayidx7.7, align 8, !tbaa !84
  %mul8.7 = fmul contract double %42, %44
  %add9.7 = fadd contract double %add9.6, %mul8.7
  %arrayidx13.7 = getelementptr inbounds double, double* %elemNodeCoords, i64 23
  %45 = load double, double* %arrayidx13.7, align 8, !tbaa !84
  %mul14.7 = fmul contract double %42, %45
  %add15.7 = fadd contract double %add15.6, %mul14.7
  %arrayidx17.7 = getelementptr inbounds double, double* %grad_vals, i64 22
  %46 = load double, double* %arrayidx17.7, align 8, !tbaa !84
  %mul20.7 = fmul contract double %43, %46
  %add21.7 = fadd contract double %add21.6, %mul20.7
  %mul26.7 = fmul contract double %44, %46
  %add27.7 = fadd contract double %add27.6, %mul26.7
  %mul32.7 = fmul contract double %45, %46
  %add33.7 = fadd contract double %add33.6, %mul32.7
  %arrayidx35.7 = getelementptr inbounds double, double* %grad_vals, i64 23
  %47 = load double, double* %arrayidx35.7, align 8, !tbaa !84
  %mul38.7 = fmul contract double %43, %47
  %add39.7 = fadd contract double %add39.6, %mul38.7
  %mul44.7 = fmul contract double %44, %47
  %add45.7 = fadd contract double %add45.6, %mul44.7
  %mul50.7 = fmul contract double %45, %47
  %add51.7 = fadd contract double %add51.6, %mul50.7
  %mul53 = fmul contract double %add27.7, %add51.7
  %mul54 = fmul contract double %add33.7, %add45.7
  %sub = fsub contract double %mul53, %mul54
  %mul55 = fmul contract double %add51.7, %add9.7
  %mul56 = fmul contract double %add45.7, %add15.7
  %sub57 = fsub contract double %mul55, %mul56
  %mul58 = fmul contract double %add33.7, %add9.7
  %mul59 = fmul contract double %add27.7, %add15.7
  %sub60 = fsub contract double %mul58, %mul59
  %mul61 = fmul contract double %sub, %add3.7
  %mul62 = fmul contract double %add21.7, %sub57
  %sub63 = fsub contract double %mul61, %mul62
  %mul64 = fmul contract double %add39.7, %sub60
  %add65 = fadd contract double %mul64, %sub63
  store double %add65, double* %detJ, align 8, !tbaa !84
  %div = fdiv contract double 1.000000e+00, %add65
  %mul66 = fmul contract double %sub, %div
  store double %mul66, double* %invJ, align 8, !tbaa !84
  %fneg = fneg contract double %sub57
  %mul68 = fmul contract double %div, %fneg
  %arrayidx69 = getelementptr inbounds double, double* %invJ, i64 1
  store double %mul68, double* %arrayidx69, align 8, !tbaa !84
  %mul70 = fmul contract double %sub60, %div
  %arrayidx71 = getelementptr inbounds double, double* %invJ, i64 2
  store double %mul70, double* %arrayidx71, align 8, !tbaa !84
  %mul72 = fmul contract double %add51.7, %add21.7
  %mul73 = fmul contract double %add33.7, %add39.7
  %sub74 = fsub contract double %mul72, %mul73
  %fneg75 = fneg contract double %sub74
  %mul76 = fmul contract double %div, %fneg75
  %arrayidx77 = getelementptr inbounds double, double* %invJ, i64 3
  store double %mul76, double* %arrayidx77, align 8, !tbaa !84
  %mul78 = fmul contract double %add51.7, %add3.7
  %mul79 = fmul contract double %add39.7, %add15.7
  %sub80 = fsub contract double %mul78, %mul79
  %mul81 = fmul contract double %sub80, %div
  %arrayidx82 = getelementptr inbounds double, double* %invJ, i64 4
  store double %mul81, double* %arrayidx82, align 8, !tbaa !84
  %mul83 = fmul contract double %add33.7, %add3.7
  %mul84 = fmul contract double %add21.7, %add15.7
  %sub85 = fsub contract double %mul83, %mul84
  %fneg86 = fneg contract double %sub85
  %mul87 = fmul contract double %div, %fneg86
  %arrayidx88 = getelementptr inbounds double, double* %invJ, i64 5
  store double %mul87, double* %arrayidx88, align 8, !tbaa !84
  %mul89 = fmul contract double %add45.7, %add21.7
  %mul90 = fmul contract double %add27.7, %add39.7
  %sub91 = fsub contract double %mul89, %mul90
  %mul92 = fmul contract double %sub91, %div
  %arrayidx93 = getelementptr inbounds double, double* %invJ, i64 6
  store double %mul92, double* %arrayidx93, align 8, !tbaa !84
  %mul94 = fmul contract double %add45.7, %add3.7
  %mul95 = fmul contract double %add39.7, %add9.7
  %sub96 = fsub contract double %mul94, %mul95
  %fneg97 = fneg contract double %sub96
  %mul98 = fmul contract double %div, %fneg97
  %arrayidx99 = getelementptr inbounds double, double* %invJ, i64 7
  store double %mul98, double* %arrayidx99, align 8, !tbaa !84
  %mul100 = fmul contract double %add27.7, %add3.7
  %mul101 = fmul contract double %add21.7, %add9.7
  %sub102 = fsub contract double %mul100, %mul101
  %mul103 = fmul contract double %sub102, %div
  %arrayidx104 = getelementptr inbounds double, double* %invJ, i64 8
  store double %mul103, double* %arrayidx104, align 8, !tbaa !84
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define linkonce_odr dso_local void @_ZN6miniFE4Hex818gradients_and_detJIdEEvPKT_S4_RS2_(double* noundef %elemNodeCoords, double* noundef %grad_vals, double* noundef nonnull align 8 dereferenceable(8) %detJ) local_unnamed_addr #24 comdat {
entry:
  %0 = load double, double* %grad_vals, align 8, !tbaa !84
  %1 = load double, double* %elemNodeCoords, align 8, !tbaa !84
  %mul = fmul contract double %0, %1
  %add3 = fadd contract double %mul, 0.000000e+00
  %arrayidx7 = getelementptr inbounds double, double* %elemNodeCoords, i64 1
  %2 = load double, double* %arrayidx7, align 8, !tbaa !84
  %mul8 = fmul contract double %0, %2
  %add9 = fadd contract double %mul8, 0.000000e+00
  %arrayidx13 = getelementptr inbounds double, double* %elemNodeCoords, i64 2
  %3 = load double, double* %arrayidx13, align 8, !tbaa !84
  %mul14 = fmul contract double %0, %3
  %add15 = fadd contract double %mul14, 0.000000e+00
  %arrayidx17 = getelementptr inbounds double, double* %grad_vals, i64 1
  %4 = load double, double* %arrayidx17, align 8, !tbaa !84
  %mul20 = fmul contract double %1, %4
  %add21 = fadd contract double %mul20, 0.000000e+00
  %mul26 = fmul contract double %2, %4
  %add27 = fadd contract double %mul26, 0.000000e+00
  %mul32 = fmul contract double %3, %4
  %add33 = fadd contract double %mul32, 0.000000e+00
  %arrayidx35 = getelementptr inbounds double, double* %grad_vals, i64 2
  %5 = load double, double* %arrayidx35, align 8, !tbaa !84
  %mul38 = fmul contract double %1, %5
  %add39 = fadd contract double %mul38, 0.000000e+00
  %mul44 = fmul contract double %2, %5
  %add45 = fadd contract double %mul44, 0.000000e+00
  %mul50 = fmul contract double %3, %5
  %add51 = fadd contract double %mul50, 0.000000e+00
  %arrayidx.1 = getelementptr inbounds double, double* %grad_vals, i64 3
  %6 = load double, double* %arrayidx.1, align 8, !tbaa !84
  %arrayidx2.1 = getelementptr inbounds double, double* %elemNodeCoords, i64 3
  %7 = load double, double* %arrayidx2.1, align 8, !tbaa !84
  %mul.1 = fmul contract double %6, %7
  %add3.1 = fadd contract double %add3, %mul.1
  %arrayidx7.1 = getelementptr inbounds double, double* %elemNodeCoords, i64 4
  %8 = load double, double* %arrayidx7.1, align 8, !tbaa !84
  %mul8.1 = fmul contract double %6, %8
  %add9.1 = fadd contract double %add9, %mul8.1
  %arrayidx13.1 = getelementptr inbounds double, double* %elemNodeCoords, i64 5
  %9 = load double, double* %arrayidx13.1, align 8, !tbaa !84
  %mul14.1 = fmul contract double %6, %9
  %add15.1 = fadd contract double %add15, %mul14.1
  %arrayidx17.1 = getelementptr inbounds double, double* %grad_vals, i64 4
  %10 = load double, double* %arrayidx17.1, align 8, !tbaa !84
  %mul20.1 = fmul contract double %7, %10
  %add21.1 = fadd contract double %add21, %mul20.1
  %mul26.1 = fmul contract double %8, %10
  %add27.1 = fadd contract double %add27, %mul26.1
  %mul32.1 = fmul contract double %9, %10
  %add33.1 = fadd contract double %add33, %mul32.1
  %arrayidx35.1 = getelementptr inbounds double, double* %grad_vals, i64 5
  %11 = load double, double* %arrayidx35.1, align 8, !tbaa !84
  %mul38.1 = fmul contract double %7, %11
  %add39.1 = fadd contract double %add39, %mul38.1
  %mul44.1 = fmul contract double %8, %11
  %add45.1 = fadd contract double %add45, %mul44.1
  %mul50.1 = fmul contract double %9, %11
  %add51.1 = fadd contract double %add51, %mul50.1
  %arrayidx.2 = getelementptr inbounds double, double* %grad_vals, i64 6
  %12 = load double, double* %arrayidx.2, align 8, !tbaa !84
  %arrayidx2.2 = getelementptr inbounds double, double* %elemNodeCoords, i64 6
  %13 = load double, double* %arrayidx2.2, align 8, !tbaa !84
  %mul.2 = fmul contract double %12, %13
  %add3.2 = fadd contract double %add3.1, %mul.2
  %arrayidx7.2 = getelementptr inbounds double, double* %elemNodeCoords, i64 7
  %14 = load double, double* %arrayidx7.2, align 8, !tbaa !84
  %mul8.2 = fmul contract double %12, %14
  %add9.2 = fadd contract double %add9.1, %mul8.2
  %arrayidx13.2 = getelementptr inbounds double, double* %elemNodeCoords, i64 8
  %15 = load double, double* %arrayidx13.2, align 8, !tbaa !84
  %mul14.2 = fmul contract double %12, %15
  %add15.2 = fadd contract double %add15.1, %mul14.2
  %arrayidx17.2 = getelementptr inbounds double, double* %grad_vals, i64 7
  %16 = load double, double* %arrayidx17.2, align 8, !tbaa !84
  %mul20.2 = fmul contract double %13, %16
  %add21.2 = fadd contract double %add21.1, %mul20.2
  %mul26.2 = fmul contract double %14, %16
  %add27.2 = fadd contract double %add27.1, %mul26.2
  %mul32.2 = fmul contract double %15, %16
  %add33.2 = fadd contract double %add33.1, %mul32.2
  %arrayidx35.2 = getelementptr inbounds double, double* %grad_vals, i64 8
  %17 = load double, double* %arrayidx35.2, align 8, !tbaa !84
  %mul38.2 = fmul contract double %13, %17
  %add39.2 = fadd contract double %add39.1, %mul38.2
  %mul44.2 = fmul contract double %14, %17
  %add45.2 = fadd contract double %add45.1, %mul44.2
  %mul50.2 = fmul contract double %15, %17
  %add51.2 = fadd contract double %add51.1, %mul50.2
  %arrayidx.3 = getelementptr inbounds double, double* %grad_vals, i64 9
  %18 = load double, double* %arrayidx.3, align 8, !tbaa !84
  %arrayidx2.3 = getelementptr inbounds double, double* %elemNodeCoords, i64 9
  %19 = load double, double* %arrayidx2.3, align 8, !tbaa !84
  %mul.3 = fmul contract double %18, %19
  %add3.3 = fadd contract double %add3.2, %mul.3
  %arrayidx7.3 = getelementptr inbounds double, double* %elemNodeCoords, i64 10
  %20 = load double, double* %arrayidx7.3, align 8, !tbaa !84
  %mul8.3 = fmul contract double %18, %20
  %add9.3 = fadd contract double %add9.2, %mul8.3
  %arrayidx13.3 = getelementptr inbounds double, double* %elemNodeCoords, i64 11
  %21 = load double, double* %arrayidx13.3, align 8, !tbaa !84
  %mul14.3 = fmul contract double %18, %21
  %add15.3 = fadd contract double %add15.2, %mul14.3
  %arrayidx17.3 = getelementptr inbounds double, double* %grad_vals, i64 10
  %22 = load double, double* %arrayidx17.3, align 8, !tbaa !84
  %mul20.3 = fmul contract double %19, %22
  %add21.3 = fadd contract double %add21.2, %mul20.3
  %mul26.3 = fmul contract double %20, %22
  %add27.3 = fadd contract double %add27.2, %mul26.3
  %mul32.3 = fmul contract double %21, %22
  %add33.3 = fadd contract double %add33.2, %mul32.3
  %arrayidx35.3 = getelementptr inbounds double, double* %grad_vals, i64 11
  %23 = load double, double* %arrayidx35.3, align 8, !tbaa !84
  %mul38.3 = fmul contract double %19, %23
  %add39.3 = fadd contract double %add39.2, %mul38.3
  %mul44.3 = fmul contract double %20, %23
  %add45.3 = fadd contract double %add45.2, %mul44.3
  %mul50.3 = fmul contract double %21, %23
  %add51.3 = fadd contract double %add51.2, %mul50.3
  %arrayidx.4 = getelementptr inbounds double, double* %grad_vals, i64 12
  %24 = load double, double* %arrayidx.4, align 8, !tbaa !84
  %arrayidx2.4 = getelementptr inbounds double, double* %elemNodeCoords, i64 12
  %25 = load double, double* %arrayidx2.4, align 8, !tbaa !84
  %mul.4 = fmul contract double %24, %25
  %add3.4 = fadd contract double %add3.3, %mul.4
  %arrayidx7.4 = getelementptr inbounds double, double* %elemNodeCoords, i64 13
  %26 = load double, double* %arrayidx7.4, align 8, !tbaa !84
  %mul8.4 = fmul contract double %24, %26
  %add9.4 = fadd contract double %add9.3, %mul8.4
  %arrayidx13.4 = getelementptr inbounds double, double* %elemNodeCoords, i64 14
  %27 = load double, double* %arrayidx13.4, align 8, !tbaa !84
  %mul14.4 = fmul contract double %24, %27
  %add15.4 = fadd contract double %add15.3, %mul14.4
  %arrayidx17.4 = getelementptr inbounds double, double* %grad_vals, i64 13
  %28 = load double, double* %arrayidx17.4, align 8, !tbaa !84
  %mul20.4 = fmul contract double %25, %28
  %add21.4 = fadd contract double %add21.3, %mul20.4
  %mul26.4 = fmul contract double %26, %28
  %add27.4 = fadd contract double %add27.3, %mul26.4
  %mul32.4 = fmul contract double %27, %28
  %add33.4 = fadd contract double %add33.3, %mul32.4
  %arrayidx35.4 = getelementptr inbounds double, double* %grad_vals, i64 14
  %29 = load double, double* %arrayidx35.4, align 8, !tbaa !84
  %mul38.4 = fmul contract double %25, %29
  %add39.4 = fadd contract double %add39.3, %mul38.4
  %mul44.4 = fmul contract double %26, %29
  %add45.4 = fadd contract double %add45.3, %mul44.4
  %mul50.4 = fmul contract double %27, %29
  %add51.4 = fadd contract double %add51.3, %mul50.4
  %arrayidx.5 = getelementptr inbounds double, double* %grad_vals, i64 15
  %30 = load double, double* %arrayidx.5, align 8, !tbaa !84
  %arrayidx2.5 = getelementptr inbounds double, double* %elemNodeCoords, i64 15
  %31 = load double, double* %arrayidx2.5, align 8, !tbaa !84
  %mul.5 = fmul contract double %30, %31
  %add3.5 = fadd contract double %add3.4, %mul.5
  %arrayidx7.5 = getelementptr inbounds double, double* %elemNodeCoords, i64 16
  %32 = load double, double* %arrayidx7.5, align 8, !tbaa !84
  %mul8.5 = fmul contract double %30, %32
  %add9.5 = fadd contract double %add9.4, %mul8.5
  %arrayidx13.5 = getelementptr inbounds double, double* %elemNodeCoords, i64 17
  %33 = load double, double* %arrayidx13.5, align 8, !tbaa !84
  %mul14.5 = fmul contract double %30, %33
  %add15.5 = fadd contract double %add15.4, %mul14.5
  %arrayidx17.5 = getelementptr inbounds double, double* %grad_vals, i64 16
  %34 = load double, double* %arrayidx17.5, align 8, !tbaa !84
  %mul20.5 = fmul contract double %31, %34
  %add21.5 = fadd contract double %add21.4, %mul20.5
  %mul26.5 = fmul contract double %32, %34
  %add27.5 = fadd contract double %add27.4, %mul26.5
  %mul32.5 = fmul contract double %33, %34
  %add33.5 = fadd contract double %add33.4, %mul32.5
  %arrayidx35.5 = getelementptr inbounds double, double* %grad_vals, i64 17
  %35 = load double, double* %arrayidx35.5, align 8, !tbaa !84
  %mul38.5 = fmul contract double %31, %35
  %add39.5 = fadd contract double %add39.4, %mul38.5
  %mul44.5 = fmul contract double %32, %35
  %add45.5 = fadd contract double %add45.4, %mul44.5
  %mul50.5 = fmul contract double %33, %35
  %add51.5 = fadd contract double %add51.4, %mul50.5
  %arrayidx.6 = getelementptr inbounds double, double* %grad_vals, i64 18
  %36 = load double, double* %arrayidx.6, align 8, !tbaa !84
  %arrayidx2.6 = getelementptr inbounds double, double* %elemNodeCoords, i64 18
  %37 = load double, double* %arrayidx2.6, align 8, !tbaa !84
  %mul.6 = fmul contract double %36, %37
  %add3.6 = fadd contract double %add3.5, %mul.6
  %arrayidx7.6 = getelementptr inbounds double, double* %elemNodeCoords, i64 19
  %38 = load double, double* %arrayidx7.6, align 8, !tbaa !84
  %mul8.6 = fmul contract double %36, %38
  %add9.6 = fadd contract double %add9.5, %mul8.6
  %arrayidx13.6 = getelementptr inbounds double, double* %elemNodeCoords, i64 20
  %39 = load double, double* %arrayidx13.6, align 8, !tbaa !84
  %mul14.6 = fmul contract double %36, %39
  %add15.6 = fadd contract double %add15.5, %mul14.6
  %arrayidx17.6 = getelementptr inbounds double, double* %grad_vals, i64 19
  %40 = load double, double* %arrayidx17.6, align 8, !tbaa !84
  %mul20.6 = fmul contract double %37, %40
  %add21.6 = fadd contract double %add21.5, %mul20.6
  %mul26.6 = fmul contract double %38, %40
  %add27.6 = fadd contract double %add27.5, %mul26.6
  %mul32.6 = fmul contract double %39, %40
  %add33.6 = fadd contract double %add33.5, %mul32.6
  %arrayidx35.6 = getelementptr inbounds double, double* %grad_vals, i64 20
  %41 = load double, double* %arrayidx35.6, align 8, !tbaa !84
  %mul38.6 = fmul contract double %37, %41
  %add39.6 = fadd contract double %add39.5, %mul38.6
  %mul44.6 = fmul contract double %38, %41
  %add45.6 = fadd contract double %add45.5, %mul44.6
  %mul50.6 = fmul contract double %39, %41
  %add51.6 = fadd contract double %add51.5, %mul50.6
  %arrayidx.7 = getelementptr inbounds double, double* %grad_vals, i64 21
  %42 = load double, double* %arrayidx.7, align 8, !tbaa !84
  %arrayidx2.7 = getelementptr inbounds double, double* %elemNodeCoords, i64 21
  %43 = load double, double* %arrayidx2.7, align 8, !tbaa !84
  %mul.7 = fmul contract double %42, %43
  %add3.7 = fadd contract double %add3.6, %mul.7
  %arrayidx7.7 = getelementptr inbounds double, double* %elemNodeCoords, i64 22
  %44 = load double, double* %arrayidx7.7, align 8, !tbaa !84
  %mul8.7 = fmul contract double %42, %44
  %add9.7 = fadd contract double %add9.6, %mul8.7
  %arrayidx13.7 = getelementptr inbounds double, double* %elemNodeCoords, i64 23
  %45 = load double, double* %arrayidx13.7, align 8, !tbaa !84
  %mul14.7 = fmul contract double %42, %45
  %add15.7 = fadd contract double %add15.6, %mul14.7
  %arrayidx17.7 = getelementptr inbounds double, double* %grad_vals, i64 22
  %46 = load double, double* %arrayidx17.7, align 8, !tbaa !84
  %mul20.7 = fmul contract double %43, %46
  %add21.7 = fadd contract double %add21.6, %mul20.7
  %mul26.7 = fmul contract double %44, %46
  %add27.7 = fadd contract double %add27.6, %mul26.7
  %mul32.7 = fmul contract double %45, %46
  %add33.7 = fadd contract double %add33.6, %mul32.7
  %arrayidx35.7 = getelementptr inbounds double, double* %grad_vals, i64 23
  %47 = load double, double* %arrayidx35.7, align 8, !tbaa !84
  %mul38.7 = fmul contract double %43, %47
  %add39.7 = fadd contract double %add39.6, %mul38.7
  %mul44.7 = fmul contract double %44, %47
  %add45.7 = fadd contract double %add45.6, %mul44.7
  %mul50.7 = fmul contract double %45, %47
  %add51.7 = fadd contract double %add51.6, %mul50.7
  %mul53 = fmul contract double %add27.7, %add51.7
  %mul54 = fmul contract double %add33.7, %add45.7
  %sub = fsub contract double %mul53, %mul54
  %mul55 = fmul contract double %add51.7, %add9.7
  %mul56 = fmul contract double %add45.7, %add15.7
  %sub57 = fsub contract double %mul55, %mul56
  %mul58 = fmul contract double %add33.7, %add9.7
  %mul59 = fmul contract double %add27.7, %add15.7
  %sub60 = fsub contract double %mul58, %mul59
  %mul61 = fmul contract double %sub, %add3.7
  %mul62 = fmul contract double %add21.7, %sub57
  %sub63 = fsub contract double %mul61, %mul62
  %mul64 = fmul contract double %add39.7, %sub60
  %add65 = fadd contract double %mul64, %sub63
  store double %add65, double* %detJ, align 8, !tbaa !84
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN6miniFE23sum_in_symm_elem_matrixINS_9CSRMatrixIdiiEEEEvmPKNT_17GlobalOrdinalTypeEPKNS3_10ScalarTypeERS3_(i64 noundef %num, i32* noundef %indices, double* noundef %coefs, %"struct.miniFE::CSRMatrix"* noundef nonnull align 8 dereferenceable(132) %mat) local_unnamed_addr #11 comdat {
entry:
  %_M_finish.i.i = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %mat, i64 0, i32 2, i32 0, i32 0, i32 1
  %_M_start.i.i = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %mat, i64 0, i32 2, i32 0, i32 0, i32 0
  %_M_start.i32.i = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %mat, i64 0, i32 3, i32 0, i32 0, i32 0
  %_M_start.i36.i = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %mat, i64 0, i32 5, i32 0, i32 0, i32 0
  %_M_start.i38.i = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %mat, i64 0, i32 6, i32 0, i32 0, i32 0
  %cmp95.not = icmp eq i64 %num, 0
  br i1 %cmp95.not, label %for.cond.cleanup, label %for.body

for.cond.cleanup:                                 ; preds = %cleanup, %entry
  ret void

for.body:                                         ; preds = %entry, %cleanup
  %row_offset.099 = phi i64 [ %add, %cleanup ], [ 0, %entry ]
  %i.096 = phi i64 [ %inc28, %cleanup ], [ 0, %entry ]
  %arrayidx = getelementptr inbounds i32, i32* %indices, i64 %i.096
  %0 = load i32, i32* %arrayidx, align 4, !tbaa !16
  %sext = shl i64 %row_offset.099, 32
  %idxprom = ashr exact i64 %sext, 32
  %sub = sub i64 %num, %i.096
  %add = add i64 %idxprom, %sub
  %1 = load i32*, i32** %_M_finish.i.i, align 8, !tbaa !71
  %2 = load i32*, i32** %_M_start.i.i, align 8, !tbaa !74
  %sub.ptr.lhs.cast.i.i = ptrtoint i32* %1 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i32* %2 to i64
  %sub.ptr.sub.i.i = sub i64 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  %cmp.not.i = icmp eq i64 %sub.ptr.sub.i.i, 0
  br i1 %cmp.not.i, label %_ZSt11lower_boundIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiET_S7_S7_RKT0_.exit.i, label %if.then.i

if.then.i:                                        ; preds = %for.body
  %sub.ptr.div.i.i = ashr exact i64 %sub.ptr.sub.i.i, 2
  %3 = load i32, i32* %2, align 4, !tbaa !16
  %sub.i = sub nsw i32 %0, %3
  %conv.i = sext i32 %sub.i to i64
  %cmp6.i = icmp ugt i64 %sub.ptr.div.i.i, %conv.i
  br i1 %cmp6.i, label %land.lhs.true.i, label %if.then13.i

land.lhs.true.i:                                  ; preds = %if.then.i
  %add.ptr.i.i = getelementptr inbounds i32, i32* %2, i64 %conv.i
  %4 = load i32, i32* %add.ptr.i.i, align 4, !tbaa !16
  %cmp9.i = icmp ne i32 %4, %0
  %cmp12.i = icmp eq i32 %sub.i, -1
  %or.cond.i = select i1 %cmp9.i, i1 true, i1 %cmp12.i
  br i1 %or.cond.i, label %if.then13.i, label %_ZN6miniFE9CSRMatrixIdiiE16get_row_pointersEiRmRPiRPd.exit

if.then13.i:                                      ; preds = %land.lhs.true.i, %if.then.i
  %cmp10.i.i.i = icmp sgt i64 %sub.ptr.sub.i.i, 0
  br i1 %cmp10.i.i.i, label %while.body.preheader.i.i.i, label %_ZSt11lower_boundIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiET_S7_S7_RKT0_.exit.i

while.body.preheader.i.i.i:                       ; preds = %if.then13.i
  %sub.ptr.div.i.i.i13.i.i.i = lshr exact i64 %sub.ptr.sub.i.i, 2
  br label %while.body.i.i.i

while.body.i.i.i:                                 ; preds = %while.body.i.i.i, %while.body.preheader.i.i.i
  %__len.012.i.i.i = phi i64 [ %__len.1.i.i.i, %while.body.i.i.i ], [ %sub.ptr.div.i.i.i13.i.i.i, %while.body.preheader.i.i.i ]
  %__first.sroa.0.011.i.i.i = phi i32* [ %__first.sroa.0.1.i.i.i, %while.body.i.i.i ], [ %2, %while.body.preheader.i.i.i ]
  %shr9.i.i.i = lshr i64 %__len.012.i.i.i, 1
  %__middle.sroa.0.0.i.i.i = getelementptr inbounds i32, i32* %__first.sroa.0.011.i.i.i, i64 %shr9.i.i.i
  %5 = load i32, i32* %__middle.sroa.0.0.i.i.i, align 4, !tbaa !16
  %cmp.i.i.i.i = icmp slt i32 %5, %0
  %incdec.ptr.i.i.i.i = getelementptr inbounds i32, i32* %__middle.sroa.0.0.i.i.i, i64 1
  %6 = xor i64 %shr9.i.i.i, -1
  %sub13.i.i.i = add i64 %__len.012.i.i.i, %6
  %__first.sroa.0.1.i.i.i = select i1 %cmp.i.i.i.i, i32* %incdec.ptr.i.i.i.i, i32* %__first.sroa.0.011.i.i.i
  %__len.1.i.i.i = select i1 %cmp.i.i.i.i, i64 %sub13.i.i.i, i64 %shr9.i.i.i
  %cmp.i.i.i = icmp sgt i64 %__len.1.i.i.i, 0
  br i1 %cmp.i.i.i, label %while.body.i.i.i, label %_ZSt11lower_boundIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiET_S7_S7_RKT0_.exit.loopexit.i, !llvm.loop !218

_ZSt11lower_boundIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiET_S7_S7_RKT0_.exit.loopexit.i: ; preds = %while.body.i.i.i
  %.pre.i = ptrtoint i32* %__first.sroa.0.1.i.i.i to i64
  br label %_ZSt11lower_boundIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiET_S7_S7_RKT0_.exit.i

_ZSt11lower_boundIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiET_S7_S7_RKT0_.exit.i: ; preds = %_ZSt11lower_boundIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiET_S7_S7_RKT0_.exit.loopexit.i, %if.then13.i, %for.body
  %coerce.val.pi15.i.i.pre-phi.i = phi i64 [ %.pre.i, %_ZSt11lower_boundIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiET_S7_S7_RKT0_.exit.loopexit.i ], [ %sub.ptr.rhs.cast.i.i, %if.then13.i ], [ %sub.ptr.rhs.cast.i.i, %for.body ]
  %__first.sroa.0.0.lcssa.i.i.i = phi i32* [ %__first.sroa.0.1.i.i.i, %_ZSt11lower_boundIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiET_S7_S7_RKT0_.exit.loopexit.i ], [ %2, %if.then13.i ], [ %2, %for.body ]
  %cmp.i.i = icmp eq i32* %__first.sroa.0.0.lcssa.i.i.i, %1
  br i1 %cmp.i.i, label %cleanup, label %lor.rhs.i

lor.rhs.i:                                        ; preds = %_ZSt11lower_boundIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiET_S7_S7_RKT0_.exit.i
  %7 = load i32, i32* %__first.sroa.0.0.lcssa.i.i.i, align 4, !tbaa !16
  %cmp33.not.i = icmp eq i32 %7, %0
  br i1 %cmp33.not.i, label %cleanup.thread.i, label %cleanup

cleanup.thread.i:                                 ; preds = %lor.rhs.i
  %sub.ptr.sub.i30.i = sub i64 %coerce.val.pi15.i.i.pre-phi.i, %sub.ptr.rhs.cast.i.i
  %sub.ptr.div.i31.i = ashr exact i64 %sub.ptr.sub.i30.i, 2
  br label %_ZN6miniFE9CSRMatrixIdiiE16get_row_pointersEiRmRPiRPd.exit

_ZN6miniFE9CSRMatrixIdiiE16get_row_pointersEiRmRPiRPd.exit: ; preds = %land.lhs.true.i, %cleanup.thread.i
  %local_row.3.i = phi i64 [ %sub.ptr.div.i31.i, %cleanup.thread.i ], [ %conv.i, %land.lhs.true.i ]
  %8 = load i32*, i32** %_M_start.i32.i, align 8, !tbaa !74
  %add.ptr.i33.i = getelementptr inbounds i32, i32* %8, i64 %local_row.3.i
  %9 = load i32, i32* %add.ptr.i33.i, align 4, !tbaa !16
  %add.i = add nsw i64 %local_row.3.i, 1
  %add.ptr.i35.i = getelementptr inbounds i32, i32* %8, i64 %add.i
  %10 = load i32, i32* %add.ptr.i35.i, align 4, !tbaa !16
  %sub46.i = sub nsw i32 %10, %9
  %conv48.i = sext i32 %9 to i64
  %11 = load i32*, i32** %_M_start.i36.i, align 8, !tbaa !74
  %add.ptr.i37.i = getelementptr inbounds i32, i32* %11, i64 %conv48.i
  %12 = load double*, double** %_M_start.i38.i, align 8, !tbaa !78
  %add.ptr.i39.i = getelementptr inbounds double, double* %12, i64 %conv48.i
  %cmp4 = icmp eq i32 %sub46.i, 0
  br i1 %cmp4, label %cleanup, label %if.end

if.end:                                           ; preds = %_ZN6miniFE9CSRMatrixIdiiE16get_row_pointersEiRmRPiRPd.exit
  %arrayidx1 = getelementptr inbounds double, double* %coefs, i64 %idxprom
  %conv6 = trunc i64 %sub to i32
  %idx.ext.i = sext i32 %sub46.i to i64
  %sub.ptr.rhs.cast.i.i.i.i.i = ptrtoint i32* %add.ptr.i37.i to i64
  %cmp15.i.i.i = icmp sgt i32 %sub46.i, 0
  %add.ptr.idx.i = and i64 %idx.ext.i, 4611686018427387903
  %cmp14.not.i = icmp eq i32 %conv6, 0
  br i1 %cmp14.not.i, label %_ZN6miniFE12sum_into_rowIidEEviPT_PT0_iPKS1_PKS3_.exit, label %for.body.preheader.i

for.body.preheader.i:                             ; preds = %if.end
  %sext91 = shl i64 %sub, 32
  %umax.i = ashr exact i64 %sext91, 32
  br label %for.body.i

for.body.i:                                       ; preds = %if.end.i.for.body.i_crit_edge, %for.body.preheader.i
  %13 = phi i32 [ %.pre, %if.end.i.for.body.i_crit_edge ], [ %0, %for.body.preheader.i ]
  %i.015.i = phi i64 [ %inc.i, %if.end.i.for.body.i_crit_edge ], [ 0, %for.body.preheader.i ]
  br i1 %cmp15.i.i.i, label %while.body.i.i.i32, label %_ZSt11lower_boundIPiiET_S1_S1_RKT0_.exit.i

while.body.i.i.i32:                               ; preds = %for.body.i, %while.body.i.i.i32
  %__first.addr.017.i.i.i = phi i32* [ %__first.addr.1.i.i.i, %while.body.i.i.i32 ], [ %add.ptr.i37.i, %for.body.i ]
  %__len.016.i.i.i = phi i64 [ %__len.1.i.i.i30, %while.body.i.i.i32 ], [ %add.ptr.idx.i, %for.body.i ]
  %shr14.i.i.i = lshr i64 %__len.016.i.i.i, 1
  %incdec.ptr4.sink.i.i.i.i.i = getelementptr inbounds i32, i32* %__first.addr.017.i.i.i, i64 %shr14.i.i.i
  %14 = load i32, i32* %incdec.ptr4.sink.i.i.i.i.i, align 4, !tbaa !16
  %cmp.i.i.i.i29 = icmp slt i32 %14, %13
  %incdec.ptr.i.i.i = getelementptr inbounds i32, i32* %incdec.ptr4.sink.i.i.i.i.i, i64 1
  %15 = xor i64 %shr14.i.i.i, -1
  %sub2.i.i.i = add i64 %__len.016.i.i.i, %15
  %__len.1.i.i.i30 = select i1 %cmp.i.i.i.i29, i64 %sub2.i.i.i, i64 %shr14.i.i.i
  %__first.addr.1.i.i.i = select i1 %cmp.i.i.i.i29, i32* %incdec.ptr.i.i.i, i32* %__first.addr.017.i.i.i
  %cmp.i.i.i31 = icmp sgt i64 %__len.1.i.i.i30, 0
  br i1 %cmp.i.i.i31, label %while.body.i.i.i32, label %_ZSt11lower_boundIPiiET_S1_S1_RKT0_.exit.loopexit.i, !llvm.loop !219

_ZSt11lower_boundIPiiET_S1_S1_RKT0_.exit.loopexit.i: ; preds = %while.body.i.i.i32
  %.pre.i33 = ptrtoint i32* %__first.addr.1.i.i.i to i64
  br label %_ZSt11lower_boundIPiiET_S1_S1_RKT0_.exit.i

_ZSt11lower_boundIPiiET_S1_S1_RKT0_.exit.i:       ; preds = %_ZSt11lower_boundIPiiET_S1_S1_RKT0_.exit.loopexit.i, %for.body.i
  %sub.ptr.lhs.cast.pre-phi.i = phi i64 [ %.pre.i33, %_ZSt11lower_boundIPiiET_S1_S1_RKT0_.exit.loopexit.i ], [ %sub.ptr.rhs.cast.i.i.i.i.i, %for.body.i ]
  %__first.addr.0.lcssa.i.i.i = phi i32* [ %__first.addr.1.i.i.i, %_ZSt11lower_boundIPiiET_S1_S1_RKT0_.exit.loopexit.i ], [ %add.ptr.i37.i, %for.body.i ]
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.pre-phi.i, %sub.ptr.rhs.cast.i.i.i.i.i
  %sub.ptr.div.i = ashr exact i64 %sub.ptr.sub.i, 2
  %cmp2.i = icmp slt i64 %sub.ptr.div.i, %idx.ext.i
  br i1 %cmp2.i, label %land.lhs.true.i34, label %if.end.i

land.lhs.true.i34:                                ; preds = %_ZSt11lower_boundIPiiET_S1_S1_RKT0_.exit.i
  %16 = load i32, i32* %__first.addr.0.lcssa.i.i.i, align 4, !tbaa !16
  %cmp4.i = icmp eq i32 %16, %13
  br i1 %cmp4.i, label %if.then.i35, label %if.end.i

if.then.i35:                                      ; preds = %land.lhs.true.i34
  %arrayidx9.i = getelementptr inbounds double, double* %add.ptr.i39.i, i64 %sub.ptr.div.i
  %arrayidx10.i = getelementptr inbounds double, double* %arrayidx1, i64 %i.015.i
  %17 = load double, double* %arrayidx10.i, align 8, !tbaa !84
  %18 = bitcast double* %arrayidx9.i to i64*
  %atomic-load.i = load atomic i64, i64* %18 monotonic, align 8, !tbaa !84
  br label %atomic_cont.i

atomic_cont.i:                                    ; preds = %atomic_cont.i, %if.then.i35
  %19 = phi i64 [ %atomic-load.i, %if.then.i35 ], [ %23, %atomic_cont.i ]
  %20 = bitcast i64 %19 to double
  %add.i36 = fadd contract double %17, %20
  %21 = bitcast double %add.i36 to i64
  %22 = cmpxchg i64* %18, i64 %19, i64 %21 monotonic monotonic, align 8
  %23 = extractvalue { i64, i1 } %22, 0
  %24 = extractvalue { i64, i1 } %22, 1
  br i1 %24, label %if.end.i, label %atomic_cont.i

if.end.i:                                         ; preds = %atomic_cont.i, %land.lhs.true.i34, %_ZSt11lower_boundIPiiET_S1_S1_RKT0_.exit.i
  %inc.i = add nuw i64 %i.015.i, 1
  %exitcond.not.i = icmp eq i64 %inc.i, %umax.i
  br i1 %exitcond.not.i, label %_ZN6miniFE12sum_into_rowIidEEviPT_PT0_iPKS1_PKS3_.exit, label %if.end.i.for.body.i_crit_edge, !llvm.loop !220

if.end.i.for.body.i_crit_edge:                    ; preds = %if.end.i
  %arrayidx.i.phi.trans.insert = getelementptr inbounds i32, i32* %arrayidx, i64 %inc.i
  %.pre = load i32, i32* %arrayidx.i.phi.trans.insert, align 4
  br label %for.body.i

_ZN6miniFE12sum_into_rowIidEEviPT_PT0_iPKS1_PKS3_.exit: ; preds = %if.end.i, %if.end
  %cmp992.not = icmp eq i64 %i.096, 0
  br i1 %cmp992.not, label %cleanup, label %for.body11

for.body11:                                       ; preds = %_ZN6miniFE12sum_into_rowIidEEviPT_PT0_iPKS1_PKS3_.exit, %if.end.i77
  %j.094 = phi i64 [ %add16, %if.end.i77 ], [ 0, %_ZN6miniFE12sum_into_rowIidEEviPT_PT0_iPKS1_PKS3_.exit ]
  %offset.0.in93 = phi i64 [ %add19, %if.end.i77 ], [ %i.096, %_ZN6miniFE12sum_into_rowIidEEviPT_PT0_iPKS1_PKS3_.exit ]
  %sext26 = shl i64 %offset.0.in93, 32
  %idxprom12 = ashr exact i64 %sext26, 32
  %arrayidx13 = getelementptr inbounds double, double* %coefs, i64 %idxprom12
  %25 = load double, double* %arrayidx13, align 8, !tbaa !84
  %arrayidx15 = getelementptr inbounds i32, i32* %indices, i64 %j.094
  %26 = load i32, i32* %arrayidx15, align 4
  br i1 %cmp15.i.i.i, label %while.body.i.i.i58, label %_ZSt11lower_boundIPiiET_S1_S1_RKT0_.exit.i66

while.body.i.i.i58:                               ; preds = %for.body11, %while.body.i.i.i58
  %__first.addr.017.i.i.i45 = phi i32* [ %__first.addr.1.i.i.i56, %while.body.i.i.i58 ], [ %add.ptr.i37.i, %for.body11 ]
  %__len.016.i.i.i46 = phi i64 [ %__len.1.i.i.i55, %while.body.i.i.i58 ], [ %add.ptr.idx.i, %for.body11 ]
  %shr14.i.i.i47 = lshr i64 %__len.016.i.i.i46, 1
  %incdec.ptr4.sink.i.i.i.i.i51 = getelementptr inbounds i32, i32* %__first.addr.017.i.i.i45, i64 %shr14.i.i.i47
  %27 = load i32, i32* %incdec.ptr4.sink.i.i.i.i.i51, align 4, !tbaa !16
  %cmp.i.i.i.i52 = icmp slt i32 %27, %26
  %incdec.ptr.i.i.i53 = getelementptr inbounds i32, i32* %incdec.ptr4.sink.i.i.i.i.i51, i64 1
  %28 = xor i64 %shr14.i.i.i47, -1
  %sub2.i.i.i54 = add i64 %__len.016.i.i.i46, %28
  %__len.1.i.i.i55 = select i1 %cmp.i.i.i.i52, i64 %sub2.i.i.i54, i64 %shr14.i.i.i47
  %__first.addr.1.i.i.i56 = select i1 %cmp.i.i.i.i52, i32* %incdec.ptr.i.i.i53, i32* %__first.addr.017.i.i.i45
  %cmp.i.i.i57 = icmp sgt i64 %__len.1.i.i.i55, 0
  br i1 %cmp.i.i.i57, label %while.body.i.i.i58, label %_ZSt11lower_boundIPiiET_S1_S1_RKT0_.exit.loopexit.i60, !llvm.loop !219

_ZSt11lower_boundIPiiET_S1_S1_RKT0_.exit.loopexit.i60: ; preds = %while.body.i.i.i58
  %.pre.i59 = ptrtoint i32* %__first.addr.1.i.i.i56 to i64
  br label %_ZSt11lower_boundIPiiET_S1_S1_RKT0_.exit.i66

_ZSt11lower_boundIPiiET_S1_S1_RKT0_.exit.i66:     ; preds = %_ZSt11lower_boundIPiiET_S1_S1_RKT0_.exit.loopexit.i60, %for.body11
  %sub.ptr.lhs.cast.pre-phi.i61 = phi i64 [ %.pre.i59, %_ZSt11lower_boundIPiiET_S1_S1_RKT0_.exit.loopexit.i60 ], [ %sub.ptr.rhs.cast.i.i.i.i.i, %for.body11 ]
  %__first.addr.0.lcssa.i.i.i62 = phi i32* [ %__first.addr.1.i.i.i56, %_ZSt11lower_boundIPiiET_S1_S1_RKT0_.exit.loopexit.i60 ], [ %add.ptr.i37.i, %for.body11 ]
  %sub.ptr.sub.i63 = sub i64 %sub.ptr.lhs.cast.pre-phi.i61, %sub.ptr.rhs.cast.i.i.i.i.i
  %sub.ptr.div.i64 = ashr exact i64 %sub.ptr.sub.i63, 2
  %cmp2.i65 = icmp slt i64 %sub.ptr.div.i64, %idx.ext.i
  br i1 %cmp2.i65, label %land.lhs.true.i68, label %if.end.i77

land.lhs.true.i68:                                ; preds = %_ZSt11lower_boundIPiiET_S1_S1_RKT0_.exit.i66
  %29 = load i32, i32* %__first.addr.0.lcssa.i.i.i62, align 4, !tbaa !16
  %cmp4.i67 = icmp eq i32 %29, %26
  br i1 %cmp4.i67, label %if.then.i72, label %if.end.i77

if.then.i72:                                      ; preds = %land.lhs.true.i68
  %arrayidx9.i69 = getelementptr inbounds double, double* %add.ptr.i39.i, i64 %sub.ptr.div.i64
  %30 = bitcast double* %arrayidx9.i69 to i64*
  %atomic-load.i71 = load atomic i64, i64* %30 monotonic, align 8, !tbaa !84
  br label %atomic_cont.i74

atomic_cont.i74:                                  ; preds = %atomic_cont.i74, %if.then.i72
  %31 = phi i64 [ %atomic-load.i71, %if.then.i72 ], [ %35, %atomic_cont.i74 ]
  %32 = bitcast i64 %31 to double
  %add.i73 = fadd contract double %25, %32
  %33 = bitcast double %add.i73 to i64
  %34 = cmpxchg i64* %30, i64 %31, i64 %33 monotonic monotonic, align 8
  %35 = extractvalue { i64, i1 } %34, 0
  %36 = extractvalue { i64, i1 } %34, 1
  br i1 %36, label %if.end.i77, label %atomic_cont.i74

if.end.i77:                                       ; preds = %atomic_cont.i74, %land.lhs.true.i68, %_ZSt11lower_boundIPiiET_S1_S1_RKT0_.exit.i66
  %add16 = add nuw i64 %j.094, 1
  %add16.neg = xor i64 %j.094, -1
  %sub17 = add i64 %add16.neg, %num
  %add19 = add i64 %sub17, %idxprom12
  %exitcond.not = icmp eq i64 %add16, %i.096
  br i1 %exitcond.not, label %cleanup, label %for.body11, !llvm.loop !221

cleanup:                                          ; preds = %if.end.i77, %_ZN6miniFE12sum_into_rowIidEEviPT_PT0_iPKS1_PKS3_.exit, %_ZSt11lower_boundIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiET_S7_S7_RKT0_.exit.i, %lor.rhs.i, %_ZN6miniFE9CSRMatrixIdiiE16get_row_pointersEiRmRPiRPd.exit
  %inc28 = add nuw i64 %i.096, 1
  %exitcond100.not = icmp eq i64 %inc28, %num
  br i1 %exitcond100.not, label %for.cond.cleanup, label %for.body, !llvm.loop !222
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN6miniFE30zero_row_and_put_1_on_diagonalINS_9CSRMatrixIdiiEEEEvRT_NS3_17GlobalOrdinalTypeE(%"struct.miniFE::CSRMatrix"* noundef nonnull align 8 dereferenceable(132) %A, i32 noundef signext %row) local_unnamed_addr #11 comdat {
entry:
  %_M_finish.i.i = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 2, i32 0, i32 0, i32 1
  %0 = load i32*, i32** %_M_finish.i.i, align 8, !tbaa !71
  %_M_start.i.i = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 2, i32 0, i32 0, i32 0
  %1 = load i32*, i32** %_M_start.i.i, align 8, !tbaa !74
  %sub.ptr.lhs.cast.i.i = ptrtoint i32* %0 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i32* %1 to i64
  %sub.ptr.sub.i.i = sub i64 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  %cmp.not.i = icmp eq i64 %sub.ptr.sub.i.i, 0
  br i1 %cmp.not.i, label %_ZSt11lower_boundIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiET_S7_S7_RKT0_.exit.i, label %if.then.i

if.then.i:                                        ; preds = %entry
  %sub.ptr.div.i.i = ashr exact i64 %sub.ptr.sub.i.i, 2
  %2 = load i32, i32* %1, align 4, !tbaa !16
  %sub.i = sub nsw i32 %row, %2
  %conv.i = sext i32 %sub.i to i64
  %cmp6.i = icmp ugt i64 %sub.ptr.div.i.i, %conv.i
  br i1 %cmp6.i, label %land.lhs.true.i, label %if.then13.i

land.lhs.true.i:                                  ; preds = %if.then.i
  %add.ptr.i.i = getelementptr inbounds i32, i32* %1, i64 %conv.i
  %3 = load i32, i32* %add.ptr.i.i, align 4, !tbaa !16
  %cmp9.i = icmp ne i32 %3, %row
  %cmp12.i = icmp eq i32 %sub.i, -1
  %or.cond.i = select i1 %cmp9.i, i1 true, i1 %cmp12.i
  br i1 %or.cond.i, label %if.then13.i, label %_ZN6miniFE9CSRMatrixIdiiE16get_row_pointersEiRmRPiRPd.exit

if.then13.i:                                      ; preds = %land.lhs.true.i, %if.then.i
  %cmp10.i.i.i = icmp sgt i64 %sub.ptr.sub.i.i, 0
  br i1 %cmp10.i.i.i, label %while.body.preheader.i.i.i, label %_ZSt11lower_boundIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiET_S7_S7_RKT0_.exit.i

while.body.preheader.i.i.i:                       ; preds = %if.then13.i
  %sub.ptr.div.i.i.i13.i.i.i = lshr exact i64 %sub.ptr.sub.i.i, 2
  br label %while.body.i.i.i

while.body.i.i.i:                                 ; preds = %while.body.i.i.i, %while.body.preheader.i.i.i
  %__len.012.i.i.i = phi i64 [ %__len.1.i.i.i, %while.body.i.i.i ], [ %sub.ptr.div.i.i.i13.i.i.i, %while.body.preheader.i.i.i ]
  %__first.sroa.0.011.i.i.i = phi i32* [ %__first.sroa.0.1.i.i.i, %while.body.i.i.i ], [ %1, %while.body.preheader.i.i.i ]
  %shr9.i.i.i = lshr i64 %__len.012.i.i.i, 1
  %__middle.sroa.0.0.i.i.i = getelementptr inbounds i32, i32* %__first.sroa.0.011.i.i.i, i64 %shr9.i.i.i
  %4 = load i32, i32* %__middle.sroa.0.0.i.i.i, align 4, !tbaa !16
  %cmp.i.i.i.i = icmp slt i32 %4, %row
  %incdec.ptr.i.i.i.i = getelementptr inbounds i32, i32* %__middle.sroa.0.0.i.i.i, i64 1
  %5 = xor i64 %shr9.i.i.i, -1
  %sub13.i.i.i = add i64 %__len.012.i.i.i, %5
  %__first.sroa.0.1.i.i.i = select i1 %cmp.i.i.i.i, i32* %incdec.ptr.i.i.i.i, i32* %__first.sroa.0.011.i.i.i
  %__len.1.i.i.i = select i1 %cmp.i.i.i.i, i64 %sub13.i.i.i, i64 %shr9.i.i.i
  %cmp.i.i.i = icmp sgt i64 %__len.1.i.i.i, 0
  br i1 %cmp.i.i.i, label %while.body.i.i.i, label %_ZSt11lower_boundIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiET_S7_S7_RKT0_.exit.loopexit.i, !llvm.loop !218

_ZSt11lower_boundIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiET_S7_S7_RKT0_.exit.loopexit.i: ; preds = %while.body.i.i.i
  %.pre.i = ptrtoint i32* %__first.sroa.0.1.i.i.i to i64
  br label %_ZSt11lower_boundIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiET_S7_S7_RKT0_.exit.i

_ZSt11lower_boundIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiET_S7_S7_RKT0_.exit.i: ; preds = %_ZSt11lower_boundIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiET_S7_S7_RKT0_.exit.loopexit.i, %if.then13.i, %entry
  %coerce.val.pi15.i.i.pre-phi.i = phi i64 [ %.pre.i, %_ZSt11lower_boundIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiET_S7_S7_RKT0_.exit.loopexit.i ], [ %sub.ptr.rhs.cast.i.i, %if.then13.i ], [ %sub.ptr.rhs.cast.i.i, %entry ]
  %__first.sroa.0.0.lcssa.i.i.i = phi i32* [ %__first.sroa.0.1.i.i.i, %_ZSt11lower_boundIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiET_S7_S7_RKT0_.exit.loopexit.i ], [ %1, %if.then13.i ], [ %1, %entry ]
  %cmp.i.i = icmp eq i32* %__first.sroa.0.0.lcssa.i.i.i, %0
  br i1 %cmp.i.i, label %for.cond.cleanup, label %lor.rhs.i

lor.rhs.i:                                        ; preds = %_ZSt11lower_boundIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiET_S7_S7_RKT0_.exit.i
  %6 = load i32, i32* %__first.sroa.0.0.lcssa.i.i.i, align 4, !tbaa !16
  %cmp33.not.i = icmp eq i32 %6, %row
  br i1 %cmp33.not.i, label %cleanup.thread.i, label %for.cond.cleanup

cleanup.thread.i:                                 ; preds = %lor.rhs.i
  %sub.ptr.sub.i30.i = sub i64 %coerce.val.pi15.i.i.pre-phi.i, %sub.ptr.rhs.cast.i.i
  %sub.ptr.div.i31.i = ashr exact i64 %sub.ptr.sub.i30.i, 2
  br label %_ZN6miniFE9CSRMatrixIdiiE16get_row_pointersEiRmRPiRPd.exit

_ZN6miniFE9CSRMatrixIdiiE16get_row_pointersEiRmRPiRPd.exit: ; preds = %land.lhs.true.i, %cleanup.thread.i
  %local_row.3.i = phi i64 [ %sub.ptr.div.i31.i, %cleanup.thread.i ], [ %conv.i, %land.lhs.true.i ]
  %_M_start.i32.i = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 3, i32 0, i32 0, i32 0
  %7 = load i32*, i32** %_M_start.i32.i, align 8, !tbaa !74
  %add.ptr.i33.i = getelementptr inbounds i32, i32* %7, i64 %local_row.3.i
  %8 = load i32, i32* %add.ptr.i33.i, align 4, !tbaa !16
  %add.i = add nsw i64 %local_row.3.i, 1
  %add.ptr.i35.i = getelementptr inbounds i32, i32* %7, i64 %add.i
  %9 = load i32, i32* %add.ptr.i35.i, align 4, !tbaa !16
  %sub46.i = sub nsw i32 %9, %8
  %conv47.i = sext i32 %sub46.i to i64
  %conv48.i = sext i32 %8 to i64
  %_M_start.i36.i = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 5, i32 0, i32 0, i32 0
  %10 = load i32*, i32** %_M_start.i36.i, align 8, !tbaa !74
  %add.ptr.i37.i = getelementptr i32, i32* %10, i64 %conv48.i
  %_M_start.i38.i = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 6, i32 0, i32 0, i32 0
  %11 = load double*, double** %_M_start.i38.i, align 8, !tbaa !78
  %add.ptr.i39.i = getelementptr double, double* %11, i64 %conv48.i
  %cmp11.not = icmp eq i32 %sub46.i, 0
  br i1 %cmp11.not, label %for.cond.cleanup, label %for.body.preheader

for.body.preheader:                               ; preds = %_ZN6miniFE9CSRMatrixIdiiE16get_row_pointersEiRmRPiRPd.exit
  %min.iters.check = icmp ult i32 %sub46.i, 24
  br i1 %min.iters.check, label %for.body.preheader56, label %vector.memcheck

vector.memcheck:                                  ; preds = %for.body.preheader
  %12 = sext i32 %9 to i64
  %scevgep = getelementptr double, double* %11, i64 %12
  %scevgep21 = getelementptr i32, i32* %10, i64 %12
  %13 = bitcast i32* %scevgep21 to double*
  %bound0 = icmp ult double* %add.ptr.i39.i, %13
  %14 = bitcast double* %scevgep to i32*
  %bound1 = icmp ult i32* %add.ptr.i37.i, %14
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.preheader56, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.mod.vf = urem i64 %conv47.i, 24
  %n.vec = sub nsw i64 %conv47.i, %n.mod.vf
  %broadcast.splatinsert = insertelement <2 x i32> poison, i32 %row, i64 0
  %broadcast.splat = shufflevector <2 x i32> %broadcast.splatinsert, <2 x i32> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert34 = insertelement <2 x i32> poison, i32 %row, i64 0
  %broadcast.splat35 = shufflevector <2 x i32> %broadcast.splatinsert34, <2 x i32> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert36 = insertelement <2 x i32> poison, i32 %row, i64 0
  %broadcast.splat37 = shufflevector <2 x i32> %broadcast.splatinsert36, <2 x i32> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert38 = insertelement <2 x i32> poison, i32 %row, i64 0
  %broadcast.splat39 = shufflevector <2 x i32> %broadcast.splatinsert38, <2 x i32> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert40 = insertelement <2 x i32> poison, i32 %row, i64 0
  %broadcast.splat41 = shufflevector <2 x i32> %broadcast.splatinsert40, <2 x i32> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert42 = insertelement <2 x i32> poison, i32 %row, i64 0
  %broadcast.splat43 = shufflevector <2 x i32> %broadcast.splatinsert42, <2 x i32> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert44 = insertelement <2 x i32> poison, i32 %row, i64 0
  %broadcast.splat45 = shufflevector <2 x i32> %broadcast.splatinsert44, <2 x i32> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert46 = insertelement <2 x i32> poison, i32 %row, i64 0
  %broadcast.splat47 = shufflevector <2 x i32> %broadcast.splatinsert46, <2 x i32> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert48 = insertelement <2 x i32> poison, i32 %row, i64 0
  %broadcast.splat49 = shufflevector <2 x i32> %broadcast.splatinsert48, <2 x i32> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert50 = insertelement <2 x i32> poison, i32 %row, i64 0
  %broadcast.splat51 = shufflevector <2 x i32> %broadcast.splatinsert50, <2 x i32> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert52 = insertelement <2 x i32> poison, i32 %row, i64 0
  %broadcast.splat53 = shufflevector <2 x i32> %broadcast.splatinsert52, <2 x i32> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert54 = insertelement <2 x i32> poison, i32 %row, i64 0
  %broadcast.splat55 = shufflevector <2 x i32> %broadcast.splatinsert54, <2 x i32> poison, <2 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %15 = getelementptr inbounds i32, i32* %add.ptr.i37.i, i64 %index
  %16 = bitcast i32* %15 to <2 x i32>*
  %wide.load = load <2 x i32>, <2 x i32>* %16, align 4, !tbaa !16, !alias.scope !223
  %17 = getelementptr inbounds i32, i32* %15, i64 2
  %18 = bitcast i32* %17 to <2 x i32>*
  %wide.load23 = load <2 x i32>, <2 x i32>* %18, align 4, !tbaa !16, !alias.scope !223
  %19 = getelementptr inbounds i32, i32* %15, i64 4
  %20 = bitcast i32* %19 to <2 x i32>*
  %wide.load24 = load <2 x i32>, <2 x i32>* %20, align 4, !tbaa !16, !alias.scope !223
  %21 = getelementptr inbounds i32, i32* %15, i64 6
  %22 = bitcast i32* %21 to <2 x i32>*
  %wide.load25 = load <2 x i32>, <2 x i32>* %22, align 4, !tbaa !16, !alias.scope !223
  %23 = getelementptr inbounds i32, i32* %15, i64 8
  %24 = bitcast i32* %23 to <2 x i32>*
  %wide.load26 = load <2 x i32>, <2 x i32>* %24, align 4, !tbaa !16, !alias.scope !223
  %25 = getelementptr inbounds i32, i32* %15, i64 10
  %26 = bitcast i32* %25 to <2 x i32>*
  %wide.load27 = load <2 x i32>, <2 x i32>* %26, align 4, !tbaa !16, !alias.scope !223
  %27 = getelementptr inbounds i32, i32* %15, i64 12
  %28 = bitcast i32* %27 to <2 x i32>*
  %wide.load28 = load <2 x i32>, <2 x i32>* %28, align 4, !tbaa !16, !alias.scope !223
  %29 = getelementptr inbounds i32, i32* %15, i64 14
  %30 = bitcast i32* %29 to <2 x i32>*
  %wide.load29 = load <2 x i32>, <2 x i32>* %30, align 4, !tbaa !16, !alias.scope !223
  %31 = getelementptr inbounds i32, i32* %15, i64 16
  %32 = bitcast i32* %31 to <2 x i32>*
  %wide.load30 = load <2 x i32>, <2 x i32>* %32, align 4, !tbaa !16, !alias.scope !223
  %33 = getelementptr inbounds i32, i32* %15, i64 18
  %34 = bitcast i32* %33 to <2 x i32>*
  %wide.load31 = load <2 x i32>, <2 x i32>* %34, align 4, !tbaa !16, !alias.scope !223
  %35 = getelementptr inbounds i32, i32* %15, i64 20
  %36 = bitcast i32* %35 to <2 x i32>*
  %wide.load32 = load <2 x i32>, <2 x i32>* %36, align 4, !tbaa !16, !alias.scope !223
  %37 = getelementptr inbounds i32, i32* %15, i64 22
  %38 = bitcast i32* %37 to <2 x i32>*
  %wide.load33 = load <2 x i32>, <2 x i32>* %38, align 4, !tbaa !16, !alias.scope !223
  %39 = icmp eq <2 x i32> %wide.load, %broadcast.splat
  %40 = icmp eq <2 x i32> %wide.load23, %broadcast.splat35
  %41 = icmp eq <2 x i32> %wide.load24, %broadcast.splat37
  %42 = icmp eq <2 x i32> %wide.load25, %broadcast.splat39
  %43 = icmp eq <2 x i32> %wide.load26, %broadcast.splat41
  %44 = icmp eq <2 x i32> %wide.load27, %broadcast.splat43
  %45 = icmp eq <2 x i32> %wide.load28, %broadcast.splat45
  %46 = icmp eq <2 x i32> %wide.load29, %broadcast.splat47
  %47 = icmp eq <2 x i32> %wide.load30, %broadcast.splat49
  %48 = icmp eq <2 x i32> %wide.load31, %broadcast.splat51
  %49 = icmp eq <2 x i32> %wide.load32, %broadcast.splat53
  %50 = icmp eq <2 x i32> %wide.load33, %broadcast.splat55
  %51 = select <2 x i1> %39, <2 x double> <double 1.000000e+00, double 1.000000e+00>, <2 x double> zeroinitializer
  %52 = select <2 x i1> %40, <2 x double> <double 1.000000e+00, double 1.000000e+00>, <2 x double> zeroinitializer
  %53 = select <2 x i1> %41, <2 x double> <double 1.000000e+00, double 1.000000e+00>, <2 x double> zeroinitializer
  %54 = select <2 x i1> %42, <2 x double> <double 1.000000e+00, double 1.000000e+00>, <2 x double> zeroinitializer
  %55 = select <2 x i1> %43, <2 x double> <double 1.000000e+00, double 1.000000e+00>, <2 x double> zeroinitializer
  %56 = select <2 x i1> %44, <2 x double> <double 1.000000e+00, double 1.000000e+00>, <2 x double> zeroinitializer
  %57 = select <2 x i1> %45, <2 x double> <double 1.000000e+00, double 1.000000e+00>, <2 x double> zeroinitializer
  %58 = select <2 x i1> %46, <2 x double> <double 1.000000e+00, double 1.000000e+00>, <2 x double> zeroinitializer
  %59 = select <2 x i1> %47, <2 x double> <double 1.000000e+00, double 1.000000e+00>, <2 x double> zeroinitializer
  %60 = select <2 x i1> %48, <2 x double> <double 1.000000e+00, double 1.000000e+00>, <2 x double> zeroinitializer
  %61 = select <2 x i1> %49, <2 x double> <double 1.000000e+00, double 1.000000e+00>, <2 x double> zeroinitializer
  %62 = select <2 x i1> %50, <2 x double> <double 1.000000e+00, double 1.000000e+00>, <2 x double> zeroinitializer
  %63 = getelementptr inbounds double, double* %add.ptr.i39.i, i64 %index
  %64 = bitcast double* %63 to <2 x double>*
  store <2 x double> %51, <2 x double>* %64, align 8, !alias.scope !226, !noalias !223
  %65 = getelementptr inbounds double, double* %63, i64 2
  %66 = bitcast double* %65 to <2 x double>*
  store <2 x double> %52, <2 x double>* %66, align 8, !alias.scope !226, !noalias !223
  %67 = getelementptr inbounds double, double* %63, i64 4
  %68 = bitcast double* %67 to <2 x double>*
  store <2 x double> %53, <2 x double>* %68, align 8, !alias.scope !226, !noalias !223
  %69 = getelementptr inbounds double, double* %63, i64 6
  %70 = bitcast double* %69 to <2 x double>*
  store <2 x double> %54, <2 x double>* %70, align 8, !alias.scope !226, !noalias !223
  %71 = getelementptr inbounds double, double* %63, i64 8
  %72 = bitcast double* %71 to <2 x double>*
  store <2 x double> %55, <2 x double>* %72, align 8, !alias.scope !226, !noalias !223
  %73 = getelementptr inbounds double, double* %63, i64 10
  %74 = bitcast double* %73 to <2 x double>*
  store <2 x double> %56, <2 x double>* %74, align 8, !alias.scope !226, !noalias !223
  %75 = getelementptr inbounds double, double* %63, i64 12
  %76 = bitcast double* %75 to <2 x double>*
  store <2 x double> %57, <2 x double>* %76, align 8, !alias.scope !226, !noalias !223
  %77 = getelementptr inbounds double, double* %63, i64 14
  %78 = bitcast double* %77 to <2 x double>*
  store <2 x double> %58, <2 x double>* %78, align 8, !alias.scope !226, !noalias !223
  %79 = getelementptr inbounds double, double* %63, i64 16
  %80 = bitcast double* %79 to <2 x double>*
  store <2 x double> %59, <2 x double>* %80, align 8, !alias.scope !226, !noalias !223
  %81 = getelementptr inbounds double, double* %63, i64 18
  %82 = bitcast double* %81 to <2 x double>*
  store <2 x double> %60, <2 x double>* %82, align 8, !alias.scope !226, !noalias !223
  %83 = getelementptr inbounds double, double* %63, i64 20
  %84 = bitcast double* %83 to <2 x double>*
  store <2 x double> %61, <2 x double>* %84, align 8, !alias.scope !226, !noalias !223
  %85 = getelementptr inbounds double, double* %63, i64 22
  %86 = bitcast double* %85 to <2 x double>*
  store <2 x double> %62, <2 x double>* %86, align 8, !alias.scope !226, !noalias !223
  %index.next = add nuw i64 %index, 24
  %87 = icmp eq i64 %index.next, %n.vec
  br i1 %87, label %middle.block, label %vector.body, !llvm.loop !228

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.mod.vf, 0
  br i1 %cmp.n, label %for.cond.cleanup, label %for.body.preheader56

for.body.preheader56:                             ; preds = %vector.memcheck, %for.body.preheader, %middle.block
  %i.012.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.body.preheader ], [ %n.vec, %middle.block ]
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %middle.block, %_ZSt11lower_boundIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiET_S7_S7_RKT0_.exit.i, %lor.rhs.i, %_ZN6miniFE9CSRMatrixIdiiE16get_row_pointersEiRmRPiRPd.exit
  ret void

for.body:                                         ; preds = %for.body.preheader56, %for.body
  %i.012 = phi i64 [ %inc, %for.body ], [ %i.012.ph, %for.body.preheader56 ]
  %arrayidx = getelementptr inbounds i32, i32* %add.ptr.i37.i, i64 %i.012
  %88 = load i32, i32* %arrayidx, align 4, !tbaa !16
  %cmp1 = icmp eq i32 %88, %row
  %spec.select = select i1 %cmp1, double 1.000000e+00, double 0.000000e+00
  %89 = getelementptr inbounds double, double* %add.ptr.i39.i, i64 %i.012
  store double %spec.select, double* %89, align 8
  %inc = add nuw i64 %i.012, 1
  %exitcond.not = icmp eq i64 %inc, %conv47.i
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body, !llvm.loop !229
}

; Function Attrs: alwaysinline norecurse nounwind uwtable
define internal void @.omp_outlined..79(i32* noalias nocapture noundef readonly %.global_tid., i32* noalias nocapture noundef readnone %.bound_tid., i32* nocapture noundef nonnull readonly align 4 dereferenceable(4) %ROW_COUNT, %"struct.miniFE::CSRMatrix"* nocapture noundef nonnull readonly align 8 dereferenceable(132) %A, %"class.std::set"* noundef nonnull align 8 dereferenceable(48) %bc_rows, %"struct.miniFE::Vector"* nocapture noundef nonnull readonly align 8 dereferenceable(32) %b, double* nocapture noundef nonnull readonly align 8 dereferenceable(8) %prescribed_value) #7 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %.omp.lb = alloca i32, align 4
  %.omp.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %0 = load i32, i32* %ROW_COUNT, align 4, !tbaa !16
  %sub5 = add nsw i32 %0, -1
  %cmp = icmp sgt i32 %0, 0
  br i1 %cmp, label %omp.precond.then, label %omp.precond.end

omp.precond.then:                                 ; preds = %entry
  %1 = bitcast i32* %.omp.lb to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8
  store i32 0, i32* %.omp.lb, align 4, !tbaa !16
  %2 = bitcast i32* %.omp.ub to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #8
  store i32 %sub5, i32* %.omp.ub, align 4, !tbaa !16
  %3 = bitcast i32* %.omp.stride to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #8
  store i32 1, i32* %.omp.stride, align 4, !tbaa !16
  %4 = bitcast i32* %.omp.is_last to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #8
  store i32 0, i32* %.omp.is_last, align 4, !tbaa !16
  %5 = load i32, i32* %.global_tid., align 4, !tbaa !16
  call void @__kmpc_for_static_init_4(%struct.ident_t* nonnull @1, i32 %5, i32 34, i32* nonnull %.omp.is_last, i32* nonnull %.omp.lb, i32* nonnull %.omp.ub, i32* nonnull %.omp.stride, i32 1, i32 1)
  %6 = load i32, i32* %.omp.ub, align 4, !tbaa !16
  %cmp7 = icmp sgt i32 %6, %sub5
  %cond = select i1 %cmp7, i32 %sub5, i32 %6
  store i32 %cond, i32* %.omp.ub, align 4, !tbaa !16
  %7 = load i32, i32* %.omp.lb, align 4, !tbaa !16
  %_M_start.i = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 2, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::set", %"class.std::set"* %bc_rows, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %_M_parent.i.i.i = getelementptr inbounds i8, i8* %8, i64 16
  %9 = bitcast i8* %_M_parent.i.i.i to %"struct.std::_Rb_tree_node.48"**
  %add.ptr.i.i.i = getelementptr inbounds i8, i8* %8, i64 8
  %_M_header.i.i.i = bitcast i8* %add.ptr.i.i.i to %"struct.std::_Rb_tree_node_base"*
  %_M_finish.i.i = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 2, i32 0, i32 0, i32 1
  %_M_start.i32.i = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 3, i32 0, i32 0, i32 0
  %_M_start.i36.i = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 5, i32 0, i32 0, i32 0
  %_M_start.i38.i = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 6, i32 0, i32 0, i32 0
  %_M_start.i35 = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %b, i64 0, i32 2, i32 0, i32 0, i32 0
  %cmp8.not85 = icmp sgt i32 %7, %cond
  br i1 %cmp8.not85, label %omp.loop.exit, label %omp.inner.for.body.preheader

omp.inner.for.body.preheader:                     ; preds = %omp.precond.then
  %10 = sext i32 %7 to i64
  %11 = add nsw i32 %cond, 1
  br label %omp.inner.for.body

omp.inner.for.body:                               ; preds = %omp.inner.for.body.preheader, %cleanup
  %indvars.iv = phi i64 [ %10, %omp.inner.for.body.preheader ], [ %indvars.iv.next, %cleanup ]
  %12 = load i32*, i32** %_M_start.i, align 8, !tbaa !74
  %add.ptr.i = getelementptr inbounds i32, i32* %12, i64 %indvars.iv
  %13 = load i32, i32* %add.ptr.i, align 4, !tbaa !16
  %14 = load %"struct.std::_Rb_tree_node.48"*, %"struct.std::_Rb_tree_node.48"** %9, align 8, !tbaa !86
  %cmp.not5.i.i.i = icmp eq %"struct.std::_Rb_tree_node.48"* %14, null
  br i1 %cmp.not5.i.i.i, label %if.end, label %while.body.i.i.i

while.body.i.i.i:                                 ; preds = %omp.inner.for.body, %while.body.i.i.i
  %__x.addr.07.i.i.i = phi %"struct.std::_Rb_tree_node.48"* [ %__x.addr.1.i.i.i, %while.body.i.i.i ], [ %14, %omp.inner.for.body ]
  %__y.addr.06.i.i.i = phi %"struct.std::_Rb_tree_node_base"* [ %__y.addr.1.i.i.i, %while.body.i.i.i ], [ %_M_header.i.i.i, %omp.inner.for.body ]
  %_M_storage.i.i.i.i.i.i = getelementptr inbounds %"struct.std::_Rb_tree_node.48", %"struct.std::_Rb_tree_node.48"* %__x.addr.07.i.i.i, i64 0, i32 1
  %15 = bitcast %"struct.__gnu_cxx::__aligned_membuf.49"* %_M_storage.i.i.i.i.i.i to i32*
  %16 = load i32, i32* %15, align 4, !tbaa !16
  %cmp.i.i.i.i = icmp slt i32 %16, %13
  %_M_right.i.i.i.i = getelementptr inbounds %"struct.std::_Rb_tree_node.48", %"struct.std::_Rb_tree_node.48"* %__x.addr.07.i.i.i, i64 0, i32 0, i32 3
  %17 = getelementptr %"struct.std::_Rb_tree_node.48", %"struct.std::_Rb_tree_node.48"* %__x.addr.07.i.i.i, i64 0, i32 0
  %_M_left.i.i.i.i = getelementptr inbounds %"struct.std::_Rb_tree_node.48", %"struct.std::_Rb_tree_node.48"* %__x.addr.07.i.i.i, i64 0, i32 0, i32 2
  %__y.addr.1.i.i.i = select i1 %cmp.i.i.i.i, %"struct.std::_Rb_tree_node_base"* %__y.addr.06.i.i.i, %"struct.std::_Rb_tree_node_base"* %17
  %__x.addr.1.in.in.i.i.i = select i1 %cmp.i.i.i.i, %"struct.std::_Rb_tree_node_base"** %_M_right.i.i.i.i, %"struct.std::_Rb_tree_node_base"** %_M_left.i.i.i.i
  %__x.addr.1.in.i.i.i = bitcast %"struct.std::_Rb_tree_node_base"** %__x.addr.1.in.in.i.i.i to %"struct.std::_Rb_tree_node.48"**
  %__x.addr.1.i.i.i = load %"struct.std::_Rb_tree_node.48"*, %"struct.std::_Rb_tree_node.48"** %__x.addr.1.in.i.i.i, align 8, !tbaa !94
  %cmp.not.i.i.i = icmp eq %"struct.std::_Rb_tree_node.48"* %__x.addr.1.i.i.i, null
  br i1 %cmp.not.i.i.i, label %_ZNKSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE14_M_lower_boundEPKSt13_Rb_tree_nodeIiEPKSt18_Rb_tree_node_baseRKi.exit.i.i, label %while.body.i.i.i, !llvm.loop !230

_ZNKSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE14_M_lower_boundEPKSt13_Rb_tree_nodeIiEPKSt18_Rb_tree_node_baseRKi.exit.i.i: ; preds = %while.body.i.i.i
  %cmp.i.i.i = icmp eq %"struct.std::_Rb_tree_node_base"* %__y.addr.1.i.i.i, %_M_header.i.i.i
  br i1 %cmp.i.i.i, label %if.end, label %invoke.cont

invoke.cont:                                      ; preds = %_ZNKSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE14_M_lower_boundEPKSt13_Rb_tree_nodeIiEPKSt18_Rb_tree_node_baseRKi.exit.i.i
  %18 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %__y.addr.1.i.i.i, i64 1, i32 0
  %19 = load i32, i32* %18, align 4, !tbaa !16
  %cmp.i4.i.i = icmp slt i32 %13, %19
  %spec.select.i.i = select i1 %cmp.i4.i.i, %"struct.std::_Rb_tree_node_base"* %_M_header.i.i.i, %"struct.std::_Rb_tree_node_base"* %__y.addr.1.i.i.i
  %cmp.i.not = icmp eq %"struct.std::_Rb_tree_node_base"* %spec.select.i.i, %_M_header.i.i.i
  br i1 %cmp.i.not, label %if.end, label %cleanup

if.end:                                           ; preds = %omp.inner.for.body, %_ZNKSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE14_M_lower_boundEPKSt13_Rb_tree_nodeIiEPKSt18_Rb_tree_node_baseRKi.exit.i.i, %invoke.cont
  %20 = load i32*, i32** %_M_finish.i.i, align 8, !tbaa !71
  %sub.ptr.lhs.cast.i.i = ptrtoint i32* %20 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i32* %12 to i64
  %sub.ptr.sub.i.i = sub i64 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  %cmp.not.i = icmp eq i64 %sub.ptr.sub.i.i, 0
  br i1 %cmp.not.i, label %_ZSt11lower_boundIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiET_S7_S7_RKT0_.exit.i, label %if.then.i

if.then.i:                                        ; preds = %if.end
  %sub.ptr.div.i.i = ashr exact i64 %sub.ptr.sub.i.i, 2
  %21 = load i32, i32* %12, align 4, !tbaa !16
  %sub.i = sub nsw i32 %13, %21
  %conv.i = sext i32 %sub.i to i64
  %cmp6.i = icmp ugt i64 %sub.ptr.div.i.i, %conv.i
  br i1 %cmp6.i, label %land.lhs.true.i, label %if.then13.i

land.lhs.true.i:                                  ; preds = %if.then.i
  %add.ptr.i.i31 = getelementptr inbounds i32, i32* %12, i64 %conv.i
  %22 = load i32, i32* %add.ptr.i.i31, align 4, !tbaa !16
  %cmp9.i = icmp ne i32 %22, %13
  %cmp12.i = icmp eq i32 %sub.i, -1
  %or.cond.i = select i1 %cmp9.i, i1 true, i1 %cmp12.i
  br i1 %or.cond.i, label %if.then13.i, label %_ZN6miniFE9CSRMatrixIdiiE16get_row_pointersEiRmRPiRPd.exit

if.then13.i:                                      ; preds = %land.lhs.true.i, %if.then.i
  %cmp10.i.i.i = icmp sgt i64 %sub.ptr.sub.i.i, 0
  br i1 %cmp10.i.i.i, label %while.body.preheader.i.i.i, label %_ZSt11lower_boundIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiET_S7_S7_RKT0_.exit.i

while.body.preheader.i.i.i:                       ; preds = %if.then13.i
  %sub.ptr.div.i.i.i13.i.i.i = lshr exact i64 %sub.ptr.sub.i.i, 2
  br label %while.body.i.i.i34

while.body.i.i.i34:                               ; preds = %while.body.i.i.i34, %while.body.preheader.i.i.i
  %__len.012.i.i.i = phi i64 [ %__len.1.i.i.i, %while.body.i.i.i34 ], [ %sub.ptr.div.i.i.i13.i.i.i, %while.body.preheader.i.i.i ]
  %__first.sroa.0.011.i.i.i = phi i32* [ %__first.sroa.0.1.i.i.i, %while.body.i.i.i34 ], [ %12, %while.body.preheader.i.i.i ]
  %shr9.i.i.i = lshr i64 %__len.012.i.i.i, 1
  %__middle.sroa.0.0.i.i.i = getelementptr inbounds i32, i32* %__first.sroa.0.011.i.i.i, i64 %shr9.i.i.i
  %23 = load i32, i32* %__middle.sroa.0.0.i.i.i, align 4, !tbaa !16
  %cmp.i.i.i.i32 = icmp slt i32 %23, %13
  %incdec.ptr.i.i.i.i = getelementptr inbounds i32, i32* %__middle.sroa.0.0.i.i.i, i64 1
  %24 = xor i64 %shr9.i.i.i, -1
  %sub13.i.i.i = add i64 %__len.012.i.i.i, %24
  %__first.sroa.0.1.i.i.i = select i1 %cmp.i.i.i.i32, i32* %incdec.ptr.i.i.i.i, i32* %__first.sroa.0.011.i.i.i
  %__len.1.i.i.i = select i1 %cmp.i.i.i.i32, i64 %sub13.i.i.i, i64 %shr9.i.i.i
  %cmp.i.i.i33 = icmp sgt i64 %__len.1.i.i.i, 0
  br i1 %cmp.i.i.i33, label %while.body.i.i.i34, label %_ZSt11lower_boundIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiET_S7_S7_RKT0_.exit.loopexit.i, !llvm.loop !218

_ZSt11lower_boundIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiET_S7_S7_RKT0_.exit.loopexit.i: ; preds = %while.body.i.i.i34
  %.pre.i = ptrtoint i32* %__first.sroa.0.1.i.i.i to i64
  br label %_ZSt11lower_boundIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiET_S7_S7_RKT0_.exit.i

_ZSt11lower_boundIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiET_S7_S7_RKT0_.exit.i: ; preds = %_ZSt11lower_boundIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiET_S7_S7_RKT0_.exit.loopexit.i, %if.then13.i, %if.end
  %coerce.val.pi15.i.i.pre-phi.i = phi i64 [ %.pre.i, %_ZSt11lower_boundIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiET_S7_S7_RKT0_.exit.loopexit.i ], [ %sub.ptr.rhs.cast.i.i, %if.then13.i ], [ %sub.ptr.rhs.cast.i.i, %if.end ]
  %__first.sroa.0.0.lcssa.i.i.i = phi i32* [ %__first.sroa.0.1.i.i.i, %_ZSt11lower_boundIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiET_S7_S7_RKT0_.exit.loopexit.i ], [ %12, %if.then13.i ], [ %12, %if.end ]
  %cmp.i.i = icmp eq i32* %__first.sroa.0.0.lcssa.i.i.i, %20
  br i1 %cmp.i.i, label %for.cond.cleanup, label %lor.rhs.i

lor.rhs.i:                                        ; preds = %_ZSt11lower_boundIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiET_S7_S7_RKT0_.exit.i
  %25 = load i32, i32* %__first.sroa.0.0.lcssa.i.i.i, align 4, !tbaa !16
  %cmp33.not.i = icmp eq i32 %25, %13
  br i1 %cmp33.not.i, label %cleanup.thread.i, label %for.cond.cleanup

cleanup.thread.i:                                 ; preds = %lor.rhs.i
  %sub.ptr.sub.i30.i = sub i64 %coerce.val.pi15.i.i.pre-phi.i, %sub.ptr.rhs.cast.i.i
  %sub.ptr.div.i31.i = ashr exact i64 %sub.ptr.sub.i30.i, 2
  br label %_ZN6miniFE9CSRMatrixIdiiE16get_row_pointersEiRmRPiRPd.exit

_ZN6miniFE9CSRMatrixIdiiE16get_row_pointersEiRmRPiRPd.exit: ; preds = %land.lhs.true.i, %cleanup.thread.i
  %local_row.3.i = phi i64 [ %sub.ptr.div.i31.i, %cleanup.thread.i ], [ %conv.i, %land.lhs.true.i ]
  %26 = load i32*, i32** %_M_start.i32.i, align 8, !tbaa !74
  %add.ptr.i33.i = getelementptr inbounds i32, i32* %26, i64 %local_row.3.i
  %27 = load i32, i32* %add.ptr.i33.i, align 4, !tbaa !16
  %add.i = add nsw i64 %local_row.3.i, 1
  %add.ptr.i35.i = getelementptr inbounds i32, i32* %26, i64 %add.i
  %28 = load i32, i32* %add.ptr.i35.i, align 4, !tbaa !16
  %sub46.i = sub nsw i32 %28, %27
  %conv47.i = sext i32 %sub46.i to i64
  %conv48.i = sext i32 %27 to i64
  %29 = load i32*, i32** %_M_start.i36.i, align 8, !tbaa !74
  %add.ptr.i37.i = getelementptr inbounds i32, i32* %29, i64 %conv48.i
  %30 = load double*, double** %_M_start.i38.i, align 8, !tbaa !78
  %add.ptr.i39.i = getelementptr inbounds double, double* %30, i64 %conv48.i
  %cmp1781.not = icmp eq i32 %sub46.i, 0
  br i1 %cmp1781.not, label %for.cond.cleanup, label %for.body.preheader

for.body.preheader:                               ; preds = %_ZN6miniFE9CSRMatrixIdiiE16get_row_pointersEiRmRPiRPd.exit
  %31 = sext i32 %28 to i64
  %32 = xor i32 %27, -1
  %33 = sext i32 %32 to i64
  %xtraiter = and i64 %conv47.i, 1
  %34 = sub nsw i64 0, %31
  %35 = icmp eq i64 %33, %34
  br i1 %35, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.body.preheader.new

for.body.preheader.new:                           ; preds = %for.body.preheader
  %unroll_iter = and i64 %conv47.i, -2
  br label %for.body

for.cond.cleanup.loopexit.unr-lcssa:              ; preds = %for.inc.1, %for.body.preheader
  %sum.1.lcssa.ph = phi double [ undef, %for.body.preheader ], [ %sum.1.1, %for.inc.1 ]
  %j.083.unr = phi i64 [ 0, %for.body.preheader ], [ %inc.1, %for.inc.1 ]
  %sum.082.unr = phi double [ 0.000000e+00, %for.body.preheader ], [ %sum.1.1, %for.inc.1 ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.cond.cleanup, label %for.body.epil

for.body.epil:                                    ; preds = %for.cond.cleanup.loopexit.unr-lcssa
  %arrayidx.epil = getelementptr inbounds i32, i32* %add.ptr.i37.i, i64 %j.083.unr
  %36 = load i32, i32* %arrayidx.epil, align 4
  br i1 %cmp.not5.i.i.i, label %for.cond.cleanup, label %while.body.i.i.i52.epil

while.body.i.i.i52.epil:                          ; preds = %for.body.epil, %while.body.i.i.i52.epil
  %__x.addr.07.i.i.i41.epil = phi %"struct.std::_Rb_tree_node.48"* [ %__x.addr.1.i.i.i50.epil, %while.body.i.i.i52.epil ], [ %14, %for.body.epil ]
  %__y.addr.06.i.i.i42.epil = phi %"struct.std::_Rb_tree_node_base"* [ %__y.addr.1.i.i.i47.epil, %while.body.i.i.i52.epil ], [ %_M_header.i.i.i, %for.body.epil ]
  %_M_storage.i.i.i.i.i.i43.epil = getelementptr inbounds %"struct.std::_Rb_tree_node.48", %"struct.std::_Rb_tree_node.48"* %__x.addr.07.i.i.i41.epil, i64 0, i32 1
  %37 = bitcast %"struct.__gnu_cxx::__aligned_membuf.49"* %_M_storage.i.i.i.i.i.i43.epil to i32*
  %38 = load i32, i32* %37, align 4, !tbaa !16
  %cmp.i.i.i.i44.epil = icmp slt i32 %38, %36
  %_M_right.i.i.i.i45.epil = getelementptr inbounds %"struct.std::_Rb_tree_node.48", %"struct.std::_Rb_tree_node.48"* %__x.addr.07.i.i.i41.epil, i64 0, i32 0, i32 3
  %39 = getelementptr %"struct.std::_Rb_tree_node.48", %"struct.std::_Rb_tree_node.48"* %__x.addr.07.i.i.i41.epil, i64 0, i32 0
  %_M_left.i.i.i.i46.epil = getelementptr inbounds %"struct.std::_Rb_tree_node.48", %"struct.std::_Rb_tree_node.48"* %__x.addr.07.i.i.i41.epil, i64 0, i32 0, i32 2
  %__y.addr.1.i.i.i47.epil = select i1 %cmp.i.i.i.i44.epil, %"struct.std::_Rb_tree_node_base"* %__y.addr.06.i.i.i42.epil, %"struct.std::_Rb_tree_node_base"* %39
  %__x.addr.1.in.in.i.i.i48.epil = select i1 %cmp.i.i.i.i44.epil, %"struct.std::_Rb_tree_node_base"** %_M_right.i.i.i.i45.epil, %"struct.std::_Rb_tree_node_base"** %_M_left.i.i.i.i46.epil
  %__x.addr.1.in.i.i.i49.epil = bitcast %"struct.std::_Rb_tree_node_base"** %__x.addr.1.in.in.i.i.i48.epil to %"struct.std::_Rb_tree_node.48"**
  %__x.addr.1.i.i.i50.epil = load %"struct.std::_Rb_tree_node.48"*, %"struct.std::_Rb_tree_node.48"** %__x.addr.1.in.i.i.i49.epil, align 8, !tbaa !94
  %cmp.not.i.i.i51.epil = icmp eq %"struct.std::_Rb_tree_node.48"* %__x.addr.1.i.i.i50.epil, null
  br i1 %cmp.not.i.i.i51.epil, label %_ZNKSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE14_M_lower_boundEPKSt13_Rb_tree_nodeIiEPKSt18_Rb_tree_node_baseRKi.exit.i.i54.epil, label %while.body.i.i.i52.epil, !llvm.loop !230

_ZNKSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE14_M_lower_boundEPKSt13_Rb_tree_nodeIiEPKSt18_Rb_tree_node_baseRKi.exit.i.i54.epil: ; preds = %while.body.i.i.i52.epil
  %cmp.i.i.i53.epil = icmp eq %"struct.std::_Rb_tree_node_base"* %__y.addr.1.i.i.i47.epil, %_M_header.i.i.i
  br i1 %cmp.i.i.i53.epil, label %for.cond.cleanup, label %invoke.cont20.epil

invoke.cont20.epil:                               ; preds = %_ZNKSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE14_M_lower_boundEPKSt13_Rb_tree_nodeIiEPKSt18_Rb_tree_node_baseRKi.exit.i.i54.epil
  %40 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %__y.addr.1.i.i.i47.epil, i64 1, i32 0
  %41 = load i32, i32* %40, align 4, !tbaa !16
  %cmp.i4.i.i55.epil = icmp slt i32 %36, %41
  %spec.select.i.i56.epil = select i1 %cmp.i4.i.i55.epil, %"struct.std::_Rb_tree_node_base"* %_M_header.i.i.i, %"struct.std::_Rb_tree_node_base"* %__y.addr.1.i.i.i47.epil
  %cmp.i65.not.epil = icmp eq %"struct.std::_Rb_tree_node_base"* %spec.select.i.i56.epil, %_M_header.i.i.i
  br i1 %cmp.i65.not.epil, label %for.cond.cleanup, label %if.then29.epil

if.then29.epil:                                   ; preds = %invoke.cont20.epil
  %arrayidx30.epil = getelementptr inbounds double, double* %add.ptr.i39.i, i64 %j.083.unr
  %42 = load double, double* %arrayidx30.epil, align 8, !tbaa !84
  %add31.epil = fadd contract double %sum.082.unr, %42
  store double 0.000000e+00, double* %arrayidx30.epil, align 8, !tbaa !84
  br label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond.cleanup.loopexit.unr-lcssa, %if.then29.epil, %invoke.cont20.epil, %_ZNKSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE14_M_lower_boundEPKSt13_Rb_tree_nodeIiEPKSt18_Rb_tree_node_baseRKi.exit.i.i54.epil, %for.body.epil, %_ZSt11lower_boundIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiET_S7_S7_RKT0_.exit.i, %lor.rhs.i, %_ZN6miniFE9CSRMatrixIdiiE16get_row_pointersEiRmRPiRPd.exit
  %sum.0.lcssa = phi double [ 0.000000e+00, %_ZN6miniFE9CSRMatrixIdiiE16get_row_pointersEiRmRPiRPd.exit ], [ 0.000000e+00, %lor.rhs.i ], [ 0.000000e+00, %_ZSt11lower_boundIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiET_S7_S7_RKT0_.exit.i ], [ %sum.1.lcssa.ph, %for.cond.cleanup.loopexit.unr-lcssa ], [ %add31.epil, %if.then29.epil ], [ %sum.082.unr, %invoke.cont20.epil ], [ %sum.082.unr, %_ZNKSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE14_M_lower_boundEPKSt13_Rb_tree_nodeIiEPKSt18_Rb_tree_node_baseRKi.exit.i.i54.epil ], [ %sum.082.unr, %for.body.epil ]
  %43 = load double*, double** %_M_start.i35, align 8, !tbaa !78
  %add.ptr.i36 = getelementptr inbounds double, double* %43, i64 %indvars.iv
  %44 = load double, double* %prescribed_value, align 8, !tbaa !84
  %mul37 = fmul contract double %sum.0.lcssa, %44
  %45 = bitcast double* %add.ptr.i36 to i64*
  %atomic-load = load atomic i64, i64* %45 monotonic, align 8, !tbaa !84
  br label %atomic_cont

for.body:                                         ; preds = %for.inc.1, %for.body.preheader.new
  %j.083 = phi i64 [ 0, %for.body.preheader.new ], [ %inc.1, %for.inc.1 ]
  %sum.082 = phi double [ 0.000000e+00, %for.body.preheader.new ], [ %sum.1.1, %for.inc.1 ]
  %niter = phi i64 [ 0, %for.body.preheader.new ], [ %niter.next.1, %for.inc.1 ]
  %arrayidx = getelementptr inbounds i32, i32* %add.ptr.i37.i, i64 %j.083
  %46 = load i32, i32* %arrayidx, align 4
  br i1 %cmp.not5.i.i.i, label %for.inc, label %while.body.i.i.i52

while.body.i.i.i52:                               ; preds = %for.body, %while.body.i.i.i52
  %__x.addr.07.i.i.i41 = phi %"struct.std::_Rb_tree_node.48"* [ %__x.addr.1.i.i.i50, %while.body.i.i.i52 ], [ %14, %for.body ]
  %__y.addr.06.i.i.i42 = phi %"struct.std::_Rb_tree_node_base"* [ %__y.addr.1.i.i.i47, %while.body.i.i.i52 ], [ %_M_header.i.i.i, %for.body ]
  %_M_storage.i.i.i.i.i.i43 = getelementptr inbounds %"struct.std::_Rb_tree_node.48", %"struct.std::_Rb_tree_node.48"* %__x.addr.07.i.i.i41, i64 0, i32 1
  %47 = bitcast %"struct.__gnu_cxx::__aligned_membuf.49"* %_M_storage.i.i.i.i.i.i43 to i32*
  %48 = load i32, i32* %47, align 4, !tbaa !16
  %cmp.i.i.i.i44 = icmp slt i32 %48, %46
  %_M_right.i.i.i.i45 = getelementptr inbounds %"struct.std::_Rb_tree_node.48", %"struct.std::_Rb_tree_node.48"* %__x.addr.07.i.i.i41, i64 0, i32 0, i32 3
  %49 = getelementptr %"struct.std::_Rb_tree_node.48", %"struct.std::_Rb_tree_node.48"* %__x.addr.07.i.i.i41, i64 0, i32 0
  %_M_left.i.i.i.i46 = getelementptr inbounds %"struct.std::_Rb_tree_node.48", %"struct.std::_Rb_tree_node.48"* %__x.addr.07.i.i.i41, i64 0, i32 0, i32 2
  %__y.addr.1.i.i.i47 = select i1 %cmp.i.i.i.i44, %"struct.std::_Rb_tree_node_base"* %__y.addr.06.i.i.i42, %"struct.std::_Rb_tree_node_base"* %49
  %__x.addr.1.in.in.i.i.i48 = select i1 %cmp.i.i.i.i44, %"struct.std::_Rb_tree_node_base"** %_M_right.i.i.i.i45, %"struct.std::_Rb_tree_node_base"** %_M_left.i.i.i.i46
  %__x.addr.1.in.i.i.i49 = bitcast %"struct.std::_Rb_tree_node_base"** %__x.addr.1.in.in.i.i.i48 to %"struct.std::_Rb_tree_node.48"**
  %__x.addr.1.i.i.i50 = load %"struct.std::_Rb_tree_node.48"*, %"struct.std::_Rb_tree_node.48"** %__x.addr.1.in.i.i.i49, align 8, !tbaa !94
  %cmp.not.i.i.i51 = icmp eq %"struct.std::_Rb_tree_node.48"* %__x.addr.1.i.i.i50, null
  br i1 %cmp.not.i.i.i51, label %_ZNKSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE14_M_lower_boundEPKSt13_Rb_tree_nodeIiEPKSt18_Rb_tree_node_baseRKi.exit.i.i54, label %while.body.i.i.i52, !llvm.loop !230

_ZNKSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE14_M_lower_boundEPKSt13_Rb_tree_nodeIiEPKSt18_Rb_tree_node_baseRKi.exit.i.i54: ; preds = %while.body.i.i.i52
  %cmp.i.i.i53 = icmp eq %"struct.std::_Rb_tree_node_base"* %__y.addr.1.i.i.i47, %_M_header.i.i.i
  br i1 %cmp.i.i.i53, label %for.inc, label %invoke.cont20

invoke.cont20:                                    ; preds = %_ZNKSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE14_M_lower_boundEPKSt13_Rb_tree_nodeIiEPKSt18_Rb_tree_node_baseRKi.exit.i.i54
  %50 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %__y.addr.1.i.i.i47, i64 1, i32 0
  %51 = load i32, i32* %50, align 4, !tbaa !16
  %cmp.i4.i.i55 = icmp slt i32 %46, %51
  %spec.select.i.i56 = select i1 %cmp.i4.i.i55, %"struct.std::_Rb_tree_node_base"* %_M_header.i.i.i, %"struct.std::_Rb_tree_node_base"* %__y.addr.1.i.i.i47
  %cmp.i65.not = icmp eq %"struct.std::_Rb_tree_node_base"* %spec.select.i.i56, %_M_header.i.i.i
  br i1 %cmp.i65.not, label %for.inc, label %if.then29

if.then29:                                        ; preds = %invoke.cont20
  %arrayidx30 = getelementptr inbounds double, double* %add.ptr.i39.i, i64 %j.083
  %52 = load double, double* %arrayidx30, align 8, !tbaa !84
  %add31 = fadd contract double %sum.082, %52
  store double 0.000000e+00, double* %arrayidx30, align 8, !tbaa !84
  br label %for.inc

for.inc:                                          ; preds = %for.body, %_ZNKSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE14_M_lower_boundEPKSt13_Rb_tree_nodeIiEPKSt18_Rb_tree_node_baseRKi.exit.i.i54, %invoke.cont20, %if.then29
  %sum.1 = phi double [ %add31, %if.then29 ], [ %sum.082, %invoke.cont20 ], [ %sum.082, %_ZNKSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE14_M_lower_boundEPKSt13_Rb_tree_nodeIiEPKSt18_Rb_tree_node_baseRKi.exit.i.i54 ], [ %sum.082, %for.body ]
  %inc = or i64 %j.083, 1
  %arrayidx.1 = getelementptr inbounds i32, i32* %add.ptr.i37.i, i64 %inc
  %53 = load i32, i32* %arrayidx.1, align 4
  br i1 %cmp.not5.i.i.i, label %for.inc.1, label %while.body.i.i.i52.1

while.body.i.i.i52.1:                             ; preds = %for.inc, %while.body.i.i.i52.1
  %__x.addr.07.i.i.i41.1 = phi %"struct.std::_Rb_tree_node.48"* [ %__x.addr.1.i.i.i50.1, %while.body.i.i.i52.1 ], [ %14, %for.inc ]
  %__y.addr.06.i.i.i42.1 = phi %"struct.std::_Rb_tree_node_base"* [ %__y.addr.1.i.i.i47.1, %while.body.i.i.i52.1 ], [ %_M_header.i.i.i, %for.inc ]
  %_M_storage.i.i.i.i.i.i43.1 = getelementptr inbounds %"struct.std::_Rb_tree_node.48", %"struct.std::_Rb_tree_node.48"* %__x.addr.07.i.i.i41.1, i64 0, i32 1
  %54 = bitcast %"struct.__gnu_cxx::__aligned_membuf.49"* %_M_storage.i.i.i.i.i.i43.1 to i32*
  %55 = load i32, i32* %54, align 4, !tbaa !16
  %cmp.i.i.i.i44.1 = icmp slt i32 %55, %53
  %_M_right.i.i.i.i45.1 = getelementptr inbounds %"struct.std::_Rb_tree_node.48", %"struct.std::_Rb_tree_node.48"* %__x.addr.07.i.i.i41.1, i64 0, i32 0, i32 3
  %56 = getelementptr %"struct.std::_Rb_tree_node.48", %"struct.std::_Rb_tree_node.48"* %__x.addr.07.i.i.i41.1, i64 0, i32 0
  %_M_left.i.i.i.i46.1 = getelementptr inbounds %"struct.std::_Rb_tree_node.48", %"struct.std::_Rb_tree_node.48"* %__x.addr.07.i.i.i41.1, i64 0, i32 0, i32 2
  %__y.addr.1.i.i.i47.1 = select i1 %cmp.i.i.i.i44.1, %"struct.std::_Rb_tree_node_base"* %__y.addr.06.i.i.i42.1, %"struct.std::_Rb_tree_node_base"* %56
  %__x.addr.1.in.in.i.i.i48.1 = select i1 %cmp.i.i.i.i44.1, %"struct.std::_Rb_tree_node_base"** %_M_right.i.i.i.i45.1, %"struct.std::_Rb_tree_node_base"** %_M_left.i.i.i.i46.1
  %__x.addr.1.in.i.i.i49.1 = bitcast %"struct.std::_Rb_tree_node_base"** %__x.addr.1.in.in.i.i.i48.1 to %"struct.std::_Rb_tree_node.48"**
  %__x.addr.1.i.i.i50.1 = load %"struct.std::_Rb_tree_node.48"*, %"struct.std::_Rb_tree_node.48"** %__x.addr.1.in.i.i.i49.1, align 8, !tbaa !94
  %cmp.not.i.i.i51.1 = icmp eq %"struct.std::_Rb_tree_node.48"* %__x.addr.1.i.i.i50.1, null
  br i1 %cmp.not.i.i.i51.1, label %_ZNKSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE14_M_lower_boundEPKSt13_Rb_tree_nodeIiEPKSt18_Rb_tree_node_baseRKi.exit.i.i54.1, label %while.body.i.i.i52.1, !llvm.loop !230

_ZNKSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE14_M_lower_boundEPKSt13_Rb_tree_nodeIiEPKSt18_Rb_tree_node_baseRKi.exit.i.i54.1: ; preds = %while.body.i.i.i52.1
  %cmp.i.i.i53.1 = icmp eq %"struct.std::_Rb_tree_node_base"* %__y.addr.1.i.i.i47.1, %_M_header.i.i.i
  br i1 %cmp.i.i.i53.1, label %for.inc.1, label %invoke.cont20.1

invoke.cont20.1:                                  ; preds = %_ZNKSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE14_M_lower_boundEPKSt13_Rb_tree_nodeIiEPKSt18_Rb_tree_node_baseRKi.exit.i.i54.1
  %57 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %__y.addr.1.i.i.i47.1, i64 1, i32 0
  %58 = load i32, i32* %57, align 4, !tbaa !16
  %cmp.i4.i.i55.1 = icmp slt i32 %53, %58
  %spec.select.i.i56.1 = select i1 %cmp.i4.i.i55.1, %"struct.std::_Rb_tree_node_base"* %_M_header.i.i.i, %"struct.std::_Rb_tree_node_base"* %__y.addr.1.i.i.i47.1
  %cmp.i65.not.1 = icmp eq %"struct.std::_Rb_tree_node_base"* %spec.select.i.i56.1, %_M_header.i.i.i
  br i1 %cmp.i65.not.1, label %for.inc.1, label %if.then29.1

if.then29.1:                                      ; preds = %invoke.cont20.1
  %arrayidx30.1 = getelementptr inbounds double, double* %add.ptr.i39.i, i64 %inc
  %59 = load double, double* %arrayidx30.1, align 8, !tbaa !84
  %add31.1 = fadd contract double %sum.1, %59
  store double 0.000000e+00, double* %arrayidx30.1, align 8, !tbaa !84
  br label %for.inc.1

for.inc.1:                                        ; preds = %if.then29.1, %invoke.cont20.1, %_ZNKSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE14_M_lower_boundEPKSt13_Rb_tree_nodeIiEPKSt18_Rb_tree_node_baseRKi.exit.i.i54.1, %for.inc
  %sum.1.1 = phi double [ %add31.1, %if.then29.1 ], [ %sum.1, %invoke.cont20.1 ], [ %sum.1, %_ZNKSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE14_M_lower_boundEPKSt13_Rb_tree_nodeIiEPKSt18_Rb_tree_node_baseRKi.exit.i.i54.1 ], [ %sum.1, %for.inc ]
  %inc.1 = add nuw i64 %j.083, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.body, !llvm.loop !231

atomic_cont:                                      ; preds = %atomic_cont, %for.cond.cleanup
  %60 = phi i64 [ %atomic-load, %for.cond.cleanup ], [ %64, %atomic_cont ]
  %61 = bitcast i64 %60 to double
  %sub38 = fsub contract double %61, %mul37
  %62 = bitcast double %sub38 to i64
  %63 = cmpxchg i64* %45, i64 %60, i64 %62 monotonic monotonic, align 8
  %64 = extractvalue { i64, i1 } %63, 0
  %65 = extractvalue { i64, i1 } %63, 1
  br i1 %65, label %cleanup, label %atomic_cont

cleanup:                                          ; preds = %atomic_cont, %invoke.cont
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond88.not = icmp eq i32 %11, %lftr.wideiv
  br i1 %exitcond88.not, label %omp.loop.exit, label %omp.inner.for.body

omp.loop.exit:                                    ; preds = %cleanup, %omp.precond.then
  call void @__kmpc_for_static_fini(%struct.ident_t* nonnull @1, i32 %5)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8
  br label %omp.precond.end

omp.precond.end:                                  ; preds = %omp.loop.exit, %entry
  ret void
}

; Function Attrs: mustprogress nofree nounwind readonly willreturn
declare noundef %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* noundef) local_unnamed_addr #21

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.ceil.f64(double) #20

declare noundef %class.YAML_Element* @_ZN12YAML_Element3addERKSsm(%class.YAML_Element* noundef nonnull align 8 dereferenceable(40), %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(8), i64 noundef) local_unnamed_addr #0

declare void @__apollo_region_end(i8*) local_unnamed_addr

; Function Attrs: nounwind
declare void @__tgt_target_data_begin_mapper(%struct.ident_t*, i64, i32, i8**, i8**, i64*, i64*, i8**, i8**) local_unnamed_addr #8

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3_(double noundef %alpha, %"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %x, double noundef %beta, %"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %y, %"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %w) local_unnamed_addr #12 comdat {
entry:
  %.offload_baseptrs = alloca [3 x i8*], align 8
  %.offload_ptrs = alloca [3 x i8*], align 8
  %.offload_baseptrs15 = alloca [4 x i8*], align 8
  %.offload_ptrs16 = alloca [4 x i8*], align 8
  %.offload_baseptrs33 = alloca [5 x i8*], align 8
  %.offload_ptrs34 = alloca [5 x i8*], align 8
  %.offload_baseptrs52 = alloca [6 x i8*], align 8
  %.offload_ptrs53 = alloca [6 x i8*], align 8
  %_M_finish.i = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %x, i64 0, i32 2, i32 0, i32 0, i32 1
  %0 = load double*, double** %_M_finish.i, align 8, !tbaa !82
  %_M_start.i = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %x, i64 0, i32 2, i32 0, i32 0, i32 0
  %1 = load double*, double** %_M_start.i, align 8, !tbaa !78
  %sub.ptr.lhs.cast.i = ptrtoint double* %0 to i64
  %sub.ptr.rhs.cast.i = ptrtoint double* %1 to i64
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %2 = lshr exact i64 %sub.ptr.sub.i, 3
  %_M_start.i37 = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %y, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load double*, double** %_M_start.i37, align 8, !tbaa !78
  %_M_start.i38 = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %w, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load double*, double** %_M_start.i38, align 8, !tbaa !78
  %cmp = fcmp contract oeq double %beta, 0.000000e+00
  %cmp7 = fcmp contract oeq double %alpha, 1.000000e+00
  %n.casted.sroa.0.0.insert.ext = and i64 %2, 4294967295
  br i1 %cmp, label %if.then, label %if.else27

if.then:                                          ; preds = %entry
  br i1 %cmp7, label %if.then8, label %if.else

if.then8:                                         ; preds = %if.then
  %5 = getelementptr inbounds [3 x i8*], [3 x i8*]* %.offload_baseptrs, i64 0, i64 0
  %6 = bitcast [3 x i8*]* %.offload_baseptrs to i64*
  store i64 %n.casted.sroa.0.0.insert.ext, i64* %6, align 8
  %7 = getelementptr inbounds [3 x i8*], [3 x i8*]* %.offload_ptrs, i64 0, i64 0
  %8 = bitcast [3 x i8*]* %.offload_ptrs to i64*
  store i64 %n.casted.sroa.0.0.insert.ext, i64* %8, align 8
  %9 = getelementptr inbounds [3 x i8*], [3 x i8*]* %.offload_baseptrs, i64 0, i64 1
  %10 = bitcast i8** %9 to double**
  store double* %4, double** %10, align 8
  %11 = getelementptr inbounds [3 x i8*], [3 x i8*]* %.offload_ptrs, i64 0, i64 1
  %12 = bitcast i8** %11 to double**
  store double* %4, double** %12, align 8
  %13 = getelementptr inbounds [3 x i8*], [3 x i8*]* %.offload_baseptrs, i64 0, i64 2
  %14 = bitcast i8** %13 to double**
  store double* %1, double** %14, align 8
  %15 = getelementptr inbounds [3 x i8*], [3 x i8*]* %.offload_ptrs, i64 0, i64 2
  %16 = bitcast i8** %15 to double**
  store double* %1, double** %16, align 8
  tail call void @__kmpc_push_target_tripcount_mapper(%struct.ident_t* nonnull @3, i64 -1, i64 %n.casted.sroa.0.0.insert.ext)
  %17 = call i32 @__tgt_target_teams_mapper(%struct.ident_t* nonnull @3, i64 -1, i8* nonnull @.__omp_offloading_31_355dd0b__ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3__l157.region_id, i32 3, i8** nonnull %5, i8** nonnull %7, i64* getelementptr inbounds ([3 x i64], [3 x i64]* @.offload_sizes.120, i64 0, i64 0), i64* getelementptr inbounds ([3 x i64], [3 x i64]* @.offload_maptypes.121, i64 0, i64 0), i8** null, i8** null, i32 0, i32 0)
  %.not35 = icmp eq i32 %17, 0
  br i1 %.not35, label %if.end65, label %omp_offload.failed

omp_offload.failed:                               ; preds = %if.then8
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_teams(%struct.ident_t* nonnull @3, i32 3, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, double*, double*)* @.omp_outlined..97 to void (i32*, i32*, ...)*), i64 %n.casted.sroa.0.0.insert.ext, double* %4, double* %1) #8
  br label %if.end65

if.else:                                          ; preds = %if.then
  %18 = getelementptr inbounds [4 x i8*], [4 x i8*]* %.offload_baseptrs15, i64 0, i64 0
  %19 = bitcast [4 x i8*]* %.offload_baseptrs15 to i64*
  store i64 %n.casted.sroa.0.0.insert.ext, i64* %19, align 8
  %20 = getelementptr inbounds [4 x i8*], [4 x i8*]* %.offload_ptrs16, i64 0, i64 0
  %21 = bitcast [4 x i8*]* %.offload_ptrs16 to i64*
  store i64 %n.casted.sroa.0.0.insert.ext, i64* %21, align 8
  %22 = getelementptr inbounds [4 x i8*], [4 x i8*]* %.offload_baseptrs15, i64 0, i64 1
  %23 = bitcast i8** %22 to double**
  store double* %4, double** %23, align 8
  %24 = getelementptr inbounds [4 x i8*], [4 x i8*]* %.offload_ptrs16, i64 0, i64 1
  %25 = bitcast i8** %24 to double**
  store double* %4, double** %25, align 8
  %26 = getelementptr inbounds [4 x i8*], [4 x i8*]* %.offload_baseptrs15, i64 0, i64 2
  %27 = bitcast i8** %26 to double*
  store double %alpha, double* %27, align 8
  %28 = getelementptr inbounds [4 x i8*], [4 x i8*]* %.offload_ptrs16, i64 0, i64 2
  %29 = bitcast i8** %28 to double*
  store double %alpha, double* %29, align 8
  %30 = getelementptr inbounds [4 x i8*], [4 x i8*]* %.offload_baseptrs15, i64 0, i64 3
  %31 = bitcast i8** %30 to double**
  store double* %1, double** %31, align 8
  %32 = getelementptr inbounds [4 x i8*], [4 x i8*]* %.offload_ptrs16, i64 0, i64 3
  %33 = bitcast i8** %32 to double**
  store double* %1, double** %33, align 8
  tail call void @__kmpc_push_target_tripcount_mapper(%struct.ident_t* nonnull @3, i64 -1, i64 %n.casted.sroa.0.0.insert.ext)
  %34 = call i32 @__tgt_target_teams_mapper(%struct.ident_t* nonnull @3, i64 -1, i8* nonnull @.__omp_offloading_31_355dd0b__ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3__l162.region_id, i32 4, i8** nonnull %18, i8** nonnull %20, i64* getelementptr inbounds ([4 x i64], [4 x i64]* @.offload_sizes.132, i64 0, i64 0), i64* getelementptr inbounds ([4 x i64], [4 x i64]* @.offload_maptypes.133, i64 0, i64 0), i8** null, i8** null, i32 0, i32 0)
  %.not34 = icmp eq i32 %34, 0
  br i1 %.not34, label %if.end65, label %omp_offload.failed25

omp_offload.failed25:                             ; preds = %if.else
  %35 = bitcast double %alpha to i64
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_teams(%struct.ident_t* nonnull @3, i32 4, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, double*, i64, double*)* @.omp_outlined..100 to void (i32*, i32*, ...)*), i64 %n.casted.sroa.0.0.insert.ext, double* %4, i64 %35, double* %1) #8
  br label %if.end65

if.else27:                                        ; preds = %entry
  br i1 %cmp7, label %if.then29, label %if.else45

if.then29:                                        ; preds = %if.else27
  %36 = getelementptr inbounds [5 x i8*], [5 x i8*]* %.offload_baseptrs33, i64 0, i64 0
  %37 = bitcast [5 x i8*]* %.offload_baseptrs33 to i64*
  store i64 %n.casted.sroa.0.0.insert.ext, i64* %37, align 8
  %38 = getelementptr inbounds [5 x i8*], [5 x i8*]* %.offload_ptrs34, i64 0, i64 0
  %39 = bitcast [5 x i8*]* %.offload_ptrs34 to i64*
  store i64 %n.casted.sroa.0.0.insert.ext, i64* %39, align 8
  %40 = getelementptr inbounds [5 x i8*], [5 x i8*]* %.offload_baseptrs33, i64 0, i64 1
  %41 = bitcast i8** %40 to double**
  store double* %4, double** %41, align 8
  %42 = getelementptr inbounds [5 x i8*], [5 x i8*]* %.offload_ptrs34, i64 0, i64 1
  %43 = bitcast i8** %42 to double**
  store double* %4, double** %43, align 8
  %44 = getelementptr inbounds [5 x i8*], [5 x i8*]* %.offload_baseptrs33, i64 0, i64 2
  %45 = bitcast i8** %44 to double**
  store double* %1, double** %45, align 8
  %46 = getelementptr inbounds [5 x i8*], [5 x i8*]* %.offload_ptrs34, i64 0, i64 2
  %47 = bitcast i8** %46 to double**
  store double* %1, double** %47, align 8
  %48 = getelementptr inbounds [5 x i8*], [5 x i8*]* %.offload_baseptrs33, i64 0, i64 3
  %49 = bitcast i8** %48 to double*
  store double %beta, double* %49, align 8
  %50 = getelementptr inbounds [5 x i8*], [5 x i8*]* %.offload_ptrs34, i64 0, i64 3
  %51 = bitcast i8** %50 to double*
  store double %beta, double* %51, align 8
  %52 = getelementptr inbounds [5 x i8*], [5 x i8*]* %.offload_baseptrs33, i64 0, i64 4
  %53 = bitcast i8** %52 to double**
  store double* %3, double** %53, align 8
  %54 = getelementptr inbounds [5 x i8*], [5 x i8*]* %.offload_ptrs34, i64 0, i64 4
  %55 = bitcast i8** %54 to double**
  store double* %3, double** %55, align 8
  tail call void @__kmpc_push_target_tripcount_mapper(%struct.ident_t* nonnull @3, i64 -1, i64 %n.casted.sroa.0.0.insert.ext)
  %56 = call i32 @__tgt_target_teams_mapper(%struct.ident_t* nonnull @3, i64 -1, i8* nonnull @.__omp_offloading_31_355dd0b__ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3__l169.region_id, i32 5, i8** nonnull %36, i8** nonnull %38, i64* getelementptr inbounds ([5 x i64], [5 x i64]* @.offload_sizes.106, i64 0, i64 0), i64* getelementptr inbounds ([5 x i64], [5 x i64]* @.offload_maptypes.107, i64 0, i64 0), i8** null, i8** null, i32 0, i32 0)
  %.not33 = icmp eq i32 %56, 0
  br i1 %.not33, label %if.end65, label %omp_offload.failed43

omp_offload.failed43:                             ; preds = %if.then29
  %57 = bitcast double %beta to i64
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_teams(%struct.ident_t* nonnull @3, i32 5, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, double*, double*, i64, double*)* @.omp_outlined..104 to void (i32*, i32*, ...)*), i64 %n.casted.sroa.0.0.insert.ext, double* %4, double* %1, i64 %57, double* %3) #8
  br label %if.end65

if.else45:                                        ; preds = %if.else27
  %58 = getelementptr inbounds [6 x i8*], [6 x i8*]* %.offload_baseptrs52, i64 0, i64 0
  %59 = bitcast [6 x i8*]* %.offload_baseptrs52 to i64*
  store i64 %n.casted.sroa.0.0.insert.ext, i64* %59, align 8
  %60 = getelementptr inbounds [6 x i8*], [6 x i8*]* %.offload_ptrs53, i64 0, i64 0
  %61 = bitcast [6 x i8*]* %.offload_ptrs53 to i64*
  store i64 %n.casted.sroa.0.0.insert.ext, i64* %61, align 8
  %62 = getelementptr inbounds [6 x i8*], [6 x i8*]* %.offload_baseptrs52, i64 0, i64 1
  %63 = bitcast i8** %62 to double**
  store double* %4, double** %63, align 8
  %64 = getelementptr inbounds [6 x i8*], [6 x i8*]* %.offload_ptrs53, i64 0, i64 1
  %65 = bitcast i8** %64 to double**
  store double* %4, double** %65, align 8
  %66 = getelementptr inbounds [6 x i8*], [6 x i8*]* %.offload_baseptrs52, i64 0, i64 2
  %67 = bitcast i8** %66 to double*
  store double %alpha, double* %67, align 8
  %68 = getelementptr inbounds [6 x i8*], [6 x i8*]* %.offload_ptrs53, i64 0, i64 2
  %69 = bitcast i8** %68 to double*
  store double %alpha, double* %69, align 8
  %70 = getelementptr inbounds [6 x i8*], [6 x i8*]* %.offload_baseptrs52, i64 0, i64 3
  %71 = bitcast i8** %70 to double**
  store double* %1, double** %71, align 8
  %72 = getelementptr inbounds [6 x i8*], [6 x i8*]* %.offload_ptrs53, i64 0, i64 3
  %73 = bitcast i8** %72 to double**
  store double* %1, double** %73, align 8
  %74 = getelementptr inbounds [6 x i8*], [6 x i8*]* %.offload_baseptrs52, i64 0, i64 4
  %75 = bitcast i8** %74 to double*
  store double %beta, double* %75, align 8
  %76 = getelementptr inbounds [6 x i8*], [6 x i8*]* %.offload_ptrs53, i64 0, i64 4
  %77 = bitcast i8** %76 to double*
  store double %beta, double* %77, align 8
  %78 = getelementptr inbounds [6 x i8*], [6 x i8*]* %.offload_baseptrs52, i64 0, i64 5
  %79 = bitcast i8** %78 to double**
  store double* %3, double** %79, align 8
  %80 = getelementptr inbounds [6 x i8*], [6 x i8*]* %.offload_ptrs53, i64 0, i64 5
  %81 = bitcast i8** %80 to double**
  store double* %3, double** %81, align 8
  tail call void @__kmpc_push_target_tripcount_mapper(%struct.ident_t* nonnull @3, i64 -1, i64 %n.casted.sroa.0.0.insert.ext)
  %82 = call i32 @__tgt_target_teams_mapper(%struct.ident_t* nonnull @3, i64 -1, i8* nonnull @.__omp_offloading_31_355dd0b__ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3__l175.region_id, i32 6, i8** nonnull %58, i8** nonnull %60, i64* getelementptr inbounds ([6 x i64], [6 x i64]* @.offload_sizes.110, i64 0, i64 0), i64* getelementptr inbounds ([6 x i64], [6 x i64]* @.offload_maptypes.111, i64 0, i64 0), i8** null, i8** null, i32 0, i32 0)
  %.not = icmp eq i32 %82, 0
  br i1 %.not, label %if.end65, label %omp_offload.failed62

omp_offload.failed62:                             ; preds = %if.else45
  %83 = bitcast double %beta to i64
  %84 = bitcast double %alpha to i64
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_teams(%struct.ident_t* nonnull @3, i32 6, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, double*, i64, double*, i64, double*)* @.omp_outlined..108 to void (i32*, i32*, ...)*), i64 %n.casted.sroa.0.0.insert.ext, double* %4, i64 %84, double* %1, i64 %83, double* %3) #8
  br label %if.end65

if.end65:                                         ; preds = %omp_offload.failed43, %if.then29, %omp_offload.failed62, %if.else45, %omp_offload.failed, %if.then8, %omp_offload.failed25, %if.else
  ret void
}

; Function Attrs: mustprogress nofree nounwind willreturn writeonly
declare double @sqrt(double noundef) local_unnamed_addr #25

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3_(double noundef %alpha, %"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %x, double noundef %beta, %"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %y) local_unnamed_addr #12 comdat {
entry:
  %.offload_baseptrs = alloca [3 x i8*], align 8
  %.offload_ptrs = alloca [3 x i8*], align 8
  %.offload_baseptrs21 = alloca [4 x i8*], align 8
  %.offload_ptrs22 = alloca [4 x i8*], align 8
  %.offload_baseptrs39 = alloca [4 x i8*], align 8
  %.offload_ptrs40 = alloca [4 x i8*], align 8
  %.offload_baseptrs58 = alloca [4 x i8*], align 8
  %.offload_ptrs59 = alloca [4 x i8*], align 8
  %.offload_baseptrs77 = alloca [5 x i8*], align 8
  %.offload_ptrs78 = alloca [5 x i8*], align 8
  %_M_finish.i = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %x, i64 0, i32 2, i32 0, i32 0, i32 1
  %0 = load double*, double** %_M_finish.i, align 8, !tbaa !82
  %_M_start.i = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %x, i64 0, i32 2, i32 0, i32 0, i32 0
  %1 = load double*, double** %_M_start.i, align 8, !tbaa !78
  %sub.ptr.lhs.cast.i = ptrtoint double* %0 to i64
  %sub.ptr.rhs.cast.i = ptrtoint double* %1 to i64
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %sub.ptr.div.i = ashr exact i64 %sub.ptr.sub.i, 3
  %_M_finish.i47 = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %y, i64 0, i32 2, i32 0, i32 0, i32 1
  %2 = load double*, double** %_M_finish.i47, align 8, !tbaa !82
  %_M_start.i48 = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %y, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load double*, double** %_M_start.i48, align 8, !tbaa !78
  %sub.ptr.lhs.cast.i49 = ptrtoint double* %2 to i64
  %sub.ptr.rhs.cast.i50 = ptrtoint double* %3 to i64
  %sub.ptr.sub.i51 = sub i64 %sub.ptr.lhs.cast.i49, %sub.ptr.rhs.cast.i50
  %sub.ptr.div.i52 = ashr exact i64 %sub.ptr.sub.i51, 3
  %cmp = icmp ult i64 %sub.ptr.div.i, %sub.ptr.div.i52
  %spec.select = select i1 %cmp, i64 %sub.ptr.div.i, i64 %sub.ptr.div.i52
  %cmp11 = fcmp contract oeq double %alpha, 1.000000e+00
  %cmp12 = fcmp contract oeq double %beta, 1.000000e+00
  %or.cond = and i1 %cmp11, %cmp12
  br i1 %or.cond, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %n.casted.sroa.0.0.insert.ext = and i64 %spec.select, 4294967295
  %4 = getelementptr inbounds [3 x i8*], [3 x i8*]* %.offload_baseptrs, i64 0, i64 0
  %5 = bitcast [3 x i8*]* %.offload_baseptrs to i64*
  store i64 %n.casted.sroa.0.0.insert.ext, i64* %5, align 8
  %6 = getelementptr inbounds [3 x i8*], [3 x i8*]* %.offload_ptrs, i64 0, i64 0
  %7 = bitcast [3 x i8*]* %.offload_ptrs to i64*
  store i64 %n.casted.sroa.0.0.insert.ext, i64* %7, align 8
  %8 = getelementptr inbounds [3 x i8*], [3 x i8*]* %.offload_baseptrs, i64 0, i64 1
  %9 = bitcast i8** %8 to double**
  store double* %3, double** %9, align 8
  %10 = getelementptr inbounds [3 x i8*], [3 x i8*]* %.offload_ptrs, i64 0, i64 1
  %11 = bitcast i8** %10 to double**
  store double* %3, double** %11, align 8
  %12 = getelementptr inbounds [3 x i8*], [3 x i8*]* %.offload_baseptrs, i64 0, i64 2
  %13 = bitcast i8** %12 to double**
  store double* %1, double** %13, align 8
  %14 = getelementptr inbounds [3 x i8*], [3 x i8*]* %.offload_ptrs, i64 0, i64 2
  %15 = bitcast i8** %14 to double**
  store double* %1, double** %15, align 8
  tail call void @__kmpc_push_target_tripcount_mapper(%struct.ident_t* nonnull @3, i64 -1, i64 %n.casted.sroa.0.0.insert.ext)
  %16 = call i32 @__tgt_target_teams_mapper(%struct.ident_t* nonnull @3, i64 -1, i8* nonnull @.__omp_offloading_31_355dd0b__ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3__l200.region_id, i32 3, i8** nonnull %4, i8** nonnull %6, i64* getelementptr inbounds ([3 x i64], [3 x i64]* @.offload_sizes.120, i64 0, i64 0), i64* getelementptr inbounds ([3 x i64], [3 x i64]* @.offload_maptypes.121, i64 0, i64 0), i8** null, i8** null, i32 0, i32 0)
  %.not46 = icmp eq i32 %16, 0
  br i1 %.not46, label %if.end91, label %omp_offload.failed

omp_offload.failed:                               ; preds = %if.then
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_teams(%struct.ident_t* nonnull @3, i32 3, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, double*, double*)* @.omp_outlined..118 to void (i32*, i32*, ...)*), i64 %n.casted.sroa.0.0.insert.ext, double* %3, double* %1) #8
  br label %if.end91

if.else:                                          ; preds = %entry
  br i1 %cmp12, label %if.then17, label %if.else33

if.then17:                                        ; preds = %if.else
  %n.casted18.sroa.0.0.insert.ext = and i64 %spec.select, 4294967295
  %17 = getelementptr inbounds [4 x i8*], [4 x i8*]* %.offload_baseptrs21, i64 0, i64 0
  %18 = bitcast [4 x i8*]* %.offload_baseptrs21 to i64*
  store i64 %n.casted18.sroa.0.0.insert.ext, i64* %18, align 8
  %19 = getelementptr inbounds [4 x i8*], [4 x i8*]* %.offload_ptrs22, i64 0, i64 0
  %20 = bitcast [4 x i8*]* %.offload_ptrs22 to i64*
  store i64 %n.casted18.sroa.0.0.insert.ext, i64* %20, align 8
  %21 = getelementptr inbounds [4 x i8*], [4 x i8*]* %.offload_baseptrs21, i64 0, i64 1
  %22 = bitcast i8** %21 to double**
  store double* %3, double** %22, align 8
  %23 = getelementptr inbounds [4 x i8*], [4 x i8*]* %.offload_ptrs22, i64 0, i64 1
  %24 = bitcast i8** %23 to double**
  store double* %3, double** %24, align 8
  %25 = getelementptr inbounds [4 x i8*], [4 x i8*]* %.offload_baseptrs21, i64 0, i64 2
  %26 = bitcast i8** %25 to double*
  store double %alpha, double* %26, align 8
  %27 = getelementptr inbounds [4 x i8*], [4 x i8*]* %.offload_ptrs22, i64 0, i64 2
  %28 = bitcast i8** %27 to double*
  store double %alpha, double* %28, align 8
  %29 = getelementptr inbounds [4 x i8*], [4 x i8*]* %.offload_baseptrs21, i64 0, i64 3
  %30 = bitcast i8** %29 to double**
  store double* %1, double** %30, align 8
  %31 = getelementptr inbounds [4 x i8*], [4 x i8*]* %.offload_ptrs22, i64 0, i64 3
  %32 = bitcast i8** %31 to double**
  store double* %1, double** %32, align 8
  tail call void @__kmpc_push_target_tripcount_mapper(%struct.ident_t* nonnull @3, i64 -1, i64 %n.casted18.sroa.0.0.insert.ext)
  %33 = call i32 @__tgt_target_teams_mapper(%struct.ident_t* nonnull @3, i64 -1, i8* nonnull @.__omp_offloading_31_355dd0b__ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3__l205.region_id, i32 4, i8** nonnull %17, i8** nonnull %19, i64* getelementptr inbounds ([4 x i64], [4 x i64]* @.offload_sizes.132, i64 0, i64 0), i64* getelementptr inbounds ([4 x i64], [4 x i64]* @.offload_maptypes.133, i64 0, i64 0), i8** null, i8** null, i32 0, i32 0)
  %.not45 = icmp eq i32 %33, 0
  br i1 %.not45, label %if.end91, label %omp_offload.failed31

omp_offload.failed31:                             ; preds = %if.then17
  %34 = bitcast double %alpha to i64
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_teams(%struct.ident_t* nonnull @3, i32 4, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, double*, i64, double*)* @.omp_outlined..122 to void (i32*, i32*, ...)*), i64 %n.casted18.sroa.0.0.insert.ext, double* %3, i64 %34, double* %1) #8
  br label %if.end91

if.else33:                                        ; preds = %if.else
  br i1 %cmp11, label %if.then35, label %if.else51

if.then35:                                        ; preds = %if.else33
  %n.casted36.sroa.0.0.insert.ext = and i64 %spec.select, 4294967295
  %35 = getelementptr inbounds [4 x i8*], [4 x i8*]* %.offload_baseptrs39, i64 0, i64 0
  %36 = bitcast [4 x i8*]* %.offload_baseptrs39 to i64*
  store i64 %n.casted36.sroa.0.0.insert.ext, i64* %36, align 8
  %37 = getelementptr inbounds [4 x i8*], [4 x i8*]* %.offload_ptrs40, i64 0, i64 0
  %38 = bitcast [4 x i8*]* %.offload_ptrs40 to i64*
  store i64 %n.casted36.sroa.0.0.insert.ext, i64* %38, align 8
  %39 = getelementptr inbounds [4 x i8*], [4 x i8*]* %.offload_baseptrs39, i64 0, i64 1
  %40 = bitcast i8** %39 to double**
  store double* %3, double** %40, align 8
  %41 = getelementptr inbounds [4 x i8*], [4 x i8*]* %.offload_ptrs40, i64 0, i64 1
  %42 = bitcast i8** %41 to double**
  store double* %3, double** %42, align 8
  %43 = getelementptr inbounds [4 x i8*], [4 x i8*]* %.offload_baseptrs39, i64 0, i64 2
  %44 = bitcast i8** %43 to double**
  store double* %1, double** %44, align 8
  %45 = getelementptr inbounds [4 x i8*], [4 x i8*]* %.offload_ptrs40, i64 0, i64 2
  %46 = bitcast i8** %45 to double**
  store double* %1, double** %46, align 8
  %47 = getelementptr inbounds [4 x i8*], [4 x i8*]* %.offload_baseptrs39, i64 0, i64 3
  %48 = bitcast i8** %47 to double*
  store double %beta, double* %48, align 8
  %49 = getelementptr inbounds [4 x i8*], [4 x i8*]* %.offload_ptrs40, i64 0, i64 3
  %50 = bitcast i8** %49 to double*
  store double %beta, double* %50, align 8
  tail call void @__kmpc_push_target_tripcount_mapper(%struct.ident_t* nonnull @3, i64 -1, i64 %n.casted36.sroa.0.0.insert.ext)
  %51 = call i32 @__tgt_target_teams_mapper(%struct.ident_t* nonnull @3, i64 -1, i8* nonnull @.__omp_offloading_31_355dd0b__ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3__l210.region_id, i32 4, i8** nonnull %35, i8** nonnull %37, i64* getelementptr inbounds ([4 x i64], [4 x i64]* @.offload_sizes.128, i64 0, i64 0), i64* getelementptr inbounds ([4 x i64], [4 x i64]* @.offload_maptypes.129, i64 0, i64 0), i8** null, i8** null, i32 0, i32 0)
  %.not44 = icmp eq i32 %51, 0
  br i1 %.not44, label %if.end91, label %omp_offload.failed49

omp_offload.failed49:                             ; preds = %if.then35
  %52 = bitcast double %beta to i64
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_teams(%struct.ident_t* nonnull @3, i32 4, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, double*, double*, i64)* @.omp_outlined..126 to void (i32*, i32*, ...)*), i64 %n.casted36.sroa.0.0.insert.ext, double* %3, double* %1, i64 %52) #8
  br label %if.end91

if.else51:                                        ; preds = %if.else33
  %cmp52 = fcmp contract oeq double %beta, 0.000000e+00
  %n.casted54.sroa.0.0.insert.ext = and i64 %spec.select, 4294967295
  br i1 %cmp52, label %if.then53, label %if.else70

if.then53:                                        ; preds = %if.else51
  %53 = getelementptr inbounds [4 x i8*], [4 x i8*]* %.offload_baseptrs58, i64 0, i64 0
  %54 = bitcast [4 x i8*]* %.offload_baseptrs58 to i64*
  store i64 %n.casted54.sroa.0.0.insert.ext, i64* %54, align 8
  %55 = getelementptr inbounds [4 x i8*], [4 x i8*]* %.offload_ptrs59, i64 0, i64 0
  %56 = bitcast [4 x i8*]* %.offload_ptrs59 to i64*
  store i64 %n.casted54.sroa.0.0.insert.ext, i64* %56, align 8
  %57 = getelementptr inbounds [4 x i8*], [4 x i8*]* %.offload_baseptrs58, i64 0, i64 1
  %58 = bitcast i8** %57 to double**
  store double* %3, double** %58, align 8
  %59 = getelementptr inbounds [4 x i8*], [4 x i8*]* %.offload_ptrs59, i64 0, i64 1
  %60 = bitcast i8** %59 to double**
  store double* %3, double** %60, align 8
  %61 = getelementptr inbounds [4 x i8*], [4 x i8*]* %.offload_baseptrs58, i64 0, i64 2
  %62 = bitcast i8** %61 to double*
  store double %alpha, double* %62, align 8
  %63 = getelementptr inbounds [4 x i8*], [4 x i8*]* %.offload_ptrs59, i64 0, i64 2
  %64 = bitcast i8** %63 to double*
  store double %alpha, double* %64, align 8
  %65 = getelementptr inbounds [4 x i8*], [4 x i8*]* %.offload_baseptrs58, i64 0, i64 3
  %66 = bitcast i8** %65 to double**
  store double* %1, double** %66, align 8
  %67 = getelementptr inbounds [4 x i8*], [4 x i8*]* %.offload_ptrs59, i64 0, i64 3
  %68 = bitcast i8** %67 to double**
  store double* %1, double** %68, align 8
  tail call void @__kmpc_push_target_tripcount_mapper(%struct.ident_t* nonnull @3, i64 -1, i64 %n.casted54.sroa.0.0.insert.ext)
  %69 = call i32 @__tgt_target_teams_mapper(%struct.ident_t* nonnull @3, i64 -1, i8* nonnull @.__omp_offloading_31_355dd0b__ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3__l215.region_id, i32 4, i8** nonnull %53, i8** nonnull %55, i64* getelementptr inbounds ([4 x i64], [4 x i64]* @.offload_sizes.132, i64 0, i64 0), i64* getelementptr inbounds ([4 x i64], [4 x i64]* @.offload_maptypes.133, i64 0, i64 0), i8** null, i8** null, i32 0, i32 0)
  %.not43 = icmp eq i32 %69, 0
  br i1 %.not43, label %if.end91, label %omp_offload.failed68

omp_offload.failed68:                             ; preds = %if.then53
  %70 = bitcast double %alpha to i64
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_teams(%struct.ident_t* nonnull @3, i32 4, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, double*, i64, double*)* @.omp_outlined..130 to void (i32*, i32*, ...)*), i64 %n.casted54.sroa.0.0.insert.ext, double* %3, i64 %70, double* %1) #8
  br label %if.end91

if.else70:                                        ; preds = %if.else51
  %71 = getelementptr inbounds [5 x i8*], [5 x i8*]* %.offload_baseptrs77, i64 0, i64 0
  %72 = bitcast [5 x i8*]* %.offload_baseptrs77 to i64*
  store i64 %n.casted54.sroa.0.0.insert.ext, i64* %72, align 8
  %73 = getelementptr inbounds [5 x i8*], [5 x i8*]* %.offload_ptrs78, i64 0, i64 0
  %74 = bitcast [5 x i8*]* %.offload_ptrs78 to i64*
  store i64 %n.casted54.sroa.0.0.insert.ext, i64* %74, align 8
  %75 = getelementptr inbounds [5 x i8*], [5 x i8*]* %.offload_baseptrs77, i64 0, i64 1
  %76 = bitcast i8** %75 to double**
  store double* %3, double** %76, align 8
  %77 = getelementptr inbounds [5 x i8*], [5 x i8*]* %.offload_ptrs78, i64 0, i64 1
  %78 = bitcast i8** %77 to double**
  store double* %3, double** %78, align 8
  %79 = getelementptr inbounds [5 x i8*], [5 x i8*]* %.offload_baseptrs77, i64 0, i64 2
  %80 = bitcast i8** %79 to double*
  store double %alpha, double* %80, align 8
  %81 = getelementptr inbounds [5 x i8*], [5 x i8*]* %.offload_ptrs78, i64 0, i64 2
  %82 = bitcast i8** %81 to double*
  store double %alpha, double* %82, align 8
  %83 = getelementptr inbounds [5 x i8*], [5 x i8*]* %.offload_baseptrs77, i64 0, i64 3
  %84 = bitcast i8** %83 to double**
  store double* %1, double** %84, align 8
  %85 = getelementptr inbounds [5 x i8*], [5 x i8*]* %.offload_ptrs78, i64 0, i64 3
  %86 = bitcast i8** %85 to double**
  store double* %1, double** %86, align 8
  %87 = getelementptr inbounds [5 x i8*], [5 x i8*]* %.offload_baseptrs77, i64 0, i64 4
  %88 = bitcast i8** %87 to double*
  store double %beta, double* %88, align 8
  %89 = getelementptr inbounds [5 x i8*], [5 x i8*]* %.offload_ptrs78, i64 0, i64 4
  %90 = bitcast i8** %89 to double*
  store double %beta, double* %90, align 8
  tail call void @__kmpc_push_target_tripcount_mapper(%struct.ident_t* nonnull @3, i64 -1, i64 %n.casted54.sroa.0.0.insert.ext)
  %91 = call i32 @__tgt_target_teams_mapper(%struct.ident_t* nonnull @3, i64 -1, i8* nonnull @.__omp_offloading_31_355dd0b__ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3__l220.region_id, i32 5, i8** nonnull %71, i8** nonnull %73, i64* getelementptr inbounds ([5 x i64], [5 x i64]* @.offload_sizes.136, i64 0, i64 0), i64* getelementptr inbounds ([5 x i64], [5 x i64]* @.offload_maptypes.137, i64 0, i64 0), i8** null, i8** null, i32 0, i32 0)
  %.not = icmp eq i32 %91, 0
  br i1 %.not, label %if.end91, label %omp_offload.failed87

omp_offload.failed87:                             ; preds = %if.else70
  %92 = bitcast double %beta to i64
  %93 = bitcast double %alpha to i64
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_teams(%struct.ident_t* nonnull @3, i32 5, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, double*, i64, double*, i64)* @.omp_outlined..134 to void (i32*, i32*, ...)*), i64 %n.casted54.sroa.0.0.insert.ext, double* %3, i64 %93, double* %1, i64 %92) #8
  br label %if.end91

if.end91:                                         ; preds = %omp_offload.failed31, %if.then17, %omp_offload.failed68, %if.then53, %omp_offload.failed87, %if.else70, %if.then35, %omp_offload.failed49, %if.then, %omp_offload.failed
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local noundef double @_ZN6miniFE3dotINS_6VectorIdiiEEEENS_10TypeTraitsINT_10ScalarTypeEE14magnitude_typeERKS4_S9_(%"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %x, %"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %y) local_unnamed_addr #12 comdat {
entry:
  %result = alloca double, align 8
  %.offload_baseptrs = alloca [4 x i8*], align 8
  %.offload_ptrs = alloca [4 x i8*], align 8
  %_M_finish.i = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %x, i64 0, i32 2, i32 0, i32 0, i32 1
  %0 = load double*, double** %_M_finish.i, align 8, !tbaa !82
  %_M_start.i = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %x, i64 0, i32 2, i32 0, i32 0, i32 0
  %1 = load double*, double** %_M_start.i, align 8, !tbaa !78
  %sub.ptr.lhs.cast.i = ptrtoint double* %0 to i64
  %sub.ptr.rhs.cast.i = ptrtoint double* %1 to i64
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %2 = lshr exact i64 %sub.ptr.sub.i, 3
  %_M_start.i9 = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %y, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load double*, double** %_M_start.i9, align 8, !tbaa !78
  %4 = bitcast double* %result to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8
  store double 0.000000e+00, double* %result, align 8, !tbaa !84
  %n.casted.sroa.0.0.insert.ext = and i64 %2, 4294967295
  %5 = getelementptr inbounds [4 x i8*], [4 x i8*]* %.offload_baseptrs, i64 0, i64 0
  %6 = bitcast [4 x i8*]* %.offload_baseptrs to i64*
  store i64 %n.casted.sroa.0.0.insert.ext, i64* %6, align 8
  %7 = getelementptr inbounds [4 x i8*], [4 x i8*]* %.offload_ptrs, i64 0, i64 0
  %8 = bitcast [4 x i8*]* %.offload_ptrs to i64*
  store i64 %n.casted.sroa.0.0.insert.ext, i64* %8, align 8
  %9 = getelementptr inbounds [4 x i8*], [4 x i8*]* %.offload_baseptrs, i64 0, i64 1
  %10 = bitcast i8** %9 to double**
  store double* %result, double** %10, align 8
  %11 = getelementptr inbounds [4 x i8*], [4 x i8*]* %.offload_ptrs, i64 0, i64 1
  %12 = bitcast i8** %11 to double**
  store double* %result, double** %12, align 8
  %13 = getelementptr inbounds [4 x i8*], [4 x i8*]* %.offload_baseptrs, i64 0, i64 2
  %14 = bitcast i8** %13 to double**
  store double* %1, double** %14, align 8
  %15 = getelementptr inbounds [4 x i8*], [4 x i8*]* %.offload_ptrs, i64 0, i64 2
  %16 = bitcast i8** %15 to double**
  store double* %1, double** %16, align 8
  %17 = getelementptr inbounds [4 x i8*], [4 x i8*]* %.offload_baseptrs, i64 0, i64 3
  %18 = bitcast i8** %17 to double**
  store double* %3, double** %18, align 8
  %19 = getelementptr inbounds [4 x i8*], [4 x i8*]* %.offload_ptrs, i64 0, i64 3
  %20 = bitcast i8** %19 to double**
  store double* %3, double** %20, align 8
  call void @__kmpc_push_target_tripcount_mapper(%struct.ident_t* nonnull @3, i64 -1, i64 %n.casted.sroa.0.0.insert.ext)
  %21 = call i32 @__tgt_target_teams_mapper(%struct.ident_t* nonnull @3, i64 -1, i8* nonnull @.__omp_offloading_31_355dd0b__ZN6miniFE3dotINS_6VectorIdiiEEEENS_10TypeTraitsINT_10ScalarTypeEE14magnitude_typeERKS4_S9__l253.region_id, i32 4, i8** nonnull %5, i8** nonnull %7, i64* getelementptr inbounds ([4 x i64], [4 x i64]* @.offload_sizes.142, i64 0, i64 0), i64* getelementptr inbounds ([4 x i64], [4 x i64]* @.offload_maptypes.143, i64 0, i64 0), i8** null, i8** null, i32 0, i32 0)
  %.not = icmp eq i32 %21, 0
  br i1 %.not, label %omp_offload.cont, label %omp_offload.failed

omp_offload.failed:                               ; preds = %entry
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_teams(%struct.ident_t* nonnull @3, i32 4, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, double*, double*, double*)* @.omp_outlined..138 to void (i32*, i32*, ...)*), i64 %n.casted.sroa.0.0.insert.ext, double* nonnull %result, double* %1, double* %3) #8
  br label %omp_offload.cont

omp_offload.cont:                                 ; preds = %omp_offload.failed, %entry
  %22 = load double, double* %result, align 8, !tbaa !84
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8
  ret double %22
}

; Function Attrs: nounwind
declare void @__tgt_target_data_end_mapper(%struct.ident_t*, i64, i32, i8**, i8**, i64*, i64*, i8**, i8**) local_unnamed_addr #8

; Function Attrs: alwaysinline norecurse nounwind uwtable
define internal void @.omp_outlined..97(i32* noalias nocapture noundef readonly %.global_tid., i32* noalias nocapture noundef readnone %.bound_tid., i64 noundef %n, double* noundef %wcoefs, double* noundef %xcoefs) #7 {
entry:
  %.omp.comb.lb = alloca i32, align 4
  %.omp.comb.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %n.addr.sroa.0.0.extract.trunc = trunc i64 %n to i32
  %sub2 = add nsw i32 %n.addr.sroa.0.0.extract.trunc, -1
  %cmp = icmp sgt i32 %n.addr.sroa.0.0.extract.trunc, 0
  br i1 %cmp, label %omp.precond.then, label %omp.precond.end

omp.precond.then:                                 ; preds = %entry
  %0 = bitcast i32* %.omp.comb.lb to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8
  store i32 0, i32* %.omp.comb.lb, align 4, !tbaa !16
  %1 = bitcast i32* %.omp.comb.ub to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8
  store i32 %sub2, i32* %.omp.comb.ub, align 4, !tbaa !16
  %2 = bitcast i32* %.omp.stride to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #8
  store i32 1, i32* %.omp.stride, align 4, !tbaa !16
  %3 = bitcast i32* %.omp.is_last to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #8
  store i32 0, i32* %.omp.is_last, align 4, !tbaa !16
  %4 = load i32, i32* %.global_tid., align 4, !tbaa !16
  call void @__kmpc_for_static_init_4(%struct.ident_t* nonnull @4, i32 %4, i32 92, i32* nonnull %.omp.is_last, i32* nonnull %.omp.comb.lb, i32* nonnull %.omp.comb.ub, i32* nonnull %.omp.stride, i32 1, i32 1)
  %5 = load i32, i32* %.omp.comb.ub, align 4, !tbaa !16
  %cmp4 = icmp sgt i32 %5, %sub2
  %cond = select i1 %cmp4, i32 %sub2, i32 %5
  store i32 %cond, i32* %.omp.comb.ub, align 4, !tbaa !16
  %6 = load i32, i32* %.omp.comb.lb, align 4, !tbaa !16
  %n.casted.sroa.0.0.insert.ext = and i64 %n, 4294967295
  %cmp5.not13 = icmp sgt i32 %6, %cond
  br i1 %cmp5.not13, label %omp.loop.exit, label %omp.inner.for.body.preheader

omp.inner.for.body.preheader:                     ; preds = %omp.precond.then
  %7 = zext i32 %6 to i64
  %8 = zext i32 %cond to i64
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull @3, i32 5, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, i64, i64, double*, double*)* @.omp_outlined..98 to void (i32*, i32*, ...)*), i64 %7, i64 %8, i64 %n.casted.sroa.0.0.insert.ext, double* %wcoefs, double* %xcoefs), !llvm.access.group !232
  %9 = load i32, i32* %.omp.stride, align 4, !tbaa !16, !llvm.access.group !232
  %add22 = add nsw i32 %9, %6
  %10 = load i32, i32* %.omp.comb.ub, align 4, !tbaa !16, !llvm.access.group !232
  %cmp5.not23 = icmp sgt i32 %add22, %10
  br i1 %cmp5.not23, label %omp.loop.exit, label %omp.inner.for.body.omp.inner.for.body_crit_edge, !llvm.loop !233

omp.inner.for.body.omp.inner.for.body_crit_edge:  ; preds = %omp.inner.for.body.preheader, %omp.inner.for.body.omp.inner.for.body_crit_edge
  %11 = phi i32 [ %15, %omp.inner.for.body.omp.inner.for.body_crit_edge ], [ %10, %omp.inner.for.body.preheader ]
  %add24 = phi i32 [ %add, %omp.inner.for.body.omp.inner.for.body_crit_edge ], [ %add22, %omp.inner.for.body.preheader ]
  %.pre = load i32, i32* %.omp.comb.lb, align 4, !llvm.access.group !232
  %12 = zext i32 %.pre to i64
  %13 = zext i32 %11 to i64
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull @3, i32 5, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, i64, i64, double*, double*)* @.omp_outlined..98 to void (i32*, i32*, ...)*), i64 %12, i64 %13, i64 %n.casted.sroa.0.0.insert.ext, double* %wcoefs, double* %xcoefs), !llvm.access.group !232
  %14 = load i32, i32* %.omp.stride, align 4, !tbaa !16, !llvm.access.group !232
  %add = add nsw i32 %14, %add24
  %15 = load i32, i32* %.omp.comb.ub, align 4, !tbaa !16, !llvm.access.group !232
  %cmp5.not = icmp sgt i32 %add, %15
  br i1 %cmp5.not, label %omp.loop.exit, label %omp.inner.for.body.omp.inner.for.body_crit_edge, !llvm.loop !233

omp.loop.exit:                                    ; preds = %omp.inner.for.body.omp.inner.for.body_crit_edge, %omp.inner.for.body.preheader, %omp.precond.then
  call void @__kmpc_for_static_fini(%struct.ident_t* nonnull @4, i32 %4)
  br label %omp.precond.end

omp.precond.end:                                  ; preds = %entry, %omp.loop.exit
  %.pre-phi = bitcast i32* %.omp.is_last to i8*
  %.pre-phi17 = bitcast i32* %.omp.stride to i8*
  %.pre-phi19 = bitcast i32* %.omp.comb.ub to i8*
  %.pre-phi21 = bitcast i32* %.omp.comb.lb to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %.pre-phi) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %.pre-phi17) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %.pre-phi19) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %.pre-phi21) #8
  ret void
}

; Function Attrs: alwaysinline norecurse nounwind uwtable
define internal void @.omp_outlined..98(i32* noalias nocapture noundef readonly %.global_tid., i32* noalias nocapture noundef readnone %.bound_tid., i64 noundef %.previous.lb., i64 noundef %.previous.ub., i64 noundef %n, double* nocapture noundef writeonly %wcoefs, double* nocapture noundef readonly %xcoefs) #7 {
entry:
  %.omp.lb = alloca i32, align 4
  %.omp.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %n.addr.sroa.0.0.extract.trunc = trunc i64 %n to i32
  %sub2 = add nsw i32 %n.addr.sroa.0.0.extract.trunc, -1
  %cmp = icmp sgt i32 %n.addr.sroa.0.0.extract.trunc, 0
  br i1 %cmp, label %omp.precond.then, label %omp.precond.end

omp.precond.then:                                 ; preds = %entry
  %0 = bitcast i32* %.omp.lb to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8
  %1 = bitcast i32* %.omp.ub to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8
  %conv3 = trunc i64 %.previous.lb. to i32
  %conv4 = trunc i64 %.previous.ub. to i32
  store i32 %conv3, i32* %.omp.lb, align 4, !tbaa !16
  store i32 %conv4, i32* %.omp.ub, align 4, !tbaa !16
  %2 = bitcast i32* %.omp.stride to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #8
  store i32 1, i32* %.omp.stride, align 4, !tbaa !16
  %3 = bitcast i32* %.omp.is_last to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #8
  store i32 0, i32* %.omp.is_last, align 4, !tbaa !16
  %4 = load i32, i32* %.global_tid., align 4, !tbaa !16
  call void @__kmpc_for_static_init_4(%struct.ident_t* nonnull @1, i32 %4, i32 34, i32* nonnull %.omp.is_last, i32* nonnull %.omp.lb, i32* nonnull %.omp.ub, i32* nonnull %.omp.stride, i32 1, i32 1)
  %5 = load i32, i32* %.omp.ub, align 4, !tbaa !16
  %cmp6 = icmp sgt i32 %5, %sub2
  %cond = select i1 %cmp6, i32 %sub2, i32 %5
  store i32 %cond, i32* %.omp.ub, align 4, !tbaa !16
  %6 = load i32, i32* %.omp.lb, align 4, !tbaa !16
  %cmp7.not14 = icmp slt i32 %cond, %6
  br i1 %cmp7.not14, label %omp.loop.exit, label %omp.inner.for.body.preheader

omp.inner.for.body.preheader:                     ; preds = %omp.precond.then
  %7 = sext i32 %6 to i64
  %8 = add nsw i32 %cond, 1
  %9 = sub i32 %cond, %6
  %10 = zext i32 %9 to i64
  %11 = add nuw nsw i64 %10, 1
  %min.iters.check = icmp ult i32 %9, 23
  br i1 %min.iters.check, label %omp.inner.for.body.preheader31, label %vector.ph

vector.ph:                                        ; preds = %omp.inner.for.body.preheader
  %n.mod.vf = urem i64 %11, 24
  %n.vec = sub nsw i64 %11, %n.mod.vf
  %ind.end = add nsw i64 %n.vec, %7
  %12 = add nsw i64 %n.vec, -24
  %13 = udiv i64 %12, 24
  %14 = add nuw nsw i64 %13, 1
  %xtraiter = and i64 %14, 1
  %15 = icmp ult i64 %12, 24
  br i1 %15, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter = and i64 %14, 2305843009213693950
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.1, %vector.body ]
  %niter = phi i64 [ 0, %vector.ph.new ], [ %niter.next.1, %vector.body ]
  %offset.idx = add i64 %index, %7
  %16 = getelementptr inbounds double, double* %xcoefs, i64 %offset.idx
  %17 = bitcast double* %16 to <2 x double>*
  %wide.load = load <2 x double>, <2 x double>* %17, align 8, !tbaa !84, !llvm.access.group !236
  %18 = getelementptr inbounds double, double* %16, i64 2
  %19 = bitcast double* %18 to <2 x double>*
  %wide.load20 = load <2 x double>, <2 x double>* %19, align 8, !tbaa !84, !llvm.access.group !236
  %20 = getelementptr inbounds double, double* %16, i64 4
  %21 = bitcast double* %20 to <2 x double>*
  %wide.load21 = load <2 x double>, <2 x double>* %21, align 8, !tbaa !84, !llvm.access.group !236
  %22 = getelementptr inbounds double, double* %16, i64 6
  %23 = bitcast double* %22 to <2 x double>*
  %wide.load22 = load <2 x double>, <2 x double>* %23, align 8, !tbaa !84, !llvm.access.group !236
  %24 = getelementptr inbounds double, double* %16, i64 8
  %25 = bitcast double* %24 to <2 x double>*
  %wide.load23 = load <2 x double>, <2 x double>* %25, align 8, !tbaa !84, !llvm.access.group !236
  %26 = getelementptr inbounds double, double* %16, i64 10
  %27 = bitcast double* %26 to <2 x double>*
  %wide.load24 = load <2 x double>, <2 x double>* %27, align 8, !tbaa !84, !llvm.access.group !236
  %28 = getelementptr inbounds double, double* %16, i64 12
  %29 = bitcast double* %28 to <2 x double>*
  %wide.load25 = load <2 x double>, <2 x double>* %29, align 8, !tbaa !84, !llvm.access.group !236
  %30 = getelementptr inbounds double, double* %16, i64 14
  %31 = bitcast double* %30 to <2 x double>*
  %wide.load26 = load <2 x double>, <2 x double>* %31, align 8, !tbaa !84, !llvm.access.group !236
  %32 = getelementptr inbounds double, double* %16, i64 16
  %33 = bitcast double* %32 to <2 x double>*
  %wide.load27 = load <2 x double>, <2 x double>* %33, align 8, !tbaa !84, !llvm.access.group !236
  %34 = getelementptr inbounds double, double* %16, i64 18
  %35 = bitcast double* %34 to <2 x double>*
  %wide.load28 = load <2 x double>, <2 x double>* %35, align 8, !tbaa !84, !llvm.access.group !236
  %36 = getelementptr inbounds double, double* %16, i64 20
  %37 = bitcast double* %36 to <2 x double>*
  %wide.load29 = load <2 x double>, <2 x double>* %37, align 8, !tbaa !84, !llvm.access.group !236
  %38 = getelementptr inbounds double, double* %16, i64 22
  %39 = bitcast double* %38 to <2 x double>*
  %wide.load30 = load <2 x double>, <2 x double>* %39, align 8, !tbaa !84, !llvm.access.group !236
  %40 = getelementptr inbounds double, double* %wcoefs, i64 %offset.idx
  %41 = bitcast double* %40 to <2 x double>*
  store <2 x double> %wide.load, <2 x double>* %41, align 8, !tbaa !84, !llvm.access.group !236
  %42 = getelementptr inbounds double, double* %40, i64 2
  %43 = bitcast double* %42 to <2 x double>*
  store <2 x double> %wide.load20, <2 x double>* %43, align 8, !tbaa !84, !llvm.access.group !236
  %44 = getelementptr inbounds double, double* %40, i64 4
  %45 = bitcast double* %44 to <2 x double>*
  store <2 x double> %wide.load21, <2 x double>* %45, align 8, !tbaa !84, !llvm.access.group !236
  %46 = getelementptr inbounds double, double* %40, i64 6
  %47 = bitcast double* %46 to <2 x double>*
  store <2 x double> %wide.load22, <2 x double>* %47, align 8, !tbaa !84, !llvm.access.group !236
  %48 = getelementptr inbounds double, double* %40, i64 8
  %49 = bitcast double* %48 to <2 x double>*
  store <2 x double> %wide.load23, <2 x double>* %49, align 8, !tbaa !84, !llvm.access.group !236
  %50 = getelementptr inbounds double, double* %40, i64 10
  %51 = bitcast double* %50 to <2 x double>*
  store <2 x double> %wide.load24, <2 x double>* %51, align 8, !tbaa !84, !llvm.access.group !236
  %52 = getelementptr inbounds double, double* %40, i64 12
  %53 = bitcast double* %52 to <2 x double>*
  store <2 x double> %wide.load25, <2 x double>* %53, align 8, !tbaa !84, !llvm.access.group !236
  %54 = getelementptr inbounds double, double* %40, i64 14
  %55 = bitcast double* %54 to <2 x double>*
  store <2 x double> %wide.load26, <2 x double>* %55, align 8, !tbaa !84, !llvm.access.group !236
  %56 = getelementptr inbounds double, double* %40, i64 16
  %57 = bitcast double* %56 to <2 x double>*
  store <2 x double> %wide.load27, <2 x double>* %57, align 8, !tbaa !84, !llvm.access.group !236
  %58 = getelementptr inbounds double, double* %40, i64 18
  %59 = bitcast double* %58 to <2 x double>*
  store <2 x double> %wide.load28, <2 x double>* %59, align 8, !tbaa !84, !llvm.access.group !236
  %60 = getelementptr inbounds double, double* %40, i64 20
  %61 = bitcast double* %60 to <2 x double>*
  store <2 x double> %wide.load29, <2 x double>* %61, align 8, !tbaa !84, !llvm.access.group !236
  %62 = getelementptr inbounds double, double* %40, i64 22
  %63 = bitcast double* %62 to <2 x double>*
  store <2 x double> %wide.load30, <2 x double>* %63, align 8, !tbaa !84, !llvm.access.group !236
  %index.next = add nuw i64 %index, 24
  %offset.idx.1 = add i64 %index.next, %7
  %64 = getelementptr inbounds double, double* %xcoefs, i64 %offset.idx.1
  %65 = bitcast double* %64 to <2 x double>*
  %wide.load.1 = load <2 x double>, <2 x double>* %65, align 8, !tbaa !84, !llvm.access.group !236
  %66 = getelementptr inbounds double, double* %64, i64 2
  %67 = bitcast double* %66 to <2 x double>*
  %wide.load20.1 = load <2 x double>, <2 x double>* %67, align 8, !tbaa !84, !llvm.access.group !236
  %68 = getelementptr inbounds double, double* %64, i64 4
  %69 = bitcast double* %68 to <2 x double>*
  %wide.load21.1 = load <2 x double>, <2 x double>* %69, align 8, !tbaa !84, !llvm.access.group !236
  %70 = getelementptr inbounds double, double* %64, i64 6
  %71 = bitcast double* %70 to <2 x double>*
  %wide.load22.1 = load <2 x double>, <2 x double>* %71, align 8, !tbaa !84, !llvm.access.group !236
  %72 = getelementptr inbounds double, double* %64, i64 8
  %73 = bitcast double* %72 to <2 x double>*
  %wide.load23.1 = load <2 x double>, <2 x double>* %73, align 8, !tbaa !84, !llvm.access.group !236
  %74 = getelementptr inbounds double, double* %64, i64 10
  %75 = bitcast double* %74 to <2 x double>*
  %wide.load24.1 = load <2 x double>, <2 x double>* %75, align 8, !tbaa !84, !llvm.access.group !236
  %76 = getelementptr inbounds double, double* %64, i64 12
  %77 = bitcast double* %76 to <2 x double>*
  %wide.load25.1 = load <2 x double>, <2 x double>* %77, align 8, !tbaa !84, !llvm.access.group !236
  %78 = getelementptr inbounds double, double* %64, i64 14
  %79 = bitcast double* %78 to <2 x double>*
  %wide.load26.1 = load <2 x double>, <2 x double>* %79, align 8, !tbaa !84, !llvm.access.group !236
  %80 = getelementptr inbounds double, double* %64, i64 16
  %81 = bitcast double* %80 to <2 x double>*
  %wide.load27.1 = load <2 x double>, <2 x double>* %81, align 8, !tbaa !84, !llvm.access.group !236
  %82 = getelementptr inbounds double, double* %64, i64 18
  %83 = bitcast double* %82 to <2 x double>*
  %wide.load28.1 = load <2 x double>, <2 x double>* %83, align 8, !tbaa !84, !llvm.access.group !236
  %84 = getelementptr inbounds double, double* %64, i64 20
  %85 = bitcast double* %84 to <2 x double>*
  %wide.load29.1 = load <2 x double>, <2 x double>* %85, align 8, !tbaa !84, !llvm.access.group !236
  %86 = getelementptr inbounds double, double* %64, i64 22
  %87 = bitcast double* %86 to <2 x double>*
  %wide.load30.1 = load <2 x double>, <2 x double>* %87, align 8, !tbaa !84, !llvm.access.group !236
  %88 = getelementptr inbounds double, double* %wcoefs, i64 %offset.idx.1
  %89 = bitcast double* %88 to <2 x double>*
  store <2 x double> %wide.load.1, <2 x double>* %89, align 8, !tbaa !84, !llvm.access.group !236
  %90 = getelementptr inbounds double, double* %88, i64 2
  %91 = bitcast double* %90 to <2 x double>*
  store <2 x double> %wide.load20.1, <2 x double>* %91, align 8, !tbaa !84, !llvm.access.group !236
  %92 = getelementptr inbounds double, double* %88, i64 4
  %93 = bitcast double* %92 to <2 x double>*
  store <2 x double> %wide.load21.1, <2 x double>* %93, align 8, !tbaa !84, !llvm.access.group !236
  %94 = getelementptr inbounds double, double* %88, i64 6
  %95 = bitcast double* %94 to <2 x double>*
  store <2 x double> %wide.load22.1, <2 x double>* %95, align 8, !tbaa !84, !llvm.access.group !236
  %96 = getelementptr inbounds double, double* %88, i64 8
  %97 = bitcast double* %96 to <2 x double>*
  store <2 x double> %wide.load23.1, <2 x double>* %97, align 8, !tbaa !84, !llvm.access.group !236
  %98 = getelementptr inbounds double, double* %88, i64 10
  %99 = bitcast double* %98 to <2 x double>*
  store <2 x double> %wide.load24.1, <2 x double>* %99, align 8, !tbaa !84, !llvm.access.group !236
  %100 = getelementptr inbounds double, double* %88, i64 12
  %101 = bitcast double* %100 to <2 x double>*
  store <2 x double> %wide.load25.1, <2 x double>* %101, align 8, !tbaa !84, !llvm.access.group !236
  %102 = getelementptr inbounds double, double* %88, i64 14
  %103 = bitcast double* %102 to <2 x double>*
  store <2 x double> %wide.load26.1, <2 x double>* %103, align 8, !tbaa !84, !llvm.access.group !236
  %104 = getelementptr inbounds double, double* %88, i64 16
  %105 = bitcast double* %104 to <2 x double>*
  store <2 x double> %wide.load27.1, <2 x double>* %105, align 8, !tbaa !84, !llvm.access.group !236
  %106 = getelementptr inbounds double, double* %88, i64 18
  %107 = bitcast double* %106 to <2 x double>*
  store <2 x double> %wide.load28.1, <2 x double>* %107, align 8, !tbaa !84, !llvm.access.group !236
  %108 = getelementptr inbounds double, double* %88, i64 20
  %109 = bitcast double* %108 to <2 x double>*
  store <2 x double> %wide.load29.1, <2 x double>* %109, align 8, !tbaa !84, !llvm.access.group !236
  %110 = getelementptr inbounds double, double* %88, i64 22
  %111 = bitcast double* %110 to <2 x double>*
  store <2 x double> %wide.load30.1, <2 x double>* %111, align 8, !tbaa !84, !llvm.access.group !236
  %index.next.1 = add nuw i64 %index, 48
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !237

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %offset.idx.epil = add i64 %index.unr, %7
  %112 = getelementptr inbounds double, double* %xcoefs, i64 %offset.idx.epil
  %113 = bitcast double* %112 to <2 x double>*
  %wide.load.epil = load <2 x double>, <2 x double>* %113, align 8, !tbaa !84, !llvm.access.group !236
  %114 = getelementptr inbounds double, double* %112, i64 2
  %115 = bitcast double* %114 to <2 x double>*
  %wide.load20.epil = load <2 x double>, <2 x double>* %115, align 8, !tbaa !84, !llvm.access.group !236
  %116 = getelementptr inbounds double, double* %112, i64 4
  %117 = bitcast double* %116 to <2 x double>*
  %wide.load21.epil = load <2 x double>, <2 x double>* %117, align 8, !tbaa !84, !llvm.access.group !236
  %118 = getelementptr inbounds double, double* %112, i64 6
  %119 = bitcast double* %118 to <2 x double>*
  %wide.load22.epil = load <2 x double>, <2 x double>* %119, align 8, !tbaa !84, !llvm.access.group !236
  %120 = getelementptr inbounds double, double* %112, i64 8
  %121 = bitcast double* %120 to <2 x double>*
  %wide.load23.epil = load <2 x double>, <2 x double>* %121, align 8, !tbaa !84, !llvm.access.group !236
  %122 = getelementptr inbounds double, double* %112, i64 10
  %123 = bitcast double* %122 to <2 x double>*
  %wide.load24.epil = load <2 x double>, <2 x double>* %123, align 8, !tbaa !84, !llvm.access.group !236
  %124 = getelementptr inbounds double, double* %112, i64 12
  %125 = bitcast double* %124 to <2 x double>*
  %wide.load25.epil = load <2 x double>, <2 x double>* %125, align 8, !tbaa !84, !llvm.access.group !236
  %126 = getelementptr inbounds double, double* %112, i64 14
  %127 = bitcast double* %126 to <2 x double>*
  %wide.load26.epil = load <2 x double>, <2 x double>* %127, align 8, !tbaa !84, !llvm.access.group !236
  %128 = getelementptr inbounds double, double* %112, i64 16
  %129 = bitcast double* %128 to <2 x double>*
  %wide.load27.epil = load <2 x double>, <2 x double>* %129, align 8, !tbaa !84, !llvm.access.group !236
  %130 = getelementptr inbounds double, double* %112, i64 18
  %131 = bitcast double* %130 to <2 x double>*
  %wide.load28.epil = load <2 x double>, <2 x double>* %131, align 8, !tbaa !84, !llvm.access.group !236
  %132 = getelementptr inbounds double, double* %112, i64 20
  %133 = bitcast double* %132 to <2 x double>*
  %wide.load29.epil = load <2 x double>, <2 x double>* %133, align 8, !tbaa !84, !llvm.access.group !236
  %134 = getelementptr inbounds double, double* %112, i64 22
  %135 = bitcast double* %134 to <2 x double>*
  %wide.load30.epil = load <2 x double>, <2 x double>* %135, align 8, !tbaa !84, !llvm.access.group !236
  %136 = getelementptr inbounds double, double* %wcoefs, i64 %offset.idx.epil
  %137 = bitcast double* %136 to <2 x double>*
  store <2 x double> %wide.load.epil, <2 x double>* %137, align 8, !tbaa !84, !llvm.access.group !236
  %138 = getelementptr inbounds double, double* %136, i64 2
  %139 = bitcast double* %138 to <2 x double>*
  store <2 x double> %wide.load20.epil, <2 x double>* %139, align 8, !tbaa !84, !llvm.access.group !236
  %140 = getelementptr inbounds double, double* %136, i64 4
  %141 = bitcast double* %140 to <2 x double>*
  store <2 x double> %wide.load21.epil, <2 x double>* %141, align 8, !tbaa !84, !llvm.access.group !236
  %142 = getelementptr inbounds double, double* %136, i64 6
  %143 = bitcast double* %142 to <2 x double>*
  store <2 x double> %wide.load22.epil, <2 x double>* %143, align 8, !tbaa !84, !llvm.access.group !236
  %144 = getelementptr inbounds double, double* %136, i64 8
  %145 = bitcast double* %144 to <2 x double>*
  store <2 x double> %wide.load23.epil, <2 x double>* %145, align 8, !tbaa !84, !llvm.access.group !236
  %146 = getelementptr inbounds double, double* %136, i64 10
  %147 = bitcast double* %146 to <2 x double>*
  store <2 x double> %wide.load24.epil, <2 x double>* %147, align 8, !tbaa !84, !llvm.access.group !236
  %148 = getelementptr inbounds double, double* %136, i64 12
  %149 = bitcast double* %148 to <2 x double>*
  store <2 x double> %wide.load25.epil, <2 x double>* %149, align 8, !tbaa !84, !llvm.access.group !236
  %150 = getelementptr inbounds double, double* %136, i64 14
  %151 = bitcast double* %150 to <2 x double>*
  store <2 x double> %wide.load26.epil, <2 x double>* %151, align 8, !tbaa !84, !llvm.access.group !236
  %152 = getelementptr inbounds double, double* %136, i64 16
  %153 = bitcast double* %152 to <2 x double>*
  store <2 x double> %wide.load27.epil, <2 x double>* %153, align 8, !tbaa !84, !llvm.access.group !236
  %154 = getelementptr inbounds double, double* %136, i64 18
  %155 = bitcast double* %154 to <2 x double>*
  store <2 x double> %wide.load28.epil, <2 x double>* %155, align 8, !tbaa !84, !llvm.access.group !236
  %156 = getelementptr inbounds double, double* %136, i64 20
  %157 = bitcast double* %156 to <2 x double>*
  store <2 x double> %wide.load29.epil, <2 x double>* %157, align 8, !tbaa !84, !llvm.access.group !236
  %158 = getelementptr inbounds double, double* %136, i64 22
  %159 = bitcast double* %158 to <2 x double>*
  store <2 x double> %wide.load30.epil, <2 x double>* %159, align 8, !tbaa !84, !llvm.access.group !236
  br label %middle.block

middle.block:                                     ; preds = %middle.block.unr-lcssa, %vector.body.epil
  %cmp.n = icmp eq i64 %n.mod.vf, 0
  br i1 %cmp.n, label %omp.loop.exit, label %omp.inner.for.body.preheader31

omp.inner.for.body.preheader31:                   ; preds = %omp.inner.for.body.preheader, %middle.block
  %indvars.iv.ph = phi i64 [ %7, %omp.inner.for.body.preheader ], [ %ind.end, %middle.block ]
  br label %omp.inner.for.body

omp.inner.for.body:                               ; preds = %omp.inner.for.body.preheader31, %omp.inner.for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %omp.inner.for.body ], [ %indvars.iv.ph, %omp.inner.for.body.preheader31 ]
  %arrayidx = getelementptr inbounds double, double* %xcoefs, i64 %indvars.iv
  %160 = load double, double* %arrayidx, align 8, !tbaa !84, !llvm.access.group !236
  %arrayidx9 = getelementptr inbounds double, double* %wcoefs, i64 %indvars.iv
  store double %160, double* %arrayidx9, align 8, !tbaa !84, !llvm.access.group !236
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond.not = icmp eq i32 %8, %lftr.wideiv
  br i1 %exitcond.not, label %omp.loop.exit, label %omp.inner.for.body, !llvm.loop !239

omp.loop.exit:                                    ; preds = %omp.inner.for.body, %middle.block, %omp.precond.then
  call void @__kmpc_for_static_fini(%struct.ident_t* nonnull @4, i32 %4)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8
  br label %omp.precond.end

omp.precond.end:                                  ; preds = %omp.loop.exit, %entry
  ret void
}

; Function Attrs: nounwind
declare !callback !48 void @__kmpc_fork_teams(%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) local_unnamed_addr #8

; Function Attrs: nounwind
declare void @__kmpc_push_target_tripcount_mapper(%struct.ident_t*, i64, i64) local_unnamed_addr #8

; Function Attrs: nounwind
declare i32 @__tgt_target_teams_mapper(%struct.ident_t*, i64, i8*, i32, i8**, i8**, i64*, i64*, i8**, i8**, i32, i32) local_unnamed_addr #8

; Function Attrs: alwaysinline norecurse nounwind uwtable
define internal void @.omp_outlined..100(i32* noalias nocapture noundef readonly %.global_tid., i32* noalias nocapture noundef readnone %.bound_tid., i64 noundef %n, double* noundef %wcoefs, i64 noundef %alpha, double* noundef %xcoefs) #7 {
entry:
  %.omp.comb.lb = alloca i32, align 4
  %.omp.comb.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %n.addr.sroa.0.0.extract.trunc = trunc i64 %n to i32
  %sub3 = add nsw i32 %n.addr.sroa.0.0.extract.trunc, -1
  %cmp = icmp sgt i32 %n.addr.sroa.0.0.extract.trunc, 0
  br i1 %cmp, label %omp.precond.then, label %omp.precond.end

omp.precond.then:                                 ; preds = %entry
  %0 = bitcast i32* %.omp.comb.lb to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8
  store i32 0, i32* %.omp.comb.lb, align 4, !tbaa !16
  %1 = bitcast i32* %.omp.comb.ub to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8
  store i32 %sub3, i32* %.omp.comb.ub, align 4, !tbaa !16
  %2 = bitcast i32* %.omp.stride to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #8
  store i32 1, i32* %.omp.stride, align 4, !tbaa !16
  %3 = bitcast i32* %.omp.is_last to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #8
  store i32 0, i32* %.omp.is_last, align 4, !tbaa !16
  %4 = load i32, i32* %.global_tid., align 4, !tbaa !16
  call void @__kmpc_for_static_init_4(%struct.ident_t* nonnull @4, i32 %4, i32 92, i32* nonnull %.omp.is_last, i32* nonnull %.omp.comb.lb, i32* nonnull %.omp.comb.ub, i32* nonnull %.omp.stride, i32 1, i32 1)
  %5 = load i32, i32* %.omp.comb.ub, align 4, !tbaa !16
  %cmp5 = icmp sgt i32 %5, %sub3
  %cond = select i1 %cmp5, i32 %sub3, i32 %5
  store i32 %cond, i32* %.omp.comb.ub, align 4, !tbaa !16
  %6 = load i32, i32* %.omp.comb.lb, align 4, !tbaa !16
  %n.casted.sroa.0.0.insert.ext = and i64 %n, 4294967295
  %cmp6.not13 = icmp sgt i32 %6, %cond
  br i1 %cmp6.not13, label %omp.loop.exit, label %omp.inner.for.body.preheader

omp.inner.for.body.preheader:                     ; preds = %omp.precond.then
  %7 = zext i32 %6 to i64
  %8 = zext i32 %cond to i64
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull @3, i32 6, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, i64, i64, double*, i64, double*)* @.omp_outlined..101 to void (i32*, i32*, ...)*), i64 %7, i64 %8, i64 %n.casted.sroa.0.0.insert.ext, double* %wcoefs, i64 %alpha, double* %xcoefs), !llvm.access.group !240
  %9 = load i32, i32* %.omp.stride, align 4, !tbaa !16, !llvm.access.group !240
  %add22 = add nsw i32 %9, %6
  %10 = load i32, i32* %.omp.comb.ub, align 4, !tbaa !16, !llvm.access.group !240
  %cmp6.not23 = icmp sgt i32 %add22, %10
  br i1 %cmp6.not23, label %omp.loop.exit, label %omp.inner.for.body.omp.inner.for.body_crit_edge, !llvm.loop !241

omp.inner.for.body.omp.inner.for.body_crit_edge:  ; preds = %omp.inner.for.body.preheader, %omp.inner.for.body.omp.inner.for.body_crit_edge
  %11 = phi i32 [ %15, %omp.inner.for.body.omp.inner.for.body_crit_edge ], [ %10, %omp.inner.for.body.preheader ]
  %add24 = phi i32 [ %add, %omp.inner.for.body.omp.inner.for.body_crit_edge ], [ %add22, %omp.inner.for.body.preheader ]
  %.pre = load i32, i32* %.omp.comb.lb, align 4, !llvm.access.group !240
  %12 = zext i32 %.pre to i64
  %13 = zext i32 %11 to i64
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull @3, i32 6, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, i64, i64, double*, i64, double*)* @.omp_outlined..101 to void (i32*, i32*, ...)*), i64 %12, i64 %13, i64 %n.casted.sroa.0.0.insert.ext, double* %wcoefs, i64 %alpha, double* %xcoefs), !llvm.access.group !240
  %14 = load i32, i32* %.omp.stride, align 4, !tbaa !16, !llvm.access.group !240
  %add = add nsw i32 %14, %add24
  %15 = load i32, i32* %.omp.comb.ub, align 4, !tbaa !16, !llvm.access.group !240
  %cmp6.not = icmp sgt i32 %add, %15
  br i1 %cmp6.not, label %omp.loop.exit, label %omp.inner.for.body.omp.inner.for.body_crit_edge, !llvm.loop !241

omp.loop.exit:                                    ; preds = %omp.inner.for.body.omp.inner.for.body_crit_edge, %omp.inner.for.body.preheader, %omp.precond.then
  call void @__kmpc_for_static_fini(%struct.ident_t* nonnull @4, i32 %4)
  br label %omp.precond.end

omp.precond.end:                                  ; preds = %entry, %omp.loop.exit
  %.pre-phi = bitcast i32* %.omp.is_last to i8*
  %.pre-phi17 = bitcast i32* %.omp.stride to i8*
  %.pre-phi19 = bitcast i32* %.omp.comb.ub to i8*
  %.pre-phi21 = bitcast i32* %.omp.comb.lb to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %.pre-phi) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %.pre-phi17) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %.pre-phi19) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %.pre-phi21) #8
  ret void
}

; Function Attrs: alwaysinline norecurse nounwind uwtable
define internal void @.omp_outlined..101(i32* noalias nocapture noundef readonly %.global_tid., i32* noalias nocapture noundef readnone %.bound_tid., i64 noundef %.previous.lb., i64 noundef %.previous.ub., i64 noundef %n, double* nocapture noundef writeonly %wcoefs, i64 noundef %alpha, double* nocapture noundef readonly %xcoefs) #7 {
entry:
  %.omp.lb = alloca i32, align 4
  %.omp.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %n.addr.sroa.0.0.extract.trunc = trunc i64 %n to i32
  %sub3 = add nsw i32 %n.addr.sroa.0.0.extract.trunc, -1
  %cmp = icmp sgt i32 %n.addr.sroa.0.0.extract.trunc, 0
  br i1 %cmp, label %omp.precond.then, label %omp.precond.end

omp.precond.then:                                 ; preds = %entry
  %0 = bitcast i32* %.omp.lb to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8
  %1 = bitcast i32* %.omp.ub to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8
  %conv4 = trunc i64 %.previous.lb. to i32
  %conv5 = trunc i64 %.previous.ub. to i32
  store i32 %conv4, i32* %.omp.lb, align 4, !tbaa !16
  store i32 %conv5, i32* %.omp.ub, align 4, !tbaa !16
  %2 = bitcast i32* %.omp.stride to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #8
  store i32 1, i32* %.omp.stride, align 4, !tbaa !16
  %3 = bitcast i32* %.omp.is_last to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #8
  store i32 0, i32* %.omp.is_last, align 4, !tbaa !16
  %4 = load i32, i32* %.global_tid., align 4, !tbaa !16
  call void @__kmpc_for_static_init_4(%struct.ident_t* nonnull @1, i32 %4, i32 34, i32* nonnull %.omp.is_last, i32* nonnull %.omp.lb, i32* nonnull %.omp.ub, i32* nonnull %.omp.stride, i32 1, i32 1)
  %5 = load i32, i32* %.omp.ub, align 4, !tbaa !16
  %cmp7 = icmp sgt i32 %5, %sub3
  %cond = select i1 %cmp7, i32 %sub3, i32 %5
  store i32 %cond, i32* %.omp.ub, align 4, !tbaa !16
  %6 = load i32, i32* %.omp.lb, align 4, !tbaa !16
  %7 = bitcast i64 %alpha to double
  %cmp8.not14 = icmp slt i32 %cond, %6
  br i1 %cmp8.not14, label %omp.loop.exit, label %omp.inner.for.body.preheader

omp.inner.for.body.preheader:                     ; preds = %omp.precond.then
  %8 = sext i32 %6 to i64
  %9 = add nsw i32 %cond, 1
  %10 = sub i32 %cond, %6
  %11 = zext i32 %10 to i64
  %12 = add nuw nsw i64 %11, 1
  %min.iters.check = icmp ult i32 %10, 23
  br i1 %min.iters.check, label %omp.inner.for.body.preheader50, label %vector.ph

vector.ph:                                        ; preds = %omp.inner.for.body.preheader
  %n.mod.vf = urem i64 %12, 24
  %n.vec = sub nsw i64 %12, %n.mod.vf
  %ind.end = add nsw i64 %n.vec, %8
  %broadcast.splatinsert = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat = shufflevector <2 x double> %broadcast.splatinsert, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert28 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat29 = shufflevector <2 x double> %broadcast.splatinsert28, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert30 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat31 = shufflevector <2 x double> %broadcast.splatinsert30, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert32 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat33 = shufflevector <2 x double> %broadcast.splatinsert32, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert34 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat35 = shufflevector <2 x double> %broadcast.splatinsert34, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert36 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat37 = shufflevector <2 x double> %broadcast.splatinsert36, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert38 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat39 = shufflevector <2 x double> %broadcast.splatinsert38, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert40 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat41 = shufflevector <2 x double> %broadcast.splatinsert40, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert42 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat43 = shufflevector <2 x double> %broadcast.splatinsert42, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert44 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat45 = shufflevector <2 x double> %broadcast.splatinsert44, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert46 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat47 = shufflevector <2 x double> %broadcast.splatinsert46, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert48 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat49 = shufflevector <2 x double> %broadcast.splatinsert48, <2 x double> poison, <2 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %offset.idx = add i64 %index, %8
  %13 = getelementptr inbounds double, double* %xcoefs, i64 %offset.idx
  %14 = bitcast double* %13 to <2 x double>*
  %wide.load = load <2 x double>, <2 x double>* %14, align 8, !tbaa !84, !llvm.access.group !243
  %15 = getelementptr inbounds double, double* %13, i64 2
  %16 = bitcast double* %15 to <2 x double>*
  %wide.load17 = load <2 x double>, <2 x double>* %16, align 8, !tbaa !84, !llvm.access.group !243
  %17 = getelementptr inbounds double, double* %13, i64 4
  %18 = bitcast double* %17 to <2 x double>*
  %wide.load18 = load <2 x double>, <2 x double>* %18, align 8, !tbaa !84, !llvm.access.group !243
  %19 = getelementptr inbounds double, double* %13, i64 6
  %20 = bitcast double* %19 to <2 x double>*
  %wide.load19 = load <2 x double>, <2 x double>* %20, align 8, !tbaa !84, !llvm.access.group !243
  %21 = getelementptr inbounds double, double* %13, i64 8
  %22 = bitcast double* %21 to <2 x double>*
  %wide.load20 = load <2 x double>, <2 x double>* %22, align 8, !tbaa !84, !llvm.access.group !243
  %23 = getelementptr inbounds double, double* %13, i64 10
  %24 = bitcast double* %23 to <2 x double>*
  %wide.load21 = load <2 x double>, <2 x double>* %24, align 8, !tbaa !84, !llvm.access.group !243
  %25 = getelementptr inbounds double, double* %13, i64 12
  %26 = bitcast double* %25 to <2 x double>*
  %wide.load22 = load <2 x double>, <2 x double>* %26, align 8, !tbaa !84, !llvm.access.group !243
  %27 = getelementptr inbounds double, double* %13, i64 14
  %28 = bitcast double* %27 to <2 x double>*
  %wide.load23 = load <2 x double>, <2 x double>* %28, align 8, !tbaa !84, !llvm.access.group !243
  %29 = getelementptr inbounds double, double* %13, i64 16
  %30 = bitcast double* %29 to <2 x double>*
  %wide.load24 = load <2 x double>, <2 x double>* %30, align 8, !tbaa !84, !llvm.access.group !243
  %31 = getelementptr inbounds double, double* %13, i64 18
  %32 = bitcast double* %31 to <2 x double>*
  %wide.load25 = load <2 x double>, <2 x double>* %32, align 8, !tbaa !84, !llvm.access.group !243
  %33 = getelementptr inbounds double, double* %13, i64 20
  %34 = bitcast double* %33 to <2 x double>*
  %wide.load26 = load <2 x double>, <2 x double>* %34, align 8, !tbaa !84, !llvm.access.group !243
  %35 = getelementptr inbounds double, double* %13, i64 22
  %36 = bitcast double* %35 to <2 x double>*
  %wide.load27 = load <2 x double>, <2 x double>* %36, align 8, !tbaa !84, !llvm.access.group !243
  %37 = fmul contract <2 x double> %wide.load, %broadcast.splat
  %38 = fmul contract <2 x double> %wide.load17, %broadcast.splat29
  %39 = fmul contract <2 x double> %wide.load18, %broadcast.splat31
  %40 = fmul contract <2 x double> %wide.load19, %broadcast.splat33
  %41 = fmul contract <2 x double> %wide.load20, %broadcast.splat35
  %42 = fmul contract <2 x double> %wide.load21, %broadcast.splat37
  %43 = fmul contract <2 x double> %wide.load22, %broadcast.splat39
  %44 = fmul contract <2 x double> %wide.load23, %broadcast.splat41
  %45 = fmul contract <2 x double> %wide.load24, %broadcast.splat43
  %46 = fmul contract <2 x double> %wide.load25, %broadcast.splat45
  %47 = fmul contract <2 x double> %wide.load26, %broadcast.splat47
  %48 = fmul contract <2 x double> %wide.load27, %broadcast.splat49
  %49 = getelementptr inbounds double, double* %wcoefs, i64 %offset.idx
  %50 = bitcast double* %49 to <2 x double>*
  store <2 x double> %37, <2 x double>* %50, align 8, !tbaa !84, !llvm.access.group !243
  %51 = getelementptr inbounds double, double* %49, i64 2
  %52 = bitcast double* %51 to <2 x double>*
  store <2 x double> %38, <2 x double>* %52, align 8, !tbaa !84, !llvm.access.group !243
  %53 = getelementptr inbounds double, double* %49, i64 4
  %54 = bitcast double* %53 to <2 x double>*
  store <2 x double> %39, <2 x double>* %54, align 8, !tbaa !84, !llvm.access.group !243
  %55 = getelementptr inbounds double, double* %49, i64 6
  %56 = bitcast double* %55 to <2 x double>*
  store <2 x double> %40, <2 x double>* %56, align 8, !tbaa !84, !llvm.access.group !243
  %57 = getelementptr inbounds double, double* %49, i64 8
  %58 = bitcast double* %57 to <2 x double>*
  store <2 x double> %41, <2 x double>* %58, align 8, !tbaa !84, !llvm.access.group !243
  %59 = getelementptr inbounds double, double* %49, i64 10
  %60 = bitcast double* %59 to <2 x double>*
  store <2 x double> %42, <2 x double>* %60, align 8, !tbaa !84, !llvm.access.group !243
  %61 = getelementptr inbounds double, double* %49, i64 12
  %62 = bitcast double* %61 to <2 x double>*
  store <2 x double> %43, <2 x double>* %62, align 8, !tbaa !84, !llvm.access.group !243
  %63 = getelementptr inbounds double, double* %49, i64 14
  %64 = bitcast double* %63 to <2 x double>*
  store <2 x double> %44, <2 x double>* %64, align 8, !tbaa !84, !llvm.access.group !243
  %65 = getelementptr inbounds double, double* %49, i64 16
  %66 = bitcast double* %65 to <2 x double>*
  store <2 x double> %45, <2 x double>* %66, align 8, !tbaa !84, !llvm.access.group !243
  %67 = getelementptr inbounds double, double* %49, i64 18
  %68 = bitcast double* %67 to <2 x double>*
  store <2 x double> %46, <2 x double>* %68, align 8, !tbaa !84, !llvm.access.group !243
  %69 = getelementptr inbounds double, double* %49, i64 20
  %70 = bitcast double* %69 to <2 x double>*
  store <2 x double> %47, <2 x double>* %70, align 8, !tbaa !84, !llvm.access.group !243
  %71 = getelementptr inbounds double, double* %49, i64 22
  %72 = bitcast double* %71 to <2 x double>*
  store <2 x double> %48, <2 x double>* %72, align 8, !tbaa !84, !llvm.access.group !243
  %index.next = add nuw i64 %index, 24
  %73 = icmp eq i64 %index.next, %n.vec
  br i1 %73, label %middle.block, label %vector.body, !llvm.loop !244

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.mod.vf, 0
  br i1 %cmp.n, label %omp.loop.exit, label %omp.inner.for.body.preheader50

omp.inner.for.body.preheader50:                   ; preds = %omp.inner.for.body.preheader, %middle.block
  %indvars.iv.ph = phi i64 [ %8, %omp.inner.for.body.preheader ], [ %ind.end, %middle.block ]
  br label %omp.inner.for.body

omp.inner.for.body:                               ; preds = %omp.inner.for.body.preheader50, %omp.inner.for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %omp.inner.for.body ], [ %indvars.iv.ph, %omp.inner.for.body.preheader50 ]
  %arrayidx = getelementptr inbounds double, double* %xcoefs, i64 %indvars.iv
  %74 = load double, double* %arrayidx, align 8, !tbaa !84, !llvm.access.group !243
  %mul9 = fmul contract double %74, %7
  %arrayidx11 = getelementptr inbounds double, double* %wcoefs, i64 %indvars.iv
  store double %mul9, double* %arrayidx11, align 8, !tbaa !84, !llvm.access.group !243
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond.not = icmp eq i32 %9, %lftr.wideiv
  br i1 %exitcond.not, label %omp.loop.exit, label %omp.inner.for.body, !llvm.loop !246

omp.loop.exit:                                    ; preds = %omp.inner.for.body, %middle.block, %omp.precond.then
  call void @__kmpc_for_static_fini(%struct.ident_t* nonnull @4, i32 %4)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8
  br label %omp.precond.end

omp.precond.end:                                  ; preds = %omp.loop.exit, %entry
  ret void
}

; Function Attrs: alwaysinline norecurse nounwind uwtable
define internal void @.omp_outlined..104(i32* noalias nocapture noundef readonly %.global_tid., i32* noalias nocapture noundef readnone %.bound_tid., i64 noundef %n, double* noundef %wcoefs, double* noundef %xcoefs, i64 noundef %beta, double* noundef %ycoefs) #7 {
entry:
  %.omp.comb.lb = alloca i32, align 4
  %.omp.comb.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %n.addr.sroa.0.0.extract.trunc = trunc i64 %n to i32
  %sub3 = add nsw i32 %n.addr.sroa.0.0.extract.trunc, -1
  %cmp = icmp sgt i32 %n.addr.sroa.0.0.extract.trunc, 0
  br i1 %cmp, label %omp.precond.then, label %omp.precond.end

omp.precond.then:                                 ; preds = %entry
  %0 = bitcast i32* %.omp.comb.lb to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8
  store i32 0, i32* %.omp.comb.lb, align 4, !tbaa !16
  %1 = bitcast i32* %.omp.comb.ub to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8
  store i32 %sub3, i32* %.omp.comb.ub, align 4, !tbaa !16
  %2 = bitcast i32* %.omp.stride to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #8
  store i32 1, i32* %.omp.stride, align 4, !tbaa !16
  %3 = bitcast i32* %.omp.is_last to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #8
  store i32 0, i32* %.omp.is_last, align 4, !tbaa !16
  %4 = load i32, i32* %.global_tid., align 4, !tbaa !16
  call void @__kmpc_for_static_init_4(%struct.ident_t* nonnull @4, i32 %4, i32 92, i32* nonnull %.omp.is_last, i32* nonnull %.omp.comb.lb, i32* nonnull %.omp.comb.ub, i32* nonnull %.omp.stride, i32 1, i32 1)
  %5 = load i32, i32* %.omp.comb.ub, align 4, !tbaa !16
  %cmp5 = icmp sgt i32 %5, %sub3
  %cond = select i1 %cmp5, i32 %sub3, i32 %5
  store i32 %cond, i32* %.omp.comb.ub, align 4, !tbaa !16
  %6 = load i32, i32* %.omp.comb.lb, align 4, !tbaa !16
  %n.casted.sroa.0.0.insert.ext = and i64 %n, 4294967295
  %cmp6.not13 = icmp sgt i32 %6, %cond
  br i1 %cmp6.not13, label %omp.loop.exit, label %omp.inner.for.body.preheader

omp.inner.for.body.preheader:                     ; preds = %omp.precond.then
  %7 = zext i32 %6 to i64
  %8 = zext i32 %cond to i64
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull @3, i32 7, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, i64, i64, double*, double*, i64, double*)* @.omp_outlined..105 to void (i32*, i32*, ...)*), i64 %7, i64 %8, i64 %n.casted.sroa.0.0.insert.ext, double* %wcoefs, double* %xcoefs, i64 %beta, double* %ycoefs), !llvm.access.group !247
  %9 = load i32, i32* %.omp.stride, align 4, !tbaa !16, !llvm.access.group !247
  %add22 = add nsw i32 %9, %6
  %10 = load i32, i32* %.omp.comb.ub, align 4, !tbaa !16, !llvm.access.group !247
  %cmp6.not23 = icmp sgt i32 %add22, %10
  br i1 %cmp6.not23, label %omp.loop.exit, label %omp.inner.for.body.omp.inner.for.body_crit_edge, !llvm.loop !248

omp.inner.for.body.omp.inner.for.body_crit_edge:  ; preds = %omp.inner.for.body.preheader, %omp.inner.for.body.omp.inner.for.body_crit_edge
  %11 = phi i32 [ %15, %omp.inner.for.body.omp.inner.for.body_crit_edge ], [ %10, %omp.inner.for.body.preheader ]
  %add24 = phi i32 [ %add, %omp.inner.for.body.omp.inner.for.body_crit_edge ], [ %add22, %omp.inner.for.body.preheader ]
  %.pre = load i32, i32* %.omp.comb.lb, align 4, !llvm.access.group !247
  %12 = zext i32 %.pre to i64
  %13 = zext i32 %11 to i64
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull @3, i32 7, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, i64, i64, double*, double*, i64, double*)* @.omp_outlined..105 to void (i32*, i32*, ...)*), i64 %12, i64 %13, i64 %n.casted.sroa.0.0.insert.ext, double* %wcoefs, double* %xcoefs, i64 %beta, double* %ycoefs), !llvm.access.group !247
  %14 = load i32, i32* %.omp.stride, align 4, !tbaa !16, !llvm.access.group !247
  %add = add nsw i32 %14, %add24
  %15 = load i32, i32* %.omp.comb.ub, align 4, !tbaa !16, !llvm.access.group !247
  %cmp6.not = icmp sgt i32 %add, %15
  br i1 %cmp6.not, label %omp.loop.exit, label %omp.inner.for.body.omp.inner.for.body_crit_edge, !llvm.loop !248

omp.loop.exit:                                    ; preds = %omp.inner.for.body.omp.inner.for.body_crit_edge, %omp.inner.for.body.preheader, %omp.precond.then
  call void @__kmpc_for_static_fini(%struct.ident_t* nonnull @4, i32 %4)
  br label %omp.precond.end

omp.precond.end:                                  ; preds = %entry, %omp.loop.exit
  %.pre-phi = bitcast i32* %.omp.is_last to i8*
  %.pre-phi17 = bitcast i32* %.omp.stride to i8*
  %.pre-phi19 = bitcast i32* %.omp.comb.ub to i8*
  %.pre-phi21 = bitcast i32* %.omp.comb.lb to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %.pre-phi) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %.pre-phi17) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %.pre-phi19) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %.pre-phi21) #8
  ret void
}

; Function Attrs: alwaysinline norecurse nounwind uwtable
define internal void @.omp_outlined..105(i32* noalias nocapture noundef readonly %.global_tid., i32* noalias nocapture noundef readnone %.bound_tid., i64 noundef %.previous.lb., i64 noundef %.previous.ub., i64 noundef %n, double* nocapture noundef writeonly %wcoefs, double* nocapture noundef readonly %xcoefs, i64 noundef %beta, double* nocapture noundef readonly %ycoefs) #7 {
entry:
  %.omp.lb = alloca i32, align 4
  %.omp.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %n.addr.sroa.0.0.extract.trunc = trunc i64 %n to i32
  %sub3 = add nsw i32 %n.addr.sroa.0.0.extract.trunc, -1
  %cmp = icmp sgt i32 %n.addr.sroa.0.0.extract.trunc, 0
  br i1 %cmp, label %omp.precond.then, label %omp.precond.end

omp.precond.then:                                 ; preds = %entry
  %0 = bitcast i32* %.omp.lb to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8
  %1 = bitcast i32* %.omp.ub to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8
  %conv4 = trunc i64 %.previous.lb. to i32
  %conv5 = trunc i64 %.previous.ub. to i32
  store i32 %conv4, i32* %.omp.lb, align 4, !tbaa !16
  store i32 %conv5, i32* %.omp.ub, align 4, !tbaa !16
  %2 = bitcast i32* %.omp.stride to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #8
  store i32 1, i32* %.omp.stride, align 4, !tbaa !16
  %3 = bitcast i32* %.omp.is_last to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #8
  store i32 0, i32* %.omp.is_last, align 4, !tbaa !16
  %4 = load i32, i32* %.global_tid., align 4, !tbaa !16
  call void @__kmpc_for_static_init_4(%struct.ident_t* nonnull @1, i32 %4, i32 34, i32* nonnull %.omp.is_last, i32* nonnull %.omp.lb, i32* nonnull %.omp.ub, i32* nonnull %.omp.stride, i32 1, i32 1)
  %5 = load i32, i32* %.omp.ub, align 4, !tbaa !16
  %cmp7 = icmp sgt i32 %5, %sub3
  %cond = select i1 %cmp7, i32 %sub3, i32 %5
  store i32 %cond, i32* %.omp.ub, align 4, !tbaa !16
  %6 = load i32, i32* %.omp.lb, align 4, !tbaa !16
  %7 = bitcast i64 %beta to double
  %cmp8.not15 = icmp slt i32 %cond, %6
  br i1 %cmp8.not15, label %omp.loop.exit, label %omp.inner.for.body.preheader

omp.inner.for.body.preheader:                     ; preds = %omp.precond.then
  %8 = sext i32 %6 to i64
  %9 = add nsw i32 %cond, 1
  %10 = sub i32 %cond, %6
  %11 = zext i32 %10 to i64
  %12 = add nuw nsw i64 %11, 1
  %min.iters.check = icmp ult i32 %10, 23
  br i1 %min.iters.check, label %omp.inner.for.body.preheader63, label %vector.ph

vector.ph:                                        ; preds = %omp.inner.for.body.preheader
  %n.mod.vf = urem i64 %12, 24
  %n.vec = sub nsw i64 %12, %n.mod.vf
  %ind.end = add nsw i64 %n.vec, %8
  %broadcast.splatinsert = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat = shufflevector <2 x double> %broadcast.splatinsert, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert41 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat42 = shufflevector <2 x double> %broadcast.splatinsert41, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert43 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat44 = shufflevector <2 x double> %broadcast.splatinsert43, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert45 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat46 = shufflevector <2 x double> %broadcast.splatinsert45, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert47 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat48 = shufflevector <2 x double> %broadcast.splatinsert47, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert49 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat50 = shufflevector <2 x double> %broadcast.splatinsert49, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert51 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat52 = shufflevector <2 x double> %broadcast.splatinsert51, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert53 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat54 = shufflevector <2 x double> %broadcast.splatinsert53, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert55 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat56 = shufflevector <2 x double> %broadcast.splatinsert55, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert57 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat58 = shufflevector <2 x double> %broadcast.splatinsert57, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert59 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat60 = shufflevector <2 x double> %broadcast.splatinsert59, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert61 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat62 = shufflevector <2 x double> %broadcast.splatinsert61, <2 x double> poison, <2 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %offset.idx = add i64 %index, %8
  %13 = getelementptr inbounds double, double* %xcoefs, i64 %offset.idx
  %14 = bitcast double* %13 to <2 x double>*
  %wide.load = load <2 x double>, <2 x double>* %14, align 8, !tbaa !84, !llvm.access.group !250
  %15 = getelementptr inbounds double, double* %13, i64 2
  %16 = bitcast double* %15 to <2 x double>*
  %wide.load18 = load <2 x double>, <2 x double>* %16, align 8, !tbaa !84, !llvm.access.group !250
  %17 = getelementptr inbounds double, double* %13, i64 4
  %18 = bitcast double* %17 to <2 x double>*
  %wide.load19 = load <2 x double>, <2 x double>* %18, align 8, !tbaa !84, !llvm.access.group !250
  %19 = getelementptr inbounds double, double* %13, i64 6
  %20 = bitcast double* %19 to <2 x double>*
  %wide.load20 = load <2 x double>, <2 x double>* %20, align 8, !tbaa !84, !llvm.access.group !250
  %21 = getelementptr inbounds double, double* %13, i64 8
  %22 = bitcast double* %21 to <2 x double>*
  %wide.load21 = load <2 x double>, <2 x double>* %22, align 8, !tbaa !84, !llvm.access.group !250
  %23 = getelementptr inbounds double, double* %13, i64 10
  %24 = bitcast double* %23 to <2 x double>*
  %wide.load22 = load <2 x double>, <2 x double>* %24, align 8, !tbaa !84, !llvm.access.group !250
  %25 = getelementptr inbounds double, double* %13, i64 12
  %26 = bitcast double* %25 to <2 x double>*
  %wide.load23 = load <2 x double>, <2 x double>* %26, align 8, !tbaa !84, !llvm.access.group !250
  %27 = getelementptr inbounds double, double* %13, i64 14
  %28 = bitcast double* %27 to <2 x double>*
  %wide.load24 = load <2 x double>, <2 x double>* %28, align 8, !tbaa !84, !llvm.access.group !250
  %29 = getelementptr inbounds double, double* %13, i64 16
  %30 = bitcast double* %29 to <2 x double>*
  %wide.load25 = load <2 x double>, <2 x double>* %30, align 8, !tbaa !84, !llvm.access.group !250
  %31 = getelementptr inbounds double, double* %13, i64 18
  %32 = bitcast double* %31 to <2 x double>*
  %wide.load26 = load <2 x double>, <2 x double>* %32, align 8, !tbaa !84, !llvm.access.group !250
  %33 = getelementptr inbounds double, double* %13, i64 20
  %34 = bitcast double* %33 to <2 x double>*
  %wide.load27 = load <2 x double>, <2 x double>* %34, align 8, !tbaa !84, !llvm.access.group !250
  %35 = getelementptr inbounds double, double* %13, i64 22
  %36 = bitcast double* %35 to <2 x double>*
  %wide.load28 = load <2 x double>, <2 x double>* %36, align 8, !tbaa !84, !llvm.access.group !250
  %37 = getelementptr inbounds double, double* %ycoefs, i64 %offset.idx
  %38 = bitcast double* %37 to <2 x double>*
  %wide.load29 = load <2 x double>, <2 x double>* %38, align 8, !tbaa !84, !llvm.access.group !250
  %39 = getelementptr inbounds double, double* %37, i64 2
  %40 = bitcast double* %39 to <2 x double>*
  %wide.load30 = load <2 x double>, <2 x double>* %40, align 8, !tbaa !84, !llvm.access.group !250
  %41 = getelementptr inbounds double, double* %37, i64 4
  %42 = bitcast double* %41 to <2 x double>*
  %wide.load31 = load <2 x double>, <2 x double>* %42, align 8, !tbaa !84, !llvm.access.group !250
  %43 = getelementptr inbounds double, double* %37, i64 6
  %44 = bitcast double* %43 to <2 x double>*
  %wide.load32 = load <2 x double>, <2 x double>* %44, align 8, !tbaa !84, !llvm.access.group !250
  %45 = getelementptr inbounds double, double* %37, i64 8
  %46 = bitcast double* %45 to <2 x double>*
  %wide.load33 = load <2 x double>, <2 x double>* %46, align 8, !tbaa !84, !llvm.access.group !250
  %47 = getelementptr inbounds double, double* %37, i64 10
  %48 = bitcast double* %47 to <2 x double>*
  %wide.load34 = load <2 x double>, <2 x double>* %48, align 8, !tbaa !84, !llvm.access.group !250
  %49 = getelementptr inbounds double, double* %37, i64 12
  %50 = bitcast double* %49 to <2 x double>*
  %wide.load35 = load <2 x double>, <2 x double>* %50, align 8, !tbaa !84, !llvm.access.group !250
  %51 = getelementptr inbounds double, double* %37, i64 14
  %52 = bitcast double* %51 to <2 x double>*
  %wide.load36 = load <2 x double>, <2 x double>* %52, align 8, !tbaa !84, !llvm.access.group !250
  %53 = getelementptr inbounds double, double* %37, i64 16
  %54 = bitcast double* %53 to <2 x double>*
  %wide.load37 = load <2 x double>, <2 x double>* %54, align 8, !tbaa !84, !llvm.access.group !250
  %55 = getelementptr inbounds double, double* %37, i64 18
  %56 = bitcast double* %55 to <2 x double>*
  %wide.load38 = load <2 x double>, <2 x double>* %56, align 8, !tbaa !84, !llvm.access.group !250
  %57 = getelementptr inbounds double, double* %37, i64 20
  %58 = bitcast double* %57 to <2 x double>*
  %wide.load39 = load <2 x double>, <2 x double>* %58, align 8, !tbaa !84, !llvm.access.group !250
  %59 = getelementptr inbounds double, double* %37, i64 22
  %60 = bitcast double* %59 to <2 x double>*
  %wide.load40 = load <2 x double>, <2 x double>* %60, align 8, !tbaa !84, !llvm.access.group !250
  %61 = fmul contract <2 x double> %wide.load29, %broadcast.splat
  %62 = fmul contract <2 x double> %wide.load30, %broadcast.splat42
  %63 = fmul contract <2 x double> %wide.load31, %broadcast.splat44
  %64 = fmul contract <2 x double> %wide.load32, %broadcast.splat46
  %65 = fmul contract <2 x double> %wide.load33, %broadcast.splat48
  %66 = fmul contract <2 x double> %wide.load34, %broadcast.splat50
  %67 = fmul contract <2 x double> %wide.load35, %broadcast.splat52
  %68 = fmul contract <2 x double> %wide.load36, %broadcast.splat54
  %69 = fmul contract <2 x double> %wide.load37, %broadcast.splat56
  %70 = fmul contract <2 x double> %wide.load38, %broadcast.splat58
  %71 = fmul contract <2 x double> %wide.load39, %broadcast.splat60
  %72 = fmul contract <2 x double> %wide.load40, %broadcast.splat62
  %73 = fadd contract <2 x double> %wide.load, %61
  %74 = fadd contract <2 x double> %wide.load18, %62
  %75 = fadd contract <2 x double> %wide.load19, %63
  %76 = fadd contract <2 x double> %wide.load20, %64
  %77 = fadd contract <2 x double> %wide.load21, %65
  %78 = fadd contract <2 x double> %wide.load22, %66
  %79 = fadd contract <2 x double> %wide.load23, %67
  %80 = fadd contract <2 x double> %wide.load24, %68
  %81 = fadd contract <2 x double> %wide.load25, %69
  %82 = fadd contract <2 x double> %wide.load26, %70
  %83 = fadd contract <2 x double> %wide.load27, %71
  %84 = fadd contract <2 x double> %wide.load28, %72
  %85 = getelementptr inbounds double, double* %wcoefs, i64 %offset.idx
  %86 = bitcast double* %85 to <2 x double>*
  store <2 x double> %73, <2 x double>* %86, align 8, !tbaa !84, !llvm.access.group !250
  %87 = getelementptr inbounds double, double* %85, i64 2
  %88 = bitcast double* %87 to <2 x double>*
  store <2 x double> %74, <2 x double>* %88, align 8, !tbaa !84, !llvm.access.group !250
  %89 = getelementptr inbounds double, double* %85, i64 4
  %90 = bitcast double* %89 to <2 x double>*
  store <2 x double> %75, <2 x double>* %90, align 8, !tbaa !84, !llvm.access.group !250
  %91 = getelementptr inbounds double, double* %85, i64 6
  %92 = bitcast double* %91 to <2 x double>*
  store <2 x double> %76, <2 x double>* %92, align 8, !tbaa !84, !llvm.access.group !250
  %93 = getelementptr inbounds double, double* %85, i64 8
  %94 = bitcast double* %93 to <2 x double>*
  store <2 x double> %77, <2 x double>* %94, align 8, !tbaa !84, !llvm.access.group !250
  %95 = getelementptr inbounds double, double* %85, i64 10
  %96 = bitcast double* %95 to <2 x double>*
  store <2 x double> %78, <2 x double>* %96, align 8, !tbaa !84, !llvm.access.group !250
  %97 = getelementptr inbounds double, double* %85, i64 12
  %98 = bitcast double* %97 to <2 x double>*
  store <2 x double> %79, <2 x double>* %98, align 8, !tbaa !84, !llvm.access.group !250
  %99 = getelementptr inbounds double, double* %85, i64 14
  %100 = bitcast double* %99 to <2 x double>*
  store <2 x double> %80, <2 x double>* %100, align 8, !tbaa !84, !llvm.access.group !250
  %101 = getelementptr inbounds double, double* %85, i64 16
  %102 = bitcast double* %101 to <2 x double>*
  store <2 x double> %81, <2 x double>* %102, align 8, !tbaa !84, !llvm.access.group !250
  %103 = getelementptr inbounds double, double* %85, i64 18
  %104 = bitcast double* %103 to <2 x double>*
  store <2 x double> %82, <2 x double>* %104, align 8, !tbaa !84, !llvm.access.group !250
  %105 = getelementptr inbounds double, double* %85, i64 20
  %106 = bitcast double* %105 to <2 x double>*
  store <2 x double> %83, <2 x double>* %106, align 8, !tbaa !84, !llvm.access.group !250
  %107 = getelementptr inbounds double, double* %85, i64 22
  %108 = bitcast double* %107 to <2 x double>*
  store <2 x double> %84, <2 x double>* %108, align 8, !tbaa !84, !llvm.access.group !250
  %index.next = add nuw i64 %index, 24
  %109 = icmp eq i64 %index.next, %n.vec
  br i1 %109, label %middle.block, label %vector.body, !llvm.loop !251

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.mod.vf, 0
  br i1 %cmp.n, label %omp.loop.exit, label %omp.inner.for.body.preheader63

omp.inner.for.body.preheader63:                   ; preds = %omp.inner.for.body.preheader, %middle.block
  %indvars.iv.ph = phi i64 [ %8, %omp.inner.for.body.preheader ], [ %ind.end, %middle.block ]
  br label %omp.inner.for.body

omp.inner.for.body:                               ; preds = %omp.inner.for.body.preheader63, %omp.inner.for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %omp.inner.for.body ], [ %indvars.iv.ph, %omp.inner.for.body.preheader63 ]
  %arrayidx = getelementptr inbounds double, double* %xcoefs, i64 %indvars.iv
  %110 = load double, double* %arrayidx, align 8, !tbaa !84, !llvm.access.group !250
  %arrayidx10 = getelementptr inbounds double, double* %ycoefs, i64 %indvars.iv
  %111 = load double, double* %arrayidx10, align 8, !tbaa !84, !llvm.access.group !250
  %mul11 = fmul contract double %111, %7
  %add12 = fadd contract double %110, %mul11
  %arrayidx14 = getelementptr inbounds double, double* %wcoefs, i64 %indvars.iv
  store double %add12, double* %arrayidx14, align 8, !tbaa !84, !llvm.access.group !250
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond.not = icmp eq i32 %9, %lftr.wideiv
  br i1 %exitcond.not, label %omp.loop.exit, label %omp.inner.for.body, !llvm.loop !253

omp.loop.exit:                                    ; preds = %omp.inner.for.body, %middle.block, %omp.precond.then
  call void @__kmpc_for_static_fini(%struct.ident_t* nonnull @4, i32 %4)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8
  br label %omp.precond.end

omp.precond.end:                                  ; preds = %omp.loop.exit, %entry
  ret void
}

; Function Attrs: alwaysinline norecurse nounwind uwtable
define internal void @.omp_outlined..108(i32* noalias nocapture noundef readonly %.global_tid., i32* noalias nocapture noundef readnone %.bound_tid., i64 noundef %n, double* noundef %wcoefs, i64 noundef %alpha, double* noundef %xcoefs, i64 noundef %beta, double* noundef %ycoefs) #7 {
entry:
  %.omp.comb.lb = alloca i32, align 4
  %.omp.comb.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %n.addr.sroa.0.0.extract.trunc = trunc i64 %n to i32
  %sub4 = add nsw i32 %n.addr.sroa.0.0.extract.trunc, -1
  %cmp = icmp sgt i32 %n.addr.sroa.0.0.extract.trunc, 0
  br i1 %cmp, label %omp.precond.then, label %omp.precond.end

omp.precond.then:                                 ; preds = %entry
  %0 = bitcast i32* %.omp.comb.lb to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8
  store i32 0, i32* %.omp.comb.lb, align 4, !tbaa !16
  %1 = bitcast i32* %.omp.comb.ub to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8
  store i32 %sub4, i32* %.omp.comb.ub, align 4, !tbaa !16
  %2 = bitcast i32* %.omp.stride to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #8
  store i32 1, i32* %.omp.stride, align 4, !tbaa !16
  %3 = bitcast i32* %.omp.is_last to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #8
  store i32 0, i32* %.omp.is_last, align 4, !tbaa !16
  %4 = load i32, i32* %.global_tid., align 4, !tbaa !16
  call void @__kmpc_for_static_init_4(%struct.ident_t* nonnull @4, i32 %4, i32 92, i32* nonnull %.omp.is_last, i32* nonnull %.omp.comb.lb, i32* nonnull %.omp.comb.ub, i32* nonnull %.omp.stride, i32 1, i32 1)
  %5 = load i32, i32* %.omp.comb.ub, align 4, !tbaa !16
  %cmp6 = icmp sgt i32 %5, %sub4
  %cond = select i1 %cmp6, i32 %sub4, i32 %5
  store i32 %cond, i32* %.omp.comb.ub, align 4, !tbaa !16
  %6 = load i32, i32* %.omp.comb.lb, align 4, !tbaa !16
  %n.casted.sroa.0.0.insert.ext = and i64 %n, 4294967295
  %cmp7.not13 = icmp sgt i32 %6, %cond
  br i1 %cmp7.not13, label %omp.loop.exit, label %omp.inner.for.body.preheader

omp.inner.for.body.preheader:                     ; preds = %omp.precond.then
  %7 = zext i32 %6 to i64
  %8 = zext i32 %cond to i64
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull @3, i32 8, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, i64, i64, double*, i64, double*, i64, double*)* @.omp_outlined..109 to void (i32*, i32*, ...)*), i64 %7, i64 %8, i64 %n.casted.sroa.0.0.insert.ext, double* %wcoefs, i64 %alpha, double* %xcoefs, i64 %beta, double* %ycoefs), !llvm.access.group !254
  %9 = load i32, i32* %.omp.stride, align 4, !tbaa !16, !llvm.access.group !254
  %add22 = add nsw i32 %9, %6
  %10 = load i32, i32* %.omp.comb.ub, align 4, !tbaa !16, !llvm.access.group !254
  %cmp7.not23 = icmp sgt i32 %add22, %10
  br i1 %cmp7.not23, label %omp.loop.exit, label %omp.inner.for.body.omp.inner.for.body_crit_edge, !llvm.loop !255

omp.inner.for.body.omp.inner.for.body_crit_edge:  ; preds = %omp.inner.for.body.preheader, %omp.inner.for.body.omp.inner.for.body_crit_edge
  %11 = phi i32 [ %15, %omp.inner.for.body.omp.inner.for.body_crit_edge ], [ %10, %omp.inner.for.body.preheader ]
  %add24 = phi i32 [ %add, %omp.inner.for.body.omp.inner.for.body_crit_edge ], [ %add22, %omp.inner.for.body.preheader ]
  %.pre = load i32, i32* %.omp.comb.lb, align 4, !llvm.access.group !254
  %12 = zext i32 %.pre to i64
  %13 = zext i32 %11 to i64
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull @3, i32 8, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, i64, i64, double*, i64, double*, i64, double*)* @.omp_outlined..109 to void (i32*, i32*, ...)*), i64 %12, i64 %13, i64 %n.casted.sroa.0.0.insert.ext, double* %wcoefs, i64 %alpha, double* %xcoefs, i64 %beta, double* %ycoefs), !llvm.access.group !254
  %14 = load i32, i32* %.omp.stride, align 4, !tbaa !16, !llvm.access.group !254
  %add = add nsw i32 %14, %add24
  %15 = load i32, i32* %.omp.comb.ub, align 4, !tbaa !16, !llvm.access.group !254
  %cmp7.not = icmp sgt i32 %add, %15
  br i1 %cmp7.not, label %omp.loop.exit, label %omp.inner.for.body.omp.inner.for.body_crit_edge, !llvm.loop !255

omp.loop.exit:                                    ; preds = %omp.inner.for.body.omp.inner.for.body_crit_edge, %omp.inner.for.body.preheader, %omp.precond.then
  call void @__kmpc_for_static_fini(%struct.ident_t* nonnull @4, i32 %4)
  br label %omp.precond.end

omp.precond.end:                                  ; preds = %entry, %omp.loop.exit
  %.pre-phi = bitcast i32* %.omp.is_last to i8*
  %.pre-phi17 = bitcast i32* %.omp.stride to i8*
  %.pre-phi19 = bitcast i32* %.omp.comb.ub to i8*
  %.pre-phi21 = bitcast i32* %.omp.comb.lb to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %.pre-phi) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %.pre-phi17) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %.pre-phi19) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %.pre-phi21) #8
  ret void
}

; Function Attrs: alwaysinline norecurse nounwind uwtable
define internal void @.omp_outlined..109(i32* noalias nocapture noundef readonly %.global_tid., i32* noalias nocapture noundef readnone %.bound_tid., i64 noundef %.previous.lb., i64 noundef %.previous.ub., i64 noundef %n, double* nocapture noundef writeonly %wcoefs, i64 noundef %alpha, double* nocapture noundef readonly %xcoefs, i64 noundef %beta, double* nocapture noundef readonly %ycoefs) #7 {
entry:
  %.omp.lb = alloca i32, align 4
  %.omp.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %n.addr.sroa.0.0.extract.trunc = trunc i64 %n to i32
  %sub4 = add nsw i32 %n.addr.sroa.0.0.extract.trunc, -1
  %cmp = icmp sgt i32 %n.addr.sroa.0.0.extract.trunc, 0
  br i1 %cmp, label %omp.precond.then, label %omp.precond.end

omp.precond.then:                                 ; preds = %entry
  %0 = bitcast i32* %.omp.lb to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8
  %1 = bitcast i32* %.omp.ub to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8
  %conv5 = trunc i64 %.previous.lb. to i32
  %conv6 = trunc i64 %.previous.ub. to i32
  store i32 %conv5, i32* %.omp.lb, align 4, !tbaa !16
  store i32 %conv6, i32* %.omp.ub, align 4, !tbaa !16
  %2 = bitcast i32* %.omp.stride to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #8
  store i32 1, i32* %.omp.stride, align 4, !tbaa !16
  %3 = bitcast i32* %.omp.is_last to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #8
  store i32 0, i32* %.omp.is_last, align 4, !tbaa !16
  %4 = load i32, i32* %.global_tid., align 4, !tbaa !16
  call void @__kmpc_for_static_init_4(%struct.ident_t* nonnull @1, i32 %4, i32 34, i32* nonnull %.omp.is_last, i32* nonnull %.omp.lb, i32* nonnull %.omp.ub, i32* nonnull %.omp.stride, i32 1, i32 1)
  %5 = load i32, i32* %.omp.ub, align 4, !tbaa !16
  %cmp8 = icmp sgt i32 %5, %sub4
  %cond = select i1 %cmp8, i32 %sub4, i32 %5
  store i32 %cond, i32* %.omp.ub, align 4, !tbaa !16
  %6 = load i32, i32* %.omp.lb, align 4, !tbaa !16
  %7 = bitcast i64 %alpha to double
  %8 = bitcast i64 %beta to double
  %cmp9.not15 = icmp slt i32 %cond, %6
  br i1 %cmp9.not15, label %omp.loop.exit, label %omp.inner.for.body.preheader

omp.inner.for.body.preheader:                     ; preds = %omp.precond.then
  %9 = sext i32 %6 to i64
  %10 = add nsw i32 %cond, 1
  %11 = sub i32 %cond, %6
  %12 = zext i32 %11 to i64
  %13 = add nuw nsw i64 %12, 1
  %min.iters.check = icmp ult i32 %11, 23
  br i1 %min.iters.check, label %omp.inner.for.body.preheader87, label %vector.ph

vector.ph:                                        ; preds = %omp.inner.for.body.preheader
  %n.mod.vf = urem i64 %13, 24
  %n.vec = sub nsw i64 %13, %n.mod.vf
  %ind.end = add nsw i64 %n.vec, %9
  %broadcast.splatinsert = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat = shufflevector <2 x double> %broadcast.splatinsert, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert29 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat30 = shufflevector <2 x double> %broadcast.splatinsert29, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert31 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat32 = shufflevector <2 x double> %broadcast.splatinsert31, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert33 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat34 = shufflevector <2 x double> %broadcast.splatinsert33, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert35 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat36 = shufflevector <2 x double> %broadcast.splatinsert35, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert37 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat38 = shufflevector <2 x double> %broadcast.splatinsert37, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert39 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat40 = shufflevector <2 x double> %broadcast.splatinsert39, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert41 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat42 = shufflevector <2 x double> %broadcast.splatinsert41, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert43 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat44 = shufflevector <2 x double> %broadcast.splatinsert43, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert45 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat46 = shufflevector <2 x double> %broadcast.splatinsert45, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert47 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat48 = shufflevector <2 x double> %broadcast.splatinsert47, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert49 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat50 = shufflevector <2 x double> %broadcast.splatinsert49, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert63 = insertelement <2 x double> poison, double %8, i64 0
  %broadcast.splat64 = shufflevector <2 x double> %broadcast.splatinsert63, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert65 = insertelement <2 x double> poison, double %8, i64 0
  %broadcast.splat66 = shufflevector <2 x double> %broadcast.splatinsert65, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert67 = insertelement <2 x double> poison, double %8, i64 0
  %broadcast.splat68 = shufflevector <2 x double> %broadcast.splatinsert67, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert69 = insertelement <2 x double> poison, double %8, i64 0
  %broadcast.splat70 = shufflevector <2 x double> %broadcast.splatinsert69, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert71 = insertelement <2 x double> poison, double %8, i64 0
  %broadcast.splat72 = shufflevector <2 x double> %broadcast.splatinsert71, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert73 = insertelement <2 x double> poison, double %8, i64 0
  %broadcast.splat74 = shufflevector <2 x double> %broadcast.splatinsert73, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert75 = insertelement <2 x double> poison, double %8, i64 0
  %broadcast.splat76 = shufflevector <2 x double> %broadcast.splatinsert75, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert77 = insertelement <2 x double> poison, double %8, i64 0
  %broadcast.splat78 = shufflevector <2 x double> %broadcast.splatinsert77, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert79 = insertelement <2 x double> poison, double %8, i64 0
  %broadcast.splat80 = shufflevector <2 x double> %broadcast.splatinsert79, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert81 = insertelement <2 x double> poison, double %8, i64 0
  %broadcast.splat82 = shufflevector <2 x double> %broadcast.splatinsert81, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert83 = insertelement <2 x double> poison, double %8, i64 0
  %broadcast.splat84 = shufflevector <2 x double> %broadcast.splatinsert83, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert85 = insertelement <2 x double> poison, double %8, i64 0
  %broadcast.splat86 = shufflevector <2 x double> %broadcast.splatinsert85, <2 x double> poison, <2 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %offset.idx = add i64 %index, %9
  %14 = getelementptr inbounds double, double* %xcoefs, i64 %offset.idx
  %15 = bitcast double* %14 to <2 x double>*
  %wide.load = load <2 x double>, <2 x double>* %15, align 8, !tbaa !84, !llvm.access.group !257
  %16 = getelementptr inbounds double, double* %14, i64 2
  %17 = bitcast double* %16 to <2 x double>*
  %wide.load18 = load <2 x double>, <2 x double>* %17, align 8, !tbaa !84, !llvm.access.group !257
  %18 = getelementptr inbounds double, double* %14, i64 4
  %19 = bitcast double* %18 to <2 x double>*
  %wide.load19 = load <2 x double>, <2 x double>* %19, align 8, !tbaa !84, !llvm.access.group !257
  %20 = getelementptr inbounds double, double* %14, i64 6
  %21 = bitcast double* %20 to <2 x double>*
  %wide.load20 = load <2 x double>, <2 x double>* %21, align 8, !tbaa !84, !llvm.access.group !257
  %22 = getelementptr inbounds double, double* %14, i64 8
  %23 = bitcast double* %22 to <2 x double>*
  %wide.load21 = load <2 x double>, <2 x double>* %23, align 8, !tbaa !84, !llvm.access.group !257
  %24 = getelementptr inbounds double, double* %14, i64 10
  %25 = bitcast double* %24 to <2 x double>*
  %wide.load22 = load <2 x double>, <2 x double>* %25, align 8, !tbaa !84, !llvm.access.group !257
  %26 = getelementptr inbounds double, double* %14, i64 12
  %27 = bitcast double* %26 to <2 x double>*
  %wide.load23 = load <2 x double>, <2 x double>* %27, align 8, !tbaa !84, !llvm.access.group !257
  %28 = getelementptr inbounds double, double* %14, i64 14
  %29 = bitcast double* %28 to <2 x double>*
  %wide.load24 = load <2 x double>, <2 x double>* %29, align 8, !tbaa !84, !llvm.access.group !257
  %30 = getelementptr inbounds double, double* %14, i64 16
  %31 = bitcast double* %30 to <2 x double>*
  %wide.load25 = load <2 x double>, <2 x double>* %31, align 8, !tbaa !84, !llvm.access.group !257
  %32 = getelementptr inbounds double, double* %14, i64 18
  %33 = bitcast double* %32 to <2 x double>*
  %wide.load26 = load <2 x double>, <2 x double>* %33, align 8, !tbaa !84, !llvm.access.group !257
  %34 = getelementptr inbounds double, double* %14, i64 20
  %35 = bitcast double* %34 to <2 x double>*
  %wide.load27 = load <2 x double>, <2 x double>* %35, align 8, !tbaa !84, !llvm.access.group !257
  %36 = getelementptr inbounds double, double* %14, i64 22
  %37 = bitcast double* %36 to <2 x double>*
  %wide.load28 = load <2 x double>, <2 x double>* %37, align 8, !tbaa !84, !llvm.access.group !257
  %38 = fmul contract <2 x double> %wide.load, %broadcast.splat
  %39 = fmul contract <2 x double> %wide.load18, %broadcast.splat30
  %40 = fmul contract <2 x double> %wide.load19, %broadcast.splat32
  %41 = fmul contract <2 x double> %wide.load20, %broadcast.splat34
  %42 = fmul contract <2 x double> %wide.load21, %broadcast.splat36
  %43 = fmul contract <2 x double> %wide.load22, %broadcast.splat38
  %44 = fmul contract <2 x double> %wide.load23, %broadcast.splat40
  %45 = fmul contract <2 x double> %wide.load24, %broadcast.splat42
  %46 = fmul contract <2 x double> %wide.load25, %broadcast.splat44
  %47 = fmul contract <2 x double> %wide.load26, %broadcast.splat46
  %48 = fmul contract <2 x double> %wide.load27, %broadcast.splat48
  %49 = fmul contract <2 x double> %wide.load28, %broadcast.splat50
  %50 = getelementptr inbounds double, double* %ycoefs, i64 %offset.idx
  %51 = bitcast double* %50 to <2 x double>*
  %wide.load51 = load <2 x double>, <2 x double>* %51, align 8, !tbaa !84, !llvm.access.group !257
  %52 = getelementptr inbounds double, double* %50, i64 2
  %53 = bitcast double* %52 to <2 x double>*
  %wide.load52 = load <2 x double>, <2 x double>* %53, align 8, !tbaa !84, !llvm.access.group !257
  %54 = getelementptr inbounds double, double* %50, i64 4
  %55 = bitcast double* %54 to <2 x double>*
  %wide.load53 = load <2 x double>, <2 x double>* %55, align 8, !tbaa !84, !llvm.access.group !257
  %56 = getelementptr inbounds double, double* %50, i64 6
  %57 = bitcast double* %56 to <2 x double>*
  %wide.load54 = load <2 x double>, <2 x double>* %57, align 8, !tbaa !84, !llvm.access.group !257
  %58 = getelementptr inbounds double, double* %50, i64 8
  %59 = bitcast double* %58 to <2 x double>*
  %wide.load55 = load <2 x double>, <2 x double>* %59, align 8, !tbaa !84, !llvm.access.group !257
  %60 = getelementptr inbounds double, double* %50, i64 10
  %61 = bitcast double* %60 to <2 x double>*
  %wide.load56 = load <2 x double>, <2 x double>* %61, align 8, !tbaa !84, !llvm.access.group !257
  %62 = getelementptr inbounds double, double* %50, i64 12
  %63 = bitcast double* %62 to <2 x double>*
  %wide.load57 = load <2 x double>, <2 x double>* %63, align 8, !tbaa !84, !llvm.access.group !257
  %64 = getelementptr inbounds double, double* %50, i64 14
  %65 = bitcast double* %64 to <2 x double>*
  %wide.load58 = load <2 x double>, <2 x double>* %65, align 8, !tbaa !84, !llvm.access.group !257
  %66 = getelementptr inbounds double, double* %50, i64 16
  %67 = bitcast double* %66 to <2 x double>*
  %wide.load59 = load <2 x double>, <2 x double>* %67, align 8, !tbaa !84, !llvm.access.group !257
  %68 = getelementptr inbounds double, double* %50, i64 18
  %69 = bitcast double* %68 to <2 x double>*
  %wide.load60 = load <2 x double>, <2 x double>* %69, align 8, !tbaa !84, !llvm.access.group !257
  %70 = getelementptr inbounds double, double* %50, i64 20
  %71 = bitcast double* %70 to <2 x double>*
  %wide.load61 = load <2 x double>, <2 x double>* %71, align 8, !tbaa !84, !llvm.access.group !257
  %72 = getelementptr inbounds double, double* %50, i64 22
  %73 = bitcast double* %72 to <2 x double>*
  %wide.load62 = load <2 x double>, <2 x double>* %73, align 8, !tbaa !84, !llvm.access.group !257
  %74 = fmul contract <2 x double> %wide.load51, %broadcast.splat64
  %75 = fmul contract <2 x double> %wide.load52, %broadcast.splat66
  %76 = fmul contract <2 x double> %wide.load53, %broadcast.splat68
  %77 = fmul contract <2 x double> %wide.load54, %broadcast.splat70
  %78 = fmul contract <2 x double> %wide.load55, %broadcast.splat72
  %79 = fmul contract <2 x double> %wide.load56, %broadcast.splat74
  %80 = fmul contract <2 x double> %wide.load57, %broadcast.splat76
  %81 = fmul contract <2 x double> %wide.load58, %broadcast.splat78
  %82 = fmul contract <2 x double> %wide.load59, %broadcast.splat80
  %83 = fmul contract <2 x double> %wide.load60, %broadcast.splat82
  %84 = fmul contract <2 x double> %wide.load61, %broadcast.splat84
  %85 = fmul contract <2 x double> %wide.load62, %broadcast.splat86
  %86 = fadd contract <2 x double> %38, %74
  %87 = fadd contract <2 x double> %39, %75
  %88 = fadd contract <2 x double> %40, %76
  %89 = fadd contract <2 x double> %41, %77
  %90 = fadd contract <2 x double> %42, %78
  %91 = fadd contract <2 x double> %43, %79
  %92 = fadd contract <2 x double> %44, %80
  %93 = fadd contract <2 x double> %45, %81
  %94 = fadd contract <2 x double> %46, %82
  %95 = fadd contract <2 x double> %47, %83
  %96 = fadd contract <2 x double> %48, %84
  %97 = fadd contract <2 x double> %49, %85
  %98 = getelementptr inbounds double, double* %wcoefs, i64 %offset.idx
  %99 = bitcast double* %98 to <2 x double>*
  store <2 x double> %86, <2 x double>* %99, align 8, !tbaa !84, !llvm.access.group !257
  %100 = getelementptr inbounds double, double* %98, i64 2
  %101 = bitcast double* %100 to <2 x double>*
  store <2 x double> %87, <2 x double>* %101, align 8, !tbaa !84, !llvm.access.group !257
  %102 = getelementptr inbounds double, double* %98, i64 4
  %103 = bitcast double* %102 to <2 x double>*
  store <2 x double> %88, <2 x double>* %103, align 8, !tbaa !84, !llvm.access.group !257
  %104 = getelementptr inbounds double, double* %98, i64 6
  %105 = bitcast double* %104 to <2 x double>*
  store <2 x double> %89, <2 x double>* %105, align 8, !tbaa !84, !llvm.access.group !257
  %106 = getelementptr inbounds double, double* %98, i64 8
  %107 = bitcast double* %106 to <2 x double>*
  store <2 x double> %90, <2 x double>* %107, align 8, !tbaa !84, !llvm.access.group !257
  %108 = getelementptr inbounds double, double* %98, i64 10
  %109 = bitcast double* %108 to <2 x double>*
  store <2 x double> %91, <2 x double>* %109, align 8, !tbaa !84, !llvm.access.group !257
  %110 = getelementptr inbounds double, double* %98, i64 12
  %111 = bitcast double* %110 to <2 x double>*
  store <2 x double> %92, <2 x double>* %111, align 8, !tbaa !84, !llvm.access.group !257
  %112 = getelementptr inbounds double, double* %98, i64 14
  %113 = bitcast double* %112 to <2 x double>*
  store <2 x double> %93, <2 x double>* %113, align 8, !tbaa !84, !llvm.access.group !257
  %114 = getelementptr inbounds double, double* %98, i64 16
  %115 = bitcast double* %114 to <2 x double>*
  store <2 x double> %94, <2 x double>* %115, align 8, !tbaa !84, !llvm.access.group !257
  %116 = getelementptr inbounds double, double* %98, i64 18
  %117 = bitcast double* %116 to <2 x double>*
  store <2 x double> %95, <2 x double>* %117, align 8, !tbaa !84, !llvm.access.group !257
  %118 = getelementptr inbounds double, double* %98, i64 20
  %119 = bitcast double* %118 to <2 x double>*
  store <2 x double> %96, <2 x double>* %119, align 8, !tbaa !84, !llvm.access.group !257
  %120 = getelementptr inbounds double, double* %98, i64 22
  %121 = bitcast double* %120 to <2 x double>*
  store <2 x double> %97, <2 x double>* %121, align 8, !tbaa !84, !llvm.access.group !257
  %index.next = add nuw i64 %index, 24
  %122 = icmp eq i64 %index.next, %n.vec
  br i1 %122, label %middle.block, label %vector.body, !llvm.loop !258

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.mod.vf, 0
  br i1 %cmp.n, label %omp.loop.exit, label %omp.inner.for.body.preheader87

omp.inner.for.body.preheader87:                   ; preds = %omp.inner.for.body.preheader, %middle.block
  %indvars.iv.ph = phi i64 [ %9, %omp.inner.for.body.preheader ], [ %ind.end, %middle.block ]
  br label %omp.inner.for.body

omp.inner.for.body:                               ; preds = %omp.inner.for.body.preheader87, %omp.inner.for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %omp.inner.for.body ], [ %indvars.iv.ph, %omp.inner.for.body.preheader87 ]
  %arrayidx = getelementptr inbounds double, double* %xcoefs, i64 %indvars.iv
  %123 = load double, double* %arrayidx, align 8, !tbaa !84, !llvm.access.group !257
  %mul10 = fmul contract double %123, %7
  %arrayidx12 = getelementptr inbounds double, double* %ycoefs, i64 %indvars.iv
  %124 = load double, double* %arrayidx12, align 8, !tbaa !84, !llvm.access.group !257
  %mul13 = fmul contract double %124, %8
  %add14 = fadd contract double %mul10, %mul13
  %arrayidx16 = getelementptr inbounds double, double* %wcoefs, i64 %indvars.iv
  store double %add14, double* %arrayidx16, align 8, !tbaa !84, !llvm.access.group !257
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond.not = icmp eq i32 %10, %lftr.wideiv
  br i1 %exitcond.not, label %omp.loop.exit, label %omp.inner.for.body, !llvm.loop !260

omp.loop.exit:                                    ; preds = %omp.inner.for.body, %middle.block, %omp.precond.then
  call void @__kmpc_for_static_fini(%struct.ident_t* nonnull @4, i32 %4)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8
  br label %omp.precond.end

omp.precond.end:                                  ; preds = %omp.loop.exit, %entry
  ret void
}

; Function Attrs: alwaysinline norecurse nounwind uwtable
define internal void @.omp_outlined..112(i32* noalias nocapture noundef readonly %.global_tid., i32* noalias nocapture noundef readnone %.bound_tid., i64 noundef %n, double* nocapture noundef nonnull align 8 dereferenceable(8) %result, double* noundef %xcoefs) #7 {
entry:
  %result1 = alloca double, align 8
  %.omp.comb.lb = alloca i32, align 4
  %.omp.comb.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %.omp.reduction.red_list = alloca [1 x i8*], align 8
  %n.addr.sroa.0.0.extract.trunc = trunc i64 %n to i32
  %0 = bitcast double* %result1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8
  store double 0.000000e+00, double* %result1, align 8, !tbaa !84
  %sub3 = add nsw i32 %n.addr.sroa.0.0.extract.trunc, -1
  %cmp = icmp sgt i32 %n.addr.sroa.0.0.extract.trunc, 0
  br i1 %cmp, label %omp.precond.then, label %entry.omp.precond.end_crit_edge

entry.omp.precond.end_crit_edge:                  ; preds = %entry
  %.pre15 = load i32, i32* %.global_tid., align 4, !tbaa !16
  br label %omp.precond.end

omp.precond.then:                                 ; preds = %entry
  %1 = bitcast i32* %.omp.comb.lb to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8
  store i32 0, i32* %.omp.comb.lb, align 4, !tbaa !16
  %2 = bitcast i32* %.omp.comb.ub to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #8
  store i32 %sub3, i32* %.omp.comb.ub, align 4, !tbaa !16
  %3 = bitcast i32* %.omp.stride to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #8
  store i32 1, i32* %.omp.stride, align 4, !tbaa !16
  %4 = bitcast i32* %.omp.is_last to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #8
  store i32 0, i32* %.omp.is_last, align 4, !tbaa !16
  %5 = load i32, i32* %.global_tid., align 4, !tbaa !16
  call void @__kmpc_for_static_init_4(%struct.ident_t* nonnull @4, i32 %5, i32 92, i32* nonnull %.omp.is_last, i32* nonnull %.omp.comb.lb, i32* nonnull %.omp.comb.ub, i32* nonnull %.omp.stride, i32 1, i32 1)
  %6 = load i32, i32* %.omp.comb.ub, align 4, !tbaa !16
  %cmp5 = icmp sgt i32 %6, %sub3
  %cond = select i1 %cmp5, i32 %sub3, i32 %6
  store i32 %cond, i32* %.omp.comb.ub, align 4, !tbaa !16
  %7 = load i32, i32* %.omp.comb.lb, align 4, !tbaa !16
  %n.casted.sroa.0.0.insert.ext = and i64 %n, 4294967295
  %cmp6.not13 = icmp sgt i32 %7, %cond
  br i1 %cmp6.not13, label %omp.loop.exit, label %omp.inner.for.body.preheader

omp.inner.for.body.preheader:                     ; preds = %omp.precond.then
  %8 = zext i32 %7 to i64
  %9 = zext i32 %cond to i64
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull @3, i32 5, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, i64, i64, double*, double*)* @.omp_outlined..113 to void (i32*, i32*, ...)*), i64 %8, i64 %9, i64 %n.casted.sroa.0.0.insert.ext, double* nonnull %result1, double* %xcoefs)
  %10 = load i32, i32* %.omp.stride, align 4, !tbaa !16
  %add23 = add nsw i32 %10, %7
  %11 = load i32, i32* %.omp.comb.ub, align 4, !tbaa !16
  %cmp6.not24 = icmp sgt i32 %add23, %11
  br i1 %cmp6.not24, label %omp.loop.exit, label %omp.inner.for.body.omp.inner.for.body_crit_edge

omp.inner.for.body.omp.inner.for.body_crit_edge:  ; preds = %omp.inner.for.body.preheader, %omp.inner.for.body.omp.inner.for.body_crit_edge
  %12 = phi i32 [ %16, %omp.inner.for.body.omp.inner.for.body_crit_edge ], [ %11, %omp.inner.for.body.preheader ]
  %add25 = phi i32 [ %add, %omp.inner.for.body.omp.inner.for.body_crit_edge ], [ %add23, %omp.inner.for.body.preheader ]
  %.pre = load i32, i32* %.omp.comb.lb, align 4
  %13 = zext i32 %.pre to i64
  %14 = zext i32 %12 to i64
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull @3, i32 5, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, i64, i64, double*, double*)* @.omp_outlined..113 to void (i32*, i32*, ...)*), i64 %13, i64 %14, i64 %n.casted.sroa.0.0.insert.ext, double* nonnull %result1, double* %xcoefs)
  %15 = load i32, i32* %.omp.stride, align 4, !tbaa !16
  %add = add nsw i32 %15, %add25
  %16 = load i32, i32* %.omp.comb.ub, align 4, !tbaa !16
  %cmp6.not = icmp sgt i32 %add, %16
  br i1 %cmp6.not, label %omp.loop.exit, label %omp.inner.for.body.omp.inner.for.body_crit_edge

omp.loop.exit:                                    ; preds = %omp.inner.for.body.omp.inner.for.body_crit_edge, %omp.inner.for.body.preheader, %omp.precond.then
  call void @__kmpc_for_static_fini(%struct.ident_t* nonnull @4, i32 %5)
  br label %omp.precond.end

omp.precond.end:                                  ; preds = %entry.omp.precond.end_crit_edge, %omp.loop.exit
  %17 = phi i32 [ %.pre15, %entry.omp.precond.end_crit_edge ], [ %5, %omp.loop.exit ]
  %.pre-phi = bitcast i32* %.omp.is_last to i8*
  %.pre-phi18 = bitcast i32* %.omp.stride to i8*
  %.pre-phi20 = bitcast i32* %.omp.comb.ub to i8*
  %.pre-phi22 = bitcast i32* %.omp.comb.lb to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %.pre-phi) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %.pre-phi18) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %.pre-phi20) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %.pre-phi22) #8
  %18 = bitcast [1 x i8*]* %.omp.reduction.red_list to double**
  store double* %result1, double** %18, align 8
  %19 = bitcast [1 x i8*]* %.omp.reduction.red_list to i8*
  %20 = call i32 @__kmpc_reduce_nowait(%struct.ident_t* nonnull @2, i32 %17, i32 1, i64 8, i8* nonnull %19, void (i8*, i8*)* nonnull @.omp.reduction.reduction_func.115, [8 x i32]* nonnull @.gomp_critical_user_.reduction.var)
  switch i32 %20, label %.omp.reduction.default [
    i32 1, label %.omp.reduction.case1
    i32 2, label %.omp.reduction.case2
  ]

.omp.reduction.case1:                             ; preds = %omp.precond.end
  %21 = load double, double* %result, align 8, !tbaa !84
  %22 = load double, double* %result1, align 8, !tbaa !84
  %add8 = fadd contract double %21, %22
  store double %add8, double* %result, align 8, !tbaa !84
  call void @__kmpc_end_reduce_nowait(%struct.ident_t* nonnull @2, i32 %17, [8 x i32]* nonnull @.gomp_critical_user_.reduction.var)
  br label %.omp.reduction.default

.omp.reduction.case2:                             ; preds = %omp.precond.end
  %23 = bitcast double* %result to i64*
  %atomic-load = load atomic i64, i64* %23 monotonic, align 8, !tbaa !84
  %24 = load double, double* %result1, align 8, !tbaa !84
  br label %atomic_cont

atomic_cont:                                      ; preds = %atomic_cont, %.omp.reduction.case2
  %25 = phi i64 [ %atomic-load, %.omp.reduction.case2 ], [ %29, %atomic_cont ]
  %26 = bitcast i64 %25 to double
  %add10 = fadd contract double %24, %26
  %27 = bitcast double %add10 to i64
  %28 = cmpxchg i64* %23, i64 %25, i64 %27 monotonic monotonic, align 8
  %29 = extractvalue { i64, i1 } %28, 0
  %30 = extractvalue { i64, i1 } %28, 1
  br i1 %30, label %.omp.reduction.default, label %atomic_cont

.omp.reduction.default:                           ; preds = %atomic_cont, %.omp.reduction.case1, %omp.precond.end
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8
  ret void
}

; Function Attrs: alwaysinline norecurse nounwind uwtable
define internal void @.omp_outlined..113(i32* noalias nocapture noundef readonly %.global_tid., i32* noalias nocapture noundef readnone %.bound_tid., i64 noundef %.previous.lb., i64 noundef %.previous.ub., i64 noundef %n, double* nocapture noundef nonnull align 8 dereferenceable(8) %result, double* nocapture noundef readonly %xcoefs) #7 {
entry:
  %.omp.lb = alloca i32, align 4
  %.omp.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %result5 = alloca double, align 8
  %.omp.reduction.red_list = alloca [1 x i8*], align 8
  %n.addr.sroa.0.0.extract.trunc = trunc i64 %n to i32
  %sub2 = add nsw i32 %n.addr.sroa.0.0.extract.trunc, -1
  %cmp = icmp sgt i32 %n.addr.sroa.0.0.extract.trunc, 0
  br i1 %cmp, label %omp.precond.then, label %omp.precond.end

omp.precond.then:                                 ; preds = %entry
  %0 = bitcast i32* %.omp.lb to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8
  %1 = bitcast i32* %.omp.ub to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8
  %conv3 = trunc i64 %.previous.lb. to i32
  %conv4 = trunc i64 %.previous.ub. to i32
  store i32 %conv3, i32* %.omp.lb, align 4, !tbaa !16
  store i32 %conv4, i32* %.omp.ub, align 4, !tbaa !16
  %2 = bitcast i32* %.omp.stride to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #8
  store i32 1, i32* %.omp.stride, align 4, !tbaa !16
  %3 = bitcast i32* %.omp.is_last to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #8
  store i32 0, i32* %.omp.is_last, align 4, !tbaa !16
  %4 = bitcast double* %result5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8
  %5 = load i32, i32* %.global_tid., align 4, !tbaa !16
  call void @__kmpc_for_static_init_4(%struct.ident_t* nonnull @1, i32 %5, i32 34, i32* nonnull %.omp.is_last, i32* nonnull %.omp.lb, i32* nonnull %.omp.ub, i32* nonnull %.omp.stride, i32 1, i32 1)
  %6 = load i32, i32* %.omp.ub, align 4, !tbaa !16
  %cmp7 = icmp sgt i32 %6, %sub2
  %cond = select i1 %cmp7, i32 %sub2, i32 %6
  store i32 %cond, i32* %.omp.ub, align 4, !tbaa !16
  %7 = load i32, i32* %.omp.lb, align 4, !tbaa !16
  %cmp8.not16 = icmp slt i32 %cond, %7
  br i1 %cmp8.not16, label %omp.loop.exit, label %omp.inner.for.body.preheader

omp.inner.for.body.preheader:                     ; preds = %omp.precond.then
  %8 = sext i32 %7 to i64
  %9 = add nsw i32 %cond, 1
  %10 = add i32 %cond, 1
  %11 = sub i32 %10, %7
  %12 = sub i32 %cond, %7
  %xtraiter = and i32 %11, 7
  %lcmp.mod.not = icmp eq i32 %xtraiter, 0
  br i1 %lcmp.mod.not, label %omp.inner.for.body.prol.loopexit, label %omp.inner.for.body.prol

omp.inner.for.body.prol:                          ; preds = %omp.inner.for.body.preheader, %omp.inner.for.body.prol
  %indvars.iv.prol = phi i64 [ %indvars.iv.next.prol, %omp.inner.for.body.prol ], [ %8, %omp.inner.for.body.preheader ]
  %add121517.prol = phi double [ %add12.prol, %omp.inner.for.body.prol ], [ 0.000000e+00, %omp.inner.for.body.preheader ]
  %prol.iter = phi i32 [ %prol.iter.next, %omp.inner.for.body.prol ], [ 0, %omp.inner.for.body.preheader ]
  %arrayidx.prol = getelementptr inbounds double, double* %xcoefs, i64 %indvars.iv.prol
  %13 = load double, double* %arrayidx.prol, align 8, !tbaa !84
  %mul11.prol = fmul contract double %13, %13
  %add12.prol = fadd contract double %add121517.prol, %mul11.prol
  %indvars.iv.next.prol = add nsw i64 %indvars.iv.prol, 1
  %prol.iter.next = add i32 %prol.iter, 1
  %prol.iter.cmp.not = icmp eq i32 %prol.iter.next, %xtraiter
  br i1 %prol.iter.cmp.not, label %omp.inner.for.body.prol.loopexit, label %omp.inner.for.body.prol, !llvm.loop !261

omp.inner.for.body.prol.loopexit:                 ; preds = %omp.inner.for.body.prol, %omp.inner.for.body.preheader
  %add12.lcssa.unr = phi double [ undef, %omp.inner.for.body.preheader ], [ %add12.prol, %omp.inner.for.body.prol ]
  %indvars.iv.unr = phi i64 [ %8, %omp.inner.for.body.preheader ], [ %indvars.iv.next.prol, %omp.inner.for.body.prol ]
  %add121517.unr = phi double [ 0.000000e+00, %omp.inner.for.body.preheader ], [ %add12.prol, %omp.inner.for.body.prol ]
  %14 = icmp ult i32 %12, 7
  br i1 %14, label %omp.loop.exit, label %omp.inner.for.body

omp.inner.for.body:                               ; preds = %omp.inner.for.body.prol.loopexit, %omp.inner.for.body
  %indvars.iv = phi i64 [ %indvars.iv.next.7, %omp.inner.for.body ], [ %indvars.iv.unr, %omp.inner.for.body.prol.loopexit ]
  %add121517 = phi double [ %add12.7, %omp.inner.for.body ], [ %add121517.unr, %omp.inner.for.body.prol.loopexit ]
  %arrayidx = getelementptr inbounds double, double* %xcoefs, i64 %indvars.iv
  %15 = load double, double* %arrayidx, align 8, !tbaa !84
  %mul11 = fmul contract double %15, %15
  %add12 = fadd contract double %add121517, %mul11
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %arrayidx.1 = getelementptr inbounds double, double* %xcoefs, i64 %indvars.iv.next
  %16 = load double, double* %arrayidx.1, align 8, !tbaa !84
  %mul11.1 = fmul contract double %16, %16
  %add12.1 = fadd contract double %add12, %mul11.1
  %indvars.iv.next.1 = add nsw i64 %indvars.iv, 2
  %arrayidx.2 = getelementptr inbounds double, double* %xcoefs, i64 %indvars.iv.next.1
  %17 = load double, double* %arrayidx.2, align 8, !tbaa !84
  %mul11.2 = fmul contract double %17, %17
  %add12.2 = fadd contract double %add12.1, %mul11.2
  %indvars.iv.next.2 = add nsw i64 %indvars.iv, 3
  %arrayidx.3 = getelementptr inbounds double, double* %xcoefs, i64 %indvars.iv.next.2
  %18 = load double, double* %arrayidx.3, align 8, !tbaa !84
  %mul11.3 = fmul contract double %18, %18
  %add12.3 = fadd contract double %add12.2, %mul11.3
  %indvars.iv.next.3 = add nsw i64 %indvars.iv, 4
  %arrayidx.4 = getelementptr inbounds double, double* %xcoefs, i64 %indvars.iv.next.3
  %19 = load double, double* %arrayidx.4, align 8, !tbaa !84
  %mul11.4 = fmul contract double %19, %19
  %add12.4 = fadd contract double %add12.3, %mul11.4
  %indvars.iv.next.4 = add nsw i64 %indvars.iv, 5
  %arrayidx.5 = getelementptr inbounds double, double* %xcoefs, i64 %indvars.iv.next.4
  %20 = load double, double* %arrayidx.5, align 8, !tbaa !84
  %mul11.5 = fmul contract double %20, %20
  %add12.5 = fadd contract double %add12.4, %mul11.5
  %indvars.iv.next.5 = add nsw i64 %indvars.iv, 6
  %arrayidx.6 = getelementptr inbounds double, double* %xcoefs, i64 %indvars.iv.next.5
  %21 = load double, double* %arrayidx.6, align 8, !tbaa !84
  %mul11.6 = fmul contract double %21, %21
  %add12.6 = fadd contract double %add12.5, %mul11.6
  %indvars.iv.next.6 = add nsw i64 %indvars.iv, 7
  %arrayidx.7 = getelementptr inbounds double, double* %xcoefs, i64 %indvars.iv.next.6
  %22 = load double, double* %arrayidx.7, align 8, !tbaa !84
  %mul11.7 = fmul contract double %22, %22
  %add12.7 = fadd contract double %add12.6, %mul11.7
  %indvars.iv.next.7 = add nsw i64 %indvars.iv, 8
  %lftr.wideiv.7 = trunc i64 %indvars.iv.next.7 to i32
  %exitcond.not.7 = icmp eq i32 %9, %lftr.wideiv.7
  br i1 %exitcond.not.7, label %omp.loop.exit, label %omp.inner.for.body

omp.loop.exit:                                    ; preds = %omp.inner.for.body.prol.loopexit, %omp.inner.for.body, %omp.precond.then
  %add1215.lcssa = phi double [ 0.000000e+00, %omp.precond.then ], [ %add12.lcssa.unr, %omp.inner.for.body.prol.loopexit ], [ %add12.7, %omp.inner.for.body ]
  store double %add1215.lcssa, double* %result5, align 8, !tbaa !84
  call void @__kmpc_for_static_fini(%struct.ident_t* nonnull @4, i32 %5)
  %23 = bitcast [1 x i8*]* %.omp.reduction.red_list to double**
  store double* %result5, double** %23, align 8
  %24 = bitcast [1 x i8*]* %.omp.reduction.red_list to i8*
  %25 = call i32 @__kmpc_reduce_nowait(%struct.ident_t* nonnull @2, i32 %5, i32 1, i64 8, i8* nonnull %24, void (i8*, i8*)* nonnull @.omp.reduction.reduction_func.114, [8 x i32]* nonnull @.gomp_critical_user_.reduction.var)
  switch i32 %25, label %.omp.reduction.default [
    i32 1, label %.omp.reduction.case1
    i32 2, label %.omp.reduction.case2
  ]

.omp.reduction.case1:                             ; preds = %omp.loop.exit
  %26 = load double, double* %result, align 8, !tbaa !84
  %27 = load double, double* %result5, align 8, !tbaa !84
  %add14 = fadd contract double %26, %27
  store double %add14, double* %result, align 8, !tbaa !84
  call void @__kmpc_end_reduce_nowait(%struct.ident_t* nonnull @2, i32 %5, [8 x i32]* nonnull @.gomp_critical_user_.reduction.var)
  br label %.omp.reduction.default

.omp.reduction.case2:                             ; preds = %omp.loop.exit
  %28 = bitcast double* %result to i64*
  %atomic-load = load atomic i64, i64* %28 monotonic, align 8, !tbaa !84
  %29 = load double, double* %result5, align 8, !tbaa !84
  br label %atomic_cont

atomic_cont:                                      ; preds = %atomic_cont, %.omp.reduction.case2
  %30 = phi i64 [ %atomic-load, %.omp.reduction.case2 ], [ %34, %atomic_cont ]
  %31 = bitcast i64 %30 to double
  %add16 = fadd contract double %29, %31
  %32 = bitcast double %add16 to i64
  %33 = cmpxchg i64* %28, i64 %30, i64 %32 monotonic monotonic, align 8
  %34 = extractvalue { i64, i1 } %33, 0
  %35 = extractvalue { i64, i1 } %33, 1
  br i1 %35, label %.omp.reduction.default, label %atomic_cont

.omp.reduction.default:                           ; preds = %atomic_cont, %.omp.reduction.case1, %omp.loop.exit
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8
  br label %omp.precond.end

omp.precond.end:                                  ; preds = %.omp.reduction.default, %entry
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define internal void @.omp.reduction.reduction_func.114(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) #9 {
entry:
  %2 = bitcast i8* %1 to double**
  %3 = load double*, double** %2, align 8
  %4 = bitcast i8* %0 to double**
  %5 = load double*, double** %4, align 8
  %6 = load double, double* %5, align 8, !tbaa !84
  %7 = load double, double* %3, align 8, !tbaa !84
  %add = fadd contract double %6, %7
  store double %add, double* %5, align 8, !tbaa !84
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define internal void @.omp.reduction.reduction_func.115(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) #9 {
entry:
  %2 = bitcast i8* %1 to double**
  %3 = load double*, double** %2, align 8
  %4 = bitcast i8* %0 to double**
  %5 = load double*, double** %4, align 8
  %6 = load double, double* %5, align 8, !tbaa !84
  %7 = load double, double* %3, align 8, !tbaa !84
  %add = fadd contract double %6, %7
  store double %add, double* %5, align 8, !tbaa !84
  ret void
}

; Function Attrs: alwaysinline norecurse nounwind uwtable
define internal void @.omp_outlined..118(i32* noalias nocapture noundef readonly %.global_tid., i32* noalias nocapture noundef readnone %.bound_tid., i64 noundef %n, double* noundef %ycoefs, double* noundef %xcoefs) #7 {
entry:
  %.omp.comb.lb = alloca i32, align 4
  %.omp.comb.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %n.addr.sroa.0.0.extract.trunc = trunc i64 %n to i32
  %sub2 = add nsw i32 %n.addr.sroa.0.0.extract.trunc, -1
  %cmp = icmp sgt i32 %n.addr.sroa.0.0.extract.trunc, 0
  br i1 %cmp, label %omp.precond.then, label %omp.precond.end

omp.precond.then:                                 ; preds = %entry
  %0 = bitcast i32* %.omp.comb.lb to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8
  store i32 0, i32* %.omp.comb.lb, align 4, !tbaa !16
  %1 = bitcast i32* %.omp.comb.ub to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8
  store i32 %sub2, i32* %.omp.comb.ub, align 4, !tbaa !16
  %2 = bitcast i32* %.omp.stride to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #8
  store i32 1, i32* %.omp.stride, align 4, !tbaa !16
  %3 = bitcast i32* %.omp.is_last to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #8
  store i32 0, i32* %.omp.is_last, align 4, !tbaa !16
  %4 = load i32, i32* %.global_tid., align 4, !tbaa !16
  call void @__kmpc_for_static_init_4(%struct.ident_t* nonnull @4, i32 %4, i32 92, i32* nonnull %.omp.is_last, i32* nonnull %.omp.comb.lb, i32* nonnull %.omp.comb.ub, i32* nonnull %.omp.stride, i32 1, i32 1)
  %5 = load i32, i32* %.omp.comb.ub, align 4, !tbaa !16
  %cmp4 = icmp sgt i32 %5, %sub2
  %cond = select i1 %cmp4, i32 %sub2, i32 %5
  store i32 %cond, i32* %.omp.comb.ub, align 4, !tbaa !16
  %6 = load i32, i32* %.omp.comb.lb, align 4, !tbaa !16
  %n.casted.sroa.0.0.insert.ext = and i64 %n, 4294967295
  %cmp5.not13 = icmp sgt i32 %6, %cond
  br i1 %cmp5.not13, label %omp.loop.exit, label %omp.inner.for.body.preheader

omp.inner.for.body.preheader:                     ; preds = %omp.precond.then
  %7 = zext i32 %6 to i64
  %8 = zext i32 %cond to i64
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull @3, i32 5, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, i64, i64, double*, double*)* @.omp_outlined..119 to void (i32*, i32*, ...)*), i64 %7, i64 %8, i64 %n.casted.sroa.0.0.insert.ext, double* %ycoefs, double* %xcoefs), !llvm.access.group !262
  %9 = load i32, i32* %.omp.stride, align 4, !tbaa !16, !llvm.access.group !262
  %add22 = add nsw i32 %9, %6
  %10 = load i32, i32* %.omp.comb.ub, align 4, !tbaa !16, !llvm.access.group !262
  %cmp5.not23 = icmp sgt i32 %add22, %10
  br i1 %cmp5.not23, label %omp.loop.exit, label %omp.inner.for.body.omp.inner.for.body_crit_edge, !llvm.loop !263

omp.inner.for.body.omp.inner.for.body_crit_edge:  ; preds = %omp.inner.for.body.preheader, %omp.inner.for.body.omp.inner.for.body_crit_edge
  %11 = phi i32 [ %15, %omp.inner.for.body.omp.inner.for.body_crit_edge ], [ %10, %omp.inner.for.body.preheader ]
  %add24 = phi i32 [ %add, %omp.inner.for.body.omp.inner.for.body_crit_edge ], [ %add22, %omp.inner.for.body.preheader ]
  %.pre = load i32, i32* %.omp.comb.lb, align 4, !llvm.access.group !262
  %12 = zext i32 %.pre to i64
  %13 = zext i32 %11 to i64
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull @3, i32 5, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, i64, i64, double*, double*)* @.omp_outlined..119 to void (i32*, i32*, ...)*), i64 %12, i64 %13, i64 %n.casted.sroa.0.0.insert.ext, double* %ycoefs, double* %xcoefs), !llvm.access.group !262
  %14 = load i32, i32* %.omp.stride, align 4, !tbaa !16, !llvm.access.group !262
  %add = add nsw i32 %14, %add24
  %15 = load i32, i32* %.omp.comb.ub, align 4, !tbaa !16, !llvm.access.group !262
  %cmp5.not = icmp sgt i32 %add, %15
  br i1 %cmp5.not, label %omp.loop.exit, label %omp.inner.for.body.omp.inner.for.body_crit_edge, !llvm.loop !263

omp.loop.exit:                                    ; preds = %omp.inner.for.body.omp.inner.for.body_crit_edge, %omp.inner.for.body.preheader, %omp.precond.then
  call void @__kmpc_for_static_fini(%struct.ident_t* nonnull @4, i32 %4)
  br label %omp.precond.end

omp.precond.end:                                  ; preds = %entry, %omp.loop.exit
  %.pre-phi = bitcast i32* %.omp.is_last to i8*
  %.pre-phi17 = bitcast i32* %.omp.stride to i8*
  %.pre-phi19 = bitcast i32* %.omp.comb.ub to i8*
  %.pre-phi21 = bitcast i32* %.omp.comb.lb to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %.pre-phi) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %.pre-phi17) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %.pre-phi19) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %.pre-phi21) #8
  ret void
}

; Function Attrs: alwaysinline norecurse nounwind uwtable
define internal void @.omp_outlined..119(i32* noalias nocapture noundef readonly %.global_tid., i32* noalias nocapture noundef readnone %.bound_tid., i64 noundef %.previous.lb., i64 noundef %.previous.ub., i64 noundef %n, double* nocapture noundef %ycoefs, double* nocapture noundef readonly %xcoefs) #7 {
entry:
  %.omp.lb = alloca i32, align 4
  %.omp.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %n.addr.sroa.0.0.extract.trunc = trunc i64 %n to i32
  %sub2 = add nsw i32 %n.addr.sroa.0.0.extract.trunc, -1
  %cmp = icmp sgt i32 %n.addr.sroa.0.0.extract.trunc, 0
  br i1 %cmp, label %omp.precond.then, label %omp.precond.end

omp.precond.then:                                 ; preds = %entry
  %0 = bitcast i32* %.omp.lb to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8
  %1 = bitcast i32* %.omp.ub to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8
  %conv3 = trunc i64 %.previous.lb. to i32
  %conv4 = trunc i64 %.previous.ub. to i32
  store i32 %conv3, i32* %.omp.lb, align 4, !tbaa !16
  store i32 %conv4, i32* %.omp.ub, align 4, !tbaa !16
  %2 = bitcast i32* %.omp.stride to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #8
  store i32 1, i32* %.omp.stride, align 4, !tbaa !16
  %3 = bitcast i32* %.omp.is_last to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #8
  store i32 0, i32* %.omp.is_last, align 4, !tbaa !16
  %4 = load i32, i32* %.global_tid., align 4, !tbaa !16
  call void @__kmpc_for_static_init_4(%struct.ident_t* nonnull @1, i32 %4, i32 34, i32* nonnull %.omp.is_last, i32* nonnull %.omp.lb, i32* nonnull %.omp.ub, i32* nonnull %.omp.stride, i32 1, i32 1)
  %5 = load i32, i32* %.omp.ub, align 4, !tbaa !16
  %cmp6 = icmp sgt i32 %5, %sub2
  %cond = select i1 %cmp6, i32 %sub2, i32 %5
  store i32 %cond, i32* %.omp.ub, align 4, !tbaa !16
  %6 = load i32, i32* %.omp.lb, align 4, !tbaa !16
  %cmp7.not14 = icmp slt i32 %cond, %6
  br i1 %cmp7.not14, label %omp.loop.exit, label %omp.inner.for.body.preheader

omp.inner.for.body.preheader:                     ; preds = %omp.precond.then
  %7 = sext i32 %6 to i64
  %8 = add nsw i32 %cond, 1
  %9 = sub i32 %cond, %6
  %10 = zext i32 %9 to i64
  %11 = add nuw nsw i64 %10, 1
  %min.iters.check = icmp ult i32 %9, 23
  br i1 %min.iters.check, label %omp.inner.for.body.preheader40, label %vector.ph

vector.ph:                                        ; preds = %omp.inner.for.body.preheader
  %n.mod.vf = urem i64 %11, 24
  %n.vec = sub nsw i64 %11, %n.mod.vf
  %ind.end = add nsw i64 %n.vec, %7
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %offset.idx = add i64 %index, %7
  %12 = getelementptr inbounds double, double* %xcoefs, i64 %offset.idx
  %13 = bitcast double* %12 to <2 x double>*
  %wide.load = load <2 x double>, <2 x double>* %13, align 8, !tbaa !84, !llvm.access.group !265
  %14 = getelementptr inbounds double, double* %12, i64 2
  %15 = bitcast double* %14 to <2 x double>*
  %wide.load17 = load <2 x double>, <2 x double>* %15, align 8, !tbaa !84, !llvm.access.group !265
  %16 = getelementptr inbounds double, double* %12, i64 4
  %17 = bitcast double* %16 to <2 x double>*
  %wide.load18 = load <2 x double>, <2 x double>* %17, align 8, !tbaa !84, !llvm.access.group !265
  %18 = getelementptr inbounds double, double* %12, i64 6
  %19 = bitcast double* %18 to <2 x double>*
  %wide.load19 = load <2 x double>, <2 x double>* %19, align 8, !tbaa !84, !llvm.access.group !265
  %20 = getelementptr inbounds double, double* %12, i64 8
  %21 = bitcast double* %20 to <2 x double>*
  %wide.load20 = load <2 x double>, <2 x double>* %21, align 8, !tbaa !84, !llvm.access.group !265
  %22 = getelementptr inbounds double, double* %12, i64 10
  %23 = bitcast double* %22 to <2 x double>*
  %wide.load21 = load <2 x double>, <2 x double>* %23, align 8, !tbaa !84, !llvm.access.group !265
  %24 = getelementptr inbounds double, double* %12, i64 12
  %25 = bitcast double* %24 to <2 x double>*
  %wide.load22 = load <2 x double>, <2 x double>* %25, align 8, !tbaa !84, !llvm.access.group !265
  %26 = getelementptr inbounds double, double* %12, i64 14
  %27 = bitcast double* %26 to <2 x double>*
  %wide.load23 = load <2 x double>, <2 x double>* %27, align 8, !tbaa !84, !llvm.access.group !265
  %28 = getelementptr inbounds double, double* %12, i64 16
  %29 = bitcast double* %28 to <2 x double>*
  %wide.load24 = load <2 x double>, <2 x double>* %29, align 8, !tbaa !84, !llvm.access.group !265
  %30 = getelementptr inbounds double, double* %12, i64 18
  %31 = bitcast double* %30 to <2 x double>*
  %wide.load25 = load <2 x double>, <2 x double>* %31, align 8, !tbaa !84, !llvm.access.group !265
  %32 = getelementptr inbounds double, double* %12, i64 20
  %33 = bitcast double* %32 to <2 x double>*
  %wide.load26 = load <2 x double>, <2 x double>* %33, align 8, !tbaa !84, !llvm.access.group !265
  %34 = getelementptr inbounds double, double* %12, i64 22
  %35 = bitcast double* %34 to <2 x double>*
  %wide.load27 = load <2 x double>, <2 x double>* %35, align 8, !tbaa !84, !llvm.access.group !265
  %36 = getelementptr inbounds double, double* %ycoefs, i64 %offset.idx
  %37 = bitcast double* %36 to <2 x double>*
  %wide.load28 = load <2 x double>, <2 x double>* %37, align 8, !tbaa !84, !llvm.access.group !265
  %38 = getelementptr inbounds double, double* %36, i64 2
  %39 = bitcast double* %38 to <2 x double>*
  %wide.load29 = load <2 x double>, <2 x double>* %39, align 8, !tbaa !84, !llvm.access.group !265
  %40 = getelementptr inbounds double, double* %36, i64 4
  %41 = bitcast double* %40 to <2 x double>*
  %wide.load30 = load <2 x double>, <2 x double>* %41, align 8, !tbaa !84, !llvm.access.group !265
  %42 = getelementptr inbounds double, double* %36, i64 6
  %43 = bitcast double* %42 to <2 x double>*
  %wide.load31 = load <2 x double>, <2 x double>* %43, align 8, !tbaa !84, !llvm.access.group !265
  %44 = getelementptr inbounds double, double* %36, i64 8
  %45 = bitcast double* %44 to <2 x double>*
  %wide.load32 = load <2 x double>, <2 x double>* %45, align 8, !tbaa !84, !llvm.access.group !265
  %46 = getelementptr inbounds double, double* %36, i64 10
  %47 = bitcast double* %46 to <2 x double>*
  %wide.load33 = load <2 x double>, <2 x double>* %47, align 8, !tbaa !84, !llvm.access.group !265
  %48 = getelementptr inbounds double, double* %36, i64 12
  %49 = bitcast double* %48 to <2 x double>*
  %wide.load34 = load <2 x double>, <2 x double>* %49, align 8, !tbaa !84, !llvm.access.group !265
  %50 = getelementptr inbounds double, double* %36, i64 14
  %51 = bitcast double* %50 to <2 x double>*
  %wide.load35 = load <2 x double>, <2 x double>* %51, align 8, !tbaa !84, !llvm.access.group !265
  %52 = getelementptr inbounds double, double* %36, i64 16
  %53 = bitcast double* %52 to <2 x double>*
  %wide.load36 = load <2 x double>, <2 x double>* %53, align 8, !tbaa !84, !llvm.access.group !265
  %54 = getelementptr inbounds double, double* %36, i64 18
  %55 = bitcast double* %54 to <2 x double>*
  %wide.load37 = load <2 x double>, <2 x double>* %55, align 8, !tbaa !84, !llvm.access.group !265
  %56 = getelementptr inbounds double, double* %36, i64 20
  %57 = bitcast double* %56 to <2 x double>*
  %wide.load38 = load <2 x double>, <2 x double>* %57, align 8, !tbaa !84, !llvm.access.group !265
  %58 = getelementptr inbounds double, double* %36, i64 22
  %59 = bitcast double* %58 to <2 x double>*
  %wide.load39 = load <2 x double>, <2 x double>* %59, align 8, !tbaa !84, !llvm.access.group !265
  %60 = fadd contract <2 x double> %wide.load, %wide.load28
  %61 = fadd contract <2 x double> %wide.load17, %wide.load29
  %62 = fadd contract <2 x double> %wide.load18, %wide.load30
  %63 = fadd contract <2 x double> %wide.load19, %wide.load31
  %64 = fadd contract <2 x double> %wide.load20, %wide.load32
  %65 = fadd contract <2 x double> %wide.load21, %wide.load33
  %66 = fadd contract <2 x double> %wide.load22, %wide.load34
  %67 = fadd contract <2 x double> %wide.load23, %wide.load35
  %68 = fadd contract <2 x double> %wide.load24, %wide.load36
  %69 = fadd contract <2 x double> %wide.load25, %wide.load37
  %70 = fadd contract <2 x double> %wide.load26, %wide.load38
  %71 = fadd contract <2 x double> %wide.load27, %wide.load39
  %72 = bitcast double* %36 to <2 x double>*
  store <2 x double> %60, <2 x double>* %72, align 8, !tbaa !84, !llvm.access.group !265
  %73 = bitcast double* %38 to <2 x double>*
  store <2 x double> %61, <2 x double>* %73, align 8, !tbaa !84, !llvm.access.group !265
  %74 = bitcast double* %40 to <2 x double>*
  store <2 x double> %62, <2 x double>* %74, align 8, !tbaa !84, !llvm.access.group !265
  %75 = bitcast double* %42 to <2 x double>*
  store <2 x double> %63, <2 x double>* %75, align 8, !tbaa !84, !llvm.access.group !265
  %76 = bitcast double* %44 to <2 x double>*
  store <2 x double> %64, <2 x double>* %76, align 8, !tbaa !84, !llvm.access.group !265
  %77 = bitcast double* %46 to <2 x double>*
  store <2 x double> %65, <2 x double>* %77, align 8, !tbaa !84, !llvm.access.group !265
  %78 = bitcast double* %48 to <2 x double>*
  store <2 x double> %66, <2 x double>* %78, align 8, !tbaa !84, !llvm.access.group !265
  %79 = bitcast double* %50 to <2 x double>*
  store <2 x double> %67, <2 x double>* %79, align 8, !tbaa !84, !llvm.access.group !265
  %80 = bitcast double* %52 to <2 x double>*
  store <2 x double> %68, <2 x double>* %80, align 8, !tbaa !84, !llvm.access.group !265
  %81 = bitcast double* %54 to <2 x double>*
  store <2 x double> %69, <2 x double>* %81, align 8, !tbaa !84, !llvm.access.group !265
  %82 = bitcast double* %56 to <2 x double>*
  store <2 x double> %70, <2 x double>* %82, align 8, !tbaa !84, !llvm.access.group !265
  %83 = bitcast double* %58 to <2 x double>*
  store <2 x double> %71, <2 x double>* %83, align 8, !tbaa !84, !llvm.access.group !265
  %index.next = add nuw i64 %index, 24
  %84 = icmp eq i64 %index.next, %n.vec
  br i1 %84, label %middle.block, label %vector.body, !llvm.loop !266

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.mod.vf, 0
  br i1 %cmp.n, label %omp.loop.exit, label %omp.inner.for.body.preheader40

omp.inner.for.body.preheader40:                   ; preds = %omp.inner.for.body.preheader, %middle.block
  %indvars.iv.ph = phi i64 [ %7, %omp.inner.for.body.preheader ], [ %ind.end, %middle.block ]
  br label %omp.inner.for.body

omp.inner.for.body:                               ; preds = %omp.inner.for.body.preheader40, %omp.inner.for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %omp.inner.for.body ], [ %indvars.iv.ph, %omp.inner.for.body.preheader40 ]
  %arrayidx = getelementptr inbounds double, double* %xcoefs, i64 %indvars.iv
  %85 = load double, double* %arrayidx, align 8, !tbaa !84, !llvm.access.group !265
  %arrayidx9 = getelementptr inbounds double, double* %ycoefs, i64 %indvars.iv
  %86 = load double, double* %arrayidx9, align 8, !tbaa !84, !llvm.access.group !265
  %add10 = fadd contract double %85, %86
  store double %add10, double* %arrayidx9, align 8, !tbaa !84, !llvm.access.group !265
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond.not = icmp eq i32 %8, %lftr.wideiv
  br i1 %exitcond.not, label %omp.loop.exit, label %omp.inner.for.body, !llvm.loop !268

omp.loop.exit:                                    ; preds = %omp.inner.for.body, %middle.block, %omp.precond.then
  call void @__kmpc_for_static_fini(%struct.ident_t* nonnull @4, i32 %4)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8
  br label %omp.precond.end

omp.precond.end:                                  ; preds = %omp.loop.exit, %entry
  ret void
}

; Function Attrs: alwaysinline norecurse nounwind uwtable
define internal void @.omp_outlined..122(i32* noalias nocapture noundef readonly %.global_tid., i32* noalias nocapture noundef readnone %.bound_tid., i64 noundef %n, double* noundef %ycoefs, i64 noundef %alpha, double* noundef %xcoefs) #7 {
entry:
  %.omp.comb.lb = alloca i32, align 4
  %.omp.comb.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %n.addr.sroa.0.0.extract.trunc = trunc i64 %n to i32
  %sub3 = add nsw i32 %n.addr.sroa.0.0.extract.trunc, -1
  %cmp = icmp sgt i32 %n.addr.sroa.0.0.extract.trunc, 0
  br i1 %cmp, label %omp.precond.then, label %omp.precond.end

omp.precond.then:                                 ; preds = %entry
  %0 = bitcast i32* %.omp.comb.lb to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8
  store i32 0, i32* %.omp.comb.lb, align 4, !tbaa !16
  %1 = bitcast i32* %.omp.comb.ub to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8
  store i32 %sub3, i32* %.omp.comb.ub, align 4, !tbaa !16
  %2 = bitcast i32* %.omp.stride to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #8
  store i32 1, i32* %.omp.stride, align 4, !tbaa !16
  %3 = bitcast i32* %.omp.is_last to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #8
  store i32 0, i32* %.omp.is_last, align 4, !tbaa !16
  %4 = load i32, i32* %.global_tid., align 4, !tbaa !16
  call void @__kmpc_for_static_init_4(%struct.ident_t* nonnull @4, i32 %4, i32 92, i32* nonnull %.omp.is_last, i32* nonnull %.omp.comb.lb, i32* nonnull %.omp.comb.ub, i32* nonnull %.omp.stride, i32 1, i32 1)
  %5 = load i32, i32* %.omp.comb.ub, align 4, !tbaa !16
  %cmp5 = icmp sgt i32 %5, %sub3
  %cond = select i1 %cmp5, i32 %sub3, i32 %5
  store i32 %cond, i32* %.omp.comb.ub, align 4, !tbaa !16
  %6 = load i32, i32* %.omp.comb.lb, align 4, !tbaa !16
  %n.casted.sroa.0.0.insert.ext = and i64 %n, 4294967295
  %cmp6.not13 = icmp sgt i32 %6, %cond
  br i1 %cmp6.not13, label %omp.loop.exit, label %omp.inner.for.body.preheader

omp.inner.for.body.preheader:                     ; preds = %omp.precond.then
  %7 = zext i32 %6 to i64
  %8 = zext i32 %cond to i64
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull @3, i32 6, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, i64, i64, double*, i64, double*)* @.omp_outlined..123 to void (i32*, i32*, ...)*), i64 %7, i64 %8, i64 %n.casted.sroa.0.0.insert.ext, double* %ycoefs, i64 %alpha, double* %xcoefs), !llvm.access.group !269
  %9 = load i32, i32* %.omp.stride, align 4, !tbaa !16, !llvm.access.group !269
  %add22 = add nsw i32 %9, %6
  %10 = load i32, i32* %.omp.comb.ub, align 4, !tbaa !16, !llvm.access.group !269
  %cmp6.not23 = icmp sgt i32 %add22, %10
  br i1 %cmp6.not23, label %omp.loop.exit, label %omp.inner.for.body.omp.inner.for.body_crit_edge, !llvm.loop !270

omp.inner.for.body.omp.inner.for.body_crit_edge:  ; preds = %omp.inner.for.body.preheader, %omp.inner.for.body.omp.inner.for.body_crit_edge
  %11 = phi i32 [ %15, %omp.inner.for.body.omp.inner.for.body_crit_edge ], [ %10, %omp.inner.for.body.preheader ]
  %add24 = phi i32 [ %add, %omp.inner.for.body.omp.inner.for.body_crit_edge ], [ %add22, %omp.inner.for.body.preheader ]
  %.pre = load i32, i32* %.omp.comb.lb, align 4, !llvm.access.group !269
  %12 = zext i32 %.pre to i64
  %13 = zext i32 %11 to i64
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull @3, i32 6, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, i64, i64, double*, i64, double*)* @.omp_outlined..123 to void (i32*, i32*, ...)*), i64 %12, i64 %13, i64 %n.casted.sroa.0.0.insert.ext, double* %ycoefs, i64 %alpha, double* %xcoefs), !llvm.access.group !269
  %14 = load i32, i32* %.omp.stride, align 4, !tbaa !16, !llvm.access.group !269
  %add = add nsw i32 %14, %add24
  %15 = load i32, i32* %.omp.comb.ub, align 4, !tbaa !16, !llvm.access.group !269
  %cmp6.not = icmp sgt i32 %add, %15
  br i1 %cmp6.not, label %omp.loop.exit, label %omp.inner.for.body.omp.inner.for.body_crit_edge, !llvm.loop !270

omp.loop.exit:                                    ; preds = %omp.inner.for.body.omp.inner.for.body_crit_edge, %omp.inner.for.body.preheader, %omp.precond.then
  call void @__kmpc_for_static_fini(%struct.ident_t* nonnull @4, i32 %4)
  br label %omp.precond.end

omp.precond.end:                                  ; preds = %entry, %omp.loop.exit
  %.pre-phi = bitcast i32* %.omp.is_last to i8*
  %.pre-phi17 = bitcast i32* %.omp.stride to i8*
  %.pre-phi19 = bitcast i32* %.omp.comb.ub to i8*
  %.pre-phi21 = bitcast i32* %.omp.comb.lb to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %.pre-phi) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %.pre-phi17) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %.pre-phi19) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %.pre-phi21) #8
  ret void
}

; Function Attrs: alwaysinline norecurse nounwind uwtable
define internal void @.omp_outlined..123(i32* noalias nocapture noundef readonly %.global_tid., i32* noalias nocapture noundef readnone %.bound_tid., i64 noundef %.previous.lb., i64 noundef %.previous.ub., i64 noundef %n, double* nocapture noundef %ycoefs, i64 noundef %alpha, double* nocapture noundef readonly %xcoefs) #7 {
entry:
  %.omp.lb = alloca i32, align 4
  %.omp.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %n.addr.sroa.0.0.extract.trunc = trunc i64 %n to i32
  %sub3 = add nsw i32 %n.addr.sroa.0.0.extract.trunc, -1
  %cmp = icmp sgt i32 %n.addr.sroa.0.0.extract.trunc, 0
  br i1 %cmp, label %omp.precond.then, label %omp.precond.end

omp.precond.then:                                 ; preds = %entry
  %0 = bitcast i32* %.omp.lb to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8
  %1 = bitcast i32* %.omp.ub to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8
  %conv4 = trunc i64 %.previous.lb. to i32
  %conv5 = trunc i64 %.previous.ub. to i32
  store i32 %conv4, i32* %.omp.lb, align 4, !tbaa !16
  store i32 %conv5, i32* %.omp.ub, align 4, !tbaa !16
  %2 = bitcast i32* %.omp.stride to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #8
  store i32 1, i32* %.omp.stride, align 4, !tbaa !16
  %3 = bitcast i32* %.omp.is_last to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #8
  store i32 0, i32* %.omp.is_last, align 4, !tbaa !16
  %4 = load i32, i32* %.global_tid., align 4, !tbaa !16
  call void @__kmpc_for_static_init_4(%struct.ident_t* nonnull @1, i32 %4, i32 34, i32* nonnull %.omp.is_last, i32* nonnull %.omp.lb, i32* nonnull %.omp.ub, i32* nonnull %.omp.stride, i32 1, i32 1)
  %5 = load i32, i32* %.omp.ub, align 4, !tbaa !16
  %cmp7 = icmp sgt i32 %5, %sub3
  %cond = select i1 %cmp7, i32 %sub3, i32 %5
  store i32 %cond, i32* %.omp.ub, align 4, !tbaa !16
  %6 = load i32, i32* %.omp.lb, align 4, !tbaa !16
  %7 = bitcast i64 %alpha to double
  %cmp8.not14 = icmp slt i32 %cond, %6
  br i1 %cmp8.not14, label %omp.loop.exit, label %omp.inner.for.body.preheader

omp.inner.for.body.preheader:                     ; preds = %omp.precond.then
  %8 = sext i32 %6 to i64
  %9 = add nsw i32 %cond, 1
  %10 = sub i32 %cond, %6
  %11 = zext i32 %10 to i64
  %12 = add nuw nsw i64 %11, 1
  %min.iters.check = icmp ult i32 %10, 23
  br i1 %min.iters.check, label %omp.inner.for.body.preheader62, label %vector.ph

vector.ph:                                        ; preds = %omp.inner.for.body.preheader
  %n.mod.vf = urem i64 %12, 24
  %n.vec = sub nsw i64 %12, %n.mod.vf
  %ind.end = add nsw i64 %n.vec, %8
  %broadcast.splatinsert = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat = shufflevector <2 x double> %broadcast.splatinsert, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert28 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat29 = shufflevector <2 x double> %broadcast.splatinsert28, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert30 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat31 = shufflevector <2 x double> %broadcast.splatinsert30, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert32 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat33 = shufflevector <2 x double> %broadcast.splatinsert32, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert34 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat35 = shufflevector <2 x double> %broadcast.splatinsert34, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert36 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat37 = shufflevector <2 x double> %broadcast.splatinsert36, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert38 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat39 = shufflevector <2 x double> %broadcast.splatinsert38, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert40 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat41 = shufflevector <2 x double> %broadcast.splatinsert40, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert42 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat43 = shufflevector <2 x double> %broadcast.splatinsert42, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert44 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat45 = shufflevector <2 x double> %broadcast.splatinsert44, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert46 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat47 = shufflevector <2 x double> %broadcast.splatinsert46, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert48 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat49 = shufflevector <2 x double> %broadcast.splatinsert48, <2 x double> poison, <2 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %offset.idx = add i64 %index, %8
  %13 = getelementptr inbounds double, double* %xcoefs, i64 %offset.idx
  %14 = bitcast double* %13 to <2 x double>*
  %wide.load = load <2 x double>, <2 x double>* %14, align 8, !tbaa !84, !llvm.access.group !272
  %15 = getelementptr inbounds double, double* %13, i64 2
  %16 = bitcast double* %15 to <2 x double>*
  %wide.load17 = load <2 x double>, <2 x double>* %16, align 8, !tbaa !84, !llvm.access.group !272
  %17 = getelementptr inbounds double, double* %13, i64 4
  %18 = bitcast double* %17 to <2 x double>*
  %wide.load18 = load <2 x double>, <2 x double>* %18, align 8, !tbaa !84, !llvm.access.group !272
  %19 = getelementptr inbounds double, double* %13, i64 6
  %20 = bitcast double* %19 to <2 x double>*
  %wide.load19 = load <2 x double>, <2 x double>* %20, align 8, !tbaa !84, !llvm.access.group !272
  %21 = getelementptr inbounds double, double* %13, i64 8
  %22 = bitcast double* %21 to <2 x double>*
  %wide.load20 = load <2 x double>, <2 x double>* %22, align 8, !tbaa !84, !llvm.access.group !272
  %23 = getelementptr inbounds double, double* %13, i64 10
  %24 = bitcast double* %23 to <2 x double>*
  %wide.load21 = load <2 x double>, <2 x double>* %24, align 8, !tbaa !84, !llvm.access.group !272
  %25 = getelementptr inbounds double, double* %13, i64 12
  %26 = bitcast double* %25 to <2 x double>*
  %wide.load22 = load <2 x double>, <2 x double>* %26, align 8, !tbaa !84, !llvm.access.group !272
  %27 = getelementptr inbounds double, double* %13, i64 14
  %28 = bitcast double* %27 to <2 x double>*
  %wide.load23 = load <2 x double>, <2 x double>* %28, align 8, !tbaa !84, !llvm.access.group !272
  %29 = getelementptr inbounds double, double* %13, i64 16
  %30 = bitcast double* %29 to <2 x double>*
  %wide.load24 = load <2 x double>, <2 x double>* %30, align 8, !tbaa !84, !llvm.access.group !272
  %31 = getelementptr inbounds double, double* %13, i64 18
  %32 = bitcast double* %31 to <2 x double>*
  %wide.load25 = load <2 x double>, <2 x double>* %32, align 8, !tbaa !84, !llvm.access.group !272
  %33 = getelementptr inbounds double, double* %13, i64 20
  %34 = bitcast double* %33 to <2 x double>*
  %wide.load26 = load <2 x double>, <2 x double>* %34, align 8, !tbaa !84, !llvm.access.group !272
  %35 = getelementptr inbounds double, double* %13, i64 22
  %36 = bitcast double* %35 to <2 x double>*
  %wide.load27 = load <2 x double>, <2 x double>* %36, align 8, !tbaa !84, !llvm.access.group !272
  %37 = fmul contract <2 x double> %wide.load, %broadcast.splat
  %38 = fmul contract <2 x double> %wide.load17, %broadcast.splat29
  %39 = fmul contract <2 x double> %wide.load18, %broadcast.splat31
  %40 = fmul contract <2 x double> %wide.load19, %broadcast.splat33
  %41 = fmul contract <2 x double> %wide.load20, %broadcast.splat35
  %42 = fmul contract <2 x double> %wide.load21, %broadcast.splat37
  %43 = fmul contract <2 x double> %wide.load22, %broadcast.splat39
  %44 = fmul contract <2 x double> %wide.load23, %broadcast.splat41
  %45 = fmul contract <2 x double> %wide.load24, %broadcast.splat43
  %46 = fmul contract <2 x double> %wide.load25, %broadcast.splat45
  %47 = fmul contract <2 x double> %wide.load26, %broadcast.splat47
  %48 = fmul contract <2 x double> %wide.load27, %broadcast.splat49
  %49 = getelementptr inbounds double, double* %ycoefs, i64 %offset.idx
  %50 = bitcast double* %49 to <2 x double>*
  %wide.load50 = load <2 x double>, <2 x double>* %50, align 8, !tbaa !84, !llvm.access.group !272
  %51 = getelementptr inbounds double, double* %49, i64 2
  %52 = bitcast double* %51 to <2 x double>*
  %wide.load51 = load <2 x double>, <2 x double>* %52, align 8, !tbaa !84, !llvm.access.group !272
  %53 = getelementptr inbounds double, double* %49, i64 4
  %54 = bitcast double* %53 to <2 x double>*
  %wide.load52 = load <2 x double>, <2 x double>* %54, align 8, !tbaa !84, !llvm.access.group !272
  %55 = getelementptr inbounds double, double* %49, i64 6
  %56 = bitcast double* %55 to <2 x double>*
  %wide.load53 = load <2 x double>, <2 x double>* %56, align 8, !tbaa !84, !llvm.access.group !272
  %57 = getelementptr inbounds double, double* %49, i64 8
  %58 = bitcast double* %57 to <2 x double>*
  %wide.load54 = load <2 x double>, <2 x double>* %58, align 8, !tbaa !84, !llvm.access.group !272
  %59 = getelementptr inbounds double, double* %49, i64 10
  %60 = bitcast double* %59 to <2 x double>*
  %wide.load55 = load <2 x double>, <2 x double>* %60, align 8, !tbaa !84, !llvm.access.group !272
  %61 = getelementptr inbounds double, double* %49, i64 12
  %62 = bitcast double* %61 to <2 x double>*
  %wide.load56 = load <2 x double>, <2 x double>* %62, align 8, !tbaa !84, !llvm.access.group !272
  %63 = getelementptr inbounds double, double* %49, i64 14
  %64 = bitcast double* %63 to <2 x double>*
  %wide.load57 = load <2 x double>, <2 x double>* %64, align 8, !tbaa !84, !llvm.access.group !272
  %65 = getelementptr inbounds double, double* %49, i64 16
  %66 = bitcast double* %65 to <2 x double>*
  %wide.load58 = load <2 x double>, <2 x double>* %66, align 8, !tbaa !84, !llvm.access.group !272
  %67 = getelementptr inbounds double, double* %49, i64 18
  %68 = bitcast double* %67 to <2 x double>*
  %wide.load59 = load <2 x double>, <2 x double>* %68, align 8, !tbaa !84, !llvm.access.group !272
  %69 = getelementptr inbounds double, double* %49, i64 20
  %70 = bitcast double* %69 to <2 x double>*
  %wide.load60 = load <2 x double>, <2 x double>* %70, align 8, !tbaa !84, !llvm.access.group !272
  %71 = getelementptr inbounds double, double* %49, i64 22
  %72 = bitcast double* %71 to <2 x double>*
  %wide.load61 = load <2 x double>, <2 x double>* %72, align 8, !tbaa !84, !llvm.access.group !272
  %73 = fadd contract <2 x double> %wide.load50, %37
  %74 = fadd contract <2 x double> %wide.load51, %38
  %75 = fadd contract <2 x double> %wide.load52, %39
  %76 = fadd contract <2 x double> %wide.load53, %40
  %77 = fadd contract <2 x double> %wide.load54, %41
  %78 = fadd contract <2 x double> %wide.load55, %42
  %79 = fadd contract <2 x double> %wide.load56, %43
  %80 = fadd contract <2 x double> %wide.load57, %44
  %81 = fadd contract <2 x double> %wide.load58, %45
  %82 = fadd contract <2 x double> %wide.load59, %46
  %83 = fadd contract <2 x double> %wide.load60, %47
  %84 = fadd contract <2 x double> %wide.load61, %48
  %85 = bitcast double* %49 to <2 x double>*
  store <2 x double> %73, <2 x double>* %85, align 8, !tbaa !84, !llvm.access.group !272
  %86 = bitcast double* %51 to <2 x double>*
  store <2 x double> %74, <2 x double>* %86, align 8, !tbaa !84, !llvm.access.group !272
  %87 = bitcast double* %53 to <2 x double>*
  store <2 x double> %75, <2 x double>* %87, align 8, !tbaa !84, !llvm.access.group !272
  %88 = bitcast double* %55 to <2 x double>*
  store <2 x double> %76, <2 x double>* %88, align 8, !tbaa !84, !llvm.access.group !272
  %89 = bitcast double* %57 to <2 x double>*
  store <2 x double> %77, <2 x double>* %89, align 8, !tbaa !84, !llvm.access.group !272
  %90 = bitcast double* %59 to <2 x double>*
  store <2 x double> %78, <2 x double>* %90, align 8, !tbaa !84, !llvm.access.group !272
  %91 = bitcast double* %61 to <2 x double>*
  store <2 x double> %79, <2 x double>* %91, align 8, !tbaa !84, !llvm.access.group !272
  %92 = bitcast double* %63 to <2 x double>*
  store <2 x double> %80, <2 x double>* %92, align 8, !tbaa !84, !llvm.access.group !272
  %93 = bitcast double* %65 to <2 x double>*
  store <2 x double> %81, <2 x double>* %93, align 8, !tbaa !84, !llvm.access.group !272
  %94 = bitcast double* %67 to <2 x double>*
  store <2 x double> %82, <2 x double>* %94, align 8, !tbaa !84, !llvm.access.group !272
  %95 = bitcast double* %69 to <2 x double>*
  store <2 x double> %83, <2 x double>* %95, align 8, !tbaa !84, !llvm.access.group !272
  %96 = bitcast double* %71 to <2 x double>*
  store <2 x double> %84, <2 x double>* %96, align 8, !tbaa !84, !llvm.access.group !272
  %index.next = add nuw i64 %index, 24
  %97 = icmp eq i64 %index.next, %n.vec
  br i1 %97, label %middle.block, label %vector.body, !llvm.loop !273

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.mod.vf, 0
  br i1 %cmp.n, label %omp.loop.exit, label %omp.inner.for.body.preheader62

omp.inner.for.body.preheader62:                   ; preds = %omp.inner.for.body.preheader, %middle.block
  %indvars.iv.ph = phi i64 [ %8, %omp.inner.for.body.preheader ], [ %ind.end, %middle.block ]
  br label %omp.inner.for.body

omp.inner.for.body:                               ; preds = %omp.inner.for.body.preheader62, %omp.inner.for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %omp.inner.for.body ], [ %indvars.iv.ph, %omp.inner.for.body.preheader62 ]
  %arrayidx = getelementptr inbounds double, double* %xcoefs, i64 %indvars.iv
  %98 = load double, double* %arrayidx, align 8, !tbaa !84, !llvm.access.group !272
  %mul9 = fmul contract double %98, %7
  %arrayidx11 = getelementptr inbounds double, double* %ycoefs, i64 %indvars.iv
  %99 = load double, double* %arrayidx11, align 8, !tbaa !84, !llvm.access.group !272
  %add12 = fadd contract double %99, %mul9
  store double %add12, double* %arrayidx11, align 8, !tbaa !84, !llvm.access.group !272
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond.not = icmp eq i32 %9, %lftr.wideiv
  br i1 %exitcond.not, label %omp.loop.exit, label %omp.inner.for.body, !llvm.loop !275

omp.loop.exit:                                    ; preds = %omp.inner.for.body, %middle.block, %omp.precond.then
  call void @__kmpc_for_static_fini(%struct.ident_t* nonnull @4, i32 %4)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8
  br label %omp.precond.end

omp.precond.end:                                  ; preds = %omp.loop.exit, %entry
  ret void
}

; Function Attrs: alwaysinline norecurse nounwind uwtable
define internal void @.omp_outlined..126(i32* noalias nocapture noundef readonly %.global_tid., i32* noalias nocapture noundef readnone %.bound_tid., i64 noundef %n, double* noundef %ycoefs, double* noundef %xcoefs, i64 noundef %beta) #7 {
entry:
  %.omp.comb.lb = alloca i32, align 4
  %.omp.comb.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %n.addr.sroa.0.0.extract.trunc = trunc i64 %n to i32
  %sub3 = add nsw i32 %n.addr.sroa.0.0.extract.trunc, -1
  %cmp = icmp sgt i32 %n.addr.sroa.0.0.extract.trunc, 0
  br i1 %cmp, label %omp.precond.then, label %omp.precond.end

omp.precond.then:                                 ; preds = %entry
  %0 = bitcast i32* %.omp.comb.lb to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8
  store i32 0, i32* %.omp.comb.lb, align 4, !tbaa !16
  %1 = bitcast i32* %.omp.comb.ub to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8
  store i32 %sub3, i32* %.omp.comb.ub, align 4, !tbaa !16
  %2 = bitcast i32* %.omp.stride to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #8
  store i32 1, i32* %.omp.stride, align 4, !tbaa !16
  %3 = bitcast i32* %.omp.is_last to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #8
  store i32 0, i32* %.omp.is_last, align 4, !tbaa !16
  %4 = load i32, i32* %.global_tid., align 4, !tbaa !16
  call void @__kmpc_for_static_init_4(%struct.ident_t* nonnull @4, i32 %4, i32 92, i32* nonnull %.omp.is_last, i32* nonnull %.omp.comb.lb, i32* nonnull %.omp.comb.ub, i32* nonnull %.omp.stride, i32 1, i32 1)
  %5 = load i32, i32* %.omp.comb.ub, align 4, !tbaa !16
  %cmp5 = icmp sgt i32 %5, %sub3
  %cond = select i1 %cmp5, i32 %sub3, i32 %5
  store i32 %cond, i32* %.omp.comb.ub, align 4, !tbaa !16
  %6 = load i32, i32* %.omp.comb.lb, align 4, !tbaa !16
  %n.casted.sroa.0.0.insert.ext = and i64 %n, 4294967295
  %cmp6.not13 = icmp sgt i32 %6, %cond
  br i1 %cmp6.not13, label %omp.loop.exit, label %omp.inner.for.body.preheader

omp.inner.for.body.preheader:                     ; preds = %omp.precond.then
  %7 = zext i32 %6 to i64
  %8 = zext i32 %cond to i64
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull @3, i32 6, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, i64, i64, double*, double*, i64)* @.omp_outlined..127 to void (i32*, i32*, ...)*), i64 %7, i64 %8, i64 %n.casted.sroa.0.0.insert.ext, double* %ycoefs, double* %xcoefs, i64 %beta), !llvm.access.group !276
  %9 = load i32, i32* %.omp.stride, align 4, !tbaa !16, !llvm.access.group !276
  %add22 = add nsw i32 %9, %6
  %10 = load i32, i32* %.omp.comb.ub, align 4, !tbaa !16, !llvm.access.group !276
  %cmp6.not23 = icmp sgt i32 %add22, %10
  br i1 %cmp6.not23, label %omp.loop.exit, label %omp.inner.for.body.omp.inner.for.body_crit_edge, !llvm.loop !277

omp.inner.for.body.omp.inner.for.body_crit_edge:  ; preds = %omp.inner.for.body.preheader, %omp.inner.for.body.omp.inner.for.body_crit_edge
  %11 = phi i32 [ %15, %omp.inner.for.body.omp.inner.for.body_crit_edge ], [ %10, %omp.inner.for.body.preheader ]
  %add24 = phi i32 [ %add, %omp.inner.for.body.omp.inner.for.body_crit_edge ], [ %add22, %omp.inner.for.body.preheader ]
  %.pre = load i32, i32* %.omp.comb.lb, align 4, !llvm.access.group !276
  %12 = zext i32 %.pre to i64
  %13 = zext i32 %11 to i64
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull @3, i32 6, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, i64, i64, double*, double*, i64)* @.omp_outlined..127 to void (i32*, i32*, ...)*), i64 %12, i64 %13, i64 %n.casted.sroa.0.0.insert.ext, double* %ycoefs, double* %xcoefs, i64 %beta), !llvm.access.group !276
  %14 = load i32, i32* %.omp.stride, align 4, !tbaa !16, !llvm.access.group !276
  %add = add nsw i32 %14, %add24
  %15 = load i32, i32* %.omp.comb.ub, align 4, !tbaa !16, !llvm.access.group !276
  %cmp6.not = icmp sgt i32 %add, %15
  br i1 %cmp6.not, label %omp.loop.exit, label %omp.inner.for.body.omp.inner.for.body_crit_edge, !llvm.loop !277

omp.loop.exit:                                    ; preds = %omp.inner.for.body.omp.inner.for.body_crit_edge, %omp.inner.for.body.preheader, %omp.precond.then
  call void @__kmpc_for_static_fini(%struct.ident_t* nonnull @4, i32 %4)
  br label %omp.precond.end

omp.precond.end:                                  ; preds = %entry, %omp.loop.exit
  %.pre-phi = bitcast i32* %.omp.is_last to i8*
  %.pre-phi17 = bitcast i32* %.omp.stride to i8*
  %.pre-phi19 = bitcast i32* %.omp.comb.ub to i8*
  %.pre-phi21 = bitcast i32* %.omp.comb.lb to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %.pre-phi) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %.pre-phi17) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %.pre-phi19) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %.pre-phi21) #8
  ret void
}

; Function Attrs: alwaysinline norecurse nounwind uwtable
define internal void @.omp_outlined..127(i32* noalias nocapture noundef readonly %.global_tid., i32* noalias nocapture noundef readnone %.bound_tid., i64 noundef %.previous.lb., i64 noundef %.previous.ub., i64 noundef %n, double* nocapture noundef %ycoefs, double* nocapture noundef readonly %xcoefs, i64 noundef %beta) #7 {
entry:
  %.omp.lb = alloca i32, align 4
  %.omp.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %n.addr.sroa.0.0.extract.trunc = trunc i64 %n to i32
  %sub3 = add nsw i32 %n.addr.sroa.0.0.extract.trunc, -1
  %cmp = icmp sgt i32 %n.addr.sroa.0.0.extract.trunc, 0
  br i1 %cmp, label %omp.precond.then, label %omp.precond.end

omp.precond.then:                                 ; preds = %entry
  %0 = bitcast i32* %.omp.lb to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8
  %1 = bitcast i32* %.omp.ub to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8
  %conv4 = trunc i64 %.previous.lb. to i32
  %conv5 = trunc i64 %.previous.ub. to i32
  store i32 %conv4, i32* %.omp.lb, align 4, !tbaa !16
  store i32 %conv5, i32* %.omp.ub, align 4, !tbaa !16
  %2 = bitcast i32* %.omp.stride to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #8
  store i32 1, i32* %.omp.stride, align 4, !tbaa !16
  %3 = bitcast i32* %.omp.is_last to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #8
  store i32 0, i32* %.omp.is_last, align 4, !tbaa !16
  %4 = load i32, i32* %.global_tid., align 4, !tbaa !16
  call void @__kmpc_for_static_init_4(%struct.ident_t* nonnull @1, i32 %4, i32 34, i32* nonnull %.omp.is_last, i32* nonnull %.omp.lb, i32* nonnull %.omp.ub, i32* nonnull %.omp.stride, i32 1, i32 1)
  %5 = load i32, i32* %.omp.ub, align 4, !tbaa !16
  %cmp7 = icmp sgt i32 %5, %sub3
  %cond = select i1 %cmp7, i32 %sub3, i32 %5
  store i32 %cond, i32* %.omp.ub, align 4, !tbaa !16
  %6 = load i32, i32* %.omp.lb, align 4, !tbaa !16
  %7 = bitcast i64 %beta to double
  %cmp8.not16 = icmp slt i32 %cond, %6
  br i1 %cmp8.not16, label %omp.loop.exit, label %omp.inner.for.body.preheader

omp.inner.for.body.preheader:                     ; preds = %omp.precond.then
  %8 = sext i32 %6 to i64
  %9 = add nsw i32 %cond, 1
  %10 = sub i32 %cond, %6
  %11 = zext i32 %10 to i64
  %12 = add nuw nsw i64 %11, 1
  %min.iters.check = icmp ult i32 %10, 23
  br i1 %min.iters.check, label %omp.inner.for.body.preheader64, label %vector.ph

vector.ph:                                        ; preds = %omp.inner.for.body.preheader
  %n.mod.vf = urem i64 %12, 24
  %n.vec = sub nsw i64 %12, %n.mod.vf
  %ind.end = add nsw i64 %n.vec, %8
  %broadcast.splatinsert = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat = shufflevector <2 x double> %broadcast.splatinsert, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert42 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat43 = shufflevector <2 x double> %broadcast.splatinsert42, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert44 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat45 = shufflevector <2 x double> %broadcast.splatinsert44, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert46 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat47 = shufflevector <2 x double> %broadcast.splatinsert46, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert48 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat49 = shufflevector <2 x double> %broadcast.splatinsert48, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert50 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat51 = shufflevector <2 x double> %broadcast.splatinsert50, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert52 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat53 = shufflevector <2 x double> %broadcast.splatinsert52, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert54 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat55 = shufflevector <2 x double> %broadcast.splatinsert54, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert56 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat57 = shufflevector <2 x double> %broadcast.splatinsert56, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert58 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat59 = shufflevector <2 x double> %broadcast.splatinsert58, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert60 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat61 = shufflevector <2 x double> %broadcast.splatinsert60, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert62 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat63 = shufflevector <2 x double> %broadcast.splatinsert62, <2 x double> poison, <2 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %offset.idx = add i64 %index, %8
  %13 = getelementptr inbounds double, double* %xcoefs, i64 %offset.idx
  %14 = bitcast double* %13 to <2 x double>*
  %wide.load = load <2 x double>, <2 x double>* %14, align 8, !tbaa !84, !llvm.access.group !279
  %15 = getelementptr inbounds double, double* %13, i64 2
  %16 = bitcast double* %15 to <2 x double>*
  %wide.load19 = load <2 x double>, <2 x double>* %16, align 8, !tbaa !84, !llvm.access.group !279
  %17 = getelementptr inbounds double, double* %13, i64 4
  %18 = bitcast double* %17 to <2 x double>*
  %wide.load20 = load <2 x double>, <2 x double>* %18, align 8, !tbaa !84, !llvm.access.group !279
  %19 = getelementptr inbounds double, double* %13, i64 6
  %20 = bitcast double* %19 to <2 x double>*
  %wide.load21 = load <2 x double>, <2 x double>* %20, align 8, !tbaa !84, !llvm.access.group !279
  %21 = getelementptr inbounds double, double* %13, i64 8
  %22 = bitcast double* %21 to <2 x double>*
  %wide.load22 = load <2 x double>, <2 x double>* %22, align 8, !tbaa !84, !llvm.access.group !279
  %23 = getelementptr inbounds double, double* %13, i64 10
  %24 = bitcast double* %23 to <2 x double>*
  %wide.load23 = load <2 x double>, <2 x double>* %24, align 8, !tbaa !84, !llvm.access.group !279
  %25 = getelementptr inbounds double, double* %13, i64 12
  %26 = bitcast double* %25 to <2 x double>*
  %wide.load24 = load <2 x double>, <2 x double>* %26, align 8, !tbaa !84, !llvm.access.group !279
  %27 = getelementptr inbounds double, double* %13, i64 14
  %28 = bitcast double* %27 to <2 x double>*
  %wide.load25 = load <2 x double>, <2 x double>* %28, align 8, !tbaa !84, !llvm.access.group !279
  %29 = getelementptr inbounds double, double* %13, i64 16
  %30 = bitcast double* %29 to <2 x double>*
  %wide.load26 = load <2 x double>, <2 x double>* %30, align 8, !tbaa !84, !llvm.access.group !279
  %31 = getelementptr inbounds double, double* %13, i64 18
  %32 = bitcast double* %31 to <2 x double>*
  %wide.load27 = load <2 x double>, <2 x double>* %32, align 8, !tbaa !84, !llvm.access.group !279
  %33 = getelementptr inbounds double, double* %13, i64 20
  %34 = bitcast double* %33 to <2 x double>*
  %wide.load28 = load <2 x double>, <2 x double>* %34, align 8, !tbaa !84, !llvm.access.group !279
  %35 = getelementptr inbounds double, double* %13, i64 22
  %36 = bitcast double* %35 to <2 x double>*
  %wide.load29 = load <2 x double>, <2 x double>* %36, align 8, !tbaa !84, !llvm.access.group !279
  %37 = getelementptr inbounds double, double* %ycoefs, i64 %offset.idx
  %38 = bitcast double* %37 to <2 x double>*
  %wide.load30 = load <2 x double>, <2 x double>* %38, align 8, !tbaa !84, !llvm.access.group !279
  %39 = getelementptr inbounds double, double* %37, i64 2
  %40 = bitcast double* %39 to <2 x double>*
  %wide.load31 = load <2 x double>, <2 x double>* %40, align 8, !tbaa !84, !llvm.access.group !279
  %41 = getelementptr inbounds double, double* %37, i64 4
  %42 = bitcast double* %41 to <2 x double>*
  %wide.load32 = load <2 x double>, <2 x double>* %42, align 8, !tbaa !84, !llvm.access.group !279
  %43 = getelementptr inbounds double, double* %37, i64 6
  %44 = bitcast double* %43 to <2 x double>*
  %wide.load33 = load <2 x double>, <2 x double>* %44, align 8, !tbaa !84, !llvm.access.group !279
  %45 = getelementptr inbounds double, double* %37, i64 8
  %46 = bitcast double* %45 to <2 x double>*
  %wide.load34 = load <2 x double>, <2 x double>* %46, align 8, !tbaa !84, !llvm.access.group !279
  %47 = getelementptr inbounds double, double* %37, i64 10
  %48 = bitcast double* %47 to <2 x double>*
  %wide.load35 = load <2 x double>, <2 x double>* %48, align 8, !tbaa !84, !llvm.access.group !279
  %49 = getelementptr inbounds double, double* %37, i64 12
  %50 = bitcast double* %49 to <2 x double>*
  %wide.load36 = load <2 x double>, <2 x double>* %50, align 8, !tbaa !84, !llvm.access.group !279
  %51 = getelementptr inbounds double, double* %37, i64 14
  %52 = bitcast double* %51 to <2 x double>*
  %wide.load37 = load <2 x double>, <2 x double>* %52, align 8, !tbaa !84, !llvm.access.group !279
  %53 = getelementptr inbounds double, double* %37, i64 16
  %54 = bitcast double* %53 to <2 x double>*
  %wide.load38 = load <2 x double>, <2 x double>* %54, align 8, !tbaa !84, !llvm.access.group !279
  %55 = getelementptr inbounds double, double* %37, i64 18
  %56 = bitcast double* %55 to <2 x double>*
  %wide.load39 = load <2 x double>, <2 x double>* %56, align 8, !tbaa !84, !llvm.access.group !279
  %57 = getelementptr inbounds double, double* %37, i64 20
  %58 = bitcast double* %57 to <2 x double>*
  %wide.load40 = load <2 x double>, <2 x double>* %58, align 8, !tbaa !84, !llvm.access.group !279
  %59 = getelementptr inbounds double, double* %37, i64 22
  %60 = bitcast double* %59 to <2 x double>*
  %wide.load41 = load <2 x double>, <2 x double>* %60, align 8, !tbaa !84, !llvm.access.group !279
  %61 = fmul contract <2 x double> %wide.load30, %broadcast.splat
  %62 = fmul contract <2 x double> %wide.load31, %broadcast.splat43
  %63 = fmul contract <2 x double> %wide.load32, %broadcast.splat45
  %64 = fmul contract <2 x double> %wide.load33, %broadcast.splat47
  %65 = fmul contract <2 x double> %wide.load34, %broadcast.splat49
  %66 = fmul contract <2 x double> %wide.load35, %broadcast.splat51
  %67 = fmul contract <2 x double> %wide.load36, %broadcast.splat53
  %68 = fmul contract <2 x double> %wide.load37, %broadcast.splat55
  %69 = fmul contract <2 x double> %wide.load38, %broadcast.splat57
  %70 = fmul contract <2 x double> %wide.load39, %broadcast.splat59
  %71 = fmul contract <2 x double> %wide.load40, %broadcast.splat61
  %72 = fmul contract <2 x double> %wide.load41, %broadcast.splat63
  %73 = fadd contract <2 x double> %wide.load, %61
  %74 = fadd contract <2 x double> %wide.load19, %62
  %75 = fadd contract <2 x double> %wide.load20, %63
  %76 = fadd contract <2 x double> %wide.load21, %64
  %77 = fadd contract <2 x double> %wide.load22, %65
  %78 = fadd contract <2 x double> %wide.load23, %66
  %79 = fadd contract <2 x double> %wide.load24, %67
  %80 = fadd contract <2 x double> %wide.load25, %68
  %81 = fadd contract <2 x double> %wide.load26, %69
  %82 = fadd contract <2 x double> %wide.load27, %70
  %83 = fadd contract <2 x double> %wide.load28, %71
  %84 = fadd contract <2 x double> %wide.load29, %72
  %85 = bitcast double* %37 to <2 x double>*
  store <2 x double> %73, <2 x double>* %85, align 8, !tbaa !84, !llvm.access.group !279
  %86 = bitcast double* %39 to <2 x double>*
  store <2 x double> %74, <2 x double>* %86, align 8, !tbaa !84, !llvm.access.group !279
  %87 = bitcast double* %41 to <2 x double>*
  store <2 x double> %75, <2 x double>* %87, align 8, !tbaa !84, !llvm.access.group !279
  %88 = bitcast double* %43 to <2 x double>*
  store <2 x double> %76, <2 x double>* %88, align 8, !tbaa !84, !llvm.access.group !279
  %89 = bitcast double* %45 to <2 x double>*
  store <2 x double> %77, <2 x double>* %89, align 8, !tbaa !84, !llvm.access.group !279
  %90 = bitcast double* %47 to <2 x double>*
  store <2 x double> %78, <2 x double>* %90, align 8, !tbaa !84, !llvm.access.group !279
  %91 = bitcast double* %49 to <2 x double>*
  store <2 x double> %79, <2 x double>* %91, align 8, !tbaa !84, !llvm.access.group !279
  %92 = bitcast double* %51 to <2 x double>*
  store <2 x double> %80, <2 x double>* %92, align 8, !tbaa !84, !llvm.access.group !279
  %93 = bitcast double* %53 to <2 x double>*
  store <2 x double> %81, <2 x double>* %93, align 8, !tbaa !84, !llvm.access.group !279
  %94 = bitcast double* %55 to <2 x double>*
  store <2 x double> %82, <2 x double>* %94, align 8, !tbaa !84, !llvm.access.group !279
  %95 = bitcast double* %57 to <2 x double>*
  store <2 x double> %83, <2 x double>* %95, align 8, !tbaa !84, !llvm.access.group !279
  %96 = bitcast double* %59 to <2 x double>*
  store <2 x double> %84, <2 x double>* %96, align 8, !tbaa !84, !llvm.access.group !279
  %index.next = add nuw i64 %index, 24
  %97 = icmp eq i64 %index.next, %n.vec
  br i1 %97, label %middle.block, label %vector.body, !llvm.loop !280

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.mod.vf, 0
  br i1 %cmp.n, label %omp.loop.exit, label %omp.inner.for.body.preheader64

omp.inner.for.body.preheader64:                   ; preds = %omp.inner.for.body.preheader, %middle.block
  %indvars.iv.ph = phi i64 [ %8, %omp.inner.for.body.preheader ], [ %ind.end, %middle.block ]
  br label %omp.inner.for.body

omp.inner.for.body:                               ; preds = %omp.inner.for.body.preheader64, %omp.inner.for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %omp.inner.for.body ], [ %indvars.iv.ph, %omp.inner.for.body.preheader64 ]
  %arrayidx = getelementptr inbounds double, double* %xcoefs, i64 %indvars.iv
  %98 = load double, double* %arrayidx, align 8, !tbaa !84, !llvm.access.group !279
  %arrayidx10 = getelementptr inbounds double, double* %ycoefs, i64 %indvars.iv
  %99 = load double, double* %arrayidx10, align 8, !tbaa !84, !llvm.access.group !279
  %mul11 = fmul contract double %99, %7
  %add12 = fadd contract double %98, %mul11
  store double %add12, double* %arrayidx10, align 8, !tbaa !84, !llvm.access.group !279
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond.not = icmp eq i32 %9, %lftr.wideiv
  br i1 %exitcond.not, label %omp.loop.exit, label %omp.inner.for.body, !llvm.loop !282

omp.loop.exit:                                    ; preds = %omp.inner.for.body, %middle.block, %omp.precond.then
  call void @__kmpc_for_static_fini(%struct.ident_t* nonnull @4, i32 %4)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8
  br label %omp.precond.end

omp.precond.end:                                  ; preds = %omp.loop.exit, %entry
  ret void
}

; Function Attrs: alwaysinline norecurse nounwind uwtable
define internal void @.omp_outlined..130(i32* noalias nocapture noundef readonly %.global_tid., i32* noalias nocapture noundef readnone %.bound_tid., i64 noundef %n, double* noundef %ycoefs, i64 noundef %alpha, double* noundef %xcoefs) #7 {
entry:
  %.omp.comb.lb = alloca i32, align 4
  %.omp.comb.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %n.addr.sroa.0.0.extract.trunc = trunc i64 %n to i32
  %sub3 = add nsw i32 %n.addr.sroa.0.0.extract.trunc, -1
  %cmp = icmp sgt i32 %n.addr.sroa.0.0.extract.trunc, 0
  br i1 %cmp, label %omp.precond.then, label %omp.precond.end

omp.precond.then:                                 ; preds = %entry
  %0 = bitcast i32* %.omp.comb.lb to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8
  store i32 0, i32* %.omp.comb.lb, align 4, !tbaa !16
  %1 = bitcast i32* %.omp.comb.ub to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8
  store i32 %sub3, i32* %.omp.comb.ub, align 4, !tbaa !16
  %2 = bitcast i32* %.omp.stride to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #8
  store i32 1, i32* %.omp.stride, align 4, !tbaa !16
  %3 = bitcast i32* %.omp.is_last to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #8
  store i32 0, i32* %.omp.is_last, align 4, !tbaa !16
  %4 = load i32, i32* %.global_tid., align 4, !tbaa !16
  call void @__kmpc_for_static_init_4(%struct.ident_t* nonnull @4, i32 %4, i32 92, i32* nonnull %.omp.is_last, i32* nonnull %.omp.comb.lb, i32* nonnull %.omp.comb.ub, i32* nonnull %.omp.stride, i32 1, i32 1)
  %5 = load i32, i32* %.omp.comb.ub, align 4, !tbaa !16
  %cmp5 = icmp sgt i32 %5, %sub3
  %cond = select i1 %cmp5, i32 %sub3, i32 %5
  store i32 %cond, i32* %.omp.comb.ub, align 4, !tbaa !16
  %6 = load i32, i32* %.omp.comb.lb, align 4, !tbaa !16
  %n.casted.sroa.0.0.insert.ext = and i64 %n, 4294967295
  %cmp6.not13 = icmp sgt i32 %6, %cond
  br i1 %cmp6.not13, label %omp.loop.exit, label %omp.inner.for.body.preheader

omp.inner.for.body.preheader:                     ; preds = %omp.precond.then
  %7 = zext i32 %6 to i64
  %8 = zext i32 %cond to i64
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull @3, i32 6, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, i64, i64, double*, i64, double*)* @.omp_outlined..131 to void (i32*, i32*, ...)*), i64 %7, i64 %8, i64 %n.casted.sroa.0.0.insert.ext, double* %ycoefs, i64 %alpha, double* %xcoefs), !llvm.access.group !283
  %9 = load i32, i32* %.omp.stride, align 4, !tbaa !16, !llvm.access.group !283
  %add22 = add nsw i32 %9, %6
  %10 = load i32, i32* %.omp.comb.ub, align 4, !tbaa !16, !llvm.access.group !283
  %cmp6.not23 = icmp sgt i32 %add22, %10
  br i1 %cmp6.not23, label %omp.loop.exit, label %omp.inner.for.body.omp.inner.for.body_crit_edge, !llvm.loop !284

omp.inner.for.body.omp.inner.for.body_crit_edge:  ; preds = %omp.inner.for.body.preheader, %omp.inner.for.body.omp.inner.for.body_crit_edge
  %11 = phi i32 [ %15, %omp.inner.for.body.omp.inner.for.body_crit_edge ], [ %10, %omp.inner.for.body.preheader ]
  %add24 = phi i32 [ %add, %omp.inner.for.body.omp.inner.for.body_crit_edge ], [ %add22, %omp.inner.for.body.preheader ]
  %.pre = load i32, i32* %.omp.comb.lb, align 4, !llvm.access.group !283
  %12 = zext i32 %.pre to i64
  %13 = zext i32 %11 to i64
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull @3, i32 6, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, i64, i64, double*, i64, double*)* @.omp_outlined..131 to void (i32*, i32*, ...)*), i64 %12, i64 %13, i64 %n.casted.sroa.0.0.insert.ext, double* %ycoefs, i64 %alpha, double* %xcoefs), !llvm.access.group !283
  %14 = load i32, i32* %.omp.stride, align 4, !tbaa !16, !llvm.access.group !283
  %add = add nsw i32 %14, %add24
  %15 = load i32, i32* %.omp.comb.ub, align 4, !tbaa !16, !llvm.access.group !283
  %cmp6.not = icmp sgt i32 %add, %15
  br i1 %cmp6.not, label %omp.loop.exit, label %omp.inner.for.body.omp.inner.for.body_crit_edge, !llvm.loop !284

omp.loop.exit:                                    ; preds = %omp.inner.for.body.omp.inner.for.body_crit_edge, %omp.inner.for.body.preheader, %omp.precond.then
  call void @__kmpc_for_static_fini(%struct.ident_t* nonnull @4, i32 %4)
  br label %omp.precond.end

omp.precond.end:                                  ; preds = %entry, %omp.loop.exit
  %.pre-phi = bitcast i32* %.omp.is_last to i8*
  %.pre-phi17 = bitcast i32* %.omp.stride to i8*
  %.pre-phi19 = bitcast i32* %.omp.comb.ub to i8*
  %.pre-phi21 = bitcast i32* %.omp.comb.lb to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %.pre-phi) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %.pre-phi17) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %.pre-phi19) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %.pre-phi21) #8
  ret void
}

; Function Attrs: alwaysinline norecurse nounwind uwtable
define internal void @.omp_outlined..131(i32* noalias nocapture noundef readonly %.global_tid., i32* noalias nocapture noundef readnone %.bound_tid., i64 noundef %.previous.lb., i64 noundef %.previous.ub., i64 noundef %n, double* nocapture noundef writeonly %ycoefs, i64 noundef %alpha, double* nocapture noundef readonly %xcoefs) #7 {
entry:
  %.omp.lb = alloca i32, align 4
  %.omp.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %n.addr.sroa.0.0.extract.trunc = trunc i64 %n to i32
  %sub3 = add nsw i32 %n.addr.sroa.0.0.extract.trunc, -1
  %cmp = icmp sgt i32 %n.addr.sroa.0.0.extract.trunc, 0
  br i1 %cmp, label %omp.precond.then, label %omp.precond.end

omp.precond.then:                                 ; preds = %entry
  %0 = bitcast i32* %.omp.lb to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8
  %1 = bitcast i32* %.omp.ub to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8
  %conv4 = trunc i64 %.previous.lb. to i32
  %conv5 = trunc i64 %.previous.ub. to i32
  store i32 %conv4, i32* %.omp.lb, align 4, !tbaa !16
  store i32 %conv5, i32* %.omp.ub, align 4, !tbaa !16
  %2 = bitcast i32* %.omp.stride to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #8
  store i32 1, i32* %.omp.stride, align 4, !tbaa !16
  %3 = bitcast i32* %.omp.is_last to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #8
  store i32 0, i32* %.omp.is_last, align 4, !tbaa !16
  %4 = load i32, i32* %.global_tid., align 4, !tbaa !16
  call void @__kmpc_for_static_init_4(%struct.ident_t* nonnull @1, i32 %4, i32 34, i32* nonnull %.omp.is_last, i32* nonnull %.omp.lb, i32* nonnull %.omp.ub, i32* nonnull %.omp.stride, i32 1, i32 1)
  %5 = load i32, i32* %.omp.ub, align 4, !tbaa !16
  %cmp7 = icmp sgt i32 %5, %sub3
  %cond = select i1 %cmp7, i32 %sub3, i32 %5
  store i32 %cond, i32* %.omp.ub, align 4, !tbaa !16
  %6 = load i32, i32* %.omp.lb, align 4, !tbaa !16
  %7 = bitcast i64 %alpha to double
  %cmp8.not14 = icmp slt i32 %cond, %6
  br i1 %cmp8.not14, label %omp.loop.exit, label %omp.inner.for.body.preheader

omp.inner.for.body.preheader:                     ; preds = %omp.precond.then
  %8 = sext i32 %6 to i64
  %9 = add nsw i32 %cond, 1
  %10 = sub i32 %cond, %6
  %11 = zext i32 %10 to i64
  %12 = add nuw nsw i64 %11, 1
  %min.iters.check = icmp ult i32 %10, 23
  br i1 %min.iters.check, label %omp.inner.for.body.preheader50, label %vector.ph

vector.ph:                                        ; preds = %omp.inner.for.body.preheader
  %n.mod.vf = urem i64 %12, 24
  %n.vec = sub nsw i64 %12, %n.mod.vf
  %ind.end = add nsw i64 %n.vec, %8
  %broadcast.splatinsert = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat = shufflevector <2 x double> %broadcast.splatinsert, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert28 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat29 = shufflevector <2 x double> %broadcast.splatinsert28, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert30 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat31 = shufflevector <2 x double> %broadcast.splatinsert30, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert32 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat33 = shufflevector <2 x double> %broadcast.splatinsert32, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert34 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat35 = shufflevector <2 x double> %broadcast.splatinsert34, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert36 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat37 = shufflevector <2 x double> %broadcast.splatinsert36, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert38 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat39 = shufflevector <2 x double> %broadcast.splatinsert38, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert40 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat41 = shufflevector <2 x double> %broadcast.splatinsert40, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert42 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat43 = shufflevector <2 x double> %broadcast.splatinsert42, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert44 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat45 = shufflevector <2 x double> %broadcast.splatinsert44, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert46 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat47 = shufflevector <2 x double> %broadcast.splatinsert46, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert48 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat49 = shufflevector <2 x double> %broadcast.splatinsert48, <2 x double> poison, <2 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %offset.idx = add i64 %index, %8
  %13 = getelementptr inbounds double, double* %xcoefs, i64 %offset.idx
  %14 = bitcast double* %13 to <2 x double>*
  %wide.load = load <2 x double>, <2 x double>* %14, align 8, !tbaa !84, !llvm.access.group !286
  %15 = getelementptr inbounds double, double* %13, i64 2
  %16 = bitcast double* %15 to <2 x double>*
  %wide.load17 = load <2 x double>, <2 x double>* %16, align 8, !tbaa !84, !llvm.access.group !286
  %17 = getelementptr inbounds double, double* %13, i64 4
  %18 = bitcast double* %17 to <2 x double>*
  %wide.load18 = load <2 x double>, <2 x double>* %18, align 8, !tbaa !84, !llvm.access.group !286
  %19 = getelementptr inbounds double, double* %13, i64 6
  %20 = bitcast double* %19 to <2 x double>*
  %wide.load19 = load <2 x double>, <2 x double>* %20, align 8, !tbaa !84, !llvm.access.group !286
  %21 = getelementptr inbounds double, double* %13, i64 8
  %22 = bitcast double* %21 to <2 x double>*
  %wide.load20 = load <2 x double>, <2 x double>* %22, align 8, !tbaa !84, !llvm.access.group !286
  %23 = getelementptr inbounds double, double* %13, i64 10
  %24 = bitcast double* %23 to <2 x double>*
  %wide.load21 = load <2 x double>, <2 x double>* %24, align 8, !tbaa !84, !llvm.access.group !286
  %25 = getelementptr inbounds double, double* %13, i64 12
  %26 = bitcast double* %25 to <2 x double>*
  %wide.load22 = load <2 x double>, <2 x double>* %26, align 8, !tbaa !84, !llvm.access.group !286
  %27 = getelementptr inbounds double, double* %13, i64 14
  %28 = bitcast double* %27 to <2 x double>*
  %wide.load23 = load <2 x double>, <2 x double>* %28, align 8, !tbaa !84, !llvm.access.group !286
  %29 = getelementptr inbounds double, double* %13, i64 16
  %30 = bitcast double* %29 to <2 x double>*
  %wide.load24 = load <2 x double>, <2 x double>* %30, align 8, !tbaa !84, !llvm.access.group !286
  %31 = getelementptr inbounds double, double* %13, i64 18
  %32 = bitcast double* %31 to <2 x double>*
  %wide.load25 = load <2 x double>, <2 x double>* %32, align 8, !tbaa !84, !llvm.access.group !286
  %33 = getelementptr inbounds double, double* %13, i64 20
  %34 = bitcast double* %33 to <2 x double>*
  %wide.load26 = load <2 x double>, <2 x double>* %34, align 8, !tbaa !84, !llvm.access.group !286
  %35 = getelementptr inbounds double, double* %13, i64 22
  %36 = bitcast double* %35 to <2 x double>*
  %wide.load27 = load <2 x double>, <2 x double>* %36, align 8, !tbaa !84, !llvm.access.group !286
  %37 = fmul contract <2 x double> %wide.load, %broadcast.splat
  %38 = fmul contract <2 x double> %wide.load17, %broadcast.splat29
  %39 = fmul contract <2 x double> %wide.load18, %broadcast.splat31
  %40 = fmul contract <2 x double> %wide.load19, %broadcast.splat33
  %41 = fmul contract <2 x double> %wide.load20, %broadcast.splat35
  %42 = fmul contract <2 x double> %wide.load21, %broadcast.splat37
  %43 = fmul contract <2 x double> %wide.load22, %broadcast.splat39
  %44 = fmul contract <2 x double> %wide.load23, %broadcast.splat41
  %45 = fmul contract <2 x double> %wide.load24, %broadcast.splat43
  %46 = fmul contract <2 x double> %wide.load25, %broadcast.splat45
  %47 = fmul contract <2 x double> %wide.load26, %broadcast.splat47
  %48 = fmul contract <2 x double> %wide.load27, %broadcast.splat49
  %49 = getelementptr inbounds double, double* %ycoefs, i64 %offset.idx
  %50 = bitcast double* %49 to <2 x double>*
  store <2 x double> %37, <2 x double>* %50, align 8, !tbaa !84, !llvm.access.group !286
  %51 = getelementptr inbounds double, double* %49, i64 2
  %52 = bitcast double* %51 to <2 x double>*
  store <2 x double> %38, <2 x double>* %52, align 8, !tbaa !84, !llvm.access.group !286
  %53 = getelementptr inbounds double, double* %49, i64 4
  %54 = bitcast double* %53 to <2 x double>*
  store <2 x double> %39, <2 x double>* %54, align 8, !tbaa !84, !llvm.access.group !286
  %55 = getelementptr inbounds double, double* %49, i64 6
  %56 = bitcast double* %55 to <2 x double>*
  store <2 x double> %40, <2 x double>* %56, align 8, !tbaa !84, !llvm.access.group !286
  %57 = getelementptr inbounds double, double* %49, i64 8
  %58 = bitcast double* %57 to <2 x double>*
  store <2 x double> %41, <2 x double>* %58, align 8, !tbaa !84, !llvm.access.group !286
  %59 = getelementptr inbounds double, double* %49, i64 10
  %60 = bitcast double* %59 to <2 x double>*
  store <2 x double> %42, <2 x double>* %60, align 8, !tbaa !84, !llvm.access.group !286
  %61 = getelementptr inbounds double, double* %49, i64 12
  %62 = bitcast double* %61 to <2 x double>*
  store <2 x double> %43, <2 x double>* %62, align 8, !tbaa !84, !llvm.access.group !286
  %63 = getelementptr inbounds double, double* %49, i64 14
  %64 = bitcast double* %63 to <2 x double>*
  store <2 x double> %44, <2 x double>* %64, align 8, !tbaa !84, !llvm.access.group !286
  %65 = getelementptr inbounds double, double* %49, i64 16
  %66 = bitcast double* %65 to <2 x double>*
  store <2 x double> %45, <2 x double>* %66, align 8, !tbaa !84, !llvm.access.group !286
  %67 = getelementptr inbounds double, double* %49, i64 18
  %68 = bitcast double* %67 to <2 x double>*
  store <2 x double> %46, <2 x double>* %68, align 8, !tbaa !84, !llvm.access.group !286
  %69 = getelementptr inbounds double, double* %49, i64 20
  %70 = bitcast double* %69 to <2 x double>*
  store <2 x double> %47, <2 x double>* %70, align 8, !tbaa !84, !llvm.access.group !286
  %71 = getelementptr inbounds double, double* %49, i64 22
  %72 = bitcast double* %71 to <2 x double>*
  store <2 x double> %48, <2 x double>* %72, align 8, !tbaa !84, !llvm.access.group !286
  %index.next = add nuw i64 %index, 24
  %73 = icmp eq i64 %index.next, %n.vec
  br i1 %73, label %middle.block, label %vector.body, !llvm.loop !287

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.mod.vf, 0
  br i1 %cmp.n, label %omp.loop.exit, label %omp.inner.for.body.preheader50

omp.inner.for.body.preheader50:                   ; preds = %omp.inner.for.body.preheader, %middle.block
  %indvars.iv.ph = phi i64 [ %8, %omp.inner.for.body.preheader ], [ %ind.end, %middle.block ]
  br label %omp.inner.for.body

omp.inner.for.body:                               ; preds = %omp.inner.for.body.preheader50, %omp.inner.for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %omp.inner.for.body ], [ %indvars.iv.ph, %omp.inner.for.body.preheader50 ]
  %arrayidx = getelementptr inbounds double, double* %xcoefs, i64 %indvars.iv
  %74 = load double, double* %arrayidx, align 8, !tbaa !84, !llvm.access.group !286
  %mul9 = fmul contract double %74, %7
  %arrayidx11 = getelementptr inbounds double, double* %ycoefs, i64 %indvars.iv
  store double %mul9, double* %arrayidx11, align 8, !tbaa !84, !llvm.access.group !286
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond.not = icmp eq i32 %9, %lftr.wideiv
  br i1 %exitcond.not, label %omp.loop.exit, label %omp.inner.for.body, !llvm.loop !289

omp.loop.exit:                                    ; preds = %omp.inner.for.body, %middle.block, %omp.precond.then
  call void @__kmpc_for_static_fini(%struct.ident_t* nonnull @4, i32 %4)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8
  br label %omp.precond.end

omp.precond.end:                                  ; preds = %omp.loop.exit, %entry
  ret void
}

; Function Attrs: alwaysinline norecurse nounwind uwtable
define internal void @.omp_outlined..134(i32* noalias nocapture noundef readonly %.global_tid., i32* noalias nocapture noundef readnone %.bound_tid., i64 noundef %n, double* noundef %ycoefs, i64 noundef %alpha, double* noundef %xcoefs, i64 noundef %beta) #7 {
entry:
  %.omp.comb.lb = alloca i32, align 4
  %.omp.comb.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %n.addr.sroa.0.0.extract.trunc = trunc i64 %n to i32
  %sub4 = add nsw i32 %n.addr.sroa.0.0.extract.trunc, -1
  %cmp = icmp sgt i32 %n.addr.sroa.0.0.extract.trunc, 0
  br i1 %cmp, label %omp.precond.then, label %omp.precond.end

omp.precond.then:                                 ; preds = %entry
  %0 = bitcast i32* %.omp.comb.lb to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8
  store i32 0, i32* %.omp.comb.lb, align 4, !tbaa !16
  %1 = bitcast i32* %.omp.comb.ub to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8
  store i32 %sub4, i32* %.omp.comb.ub, align 4, !tbaa !16
  %2 = bitcast i32* %.omp.stride to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #8
  store i32 1, i32* %.omp.stride, align 4, !tbaa !16
  %3 = bitcast i32* %.omp.is_last to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #8
  store i32 0, i32* %.omp.is_last, align 4, !tbaa !16
  %4 = load i32, i32* %.global_tid., align 4, !tbaa !16
  call void @__kmpc_for_static_init_4(%struct.ident_t* nonnull @4, i32 %4, i32 92, i32* nonnull %.omp.is_last, i32* nonnull %.omp.comb.lb, i32* nonnull %.omp.comb.ub, i32* nonnull %.omp.stride, i32 1, i32 1)
  %5 = load i32, i32* %.omp.comb.ub, align 4, !tbaa !16
  %cmp6 = icmp sgt i32 %5, %sub4
  %cond = select i1 %cmp6, i32 %sub4, i32 %5
  store i32 %cond, i32* %.omp.comb.ub, align 4, !tbaa !16
  %6 = load i32, i32* %.omp.comb.lb, align 4, !tbaa !16
  %n.casted.sroa.0.0.insert.ext = and i64 %n, 4294967295
  %cmp7.not13 = icmp sgt i32 %6, %cond
  br i1 %cmp7.not13, label %omp.loop.exit, label %omp.inner.for.body.preheader

omp.inner.for.body.preheader:                     ; preds = %omp.precond.then
  %7 = zext i32 %6 to i64
  %8 = zext i32 %cond to i64
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull @3, i32 7, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, i64, i64, double*, i64, double*, i64)* @.omp_outlined..135 to void (i32*, i32*, ...)*), i64 %7, i64 %8, i64 %n.casted.sroa.0.0.insert.ext, double* %ycoefs, i64 %alpha, double* %xcoefs, i64 %beta), !llvm.access.group !290
  %9 = load i32, i32* %.omp.stride, align 4, !tbaa !16, !llvm.access.group !290
  %add22 = add nsw i32 %9, %6
  %10 = load i32, i32* %.omp.comb.ub, align 4, !tbaa !16, !llvm.access.group !290
  %cmp7.not23 = icmp sgt i32 %add22, %10
  br i1 %cmp7.not23, label %omp.loop.exit, label %omp.inner.for.body.omp.inner.for.body_crit_edge, !llvm.loop !291

omp.inner.for.body.omp.inner.for.body_crit_edge:  ; preds = %omp.inner.for.body.preheader, %omp.inner.for.body.omp.inner.for.body_crit_edge
  %11 = phi i32 [ %15, %omp.inner.for.body.omp.inner.for.body_crit_edge ], [ %10, %omp.inner.for.body.preheader ]
  %add24 = phi i32 [ %add, %omp.inner.for.body.omp.inner.for.body_crit_edge ], [ %add22, %omp.inner.for.body.preheader ]
  %.pre = load i32, i32* %.omp.comb.lb, align 4, !llvm.access.group !290
  %12 = zext i32 %.pre to i64
  %13 = zext i32 %11 to i64
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull @3, i32 7, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, i64, i64, double*, i64, double*, i64)* @.omp_outlined..135 to void (i32*, i32*, ...)*), i64 %12, i64 %13, i64 %n.casted.sroa.0.0.insert.ext, double* %ycoefs, i64 %alpha, double* %xcoefs, i64 %beta), !llvm.access.group !290
  %14 = load i32, i32* %.omp.stride, align 4, !tbaa !16, !llvm.access.group !290
  %add = add nsw i32 %14, %add24
  %15 = load i32, i32* %.omp.comb.ub, align 4, !tbaa !16, !llvm.access.group !290
  %cmp7.not = icmp sgt i32 %add, %15
  br i1 %cmp7.not, label %omp.loop.exit, label %omp.inner.for.body.omp.inner.for.body_crit_edge, !llvm.loop !291

omp.loop.exit:                                    ; preds = %omp.inner.for.body.omp.inner.for.body_crit_edge, %omp.inner.for.body.preheader, %omp.precond.then
  call void @__kmpc_for_static_fini(%struct.ident_t* nonnull @4, i32 %4)
  br label %omp.precond.end

omp.precond.end:                                  ; preds = %entry, %omp.loop.exit
  %.pre-phi = bitcast i32* %.omp.is_last to i8*
  %.pre-phi17 = bitcast i32* %.omp.stride to i8*
  %.pre-phi19 = bitcast i32* %.omp.comb.ub to i8*
  %.pre-phi21 = bitcast i32* %.omp.comb.lb to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %.pre-phi) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %.pre-phi17) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %.pre-phi19) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %.pre-phi21) #8
  ret void
}

; Function Attrs: alwaysinline norecurse nounwind uwtable
define internal void @.omp_outlined..135(i32* noalias nocapture noundef readonly %.global_tid., i32* noalias nocapture noundef readnone %.bound_tid., i64 noundef %.previous.lb., i64 noundef %.previous.ub., i64 noundef %n, double* nocapture noundef %ycoefs, i64 noundef %alpha, double* nocapture noundef readonly %xcoefs, i64 noundef %beta) #7 {
entry:
  %.omp.lb = alloca i32, align 4
  %.omp.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %n.addr.sroa.0.0.extract.trunc = trunc i64 %n to i32
  %sub4 = add nsw i32 %n.addr.sroa.0.0.extract.trunc, -1
  %cmp = icmp sgt i32 %n.addr.sroa.0.0.extract.trunc, 0
  br i1 %cmp, label %omp.precond.then, label %omp.precond.end

omp.precond.then:                                 ; preds = %entry
  %0 = bitcast i32* %.omp.lb to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8
  %1 = bitcast i32* %.omp.ub to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8
  %conv5 = trunc i64 %.previous.lb. to i32
  %conv6 = trunc i64 %.previous.ub. to i32
  store i32 %conv5, i32* %.omp.lb, align 4, !tbaa !16
  store i32 %conv6, i32* %.omp.ub, align 4, !tbaa !16
  %2 = bitcast i32* %.omp.stride to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #8
  store i32 1, i32* %.omp.stride, align 4, !tbaa !16
  %3 = bitcast i32* %.omp.is_last to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #8
  store i32 0, i32* %.omp.is_last, align 4, !tbaa !16
  %4 = load i32, i32* %.global_tid., align 4, !tbaa !16
  call void @__kmpc_for_static_init_4(%struct.ident_t* nonnull @1, i32 %4, i32 34, i32* nonnull %.omp.is_last, i32* nonnull %.omp.lb, i32* nonnull %.omp.ub, i32* nonnull %.omp.stride, i32 1, i32 1)
  %5 = load i32, i32* %.omp.ub, align 4, !tbaa !16
  %cmp8 = icmp sgt i32 %5, %sub4
  %cond = select i1 %cmp8, i32 %sub4, i32 %5
  store i32 %cond, i32* %.omp.ub, align 4, !tbaa !16
  %6 = load i32, i32* %.omp.lb, align 4, !tbaa !16
  %7 = bitcast i64 %alpha to double
  %8 = bitcast i64 %beta to double
  %cmp9.not16 = icmp slt i32 %cond, %6
  br i1 %cmp9.not16, label %omp.loop.exit, label %omp.inner.for.body.preheader

omp.inner.for.body.preheader:                     ; preds = %omp.precond.then
  %9 = sext i32 %6 to i64
  %10 = add nsw i32 %cond, 1
  %11 = sub i32 %cond, %6
  %12 = zext i32 %11 to i64
  %13 = add nuw nsw i64 %12, 1
  %min.iters.check = icmp ult i32 %11, 23
  br i1 %min.iters.check, label %omp.inner.for.body.preheader88, label %vector.ph

vector.ph:                                        ; preds = %omp.inner.for.body.preheader
  %n.mod.vf = urem i64 %13, 24
  %n.vec = sub nsw i64 %13, %n.mod.vf
  %ind.end = add nsw i64 %n.vec, %9
  %broadcast.splatinsert = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat = shufflevector <2 x double> %broadcast.splatinsert, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert30 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat31 = shufflevector <2 x double> %broadcast.splatinsert30, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert32 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat33 = shufflevector <2 x double> %broadcast.splatinsert32, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert34 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat35 = shufflevector <2 x double> %broadcast.splatinsert34, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert36 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat37 = shufflevector <2 x double> %broadcast.splatinsert36, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert38 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat39 = shufflevector <2 x double> %broadcast.splatinsert38, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert40 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat41 = shufflevector <2 x double> %broadcast.splatinsert40, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert42 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat43 = shufflevector <2 x double> %broadcast.splatinsert42, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert44 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat45 = shufflevector <2 x double> %broadcast.splatinsert44, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert46 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat47 = shufflevector <2 x double> %broadcast.splatinsert46, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert48 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat49 = shufflevector <2 x double> %broadcast.splatinsert48, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert50 = insertelement <2 x double> poison, double %7, i64 0
  %broadcast.splat51 = shufflevector <2 x double> %broadcast.splatinsert50, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert64 = insertelement <2 x double> poison, double %8, i64 0
  %broadcast.splat65 = shufflevector <2 x double> %broadcast.splatinsert64, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert66 = insertelement <2 x double> poison, double %8, i64 0
  %broadcast.splat67 = shufflevector <2 x double> %broadcast.splatinsert66, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert68 = insertelement <2 x double> poison, double %8, i64 0
  %broadcast.splat69 = shufflevector <2 x double> %broadcast.splatinsert68, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert70 = insertelement <2 x double> poison, double %8, i64 0
  %broadcast.splat71 = shufflevector <2 x double> %broadcast.splatinsert70, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert72 = insertelement <2 x double> poison, double %8, i64 0
  %broadcast.splat73 = shufflevector <2 x double> %broadcast.splatinsert72, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert74 = insertelement <2 x double> poison, double %8, i64 0
  %broadcast.splat75 = shufflevector <2 x double> %broadcast.splatinsert74, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert76 = insertelement <2 x double> poison, double %8, i64 0
  %broadcast.splat77 = shufflevector <2 x double> %broadcast.splatinsert76, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert78 = insertelement <2 x double> poison, double %8, i64 0
  %broadcast.splat79 = shufflevector <2 x double> %broadcast.splatinsert78, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert80 = insertelement <2 x double> poison, double %8, i64 0
  %broadcast.splat81 = shufflevector <2 x double> %broadcast.splatinsert80, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert82 = insertelement <2 x double> poison, double %8, i64 0
  %broadcast.splat83 = shufflevector <2 x double> %broadcast.splatinsert82, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert84 = insertelement <2 x double> poison, double %8, i64 0
  %broadcast.splat85 = shufflevector <2 x double> %broadcast.splatinsert84, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert86 = insertelement <2 x double> poison, double %8, i64 0
  %broadcast.splat87 = shufflevector <2 x double> %broadcast.splatinsert86, <2 x double> poison, <2 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %offset.idx = add i64 %index, %9
  %14 = getelementptr inbounds double, double* %xcoefs, i64 %offset.idx
  %15 = bitcast double* %14 to <2 x double>*
  %wide.load = load <2 x double>, <2 x double>* %15, align 8, !tbaa !84, !llvm.access.group !293
  %16 = getelementptr inbounds double, double* %14, i64 2
  %17 = bitcast double* %16 to <2 x double>*
  %wide.load19 = load <2 x double>, <2 x double>* %17, align 8, !tbaa !84, !llvm.access.group !293
  %18 = getelementptr inbounds double, double* %14, i64 4
  %19 = bitcast double* %18 to <2 x double>*
  %wide.load20 = load <2 x double>, <2 x double>* %19, align 8, !tbaa !84, !llvm.access.group !293
  %20 = getelementptr inbounds double, double* %14, i64 6
  %21 = bitcast double* %20 to <2 x double>*
  %wide.load21 = load <2 x double>, <2 x double>* %21, align 8, !tbaa !84, !llvm.access.group !293
  %22 = getelementptr inbounds double, double* %14, i64 8
  %23 = bitcast double* %22 to <2 x double>*
  %wide.load22 = load <2 x double>, <2 x double>* %23, align 8, !tbaa !84, !llvm.access.group !293
  %24 = getelementptr inbounds double, double* %14, i64 10
  %25 = bitcast double* %24 to <2 x double>*
  %wide.load23 = load <2 x double>, <2 x double>* %25, align 8, !tbaa !84, !llvm.access.group !293
  %26 = getelementptr inbounds double, double* %14, i64 12
  %27 = bitcast double* %26 to <2 x double>*
  %wide.load24 = load <2 x double>, <2 x double>* %27, align 8, !tbaa !84, !llvm.access.group !293
  %28 = getelementptr inbounds double, double* %14, i64 14
  %29 = bitcast double* %28 to <2 x double>*
  %wide.load25 = load <2 x double>, <2 x double>* %29, align 8, !tbaa !84, !llvm.access.group !293
  %30 = getelementptr inbounds double, double* %14, i64 16
  %31 = bitcast double* %30 to <2 x double>*
  %wide.load26 = load <2 x double>, <2 x double>* %31, align 8, !tbaa !84, !llvm.access.group !293
  %32 = getelementptr inbounds double, double* %14, i64 18
  %33 = bitcast double* %32 to <2 x double>*
  %wide.load27 = load <2 x double>, <2 x double>* %33, align 8, !tbaa !84, !llvm.access.group !293
  %34 = getelementptr inbounds double, double* %14, i64 20
  %35 = bitcast double* %34 to <2 x double>*
  %wide.load28 = load <2 x double>, <2 x double>* %35, align 8, !tbaa !84, !llvm.access.group !293
  %36 = getelementptr inbounds double, double* %14, i64 22
  %37 = bitcast double* %36 to <2 x double>*
  %wide.load29 = load <2 x double>, <2 x double>* %37, align 8, !tbaa !84, !llvm.access.group !293
  %38 = fmul contract <2 x double> %wide.load, %broadcast.splat
  %39 = fmul contract <2 x double> %wide.load19, %broadcast.splat31
  %40 = fmul contract <2 x double> %wide.load20, %broadcast.splat33
  %41 = fmul contract <2 x double> %wide.load21, %broadcast.splat35
  %42 = fmul contract <2 x double> %wide.load22, %broadcast.splat37
  %43 = fmul contract <2 x double> %wide.load23, %broadcast.splat39
  %44 = fmul contract <2 x double> %wide.load24, %broadcast.splat41
  %45 = fmul contract <2 x double> %wide.load25, %broadcast.splat43
  %46 = fmul contract <2 x double> %wide.load26, %broadcast.splat45
  %47 = fmul contract <2 x double> %wide.load27, %broadcast.splat47
  %48 = fmul contract <2 x double> %wide.load28, %broadcast.splat49
  %49 = fmul contract <2 x double> %wide.load29, %broadcast.splat51
  %50 = getelementptr inbounds double, double* %ycoefs, i64 %offset.idx
  %51 = bitcast double* %50 to <2 x double>*
  %wide.load52 = load <2 x double>, <2 x double>* %51, align 8, !tbaa !84, !llvm.access.group !293
  %52 = getelementptr inbounds double, double* %50, i64 2
  %53 = bitcast double* %52 to <2 x double>*
  %wide.load53 = load <2 x double>, <2 x double>* %53, align 8, !tbaa !84, !llvm.access.group !293
  %54 = getelementptr inbounds double, double* %50, i64 4
  %55 = bitcast double* %54 to <2 x double>*
  %wide.load54 = load <2 x double>, <2 x double>* %55, align 8, !tbaa !84, !llvm.access.group !293
  %56 = getelementptr inbounds double, double* %50, i64 6
  %57 = bitcast double* %56 to <2 x double>*
  %wide.load55 = load <2 x double>, <2 x double>* %57, align 8, !tbaa !84, !llvm.access.group !293
  %58 = getelementptr inbounds double, double* %50, i64 8
  %59 = bitcast double* %58 to <2 x double>*
  %wide.load56 = load <2 x double>, <2 x double>* %59, align 8, !tbaa !84, !llvm.access.group !293
  %60 = getelementptr inbounds double, double* %50, i64 10
  %61 = bitcast double* %60 to <2 x double>*
  %wide.load57 = load <2 x double>, <2 x double>* %61, align 8, !tbaa !84, !llvm.access.group !293
  %62 = getelementptr inbounds double, double* %50, i64 12
  %63 = bitcast double* %62 to <2 x double>*
  %wide.load58 = load <2 x double>, <2 x double>* %63, align 8, !tbaa !84, !llvm.access.group !293
  %64 = getelementptr inbounds double, double* %50, i64 14
  %65 = bitcast double* %64 to <2 x double>*
  %wide.load59 = load <2 x double>, <2 x double>* %65, align 8, !tbaa !84, !llvm.access.group !293
  %66 = getelementptr inbounds double, double* %50, i64 16
  %67 = bitcast double* %66 to <2 x double>*
  %wide.load60 = load <2 x double>, <2 x double>* %67, align 8, !tbaa !84, !llvm.access.group !293
  %68 = getelementptr inbounds double, double* %50, i64 18
  %69 = bitcast double* %68 to <2 x double>*
  %wide.load61 = load <2 x double>, <2 x double>* %69, align 8, !tbaa !84, !llvm.access.group !293
  %70 = getelementptr inbounds double, double* %50, i64 20
  %71 = bitcast double* %70 to <2 x double>*
  %wide.load62 = load <2 x double>, <2 x double>* %71, align 8, !tbaa !84, !llvm.access.group !293
  %72 = getelementptr inbounds double, double* %50, i64 22
  %73 = bitcast double* %72 to <2 x double>*
  %wide.load63 = load <2 x double>, <2 x double>* %73, align 8, !tbaa !84, !llvm.access.group !293
  %74 = fmul contract <2 x double> %wide.load52, %broadcast.splat65
  %75 = fmul contract <2 x double> %wide.load53, %broadcast.splat67
  %76 = fmul contract <2 x double> %wide.load54, %broadcast.splat69
  %77 = fmul contract <2 x double> %wide.load55, %broadcast.splat71
  %78 = fmul contract <2 x double> %wide.load56, %broadcast.splat73
  %79 = fmul contract <2 x double> %wide.load57, %broadcast.splat75
  %80 = fmul contract <2 x double> %wide.load58, %broadcast.splat77
  %81 = fmul contract <2 x double> %wide.load59, %broadcast.splat79
  %82 = fmul contract <2 x double> %wide.load60, %broadcast.splat81
  %83 = fmul contract <2 x double> %wide.load61, %broadcast.splat83
  %84 = fmul contract <2 x double> %wide.load62, %broadcast.splat85
  %85 = fmul contract <2 x double> %wide.load63, %broadcast.splat87
  %86 = fadd contract <2 x double> %38, %74
  %87 = fadd contract <2 x double> %39, %75
  %88 = fadd contract <2 x double> %40, %76
  %89 = fadd contract <2 x double> %41, %77
  %90 = fadd contract <2 x double> %42, %78
  %91 = fadd contract <2 x double> %43, %79
  %92 = fadd contract <2 x double> %44, %80
  %93 = fadd contract <2 x double> %45, %81
  %94 = fadd contract <2 x double> %46, %82
  %95 = fadd contract <2 x double> %47, %83
  %96 = fadd contract <2 x double> %48, %84
  %97 = fadd contract <2 x double> %49, %85
  %98 = bitcast double* %50 to <2 x double>*
  store <2 x double> %86, <2 x double>* %98, align 8, !tbaa !84, !llvm.access.group !293
  %99 = bitcast double* %52 to <2 x double>*
  store <2 x double> %87, <2 x double>* %99, align 8, !tbaa !84, !llvm.access.group !293
  %100 = bitcast double* %54 to <2 x double>*
  store <2 x double> %88, <2 x double>* %100, align 8, !tbaa !84, !llvm.access.group !293
  %101 = bitcast double* %56 to <2 x double>*
  store <2 x double> %89, <2 x double>* %101, align 8, !tbaa !84, !llvm.access.group !293
  %102 = bitcast double* %58 to <2 x double>*
  store <2 x double> %90, <2 x double>* %102, align 8, !tbaa !84, !llvm.access.group !293
  %103 = bitcast double* %60 to <2 x double>*
  store <2 x double> %91, <2 x double>* %103, align 8, !tbaa !84, !llvm.access.group !293
  %104 = bitcast double* %62 to <2 x double>*
  store <2 x double> %92, <2 x double>* %104, align 8, !tbaa !84, !llvm.access.group !293
  %105 = bitcast double* %64 to <2 x double>*
  store <2 x double> %93, <2 x double>* %105, align 8, !tbaa !84, !llvm.access.group !293
  %106 = bitcast double* %66 to <2 x double>*
  store <2 x double> %94, <2 x double>* %106, align 8, !tbaa !84, !llvm.access.group !293
  %107 = bitcast double* %68 to <2 x double>*
  store <2 x double> %95, <2 x double>* %107, align 8, !tbaa !84, !llvm.access.group !293
  %108 = bitcast double* %70 to <2 x double>*
  store <2 x double> %96, <2 x double>* %108, align 8, !tbaa !84, !llvm.access.group !293
  %109 = bitcast double* %72 to <2 x double>*
  store <2 x double> %97, <2 x double>* %109, align 8, !tbaa !84, !llvm.access.group !293
  %index.next = add nuw i64 %index, 24
  %110 = icmp eq i64 %index.next, %n.vec
  br i1 %110, label %middle.block, label %vector.body, !llvm.loop !294

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.mod.vf, 0
  br i1 %cmp.n, label %omp.loop.exit, label %omp.inner.for.body.preheader88

omp.inner.for.body.preheader88:                   ; preds = %omp.inner.for.body.preheader, %middle.block
  %indvars.iv.ph = phi i64 [ %9, %omp.inner.for.body.preheader ], [ %ind.end, %middle.block ]
  br label %omp.inner.for.body

omp.inner.for.body:                               ; preds = %omp.inner.for.body.preheader88, %omp.inner.for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %omp.inner.for.body ], [ %indvars.iv.ph, %omp.inner.for.body.preheader88 ]
  %arrayidx = getelementptr inbounds double, double* %xcoefs, i64 %indvars.iv
  %111 = load double, double* %arrayidx, align 8, !tbaa !84, !llvm.access.group !293
  %mul10 = fmul contract double %111, %7
  %arrayidx12 = getelementptr inbounds double, double* %ycoefs, i64 %indvars.iv
  %112 = load double, double* %arrayidx12, align 8, !tbaa !84, !llvm.access.group !293
  %mul13 = fmul contract double %112, %8
  %add14 = fadd contract double %mul10, %mul13
  store double %add14, double* %arrayidx12, align 8, !tbaa !84, !llvm.access.group !293
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond.not = icmp eq i32 %10, %lftr.wideiv
  br i1 %exitcond.not, label %omp.loop.exit, label %omp.inner.for.body, !llvm.loop !296

omp.loop.exit:                                    ; preds = %omp.inner.for.body, %middle.block, %omp.precond.then
  call void @__kmpc_for_static_fini(%struct.ident_t* nonnull @4, i32 %4)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8
  br label %omp.precond.end

omp.precond.end:                                  ; preds = %omp.loop.exit, %entry
  ret void
}

; Function Attrs: alwaysinline norecurse nounwind uwtable
define internal void @.omp_outlined..138(i32* noalias nocapture noundef readonly %.global_tid., i32* noalias nocapture noundef readnone %.bound_tid., i64 noundef %n, double* nocapture noundef nonnull align 8 dereferenceable(8) %result, double* noundef %xcoefs, double* noundef %ycoefs) #7 {
entry:
  %result1 = alloca double, align 8
  %.omp.comb.lb = alloca i32, align 4
  %.omp.comb.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %.omp.reduction.red_list = alloca [1 x i8*], align 8
  %n.addr.sroa.0.0.extract.trunc = trunc i64 %n to i32
  %0 = bitcast double* %result1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8
  store double 0.000000e+00, double* %result1, align 8, !tbaa !84
  %sub3 = add nsw i32 %n.addr.sroa.0.0.extract.trunc, -1
  %cmp = icmp sgt i32 %n.addr.sroa.0.0.extract.trunc, 0
  br i1 %cmp, label %omp.precond.then, label %entry.omp.precond.end_crit_edge

entry.omp.precond.end_crit_edge:                  ; preds = %entry
  %.pre15 = load i32, i32* %.global_tid., align 4, !tbaa !16
  br label %omp.precond.end

omp.precond.then:                                 ; preds = %entry
  %1 = bitcast i32* %.omp.comb.lb to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8
  store i32 0, i32* %.omp.comb.lb, align 4, !tbaa !16
  %2 = bitcast i32* %.omp.comb.ub to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #8
  store i32 %sub3, i32* %.omp.comb.ub, align 4, !tbaa !16
  %3 = bitcast i32* %.omp.stride to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #8
  store i32 1, i32* %.omp.stride, align 4, !tbaa !16
  %4 = bitcast i32* %.omp.is_last to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #8
  store i32 0, i32* %.omp.is_last, align 4, !tbaa !16
  %5 = load i32, i32* %.global_tid., align 4, !tbaa !16
  call void @__kmpc_for_static_init_4(%struct.ident_t* nonnull @4, i32 %5, i32 92, i32* nonnull %.omp.is_last, i32* nonnull %.omp.comb.lb, i32* nonnull %.omp.comb.ub, i32* nonnull %.omp.stride, i32 1, i32 1)
  %6 = load i32, i32* %.omp.comb.ub, align 4, !tbaa !16
  %cmp5 = icmp sgt i32 %6, %sub3
  %cond = select i1 %cmp5, i32 %sub3, i32 %6
  store i32 %cond, i32* %.omp.comb.ub, align 4, !tbaa !16
  %7 = load i32, i32* %.omp.comb.lb, align 4, !tbaa !16
  %n.casted.sroa.0.0.insert.ext = and i64 %n, 4294967295
  %cmp6.not13 = icmp sgt i32 %7, %cond
  br i1 %cmp6.not13, label %omp.loop.exit, label %omp.inner.for.body.preheader

omp.inner.for.body.preheader:                     ; preds = %omp.precond.then
  %8 = zext i32 %7 to i64
  %9 = zext i32 %cond to i64
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull @3, i32 6, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, i64, i64, double*, double*, double*)* @.omp_outlined..139 to void (i32*, i32*, ...)*), i64 %8, i64 %9, i64 %n.casted.sroa.0.0.insert.ext, double* nonnull %result1, double* %xcoefs, double* %ycoefs)
  %10 = load i32, i32* %.omp.stride, align 4, !tbaa !16
  %add23 = add nsw i32 %10, %7
  %11 = load i32, i32* %.omp.comb.ub, align 4, !tbaa !16
  %cmp6.not24 = icmp sgt i32 %add23, %11
  br i1 %cmp6.not24, label %omp.loop.exit, label %omp.inner.for.body.omp.inner.for.body_crit_edge

omp.inner.for.body.omp.inner.for.body_crit_edge:  ; preds = %omp.inner.for.body.preheader, %omp.inner.for.body.omp.inner.for.body_crit_edge
  %12 = phi i32 [ %16, %omp.inner.for.body.omp.inner.for.body_crit_edge ], [ %11, %omp.inner.for.body.preheader ]
  %add25 = phi i32 [ %add, %omp.inner.for.body.omp.inner.for.body_crit_edge ], [ %add23, %omp.inner.for.body.preheader ]
  %.pre = load i32, i32* %.omp.comb.lb, align 4
  %13 = zext i32 %.pre to i64
  %14 = zext i32 %12 to i64
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull @3, i32 6, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, i64, i64, double*, double*, double*)* @.omp_outlined..139 to void (i32*, i32*, ...)*), i64 %13, i64 %14, i64 %n.casted.sroa.0.0.insert.ext, double* nonnull %result1, double* %xcoefs, double* %ycoefs)
  %15 = load i32, i32* %.omp.stride, align 4, !tbaa !16
  %add = add nsw i32 %15, %add25
  %16 = load i32, i32* %.omp.comb.ub, align 4, !tbaa !16
  %cmp6.not = icmp sgt i32 %add, %16
  br i1 %cmp6.not, label %omp.loop.exit, label %omp.inner.for.body.omp.inner.for.body_crit_edge

omp.loop.exit:                                    ; preds = %omp.inner.for.body.omp.inner.for.body_crit_edge, %omp.inner.for.body.preheader, %omp.precond.then
  call void @__kmpc_for_static_fini(%struct.ident_t* nonnull @4, i32 %5)
  br label %omp.precond.end

omp.precond.end:                                  ; preds = %entry.omp.precond.end_crit_edge, %omp.loop.exit
  %17 = phi i32 [ %.pre15, %entry.omp.precond.end_crit_edge ], [ %5, %omp.loop.exit ]
  %.pre-phi = bitcast i32* %.omp.is_last to i8*
  %.pre-phi18 = bitcast i32* %.omp.stride to i8*
  %.pre-phi20 = bitcast i32* %.omp.comb.ub to i8*
  %.pre-phi22 = bitcast i32* %.omp.comb.lb to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %.pre-phi) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %.pre-phi18) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %.pre-phi20) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %.pre-phi22) #8
  %18 = bitcast [1 x i8*]* %.omp.reduction.red_list to double**
  store double* %result1, double** %18, align 8
  %19 = bitcast [1 x i8*]* %.omp.reduction.red_list to i8*
  %20 = call i32 @__kmpc_reduce_nowait(%struct.ident_t* nonnull @2, i32 %17, i32 1, i64 8, i8* nonnull %19, void (i8*, i8*)* nonnull @.omp.reduction.reduction_func.141, [8 x i32]* nonnull @.gomp_critical_user_.reduction.var)
  switch i32 %20, label %.omp.reduction.default [
    i32 1, label %.omp.reduction.case1
    i32 2, label %.omp.reduction.case2
  ]

.omp.reduction.case1:                             ; preds = %omp.precond.end
  %21 = load double, double* %result, align 8, !tbaa !84
  %22 = load double, double* %result1, align 8, !tbaa !84
  %add8 = fadd contract double %21, %22
  store double %add8, double* %result, align 8, !tbaa !84
  call void @__kmpc_end_reduce_nowait(%struct.ident_t* nonnull @2, i32 %17, [8 x i32]* nonnull @.gomp_critical_user_.reduction.var)
  br label %.omp.reduction.default

.omp.reduction.case2:                             ; preds = %omp.precond.end
  %23 = bitcast double* %result to i64*
  %atomic-load = load atomic i64, i64* %23 monotonic, align 8, !tbaa !84
  %24 = load double, double* %result1, align 8, !tbaa !84
  br label %atomic_cont

atomic_cont:                                      ; preds = %atomic_cont, %.omp.reduction.case2
  %25 = phi i64 [ %atomic-load, %.omp.reduction.case2 ], [ %29, %atomic_cont ]
  %26 = bitcast i64 %25 to double
  %add10 = fadd contract double %24, %26
  %27 = bitcast double %add10 to i64
  %28 = cmpxchg i64* %23, i64 %25, i64 %27 monotonic monotonic, align 8
  %29 = extractvalue { i64, i1 } %28, 0
  %30 = extractvalue { i64, i1 } %28, 1
  br i1 %30, label %.omp.reduction.default, label %atomic_cont

.omp.reduction.default:                           ; preds = %atomic_cont, %.omp.reduction.case1, %omp.precond.end
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8
  ret void
}

; Function Attrs: alwaysinline norecurse nounwind uwtable
define internal void @.omp_outlined..139(i32* noalias nocapture noundef readonly %.global_tid., i32* noalias nocapture noundef readnone %.bound_tid., i64 noundef %.previous.lb., i64 noundef %.previous.ub., i64 noundef %n, double* nocapture noundef nonnull align 8 dereferenceable(8) %result, double* nocapture noundef readonly %xcoefs, double* nocapture noundef readonly %ycoefs) #7 {
entry:
  %.omp.lb = alloca i32, align 4
  %.omp.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %result5 = alloca double, align 8
  %.omp.reduction.red_list = alloca [1 x i8*], align 8
  %n.addr.sroa.0.0.extract.trunc = trunc i64 %n to i32
  %sub2 = add nsw i32 %n.addr.sroa.0.0.extract.trunc, -1
  %cmp = icmp sgt i32 %n.addr.sroa.0.0.extract.trunc, 0
  br i1 %cmp, label %omp.precond.then, label %omp.precond.end

omp.precond.then:                                 ; preds = %entry
  %0 = bitcast i32* %.omp.lb to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8
  %1 = bitcast i32* %.omp.ub to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8
  %conv3 = trunc i64 %.previous.lb. to i32
  %conv4 = trunc i64 %.previous.ub. to i32
  store i32 %conv3, i32* %.omp.lb, align 4, !tbaa !16
  store i32 %conv4, i32* %.omp.ub, align 4, !tbaa !16
  %2 = bitcast i32* %.omp.stride to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #8
  store i32 1, i32* %.omp.stride, align 4, !tbaa !16
  %3 = bitcast i32* %.omp.is_last to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #8
  store i32 0, i32* %.omp.is_last, align 4, !tbaa !16
  %4 = bitcast double* %result5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8
  %5 = load i32, i32* %.global_tid., align 4, !tbaa !16
  call void @__kmpc_for_static_init_4(%struct.ident_t* nonnull @1, i32 %5, i32 34, i32* nonnull %.omp.is_last, i32* nonnull %.omp.lb, i32* nonnull %.omp.ub, i32* nonnull %.omp.stride, i32 1, i32 1)
  %6 = load i32, i32* %.omp.ub, align 4, !tbaa !16
  %cmp7 = icmp sgt i32 %6, %sub2
  %cond = select i1 %cmp7, i32 %sub2, i32 %6
  store i32 %cond, i32* %.omp.ub, align 4, !tbaa !16
  %7 = load i32, i32* %.omp.lb, align 4, !tbaa !16
  %cmp8.not15 = icmp slt i32 %cond, %7
  br i1 %cmp8.not15, label %omp.loop.exit, label %omp.inner.for.body.preheader

omp.inner.for.body.preheader:                     ; preds = %omp.precond.then
  %8 = sext i32 %7 to i64
  %9 = add nsw i32 %cond, 1
  %10 = add i32 %cond, 1
  %11 = sub i32 %10, %7
  %12 = sub i32 %cond, %7
  %xtraiter = and i32 %11, 7
  %lcmp.mod.not = icmp eq i32 %xtraiter, 0
  br i1 %lcmp.mod.not, label %omp.inner.for.body.prol.loopexit, label %omp.inner.for.body.prol

omp.inner.for.body.prol:                          ; preds = %omp.inner.for.body.preheader, %omp.inner.for.body.prol
  %indvars.iv.prol = phi i64 [ %indvars.iv.next.prol, %omp.inner.for.body.prol ], [ %8, %omp.inner.for.body.preheader ]
  %add121416.prol = phi double [ %add12.prol, %omp.inner.for.body.prol ], [ 0.000000e+00, %omp.inner.for.body.preheader ]
  %prol.iter = phi i32 [ %prol.iter.next, %omp.inner.for.body.prol ], [ 0, %omp.inner.for.body.preheader ]
  %arrayidx.prol = getelementptr inbounds double, double* %xcoefs, i64 %indvars.iv.prol
  %13 = load double, double* %arrayidx.prol, align 8, !tbaa !84
  %arrayidx10.prol = getelementptr inbounds double, double* %ycoefs, i64 %indvars.iv.prol
  %14 = load double, double* %arrayidx10.prol, align 8, !tbaa !84
  %mul11.prol = fmul contract double %13, %14
  %add12.prol = fadd contract double %add121416.prol, %mul11.prol
  %indvars.iv.next.prol = add nsw i64 %indvars.iv.prol, 1
  %prol.iter.next = add i32 %prol.iter, 1
  %prol.iter.cmp.not = icmp eq i32 %prol.iter.next, %xtraiter
  br i1 %prol.iter.cmp.not, label %omp.inner.for.body.prol.loopexit, label %omp.inner.for.body.prol, !llvm.loop !297

omp.inner.for.body.prol.loopexit:                 ; preds = %omp.inner.for.body.prol, %omp.inner.for.body.preheader
  %add12.lcssa.unr = phi double [ undef, %omp.inner.for.body.preheader ], [ %add12.prol, %omp.inner.for.body.prol ]
  %indvars.iv.unr = phi i64 [ %8, %omp.inner.for.body.preheader ], [ %indvars.iv.next.prol, %omp.inner.for.body.prol ]
  %add121416.unr = phi double [ 0.000000e+00, %omp.inner.for.body.preheader ], [ %add12.prol, %omp.inner.for.body.prol ]
  %15 = icmp ult i32 %12, 7
  br i1 %15, label %omp.loop.exit, label %omp.inner.for.body

omp.inner.for.body:                               ; preds = %omp.inner.for.body.prol.loopexit, %omp.inner.for.body
  %indvars.iv = phi i64 [ %indvars.iv.next.7, %omp.inner.for.body ], [ %indvars.iv.unr, %omp.inner.for.body.prol.loopexit ]
  %add121416 = phi double [ %add12.7, %omp.inner.for.body ], [ %add121416.unr, %omp.inner.for.body.prol.loopexit ]
  %arrayidx = getelementptr inbounds double, double* %xcoefs, i64 %indvars.iv
  %16 = load double, double* %arrayidx, align 8, !tbaa !84
  %arrayidx10 = getelementptr inbounds double, double* %ycoefs, i64 %indvars.iv
  %17 = load double, double* %arrayidx10, align 8, !tbaa !84
  %mul11 = fmul contract double %16, %17
  %add12 = fadd contract double %add121416, %mul11
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %arrayidx.1 = getelementptr inbounds double, double* %xcoefs, i64 %indvars.iv.next
  %18 = load double, double* %arrayidx.1, align 8, !tbaa !84
  %arrayidx10.1 = getelementptr inbounds double, double* %ycoefs, i64 %indvars.iv.next
  %19 = load double, double* %arrayidx10.1, align 8, !tbaa !84
  %mul11.1 = fmul contract double %18, %19
  %add12.1 = fadd contract double %add12, %mul11.1
  %indvars.iv.next.1 = add nsw i64 %indvars.iv, 2
  %arrayidx.2 = getelementptr inbounds double, double* %xcoefs, i64 %indvars.iv.next.1
  %20 = load double, double* %arrayidx.2, align 8, !tbaa !84
  %arrayidx10.2 = getelementptr inbounds double, double* %ycoefs, i64 %indvars.iv.next.1
  %21 = load double, double* %arrayidx10.2, align 8, !tbaa !84
  %mul11.2 = fmul contract double %20, %21
  %add12.2 = fadd contract double %add12.1, %mul11.2
  %indvars.iv.next.2 = add nsw i64 %indvars.iv, 3
  %arrayidx.3 = getelementptr inbounds double, double* %xcoefs, i64 %indvars.iv.next.2
  %22 = load double, double* %arrayidx.3, align 8, !tbaa !84
  %arrayidx10.3 = getelementptr inbounds double, double* %ycoefs, i64 %indvars.iv.next.2
  %23 = load double, double* %arrayidx10.3, align 8, !tbaa !84
  %mul11.3 = fmul contract double %22, %23
  %add12.3 = fadd contract double %add12.2, %mul11.3
  %indvars.iv.next.3 = add nsw i64 %indvars.iv, 4
  %arrayidx.4 = getelementptr inbounds double, double* %xcoefs, i64 %indvars.iv.next.3
  %24 = load double, double* %arrayidx.4, align 8, !tbaa !84
  %arrayidx10.4 = getelementptr inbounds double, double* %ycoefs, i64 %indvars.iv.next.3
  %25 = load double, double* %arrayidx10.4, align 8, !tbaa !84
  %mul11.4 = fmul contract double %24, %25
  %add12.4 = fadd contract double %add12.3, %mul11.4
  %indvars.iv.next.4 = add nsw i64 %indvars.iv, 5
  %arrayidx.5 = getelementptr inbounds double, double* %xcoefs, i64 %indvars.iv.next.4
  %26 = load double, double* %arrayidx.5, align 8, !tbaa !84
  %arrayidx10.5 = getelementptr inbounds double, double* %ycoefs, i64 %indvars.iv.next.4
  %27 = load double, double* %arrayidx10.5, align 8, !tbaa !84
  %mul11.5 = fmul contract double %26, %27
  %add12.5 = fadd contract double %add12.4, %mul11.5
  %indvars.iv.next.5 = add nsw i64 %indvars.iv, 6
  %arrayidx.6 = getelementptr inbounds double, double* %xcoefs, i64 %indvars.iv.next.5
  %28 = load double, double* %arrayidx.6, align 8, !tbaa !84
  %arrayidx10.6 = getelementptr inbounds double, double* %ycoefs, i64 %indvars.iv.next.5
  %29 = load double, double* %arrayidx10.6, align 8, !tbaa !84
  %mul11.6 = fmul contract double %28, %29
  %add12.6 = fadd contract double %add12.5, %mul11.6
  %indvars.iv.next.6 = add nsw i64 %indvars.iv, 7
  %arrayidx.7 = getelementptr inbounds double, double* %xcoefs, i64 %indvars.iv.next.6
  %30 = load double, double* %arrayidx.7, align 8, !tbaa !84
  %arrayidx10.7 = getelementptr inbounds double, double* %ycoefs, i64 %indvars.iv.next.6
  %31 = load double, double* %arrayidx10.7, align 8, !tbaa !84
  %mul11.7 = fmul contract double %30, %31
  %add12.7 = fadd contract double %add12.6, %mul11.7
  %indvars.iv.next.7 = add nsw i64 %indvars.iv, 8
  %lftr.wideiv.7 = trunc i64 %indvars.iv.next.7 to i32
  %exitcond.not.7 = icmp eq i32 %9, %lftr.wideiv.7
  br i1 %exitcond.not.7, label %omp.loop.exit, label %omp.inner.for.body

omp.loop.exit:                                    ; preds = %omp.inner.for.body.prol.loopexit, %omp.inner.for.body, %omp.precond.then
  %add1214.lcssa = phi double [ 0.000000e+00, %omp.precond.then ], [ %add12.lcssa.unr, %omp.inner.for.body.prol.loopexit ], [ %add12.7, %omp.inner.for.body ]
  store double %add1214.lcssa, double* %result5, align 8, !tbaa !84
  call void @__kmpc_for_static_fini(%struct.ident_t* nonnull @4, i32 %5)
  %32 = bitcast [1 x i8*]* %.omp.reduction.red_list to double**
  store double* %result5, double** %32, align 8
  %33 = bitcast [1 x i8*]* %.omp.reduction.red_list to i8*
  %34 = call i32 @__kmpc_reduce_nowait(%struct.ident_t* nonnull @2, i32 %5, i32 1, i64 8, i8* nonnull %33, void (i8*, i8*)* nonnull @.omp.reduction.reduction_func.140, [8 x i32]* nonnull @.gomp_critical_user_.reduction.var)
  switch i32 %34, label %.omp.reduction.default [
    i32 1, label %.omp.reduction.case1
    i32 2, label %.omp.reduction.case2
  ]

.omp.reduction.case1:                             ; preds = %omp.loop.exit
  %35 = load double, double* %result, align 8, !tbaa !84
  %36 = load double, double* %result5, align 8, !tbaa !84
  %add14 = fadd contract double %35, %36
  store double %add14, double* %result, align 8, !tbaa !84
  call void @__kmpc_end_reduce_nowait(%struct.ident_t* nonnull @2, i32 %5, [8 x i32]* nonnull @.gomp_critical_user_.reduction.var)
  br label %.omp.reduction.default

.omp.reduction.case2:                             ; preds = %omp.loop.exit
  %37 = bitcast double* %result to i64*
  %atomic-load = load atomic i64, i64* %37 monotonic, align 8, !tbaa !84
  %38 = load double, double* %result5, align 8, !tbaa !84
  br label %atomic_cont

atomic_cont:                                      ; preds = %atomic_cont, %.omp.reduction.case2
  %39 = phi i64 [ %atomic-load, %.omp.reduction.case2 ], [ %43, %atomic_cont ]
  %40 = bitcast i64 %39 to double
  %add16 = fadd contract double %38, %40
  %41 = bitcast double %add16 to i64
  %42 = cmpxchg i64* %37, i64 %39, i64 %41 monotonic monotonic, align 8
  %43 = extractvalue { i64, i1 } %42, 0
  %44 = extractvalue { i64, i1 } %42, 1
  br i1 %44, label %.omp.reduction.default, label %atomic_cont

.omp.reduction.default:                           ; preds = %atomic_cont, %.omp.reduction.case1, %omp.loop.exit
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8
  br label %omp.precond.end

omp.precond.end:                                  ; preds = %.omp.reduction.default, %entry
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define internal void @.omp.reduction.reduction_func.140(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) #9 {
entry:
  %2 = bitcast i8* %1 to double**
  %3 = load double*, double** %2, align 8
  %4 = bitcast i8* %0 to double**
  %5 = load double*, double** %4, align 8
  %6 = load double, double* %5, align 8, !tbaa !84
  %7 = load double, double* %3, align 8, !tbaa !84
  %add = fadd contract double %6, %7
  store double %add, double* %5, align 8, !tbaa !84
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define internal void @.omp.reduction.reduction_func.141(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) #9 {
entry:
  %2 = bitcast i8* %1 to double**
  %3 = load double*, double** %2, align 8
  %4 = bitcast i8* %0 to double**
  %5 = load double*, double** %4, align 8
  %6 = load double, double* %5, align 8, !tbaa !84
  %7 = load double, double* %3, align 8, !tbaa !84
  %add = fadd contract double %6, %7
  store double %add, double* %5, align 8, !tbaa !84
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.fabs.f64(double) #20

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN6miniFE10matvec_stdINS_9CSRMatrixIdiiEENS_6VectorIdiiEEEclERS2_RS4_S7_(%"struct.miniFE::matvec_std"* noundef nonnull align 1 dereferenceable(1) %this, %"struct.miniFE::CSRMatrix"* noundef nonnull align 8 dereferenceable(132) %A, %"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %x, %"struct.miniFE::Vector"* noundef nonnull align 8 dereferenceable(32) %y) local_unnamed_addr #11 comdat align 2 {
entry:
  %.offload_baseptrs = alloca [8 x i8*], align 8
  %.offload_ptrs = alloca [8 x i8*], align 8
  %_M_finish.i = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 2, i32 0, i32 0, i32 1
  %0 = load i32*, i32** %_M_finish.i, align 8, !tbaa !71
  %_M_start.i = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 2, i32 0, i32 0, i32 0
  %1 = load i32*, i32** %_M_start.i, align 8, !tbaa !74
  %sub.ptr.lhs.cast.i = ptrtoint i32* %0 to i64
  %sub.ptr.rhs.cast.i = ptrtoint i32* %1 to i64
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %2 = lshr exact i64 %sub.ptr.sub.i, 2
  %_M_start.i18 = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load i32*, i32** %_M_start.i18, align 8, !tbaa !74
  %_M_start.i19 = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 5, i32 0, i32 0, i32 0
  %4 = load i32*, i32** %_M_start.i19, align 8, !tbaa !74
  %_M_start.i20 = getelementptr inbounds %"struct.miniFE::CSRMatrix", %"struct.miniFE::CSRMatrix"* %A, i64 0, i32 6, i32 0, i32 0, i32 0
  %5 = load double*, double** %_M_start.i20, align 8, !tbaa !78
  %_M_start.i21 = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %x, i64 0, i32 2, i32 0, i32 0, i32 0
  %6 = load double*, double** %_M_start.i21, align 8, !tbaa !78
  %_M_start.i22 = getelementptr inbounds %"struct.miniFE::Vector", %"struct.miniFE::Vector"* %y, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = load double*, double** %_M_start.i22, align 8, !tbaa !78
  %rows_size.casted.sroa.0.0.insert.ext = and i64 %2, 4294967295
  %8 = getelementptr inbounds [8 x i8*], [8 x i8*]* %.offload_baseptrs, i64 0, i64 0
  %9 = bitcast [8 x i8*]* %.offload_baseptrs to i64*
  store i64 %rows_size.casted.sroa.0.0.insert.ext, i64* %9, align 8
  %10 = getelementptr inbounds [8 x i8*], [8 x i8*]* %.offload_ptrs, i64 0, i64 0
  %11 = bitcast [8 x i8*]* %.offload_ptrs to i64*
  store i64 %rows_size.casted.sroa.0.0.insert.ext, i64* %11, align 8
  %12 = getelementptr inbounds [8 x i8*], [8 x i8*]* %.offload_baseptrs, i64 0, i64 1
  %13 = bitcast i8** %12 to i64*
  store i64 0, i64* %13, align 8
  %14 = getelementptr inbounds [8 x i8*], [8 x i8*]* %.offload_ptrs, i64 0, i64 1
  %15 = bitcast i8** %14 to i64*
  store i64 0, i64* %15, align 8
  %16 = getelementptr inbounds [8 x i8*], [8 x i8*]* %.offload_baseptrs, i64 0, i64 2
  %17 = bitcast i8** %16 to i32**
  store i32* %3, i32** %17, align 8
  %18 = getelementptr inbounds [8 x i8*], [8 x i8*]* %.offload_ptrs, i64 0, i64 2
  %19 = bitcast i8** %18 to i32**
  store i32* %3, i32** %19, align 8
  %20 = getelementptr inbounds [8 x i8*], [8 x i8*]* %.offload_baseptrs, i64 0, i64 3
  %21 = bitcast i8** %20 to i64*
  store i64 0, i64* %21, align 8
  %22 = getelementptr inbounds [8 x i8*], [8 x i8*]* %.offload_ptrs, i64 0, i64 3
  %23 = bitcast i8** %22 to i64*
  store i64 0, i64* %23, align 8
  %24 = getelementptr inbounds [8 x i8*], [8 x i8*]* %.offload_baseptrs, i64 0, i64 4
  %25 = bitcast i8** %24 to double**
  store double* %5, double** %25, align 8
  %26 = getelementptr inbounds [8 x i8*], [8 x i8*]* %.offload_ptrs, i64 0, i64 4
  %27 = bitcast i8** %26 to double**
  store double* %5, double** %27, align 8
  %28 = getelementptr inbounds [8 x i8*], [8 x i8*]* %.offload_baseptrs, i64 0, i64 5
  %29 = bitcast i8** %28 to double**
  store double* %6, double** %29, align 8
  %30 = getelementptr inbounds [8 x i8*], [8 x i8*]* %.offload_ptrs, i64 0, i64 5
  %31 = bitcast i8** %30 to double**
  store double* %6, double** %31, align 8
  %32 = getelementptr inbounds [8 x i8*], [8 x i8*]* %.offload_baseptrs, i64 0, i64 6
  %33 = bitcast i8** %32 to i32**
  store i32* %4, i32** %33, align 8
  %34 = getelementptr inbounds [8 x i8*], [8 x i8*]* %.offload_ptrs, i64 0, i64 6
  %35 = bitcast i8** %34 to i32**
  store i32* %4, i32** %35, align 8
  %36 = getelementptr inbounds [8 x i8*], [8 x i8*]* %.offload_baseptrs, i64 0, i64 7
  %37 = bitcast i8** %36 to double**
  store double* %7, double** %37, align 8
  %38 = getelementptr inbounds [8 x i8*], [8 x i8*]* %.offload_ptrs, i64 0, i64 7
  %39 = bitcast i8** %38 to double**
  store double* %7, double** %39, align 8
  tail call void @__kmpc_push_target_tripcount_mapper(%struct.ident_t* nonnull @3, i64 -1, i64 %rows_size.casted.sroa.0.0.insert.ext)
  %40 = call i32 @__tgt_target_teams_mapper(%struct.ident_t* nonnull @3, i64 -1, i8* nonnull @.__omp_offloading_31_355dd02__ZN6miniFE10matvec_stdINS_9CSRMatrixIdiiEENS_6VectorIdiiEEEclERS2_RS4_S7__l521.region_id, i32 8, i8** nonnull %8, i8** nonnull %10, i64* getelementptr inbounds ([8 x i64], [8 x i64]* @.offload_sizes.147, i64 0, i64 0), i64* getelementptr inbounds ([8 x i64], [8 x i64]* @.offload_maptypes.148, i64 0, i64 0), i8** null, i8** null, i32 0, i32 0)
  %.not = icmp eq i32 %40, 0
  br i1 %.not, label %omp_offload.cont, label %omp_offload.failed

omp_offload.failed:                               ; preds = %entry
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_teams(%struct.ident_t* nonnull @3, i32 8, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, i64, i32*, i64, double*, double*, i32*, double*)* @.omp_outlined..145 to void (i32*, i32*, ...)*), i64 %rows_size.casted.sroa.0.0.insert.ext, i64 0, i32* %3, i64 0, double* %5, double* %6, i32* %4, double* %7) #8
  br label %omp_offload.cont

omp_offload.cont:                                 ; preds = %omp_offload.failed, %entry
  ret void
}

; Function Attrs: alwaysinline norecurse nounwind uwtable
define internal void @.omp_outlined..145(i32* noalias nocapture noundef readonly %.global_tid., i32* noalias nocapture noundef readnone %.bound_tid., i64 noundef %rows_size, i64 noundef %row_start, i32* noundef %Arowoffsets, i64 noundef %row_end, double* noundef %Acoefs, double* noundef %xcoefs, i32* noundef %Acols, double* noundef %ycoefs) #7 {
entry:
  %.omp.comb.lb = alloca i32, align 4
  %.omp.comb.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %rows_size.addr.sroa.0.0.extract.trunc = trunc i64 %rows_size to i32
  %sub4 = add nsw i32 %rows_size.addr.sroa.0.0.extract.trunc, -1
  %cmp = icmp sgt i32 %rows_size.addr.sroa.0.0.extract.trunc, 0
  br i1 %cmp, label %omp.precond.then, label %omp.precond.end

omp.precond.then:                                 ; preds = %entry
  %0 = bitcast i32* %.omp.comb.lb to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8
  store i32 0, i32* %.omp.comb.lb, align 4, !tbaa !16
  %1 = bitcast i32* %.omp.comb.ub to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8
  store i32 %sub4, i32* %.omp.comb.ub, align 4, !tbaa !16
  %2 = bitcast i32* %.omp.stride to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #8
  store i32 1, i32* %.omp.stride, align 4, !tbaa !16
  %3 = bitcast i32* %.omp.is_last to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #8
  store i32 0, i32* %.omp.is_last, align 4, !tbaa !16
  %4 = load i32, i32* %.global_tid., align 4, !tbaa !16
  call void @__kmpc_for_static_init_4(%struct.ident_t* nonnull @4, i32 %4, i32 92, i32* nonnull %.omp.is_last, i32* nonnull %.omp.comb.lb, i32* nonnull %.omp.comb.ub, i32* nonnull %.omp.stride, i32 1, i32 1)
  %5 = load i32, i32* %.omp.comb.ub, align 4, !tbaa !16
  %cmp6 = icmp sgt i32 %5, %sub4
  %cond = select i1 %cmp6, i32 %sub4, i32 %5
  store i32 %cond, i32* %.omp.comb.ub, align 4, !tbaa !16
  %6 = load i32, i32* %.omp.comb.lb, align 4, !tbaa !16
  %rows_size.casted.sroa.0.0.insert.ext = and i64 %rows_size, 4294967295
  %row_start.casted.sroa.0.0.insert.ext = and i64 %row_start, 4294967295
  %row_end.casted.sroa.0.0.insert.ext = and i64 %row_end, 4294967295
  %cmp7.not12 = icmp sgt i32 %6, %cond
  br i1 %cmp7.not12, label %omp.loop.exit, label %omp.inner.for.body.preheader

omp.inner.for.body.preheader:                     ; preds = %omp.precond.then
  %7 = zext i32 %6 to i64
  %8 = zext i32 %cond to i64
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull @3, i32 10, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, i64, i64, i64, i32*, i64, double*, double*, i32*, double*)* @.omp_outlined..146 to void (i32*, i32*, ...)*), i64 %7, i64 %8, i64 %rows_size.casted.sroa.0.0.insert.ext, i64 %row_start.casted.sroa.0.0.insert.ext, i32* %Arowoffsets, i64 %row_end.casted.sroa.0.0.insert.ext, double* %Acoefs, double* %xcoefs, i32* %Acols, double* %ycoefs)
  %9 = load i32, i32* %.omp.stride, align 4, !tbaa !16
  %add21 = add nsw i32 %9, %6
  %10 = load i32, i32* %.omp.comb.ub, align 4, !tbaa !16
  %cmp7.not22 = icmp sgt i32 %add21, %10
  br i1 %cmp7.not22, label %omp.loop.exit, label %omp.inner.for.body.omp.inner.for.body_crit_edge

omp.inner.for.body.omp.inner.for.body_crit_edge:  ; preds = %omp.inner.for.body.preheader, %omp.inner.for.body.omp.inner.for.body_crit_edge
  %11 = phi i32 [ %15, %omp.inner.for.body.omp.inner.for.body_crit_edge ], [ %10, %omp.inner.for.body.preheader ]
  %add23 = phi i32 [ %add, %omp.inner.for.body.omp.inner.for.body_crit_edge ], [ %add21, %omp.inner.for.body.preheader ]
  %.pre = load i32, i32* %.omp.comb.lb, align 4
  %12 = zext i32 %.pre to i64
  %13 = zext i32 %11 to i64
  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull @3, i32 10, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i64, i64, i64, i64, i32*, i64, double*, double*, i32*, double*)* @.omp_outlined..146 to void (i32*, i32*, ...)*), i64 %12, i64 %13, i64 %rows_size.casted.sroa.0.0.insert.ext, i64 %row_start.casted.sroa.0.0.insert.ext, i32* %Arowoffsets, i64 %row_end.casted.sroa.0.0.insert.ext, double* %Acoefs, double* %xcoefs, i32* %Acols, double* %ycoefs)
  %14 = load i32, i32* %.omp.stride, align 4, !tbaa !16
  %add = add nsw i32 %14, %add23
  %15 = load i32, i32* %.omp.comb.ub, align 4, !tbaa !16
  %cmp7.not = icmp sgt i32 %add, %15
  br i1 %cmp7.not, label %omp.loop.exit, label %omp.inner.for.body.omp.inner.for.body_crit_edge

omp.loop.exit:                                    ; preds = %omp.inner.for.body.omp.inner.for.body_crit_edge, %omp.inner.for.body.preheader, %omp.precond.then
  call void @__kmpc_for_static_fini(%struct.ident_t* nonnull @4, i32 %4)
  br label %omp.precond.end

omp.precond.end:                                  ; preds = %entry, %omp.loop.exit
  %.pre-phi = bitcast i32* %.omp.is_last to i8*
  %.pre-phi16 = bitcast i32* %.omp.stride to i8*
  %.pre-phi18 = bitcast i32* %.omp.comb.ub to i8*
  %.pre-phi20 = bitcast i32* %.omp.comb.lb to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %.pre-phi) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %.pre-phi16) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %.pre-phi18) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %.pre-phi20) #8
  ret void
}

; Function Attrs: alwaysinline norecurse nounwind uwtable
define internal void @.omp_outlined..146(i32* noalias nocapture noundef readonly %.global_tid., i32* noalias nocapture noundef readnone %.bound_tid., i64 noundef %.previous.lb., i64 noundef %.previous.ub., i64 noundef %rows_size, i64 noundef %row_start, i32* nocapture noundef readonly %Arowoffsets, i64 noundef %row_end, double* nocapture noundef readonly %Acoefs, double* nocapture noundef readonly %xcoefs, i32* nocapture noundef readonly %Acols, double* nocapture noundef writeonly %ycoefs) #7 {
entry:
  %.omp.lb = alloca i32, align 4
  %.omp.ub = alloca i32, align 4
  %.omp.stride = alloca i32, align 4
  %.omp.is_last = alloca i32, align 4
  %rows_size.addr.sroa.0.0.extract.trunc = trunc i64 %rows_size to i32
  %sub4 = add nsw i32 %rows_size.addr.sroa.0.0.extract.trunc, -1
  %cmp = icmp sgt i32 %rows_size.addr.sroa.0.0.extract.trunc, 0
  br i1 %cmp, label %omp.precond.then, label %omp.precond.end

omp.precond.then:                                 ; preds = %entry
  %0 = bitcast i32* %.omp.lb to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8
  %1 = bitcast i32* %.omp.ub to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8
  %conv5 = trunc i64 %.previous.lb. to i32
  %conv6 = trunc i64 %.previous.ub. to i32
  store i32 %conv5, i32* %.omp.lb, align 4, !tbaa !16
  store i32 %conv6, i32* %.omp.ub, align 4, !tbaa !16
  %2 = bitcast i32* %.omp.stride to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #8
  store i32 1, i32* %.omp.stride, align 4, !tbaa !16
  %3 = bitcast i32* %.omp.is_last to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #8
  store i32 0, i32* %.omp.is_last, align 4, !tbaa !16
  %4 = load i32, i32* %.global_tid., align 4, !tbaa !16
  call void @__kmpc_for_static_init_4(%struct.ident_t* nonnull @1, i32 %4, i32 34, i32* nonnull %.omp.is_last, i32* nonnull %.omp.lb, i32* nonnull %.omp.ub, i32* nonnull %.omp.stride, i32 1, i32 1)
  %5 = load i32, i32* %.omp.ub, align 4, !tbaa !16
  %cmp8 = icmp sgt i32 %5, %sub4
  %cond = select i1 %cmp8, i32 %sub4, i32 %5
  store i32 %cond, i32* %.omp.ub, align 4, !tbaa !16
  %6 = load i32, i32* %.omp.lb, align 4, !tbaa !16
  %cmp9.not24 = icmp sgt i32 %6, %cond
  br i1 %cmp9.not24, label %omp.loop.exit, label %omp.inner.for.body.preheader

omp.inner.for.body.preheader:                     ; preds = %omp.precond.then
  %7 = sext i32 %6 to i64
  %8 = add nsw i32 %cond, 1
  %arrayidx.phi.trans.insert = getelementptr inbounds i32, i32* %Arowoffsets, i64 %7
  %.pre = load i32, i32* %arrayidx.phi.trans.insert, align 4, !tbaa !16
  br label %omp.inner.for.body

omp.inner.for.body:                               ; preds = %omp.inner.for.body.preheader, %for.cond.cleanup
  %9 = phi i32 [ %.pre, %omp.inner.for.body.preheader ], [ %10, %for.cond.cleanup ]
  %indvars.iv27 = phi i64 [ %7, %omp.inner.for.body.preheader ], [ %indvars.iv.next28, %for.cond.cleanup ]
  %indvars.iv.next28 = add nsw i64 %indvars.iv27, 1
  %arrayidx12 = getelementptr inbounds i32, i32* %Arowoffsets, i64 %indvars.iv.next28
  %10 = load i32, i32* %arrayidx12, align 4, !tbaa !16
  %cmp1321 = icmp slt i32 %9, %10
  br i1 %cmp1321, label %for.body.preheader, label %for.cond.cleanup

for.body.preheader:                               ; preds = %omp.inner.for.body
  %11 = sext i32 %9 to i64
  %wide.trip.count = sext i32 %10 to i64
  %12 = sub nsw i64 %wide.trip.count, %11
  %13 = xor i64 %11, -1
  %14 = add nsw i64 %13, %wide.trip.count
  %xtraiter = and i64 %12, 3
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.body.prol.loopexit, label %for.body.prol

for.body.prol:                                    ; preds = %for.body.preheader, %for.body.prol
  %indvars.iv.prol = phi i64 [ %indvars.iv.next.prol, %for.body.prol ], [ %11, %for.body.preheader ]
  %sum.022.prol = phi double [ %add21.prol, %for.body.prol ], [ 0.000000e+00, %for.body.preheader ]
  %prol.iter = phi i64 [ %prol.iter.next, %for.body.prol ], [ 0, %for.body.preheader ]
  %arrayidx15.prol = getelementptr inbounds double, double* %Acoefs, i64 %indvars.iv.prol
  %15 = load double, double* %arrayidx15.prol, align 8, !tbaa !84
  %arrayidx17.prol = getelementptr inbounds i32, i32* %Acols, i64 %indvars.iv.prol
  %16 = load i32, i32* %arrayidx17.prol, align 4, !tbaa !16
  %idxprom18.prol = sext i32 %16 to i64
  %arrayidx19.prol = getelementptr inbounds double, double* %xcoefs, i64 %idxprom18.prol
  %17 = load double, double* %arrayidx19.prol, align 8, !tbaa !84
  %mul20.prol = fmul contract double %15, %17
  %add21.prol = fadd contract double %sum.022.prol, %mul20.prol
  %indvars.iv.next.prol = add nsw i64 %indvars.iv.prol, 1
  %prol.iter.next = add i64 %prol.iter, 1
  %prol.iter.cmp.not = icmp eq i64 %prol.iter.next, %xtraiter
  br i1 %prol.iter.cmp.not, label %for.body.prol.loopexit, label %for.body.prol, !llvm.loop !298

for.body.prol.loopexit:                           ; preds = %for.body.prol, %for.body.preheader
  %add21.lcssa.unr = phi double [ undef, %for.body.preheader ], [ %add21.prol, %for.body.prol ]
  %indvars.iv.unr = phi i64 [ %11, %for.body.preheader ], [ %indvars.iv.next.prol, %for.body.prol ]
  %sum.022.unr = phi double [ 0.000000e+00, %for.body.preheader ], [ %add21.prol, %for.body.prol ]
  %18 = icmp ult i64 %14, 3
  br i1 %18, label %for.cond.cleanup, label %for.body

for.cond.cleanup:                                 ; preds = %for.body.prol.loopexit, %for.body, %omp.inner.for.body
  %sum.0.lcssa = phi double [ 0.000000e+00, %omp.inner.for.body ], [ %add21.lcssa.unr, %for.body.prol.loopexit ], [ %add21.3, %for.body ]
  %arrayidx23 = getelementptr inbounds double, double* %ycoefs, i64 %indvars.iv27
  store double %sum.0.lcssa, double* %arrayidx23, align 8, !tbaa !84
  %lftr.wideiv = trunc i64 %indvars.iv.next28 to i32
  %exitcond30.not = icmp eq i32 %8, %lftr.wideiv
  br i1 %exitcond30.not, label %omp.loop.exit, label %omp.inner.for.body

for.body:                                         ; preds = %for.body.prol.loopexit, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next.3, %for.body ], [ %indvars.iv.unr, %for.body.prol.loopexit ]
  %sum.022 = phi double [ %add21.3, %for.body ], [ %sum.022.unr, %for.body.prol.loopexit ]
  %arrayidx15 = getelementptr inbounds double, double* %Acoefs, i64 %indvars.iv
  %19 = load double, double* %arrayidx15, align 8, !tbaa !84
  %arrayidx17 = getelementptr inbounds i32, i32* %Acols, i64 %indvars.iv
  %20 = load i32, i32* %arrayidx17, align 4, !tbaa !16
  %idxprom18 = sext i32 %20 to i64
  %arrayidx19 = getelementptr inbounds double, double* %xcoefs, i64 %idxprom18
  %21 = load double, double* %arrayidx19, align 8, !tbaa !84
  %mul20 = fmul contract double %19, %21
  %add21 = fadd contract double %sum.022, %mul20
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %arrayidx15.1 = getelementptr inbounds double, double* %Acoefs, i64 %indvars.iv.next
  %22 = load double, double* %arrayidx15.1, align 8, !tbaa !84
  %arrayidx17.1 = getelementptr inbounds i32, i32* %Acols, i64 %indvars.iv.next
  %23 = load i32, i32* %arrayidx17.1, align 4, !tbaa !16
  %idxprom18.1 = sext i32 %23 to i64
  %arrayidx19.1 = getelementptr inbounds double, double* %xcoefs, i64 %idxprom18.1
  %24 = load double, double* %arrayidx19.1, align 8, !tbaa !84
  %mul20.1 = fmul contract double %22, %24
  %add21.1 = fadd contract double %add21, %mul20.1
  %indvars.iv.next.1 = add nsw i64 %indvars.iv, 2
  %arrayidx15.2 = getelementptr inbounds double, double* %Acoefs, i64 %indvars.iv.next.1
  %25 = load double, double* %arrayidx15.2, align 8, !tbaa !84
  %arrayidx17.2 = getelementptr inbounds i32, i32* %Acols, i64 %indvars.iv.next.1
  %26 = load i32, i32* %arrayidx17.2, align 4, !tbaa !16
  %idxprom18.2 = sext i32 %26 to i64
  %arrayidx19.2 = getelementptr inbounds double, double* %xcoefs, i64 %idxprom18.2
  %27 = load double, double* %arrayidx19.2, align 8, !tbaa !84
  %mul20.2 = fmul contract double %25, %27
  %add21.2 = fadd contract double %add21.1, %mul20.2
  %indvars.iv.next.2 = add nsw i64 %indvars.iv, 3
  %arrayidx15.3 = getelementptr inbounds double, double* %Acoefs, i64 %indvars.iv.next.2
  %28 = load double, double* %arrayidx15.3, align 8, !tbaa !84
  %arrayidx17.3 = getelementptr inbounds i32, i32* %Acols, i64 %indvars.iv.next.2
  %29 = load i32, i32* %arrayidx17.3, align 4, !tbaa !16
  %idxprom18.3 = sext i32 %29 to i64
  %arrayidx19.3 = getelementptr inbounds double, double* %xcoefs, i64 %idxprom18.3
  %30 = load double, double* %arrayidx19.3, align 8, !tbaa !84
  %mul20.3 = fmul contract double %28, %30
  %add21.3 = fadd contract double %add21.2, %mul20.3
  %indvars.iv.next.3 = add nsw i64 %indvars.iv, 4
  %exitcond.not.3 = icmp eq i64 %indvars.iv.next.3, %wide.trip.count
  br i1 %exitcond.not.3, label %for.cond.cleanup, label %for.body, !llvm.loop !299

omp.loop.exit:                                    ; preds = %for.cond.cleanup, %omp.precond.then
  call void @__kmpc_for_static_fini(%struct.ident_t* nonnull @4, i32 %4)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8
  br label %omp.precond.end

omp.precond.end:                                  ; preds = %omp.loop.exit, %entry
  ret void
}

; Function Attrs: mustprogress nofree nounwind willreturn writeonly
declare double @sin(double noundef) local_unnamed_addr #25

; Function Attrs: mustprogress nofree nounwind willreturn writeonly
declare double @sinh(double noundef) local_unnamed_addr #25

; Function Attrs: nounwind
declare i64 @time(i64* noundef) local_unnamed_addr #1

; Function Attrs: nounwind
declare %struct.tm* @localtime(i64* noundef) local_unnamed_addr #1

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_main.cpp() #11 section ".text.startup" {
entry:
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* noundef nonnull align 1 dereferenceable(1) @_ZStL8__ioinit)
  %0 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #8
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @.omp_offloading.requires_reg() #12 section ".text.startup" {
entry:
  tail call void @__tgt_register_requires(i64 1)
  ret void
}

; Function Attrs: nounwind
declare void @__tgt_register_requires(i64) local_unnamed_addr #8

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.assume(i1 noundef) #26

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.umax.i64(i64, i64) #27

; Function Attrs: nofree nosync nounwind readnone willreturn
declare i32 @llvm.vector.reduce.add.v4i32(<4 x i32>) #28

attributes #0 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="ppc64le" "target-features"="+altivec,+bpermd,+crypto,+direct-move,+extdiv,+htm,+isa-v206-instructions,+isa-v207-instructions,+power8-vector,+vsx,-isa-v30-instructions,-power9-vector,-privileged,-rop-protect,-spe" }
attributes #1 = { nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="ppc64le" "target-features"="+altivec,+bpermd,+crypto,+direct-move,+extdiv,+htm,+isa-v206-instructions,+isa-v207-instructions,+power8-vector,+vsx,-isa-v30-instructions,-power9-vector,-privileged,-rop-protect,-spe" }
attributes #2 = { nofree nounwind }
attributes #3 = { mustprogress nofree norecurse nosync nounwind readonly uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="ppc64le" "target-features"="+altivec,+bpermd,+crypto,+direct-move,+extdiv,+htm,+isa-v206-instructions,+isa-v207-instructions,+power8-vector,+vsx,-isa-v30-instructions,-power9-vector,-privileged,-rop-protect,-spe" }
attributes #4 = { argmemonly mustprogress nofree nosync nounwind willreturn }
attributes #5 = { norecurse uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="ppc64le" "target-features"="+altivec,+bpermd,+crypto,+direct-move,+extdiv,+htm,+isa-v206-instructions,+isa-v207-instructions,+power8-vector,+vsx,-isa-v30-instructions,-power9-vector,-privileged,-rop-protect,-spe" }
attributes #6 = { inlinehint mustprogress uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="ppc64le" "target-features"="+altivec,+bpermd,+crypto,+direct-move,+extdiv,+htm,+isa-v206-instructions,+isa-v207-instructions,+power8-vector,+vsx,-isa-v30-instructions,-power9-vector,-privileged,-rop-protect,-spe" }
attributes #7 = { alwaysinline norecurse nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="ppc64le" "target-features"="+altivec,+bpermd,+crypto,+direct-move,+extdiv,+htm,+isa-v206-instructions,+isa-v207-instructions,+power8-vector,+vsx,-isa-v30-instructions,-power9-vector,-privileged,-rop-protect,-spe" }
attributes #8 = { nounwind }
attributes #9 = { mustprogress nofree norecurse nosync nounwind uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="ppc64le" "target-features"="+altivec,+bpermd,+crypto,+direct-move,+extdiv,+htm,+isa-v206-instructions,+isa-v207-instructions,+power8-vector,+vsx,-isa-v30-instructions,-power9-vector,-privileged,-rop-protect,-spe" }
attributes #10 = { convergent nounwind }
attributes #11 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="ppc64le" "target-features"="+altivec,+bpermd,+crypto,+direct-move,+extdiv,+htm,+isa-v206-instructions,+isa-v207-instructions,+power8-vector,+vsx,-isa-v30-instructions,-power9-vector,-privileged,-rop-protect,-spe" }
attributes #12 = { nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="ppc64le" "target-features"="+altivec,+bpermd,+crypto,+direct-move,+extdiv,+htm,+isa-v206-instructions,+isa-v207-instructions,+power8-vector,+vsx,-isa-v30-instructions,-power9-vector,-privileged,-rop-protect,-spe" }
attributes #13 = { inlinehint nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="ppc64le" "target-features"="+altivec,+bpermd,+crypto,+direct-move,+extdiv,+htm,+isa-v206-instructions,+isa-v207-instructions,+power8-vector,+vsx,-isa-v30-instructions,-power9-vector,-privileged,-rop-protect,-spe" }
attributes #14 = { noreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="ppc64le" "target-features"="+altivec,+bpermd,+crypto,+direct-move,+extdiv,+htm,+isa-v206-instructions,+isa-v207-instructions,+power8-vector,+vsx,-isa-v30-instructions,-power9-vector,-privileged,-rop-protect,-spe" }
attributes #15 = { nobuiltin allocsize(0) "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="ppc64le" "target-features"="+altivec,+bpermd,+crypto,+direct-move,+extdiv,+htm,+isa-v206-instructions,+isa-v207-instructions,+power8-vector,+vsx,-isa-v30-instructions,-power9-vector,-privileged,-rop-protect,-spe" }
attributes #16 = { argmemonly mustprogress nofree nounwind willreturn writeonly }
attributes #17 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #18 = { noinline noreturn nounwind }
attributes #19 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="ppc64le" "target-features"="+altivec,+bpermd,+crypto,+direct-move,+extdiv,+htm,+isa-v206-instructions,+isa-v207-instructions,+power8-vector,+vsx,-isa-v30-instructions,-power9-vector,-privileged,-rop-protect,-spe" }
attributes #20 = { mustprogress nofree nosync nounwind readnone speculatable willreturn }
attributes #21 = { mustprogress nofree nounwind readonly willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="ppc64le" "target-features"="+altivec,+bpermd,+crypto,+direct-move,+extdiv,+htm,+isa-v206-instructions,+isa-v207-instructions,+power8-vector,+vsx,-isa-v30-instructions,-power9-vector,-privileged,-rop-protect,-spe" }
attributes #22 = { mustprogress uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="ppc64le" "target-features"="+altivec,+bpermd,+crypto,+direct-move,+extdiv,+htm,+isa-v206-instructions,+isa-v207-instructions,+power8-vector,+vsx,-isa-v30-instructions,-power9-vector,-privileged,-rop-protect,-spe" }
attributes #23 = { nofree nosync nounwind readnone }
attributes #24 = { mustprogress nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="ppc64le" "target-features"="+altivec,+bpermd,+crypto,+direct-move,+extdiv,+htm,+isa-v206-instructions,+isa-v207-instructions,+power8-vector,+vsx,-isa-v30-instructions,-power9-vector,-privileged,-rop-protect,-spe" }
attributes #25 = { mustprogress nofree nounwind willreturn writeonly "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="ppc64le" "target-features"="+altivec,+bpermd,+crypto,+direct-move,+extdiv,+htm,+isa-v206-instructions,+isa-v207-instructions,+power8-vector,+vsx,-isa-v30-instructions,-power9-vector,-privileged,-rop-protect,-spe" }
attributes #26 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #27 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #28 = { nofree nosync nounwind readnone willreturn }
attributes #29 = { noreturn }
attributes #30 = { allocsize(0) }
attributes #31 = { noreturn nounwind }
attributes #32 = { nounwind readonly willreturn }

!omp_offload.info = !{!0, !1, !2, !3, !4, !5, !6, !7, !8, !9, !10, !11}
!llvm.module.flags = !{!12, !13, !14}
!llvm.ident = !{!15}
!nvvm.annotations = !{}

!0 = !{i32 0, i32 49, i32 55958786, !"_ZN6miniFE10matvec_stdINS_9CSRMatrixIdiiEENS_6VectorIdiiEEEclERS2_RS4_S7_", i32 521, i32 11}
!1 = !{i32 0, i32 49, i32 55958795, !"_ZN6miniFE3dotINS_6VectorIdiiEEEENS_10TypeTraitsINT_10ScalarTypeEE14magnitude_typeERKS4_S9_", i32 253, i32 10}
!2 = !{i32 0, i32 49, i32 55958795, !"_ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3_", i32 175, i32 3}
!3 = !{i32 0, i32 49, i32 55958795, !"_ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3_", i32 162, i32 1}
!4 = !{i32 0, i32 49, i32 55958795, !"_ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3_", i32 169, i32 2}
!5 = !{i32 0, i32 49, i32 55958795, !"_ZN6miniFE6waxpbyINS_6VectorIdiiEEEEvNT_10ScalarTypeERKS3_S4_S6_RS3_", i32 157, i32 0}
!6 = !{i32 0, i32 49, i32 55958795, !"_ZN6miniFE6dot_r2INS_6VectorIdiiEEEENS_10TypeTraitsINT_10ScalarTypeEE14magnitude_typeERKS4_", i32 289, i32 4}
!7 = !{i32 0, i32 49, i32 55958795, !"_ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3_", i32 220, i32 9}
!8 = !{i32 0, i32 49, i32 55958795, !"_ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3_", i32 215, i32 8}
!9 = !{i32 0, i32 49, i32 55958795, !"_ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3_", i32 210, i32 7}
!10 = !{i32 0, i32 49, i32 55958795, !"_ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3_", i32 205, i32 6}
!11 = !{i32 0, i32 49, i32 55958795, !"_ZN6miniFE6daxpbyINS_6VectorIdiiEEEEvdRKT_dRS3_", i32 200, i32 5}
!12 = !{i32 1, !"wchar_size", i32 4}
!13 = !{i32 7, !"openmp", i32 50}
!14 = !{i32 7, !"uwtable", i32 1}
!15 = !{!"clang version 14.0.0 (git@github.com:koparasy/ML-LLVM.git 57f6b002589ddbfa715ddd9ea752700e004464bf)"}
!16 = !{!17, !17, i64 0}
!17 = !{!"int", !18, i64 0}
!18 = !{!"omnipotent char", !19, i64 0}
!19 = !{!"Simple C++ TBAA"}
!20 = !{!21, !17, i64 16}
!21 = !{!"_ZTSN6miniFE10ParametersE", !17, i64 0, !17, i64 4, !17, i64 8, !17, i64 12, !17, i64 16, !17, i64 20, !22, i64 24, !23, i64 32, !17, i64 40, !17, i64 44, !17, i64 48, !17, i64 52, !17, i64 56, !17, i64 60, !17, i64 64}
!22 = !{!"float", !18, i64 0}
!23 = !{!"_ZTSSs", !24, i64 0}
!24 = !{!"_ZTSNSs12_Alloc_hiderE", !25, i64 0}
!25 = !{!"any pointer", !18, i64 0}
!26 = !{!21, !17, i64 20}
!27 = !{!21, !22, i64 24}
!28 = !{!24, !25, i64 0}
!29 = !{!21, !17, i64 56}
!30 = !{!21, !17, i64 60}
!31 = !{!21, !17, i64 64}
!32 = !{!33, !33, i64 0}
!33 = !{!"vtable pointer", !19, i64 0}
!34 = !{!35, !25, i64 240}
!35 = !{!"_ZTSSt9basic_iosIcSt11char_traitsIcEE", !25, i64 216, !18, i64 224, !36, i64 225, !25, i64 232, !25, i64 240, !25, i64 248, !25, i64 256}
!36 = !{!"bool", !18, i64 0}
!37 = !{!38, !18, i64 56}
!38 = !{!"_ZTSSt5ctypeIcE", !25, i64 16, !36, i64 24, !25, i64 32, !25, i64 40, !25, i64 48, !18, i64 56, !18, i64 57, !18, i64 313, !18, i64 569}
!39 = !{!18, !18, i64 0}
!40 = !{!21, !17, i64 0}
!41 = !{!21, !17, i64 4}
!42 = !{!21, !17, i64 8}
!43 = !{!23, !25, i64 0}
!44 = !{!45, !46, i64 0}
!45 = !{!"_ZTSNSs9_Rep_baseE", !46, i64 0, !46, i64 8, !17, i64 16}
!46 = !{!"long", !18, i64 0}
!47 = !{!"branch_weights", i32 2000, i32 1}
!48 = !{!49}
!49 = !{i64 2, i64 -1, i64 -1, i1 true}
!50 = !{!35, !36, i64 225}
!51 = !{i8 0, i8 2}
!52 = !{!35, !18, i64 224}
!53 = !{!54, !17, i64 20}
!54 = !{!"_ZTS2tm", !17, i64 0, !17, i64 4, !17, i64 8, !17, i64 12, !17, i64 16, !17, i64 20, !17, i64 24, !17, i64 28, !17, i64 32, !46, i64 40, !25, i64 48}
!55 = !{!56, !46, i64 16}
!56 = !{!"_ZTSSt8ios_base", !46, i64 8, !46, i64 16, !57, i64 24, !58, i64 28, !58, i64 32, !25, i64 40, !59, i64 48, !18, i64 64, !17, i64 192, !25, i64 200, !60, i64 208}
!57 = !{!"_ZTSSt13_Ios_Fmtflags", !18, i64 0}
!58 = !{!"_ZTSSt12_Ios_Iostate", !18, i64 0}
!59 = !{!"_ZTSNSt8ios_base6_WordsE", !25, i64 0, !46, i64 8}
!60 = !{!"_ZTSSt6locale", !25, i64 0}
!61 = !{!54, !17, i64 16}
!62 = !{!54, !17, i64 12}
!63 = !{!54, !17, i64 8}
!64 = !{!54, !17, i64 4}
!65 = !{!54, !17, i64 0}
!66 = !{!22, !22, i64 0}
!67 = !{!68, !36, i64 0}
!68 = !{!"_ZTSN6miniFE9CSRMatrixIdiiEE", !36, i64 0, !69, i64 8, !69, i64 32, !69, i64 56, !69, i64 80, !70, i64 104, !17, i64 128}
!69 = !{!"_ZTSSt6vectorIiSaIiEE"}
!70 = !{!"_ZTSSt6vectorIdSaIdEE"}
!71 = !{!72, !25, i64 8}
!72 = !{!"_ZTSSt12_Vector_baseIiSaIiEE", !73, i64 0}
!73 = !{!"_ZTSNSt12_Vector_baseIiSaIiEE12_Vector_implE", !25, i64 0, !25, i64 8, !25, i64 16}
!74 = !{!72, !25, i64 0}
!75 = !{!76, !17, i64 0}
!76 = !{!"_ZTSN6miniFE6VectorIdiiEE", !17, i64 0, !17, i64 4, !70, i64 8}
!77 = !{!76, !17, i64 4}
!78 = !{!79, !25, i64 0}
!79 = !{!"_ZTSSt12_Vector_baseIdSaIdEE", !80, i64 0}
!80 = !{!"_ZTSNSt12_Vector_baseIdSaIdEE12_Vector_implE", !25, i64 0, !25, i64 8, !25, i64 16}
!81 = !{!79, !25, i64 16}
!82 = !{!79, !25, i64 8}
!83 = !{!68, !17, i64 128}
!84 = !{!85, !85, i64 0}
!85 = !{!"double", !18, i64 0}
!86 = !{!87, !25, i64 8}
!87 = !{!"_ZTSSt15_Rb_tree_header", !88, i64 0, !46, i64 32}
!88 = !{!"_ZTSSt18_Rb_tree_node_base", !89, i64 0, !25, i64 8, !25, i64 16, !25, i64 24}
!89 = !{!"_ZTSSt14_Rb_tree_color", !18, i64 0}
!90 = !{!87, !89, i64 0}
!91 = !{!87, !25, i64 16}
!92 = !{!87, !25, i64 24}
!93 = !{!87, !46, i64 32}
!94 = !{!25, !25, i64 0}
!95 = distinct !{!95, !96}
!96 = !{!"llvm.loop.mustprogress"}
!97 = distinct !{!97, !96}
!98 = distinct !{!98, !96}
!99 = distinct !{!99, !96}
!100 = distinct !{!100, !96}
!101 = distinct !{!101, !96}
!102 = distinct !{!102, !96}
!103 = distinct !{!103, !96}
!104 = distinct !{!104, !96}
!105 = distinct !{!105, !96}
!106 = distinct !{!106, !96}
!107 = distinct !{!107, !96}
!108 = distinct !{!108, !96}
!109 = !{!72, !25, i64 16}
!110 = distinct !{!110, !111}
!111 = !{!"llvm.loop.unroll.disable"}
!112 = !{!113, !17, i64 72}
!113 = !{!"_ZTS12MatrixInitOpIN6miniFE9CSRMatrixIdiiEEE", !25, i64 0, !25, i64 8, !25, i64 16, !17, i64 24, !17, i64 28, !17, i64 32, !17, i64 36, !25, i64 40, !25, i64 48, !25, i64 56, !25, i64 64, !17, i64 72, !25, i64 80}
!114 = distinct !{!114, !96}
!115 = distinct !{!115, !96}
!116 = distinct !{!116, !96}
!117 = distinct !{!117, !96}
!118 = distinct !{!118, !96}
!119 = distinct !{!119, !96}
!120 = distinct !{!120, !96}
!121 = !{!122}
!122 = distinct !{!122, !123}
!123 = distinct !{!123, !"LVerDomain"}
!124 = !{!125}
!125 = distinct !{!125, !123}
!126 = !{!127}
!127 = distinct !{!127, !123}
!128 = !{!129}
!129 = distinct !{!129, !123}
!130 = distinct !{!130, !96, !131}
!131 = !{!"llvm.loop.isvectorized", i32 1}
!132 = distinct !{!132, !111}
!133 = distinct !{!133, !96}
!134 = distinct !{!134, !96, !131}
!135 = distinct !{!135, !96}
!136 = !{!137}
!137 = distinct !{!137, !138}
!138 = distinct !{!138, !"LVerDomain"}
!139 = !{!140}
!140 = distinct !{!140, !138}
!141 = !{!142}
!142 = distinct !{!142, !138}
!143 = !{!144}
!144 = distinct !{!144, !138}
!145 = distinct !{!145, !96, !131}
!146 = distinct !{!146, !96}
!147 = distinct !{!147, !96, !131}
!148 = distinct !{!148, !96}
!149 = distinct !{!149, !111}
!150 = distinct !{!150, !96}
!151 = distinct !{!151, !96}
!152 = distinct !{!152, !111}
!153 = distinct !{!153, !96}
!154 = distinct !{!154, !96}
!155 = distinct !{!155, !96}
!156 = distinct !{!156, !96}
!157 = distinct !{!157, !96}
!158 = distinct !{!158, !96}
!159 = distinct !{!159, !96}
!160 = distinct !{!160, !96}
!161 = distinct !{!161, !96}
!162 = distinct !{!162, !96}
!163 = distinct !{!163, !96}
!164 = distinct !{!164, !96}
!165 = !{!166, !17, i64 0}
!166 = !{!"_ZTSSt4pairIKiiE", !17, i64 0, !17, i64 4}
!167 = !{!166, !17, i64 4}
!168 = distinct !{!168, !96}
!169 = !{!46, !46, i64 0}
!170 = distinct !{!170, !96}
!171 = !{!88, !25, i64 24}
!172 = !{!88, !25, i64 16}
!173 = distinct !{!173, !96}
!174 = distinct !{!174, !96}
!175 = !{!113, !25, i64 0}
!176 = !{!113, !25, i64 8}
!177 = !{!113, !25, i64 16}
!178 = !{!113, !17, i64 24}
!179 = !{!113, !17, i64 28}
!180 = !{!113, !17, i64 32}
!181 = !{!113, !17, i64 36}
!182 = !{!113, !25, i64 40}
!183 = !{!113, !25, i64 48}
!184 = !{!113, !25, i64 56}
!185 = !{!113, !25, i64 64}
!186 = !{!113, !25, i64 80}
!187 = distinct !{!187, !96}
!188 = !{i64 0, i64 65}
!189 = distinct !{!189, !96}
!190 = distinct !{!190, !96}
!191 = distinct !{!191, !96}
!192 = distinct !{!192, !96}
!193 = distinct !{!193, !96}
!194 = distinct !{!194, !96}
!195 = distinct !{!195, !96}
!196 = distinct !{!196, !96}
!197 = distinct !{!197, !96}
!198 = distinct !{!198, !96}
!199 = distinct !{!199, !96}
!200 = distinct !{!200, !96}
!201 = distinct !{!201, !96}
!202 = !{!203}
!203 = distinct !{!203, !204, !"_ZN6miniFE11BoxIterator5beginERK3Box: %agg.result"}
!204 = distinct !{!204, !"_ZN6miniFE11BoxIterator5beginERK3Box"}
!205 = distinct !{!205, !96}
!206 = !{!207, !46, i64 0}
!207 = !{!"_ZTSN6miniFE8ElemDataIidEE", !46, i64 0, !18, i64 8, !18, i64 40, !18, i64 1576, !18, i64 1768, !18, i64 2056}
!208 = distinct !{!208, !96}
!209 = distinct !{!209, !96}
!210 = distinct !{!210, !96}
!211 = distinct !{!211, !96}
!212 = distinct !{!212, !96}
!213 = distinct !{!213, !96}
!214 = distinct !{!214, !96, !131}
!215 = distinct !{!215, !96, !216, !131}
!216 = !{!"llvm.loop.unroll.runtime.disable"}
!217 = distinct !{!217, !96}
!218 = distinct !{!218, !96}
!219 = distinct !{!219, !96}
!220 = distinct !{!220, !96}
!221 = distinct !{!221, !96}
!222 = distinct !{!222, !96}
!223 = !{!224}
!224 = distinct !{!224, !225}
!225 = distinct !{!225, !"LVerDomain"}
!226 = !{!227}
!227 = distinct !{!227, !225}
!228 = distinct !{!228, !96, !131}
!229 = distinct !{!229, !96, !131}
!230 = distinct !{!230, !96}
!231 = distinct !{!231, !96}
!232 = distinct !{}
!233 = distinct !{!233, !234, !235}
!234 = !{!"llvm.loop.parallel_accesses", !232}
!235 = !{!"llvm.loop.vectorize.enable", i1 true}
!236 = distinct !{}
!237 = distinct !{!237, !238, !131}
!238 = !{!"llvm.loop.parallel_accesses", !236}
!239 = distinct !{!239, !238, !216, !131}
!240 = distinct !{}
!241 = distinct !{!241, !242, !235}
!242 = !{!"llvm.loop.parallel_accesses", !240}
!243 = distinct !{}
!244 = distinct !{!244, !245, !131}
!245 = !{!"llvm.loop.parallel_accesses", !243}
!246 = distinct !{!246, !245, !216, !131}
!247 = distinct !{}
!248 = distinct !{!248, !249, !235}
!249 = !{!"llvm.loop.parallel_accesses", !247}
!250 = distinct !{}
!251 = distinct !{!251, !252, !131}
!252 = !{!"llvm.loop.parallel_accesses", !250}
!253 = distinct !{!253, !252, !216, !131}
!254 = distinct !{}
!255 = distinct !{!255, !256, !235}
!256 = !{!"llvm.loop.parallel_accesses", !254}
!257 = distinct !{}
!258 = distinct !{!258, !259, !131}
!259 = !{!"llvm.loop.parallel_accesses", !257}
!260 = distinct !{!260, !259, !216, !131}
!261 = distinct !{!261, !111}
!262 = distinct !{}
!263 = distinct !{!263, !264, !235}
!264 = !{!"llvm.loop.parallel_accesses", !262}
!265 = distinct !{}
!266 = distinct !{!266, !267, !131}
!267 = !{!"llvm.loop.parallel_accesses", !265}
!268 = distinct !{!268, !267, !216, !131}
!269 = distinct !{}
!270 = distinct !{!270, !271, !235}
!271 = !{!"llvm.loop.parallel_accesses", !269}
!272 = distinct !{}
!273 = distinct !{!273, !274, !131}
!274 = !{!"llvm.loop.parallel_accesses", !272}
!275 = distinct !{!275, !274, !216, !131}
!276 = distinct !{}
!277 = distinct !{!277, !278, !235}
!278 = !{!"llvm.loop.parallel_accesses", !276}
!279 = distinct !{}
!280 = distinct !{!280, !281, !131}
!281 = !{!"llvm.loop.parallel_accesses", !279}
!282 = distinct !{!282, !281, !216, !131}
!283 = distinct !{}
!284 = distinct !{!284, !285, !235}
!285 = !{!"llvm.loop.parallel_accesses", !283}
!286 = distinct !{}
!287 = distinct !{!287, !288, !131}
!288 = !{!"llvm.loop.parallel_accesses", !286}
!289 = distinct !{!289, !288, !216, !131}
!290 = distinct !{}
!291 = distinct !{!291, !292, !235}
!292 = !{!"llvm.loop.parallel_accesses", !290}
!293 = distinct !{}
!294 = distinct !{!294, !295, !131}
!295 = !{!"llvm.loop.parallel_accesses", !293}
!296 = distinct !{!296, !295, !216, !131}
!297 = distinct !{!297, !111}
!298 = distinct !{!298, !111}
!299 = distinct !{!299, !96}

; __CLANG_OFFLOAD_BUNDLE____END__ host-powerpc64le-unknown-linux-gnu
